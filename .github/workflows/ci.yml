name: hermespy

# Execute tests if pushed to any branch
on: [push, pull_request]

env:
  HERMES_QUADRIGA: ${{ github.workspace }}/submodules/quadriga/quadriga_src

jobs:

  Testing:
  
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]

    name: Test on ${{ matrix.runs-on }}
    steps:
    - name: Checkout full repository
      uses: actions/checkout@v2
      with:
        lfs: true
        submodules: recursive

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt-get install -y build-essential octave portaudio19-dev python-dev-is-python3
        export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
        pip install -e .[develop,test,documentation,quadriga,sionna,uhd,audio]
        python -m setup develop

    - name: Run unit tests
      run: |
        coverage run --include=hermespy/* ./tests/test_install.py ./tests/unit_tests/
        coverage xml
        coverage report -m --include=hermespy/* --skip-covered

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
      

  Documentation:
  
    needs: Testing
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true
        submodules: recursive

    - name: Setup python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install doc dependencies
      run: |
        sudo apt update
        sudo apt-get install -y build-essential octave portaudio19-dev python-dev-is-python3 pandoc graphviz
        export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
        pip install -e .[test,documentation,quadriga,sionna,uhd,audio]

    - name: Build documentation
      run: sphinx-build docssource/ documentation/

    - name: Create github pages
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
        branch: gh-pages
        folder: documentation