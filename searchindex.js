Search.setIndex({"alltitles": {"3GPP Cluster Delay Line Models": [[9, null]], "5G TDL": [[30, null]], "A/D Conversion": [[195, null]], "AWGN Model": [[192, null]], "AWGN Realization": [[193, null]], "Amplification": [[202, null]], "Analog Digital Converter": [[196, null]], "Animation": [[167, null]], "Antenna": [[169, null]], "Antenna Arrays": [[170, null]], "Antenna Correlation": [[26, null]], "Antenna Descriptions": [[37, null]], "Antenna Port": [[171, null]], "Antennas": [[168, null]], "Audio Device": [[80, null]], "Audio Hardware Binding": [[233, null]], "Audio Scenario": [[81, null]], "Automatic Gain Control": [[197, null]], "BCH Coding": [[68, null]], "Base Modem": [[107, null]], "Beamformer": [[2, null]], "Beamforming": [[1, null]], "Bit Error Rate": [[102, null]], "Bit Sources": [[98, null]], "Block Error Rate": [[103, null]], "C-FSK": [[129, null]], "CLI Argument Options": [[7, "id1"]], "Capon Beamformer": [[3, null]], "Channel": [[16, null]], "Channel Equalization": [[124, null]], "Channel Estimation": [[125, null]], "Channel Modeling": [[15, null]], "Channel Realization": [[17, null]], "Channel Sample": [[18, null]], "Channel State Information": [[38, null]], "Chirp FSK LORA": [[234, null]], "Chirp QAM": [[235, null]], "Clipping Power Amplifier": [[203, null]], "Coding Pipeline": [[70, null]], "Coding Style": [[232, "coding-style"]], "Communication": [[97, null]], "Communication Evaluator": [[100, null]], "Communication Precoding": [[116, null]], "Configuration Examples": [[236, null]], "Constant Gain": [[198, null]], "Conventional Beamformer": [[4, null]], "Coordinate System": [[65, null]], "Core": [[39, null]], "Correlation": [[130, null]], "Cost 259": [[23, null]], "Coupling": [[179, null]], "Custom Array": [[172, null]], "Custom Power Amplifier": [[204, null]], "Cyclic Redundancy Checks": [[71, null]], "Delay Calibration": [[82, null]], "Delay Channels": [[20, null]], "Detection Probability Evaluator": [[157, null]], "Device Input": [[42, null]], "Device Model": [[41, null]], "Device Output": [[43, null], [213, null]], "Device Reception": [[44, null], [215, null]], "Device Transmission": [[45, null], [216, null]], "Devices": [[211, null]], "Dipole": [[173, null]], "Discrete Fourier Transform": [[117, null]], "Documentation": [[232, "documentation"]], "Drop": [[52, null]], "Duplex JCAS Operator": [[94, null]], "Duplex Modem": [[112, null]], "EBN0": [[187, null]], "ESN0": [[188, null]], "Entry Points": [[6, null]], "Error Correction": [[67, null]], "Error Vector Magnitude": [[104, null]], "Evaluators": [[99, null]], "Executable": [[53, null]], "Exponential": [[24, null]], "Extra Operators": [[58, null]], "FMCW": [[132, null], [161, null]], "For Developers": [[232, null]], "Frame Error Rate": [[105, null]], "Gain Control Base": [[199, null]], "Gain Control Type": [[200, null]], "General Definitions": [[40, null]], "Getting Started": [[247, null]], "Grid Element": [[137, null]], "Guard Section": [[140, null]], "Hardaware Loop": [[84, null]], "Hardware Loop": [[79, null], [247, "hardware-loop"]], "Hardware Loop Plot": [[85, null]], "Hardware Modeling": [[237, null]], "Hermes Command Line Interface": [[7, null]], "HermesPy": [[248, null]], "HermesPy API": [[0, null]], "HermesPy Architecture": [[247, "hermespy-architecture"]], "Hooks": [[55, null]], "Ideal Channel": [[31, null]], "Ideal Isotropic": [[174, null]], "Impedance Coupling": [[180, null]], "Implementing Beamformers": [[253, null]], "Implementing Channels": [[255, null]], "Implementing Communication Waveforms": [[261, null]], "Implementing Evaluators": [[257, null]], "Implementing FEC codings": [[258, null]], "Implementing Precodings": [[259, null]], "Indoor Factory": [[10, null]], "Indoor Office": [[11, null]], "Install Quadriga": [[249, "install-quadriga"]], "Install from PyPi": [[249, "install-from-pypi"]], "Install from Source": [[249, "install-from-source"]], "Installation": [[249, null]], "Interleaving": [[69, null]], "Isolation": [[182, null], [183, null]], "JCAS": [[93, null], [239, null]], "Leakage Calibration": [[83, null]], "License": [[250, null]], "Linear": [[175, null]], "Logarithmics": [[56, null]], "Low Differential Parity Checks": [[72, null]], "Matched Filtering": [[95, null]], "Math Tools": [[229, null]], "Matlab": [[251, null]], "Max": [[152, null]], "Maximal Ratio Combining": [[118, null]], "Multi Target": [[33, null]], "Multipath Fading": [[25, null]], "Multipath Fading Channel": [[27, null]], "Multipath Fading Realization": [[28, null]], "Multipath Fading Sample": [[29, null]], "Mutual Coupling": [[178, null]], "N0": [[190, null]], "No Phase Noise": [[209, null]], "Noise": [[189, null]], "Null Steering Beamformer": [[5, null]], "OCDM": [[144, null]], "OFDM": [[145, null]], "OFDM 5G": [[240, null]], "OFDM Interference": [[238, null]], "OFDM Radar": [[96, null]], "OFDM Single Carrier": [[241, null]], "OFDM Waveform": [[146, null]], "OTFS": [[149, null]], "Operation Result": [[46, null]], "Operator Separation": [[242, null]], "Optional Features": [[249, "id1"]], "Orthogonal": [[136, null]], "Oscillator Phase Noise": [[210, null]], "Patch": [[176, null]], "Perfect Coupling": [[181, null]], "Perfect Isolation": [[184, null]], "Phase Noise": [[208, null]], "Physical Device": [[86, null]], "Physical Device Dummy": [[87, null]], "Physical Scenario": [[89, null]], "Physical Scenario Dummy": [[88, null]], "Pilot Section": [[142, null]], "Pipeline": [[59, null]], "Point Detection": [[153, null]], "Polar Coding": [[73, null]], "Power Amplifier": [[205, null]], "Precoding": [[60, null]], "Processed Device Input": [[47, null]], "Processed Input": [[212, null]], "Pulse Properties": [[132, "id1"], [133, "id1"], [134, "id1"], [135, "id1"]], "PyMonte": [[57, null]], "Quadriga": [[32, null]], "Quantizer Type": [[201, null]], "RSC Coding": [[76, null]], "Radar": [[162, null]], "Radar Channels": [[34, null]], "Radar Cube": [[151, null]], "Radar Detector": [[154, null]], "Radar Evaluator": [[158, null]], "Radar Point Cloud": [[155, null]], "Radar Reception": [[163, null]], "Radar Transmission": [[164, null]], "Radar Waveform": [[165, null]], "Radio-Frequency Chain": [[194, null]], "Raised Cosine": [[133, null]], "Random Delay Channel": [[21, null]], "Random Graph": [[61, null]], "Random Trigger": [[221, null]], "Rapp Power Amplifier": [[206, null]], "Receive Realization": [[214, null]], "Receiver": [[48, null]], "Receiver Operating Characteristics": [[260, null]], "Receiving Modem": [[113, null]], "Reception": [[49, null], [108, null]], "Reception Frame": [[109, null]], "Recording Datasets": [[256, null]], "Rectangular": [[134, null]], "Reed-Solomon Coding": [[75, null]], "References": [[262, null]], "Reiver Operating Characteristic": [[159, null]], "Repetition Coding": [[74, null]], "Resampling Routines": [[230, null]], "Resource": [[138, null]], "Root Mean Square Error": [[160, null]], "Root Raised Cosine": [[135, null]], "Rural Macrocells": [[12, null]], "SNR": [[191, null]], "Saleh Power Amplifier": [[207, null]], "Sample Offset Trigger": [[222, null]], "Schmidl Cox Pilot": [[147, null]], "Schmidl Cox Synchronization": [[148, null]], "Scrambling": [[77, null]], "Section": [[139, null]], "Selective Leakage": [[185, null]], "Sensing": [[150, null]], "Serialization Factory": [[54, null]], "Signal": [[63, null]], "Simplex Link": [[114, null]], "Simulated Drop": [[217, null]], "Simulation": [[166, null], [218, null]], "Simulation Scenario": [[219, null]], "Simulations": [[247, "simulations"]], "Single Carrier": [[131, null]], "Single Carrier Decoding": [[119, null]], "Single Target": [[35, null]], "SionnaRT Channel": [[36, null]], "Space-Time Block Codes": [[120, null]], "Spatial Consistency": [[19, null]], "Spatial Delay Channel": [[22, null]], "Specific Isolation": [[186, null]], "State": [[64, null]], "Static CDL": [[8, null]], "Static Trigger": [[223, null]], "Symbol Precoding": [[121, null]], "Symbol Section": [[143, null]], "Symbols": [[122, null]], "Synchronization": [[126, null], [220, null]], "Threshold": [[156, null]], "Throughput": [[106, null]], "Tile Figures": [[231, null]], "Time Offset Trigger": [[224, null]], "Tools": [[228, null]], "Trajectory Types": [[167, "id1"]], "Transmission": [[50, null], [110, null]], "Transmission Frame": [[111, null]], "Transmitter": [[51, null]], "Transmitting Modem": [[115, null]], "Trigger Model": [[225, null]], "Trigger Realization": [[226, null]], "Turbo Coding": [[78, null]], "Tutorials": [[263, null]], "Type Checking": [[232, "type-checking"]], "USRP Device": [[91, null]], "USRP Hardware Driver": [[243, null]], "USRP System": [[90, null]], "Uniform Array": [[177, null]], "Unit Testing": [[232, "unit-testing"]], "Urban Macrocells": [[13, null]], "Urban Microcells": [[14, null]], "Using Audio Equipment": [[252, null]], "Using Beamformers": [[254, null]], "Visualization": [[66, null]], "Visualizers": [[92, null]], "Waveform": [[141, null]], "Waveforms": [[123, null]], "Wireless Scenario": [[62, null]], "Zero-Forcing": [[127, null]]}, "docnames": ["api/api", "api/beamforming", "api/beamforming.beamformer", "api/beamforming.capon", "api/beamforming.conventional", "api/beamforming.nullsteeringbeamformer", "api/bin", "api/bin.hermes", "api/channel/cdl/cdl", "api/channel/cdl/cluster_delay_lines", "api/channel/cdl/indoor_factory", "api/channel/cdl/indoor_office", "api/channel/cdl/rural_macrocells", "api/channel/cdl/urban_macrocells", "api/channel/cdl/urban_microcells", "api/channel/channel", "api/channel/channel.Channel", "api/channel/channel.ChannelRealization", "api/channel/channel.ChannelSample", "api/channel/consistent", "api/channel/delay/delay", "api/channel/delay/random", "api/channel/delay/spatial", "api/channel/fading/cost259", "api/channel/fading/exponential", "api/channel/fading/fading", "api/channel/fading/fading.AntennaCorrelation", "api/channel/fading/fading.MultipathFadingChannel", "api/channel/fading/fading.MultipathFadingRealization", "api/channel/fading/fading.MultipathFadingSample", "api/channel/fading/tdl", "api/channel/ideal", "api/channel/quadriga", "api/channel/radar/multi", "api/channel/radar/radar", "api/channel/radar/single", "api/channel/sionna-rt", "api/core/antennas", "api/core/channel", "api/core/core", "api/core/definitions", "api/core/device", "api/core/device.DeviceInput", "api/core/device.DeviceOutput", "api/core/device.DeviceReception", "api/core/device.DeviceTransmission", "api/core/device.OperationResult", "api/core/device.ProcessedDeviceInput", "api/core/device.Receiver", "api/core/device.Reception", "api/core/device.Transmission", "api/core/device.Transmitter", "api/core/drop", "api/core/executable", "api/core/factory", "api/core/hooks", "api/core/logarithmic", "api/core/monte_carlo", "api/core/operators", "api/core/pipeline", "api/core/precoding", "api/core/random_node", "api/core/scenario", "api/core/signal", "api/core/state", "api/core/transformation", "api/core/visualize", "api/fec", "api/fec.bch", "api/fec.block_interleaver", "api/fec.coding", "api/fec.crc", "api/fec.ldpc", "api/fec.polar", "api/fec.repetition", "api/fec.rs", "api/fec.rsc", "api/fec.scrambler", "api/fec.turbo", "api/hardware_loop", "api/hardware_loop.audio.device.AudioDevice", "api/hardware_loop.audio.scenario.AudioScenario", "api/hardware_loop.calibration.delay", "api/hardware_loop.calibration.leakage", "api/hardware_loop.hardware_loop.HardwareLoop", "api/hardware_loop.hardware_loop.HardwareLoopPlot", "api/hardware_loop.physical_device.PhysicalDevice", "api/hardware_loop.physical_device_dummy.PhysicalDeviceDummy", "api/hardware_loop.physical_device_dummy.PhysicalScenarioDummy", "api/hardware_loop.scenario.PhysicalScenario", "api/hardware_loop.uhd.system.UsrpSystem", "api/hardware_loop.uhd.usrp.UsrpDevice", "api/hardware_loop.visualizers", "api/jcas", "api/jcas.jcas", "api/jcas.matched_filtering", "api/jcas.ofdm_radar", "api/modem", "api/modem.bits_source", "api/modem.evaluators", "api/modem.evaluators.CommunicationEvaluator", "api/modem.evaluators._table", "api/modem.evaluators.ber", "api/modem.evaluators.bler", "api/modem.evaluators.evm", "api/modem.evaluators.fer", "api/modem.evaluators.throughput", "api/modem.modem.BaseModem", "api/modem.modem.CommunicationReception", "api/modem.modem.CommunicationReceptionFrame", "api/modem.modem.CommunicationTransmission", "api/modem.modem.CommunicationTransmissionFrame", "api/modem.modem.DuplexModem", "api/modem.modem.ReceivingModem", "api/modem.modem.SimplexLink", "api/modem.modem.TransmittingModem", "api/modem.precoding", "api/modem.precoding.dft", "api/modem.precoding.ratio_combining", "api/modem.precoding.single_carrier", "api/modem.precoding.space_time_block_coding", "api/modem.precoding.symbol_precoding.SymbolPrecoding", "api/modem.symbols", "api/modem.waveform", "api/modem.waveform.ChannelEqualization", "api/modem.waveform.ChannelEstimation", "api/modem.waveform.Synchronization", "api/modem.waveform.ZeroForcingChannelEqualization", "api/modem.waveform._table", "api/modem.waveform.chirp_fsk", "api/modem.waveform.correlation_synchronization", "api/modem.waveform.single_carrier", "api/modem.waveform.single_carrier.FMCW", "api/modem.waveform.single_carrier.RaisedCosine", "api/modem.waveform.single_carrier.Rectangular", "api/modem.waveform.single_carrier.RootRaisedCosine", "api/modem.waveforms.orthogonal", "api/modem.waveforms.orthogonal.GridElement", "api/modem.waveforms.orthogonal.GridResource", "api/modem.waveforms.orthogonal.GridSection", "api/modem.waveforms.orthogonal.GuardSection", "api/modem.waveforms.orthogonal.OrthogonalWaveform", "api/modem.waveforms.orthogonal.PilotSection", "api/modem.waveforms.orthogonal.SymbolSection", "api/modem.waveforms.orthogonal.ocdm", "api/modem.waveforms.orthogonal.ofdm", "api/modem.waveforms.orthogonal.ofdm.OFDMWaveform", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization", "api/modem.waveforms.orthogonal.otfs", "api/radar", "api/radar.cube.RadarCube", "api/radar.detection.MaxDetector", "api/radar.detection.PointDetection", "api/radar.detection.RadarDetector", "api/radar.detection.RadarPointCloud", "api/radar.detection.ThresholdDetector", "api/radar.evaluators.DetectionProbEvaluator", "api/radar.evaluators.RadarEvaluator", "api/radar.evaluators.ReceiverOperatingCharacteristic", "api/radar.evaluators.RootMeanSquareError", "api/radar.fmcw", "api/radar.radar.Radar", "api/radar.radar.RadarReception", "api/radar.radar.RadarTransmission", "api/radar.radar.RadarWaveform", "api/simulation", "api/simulation.animation", "api/simulation.antennas", "api/simulation.antennas.SimulatedAntenna", "api/simulation.antennas.SimulatedAntennaArray", "api/simulation.antennas.SimulatedAntennaPort", "api/simulation.antennas.SimulatedCustomArray", "api/simulation.antennas.SimulatedDipole", "api/simulation.antennas.SimulatedIdealAntenna", "api/simulation.antennas.SimulatedLinearAntenna", "api/simulation.antennas.SimulatedPatchAntenna", "api/simulation.antennas.SimulatedUniformArray", "api/simulation.coupling", "api/simulation.coupling.coupling", "api/simulation.coupling.impedance", "api/simulation.coupling.perfect", "api/simulation.isolation", "api/simulation.isolation.isolation", "api/simulation.isolation.perfect", "api/simulation.isolation.selective", "api/simulation.isolation.specific", "api/simulation.modem.noise.EBN0", "api/simulation.modem.noise.ESN0", "api/simulation.noise", "api/simulation.noise.level.N0", "api/simulation.noise.level.SNR", "api/simulation.noise.model.AWGN", "api/simulation.noise.model.AWGNRealization", "api/simulation.rf_chain", "api/simulation.rf_chain.adc", "api/simulation.rf_chain.adc.AnalogDigitalConverter", "api/simulation.rf_chain.adc.AutomaticGainControl", "api/simulation.rf_chain.adc.Gain", "api/simulation.rf_chain.adc.GainControlBase", "api/simulation.rf_chain.adc.GainControlType", "api/simulation.rf_chain.adc.QuantizerType", "api/simulation.rf_chain.amplifier", "api/simulation.rf_chain.amplifier.ClippingPowerAmplifier", "api/simulation.rf_chain.amplifier.CustomPowerAmplifier", "api/simulation.rf_chain.amplifier.PowerAmplifier", "api/simulation.rf_chain.amplifier.RappPowerAmplifier", "api/simulation.rf_chain.amplifier.SalehPowerAmplifier", "api/simulation.rf_chain.phase_noise", "api/simulation.rf_chain.phase_noise.NoPhaseNoise", "api/simulation.rf_chain.phase_noise.OscillatorPhaseNoise", "api/simulation.simulated_device", "api/simulation.simulated_device.ProcessedSimulatedDeviceInput", "api/simulation.simulated_device.SimulatedDeviceOutput", "api/simulation.simulated_device.SimulatedDeviceReceiveRealization", "api/simulation.simulated_device.SimulatedDeviceReception", "api/simulation.simulated_device.SimulatedDeviceTransmission", "api/simulation.simulation.SimulatedDrop", "api/simulation.simulation.Simulation", "api/simulation.simulation.SimulationScenario", "api/simulation.synchronization", "api/simulation.synchronization.RandomTrigger", "api/simulation.synchronization.SampleOffsetTrigger", "api/simulation.synchronization.StaticTrigger", "api/simulation.synchronization.TimeOffsetTrigger", "api/simulation.synchronization.TriggerModel", "api/simulation.synchronization.TriggerRealization", "api/simulation.synchronization._table", "api/tools", "api/tools.math", "api/tools.resampling", "api/tools.tile", "developer_hints", "examples/audio", "examples/chirp_fsk_lora", "examples/chirp_qam", "examples/examples", "examples/hardware_model", "examples/interference_ofdm_single_carrier", "examples/jcas", "examples/ofdm_5g", "examples/ofdm_single_carrier", "examples/operator_separation", "examples/uhd", "flowcharts/device_rf_interaction", "flowcharts/simulated_physical_layer", "flowcharts/simulation_parallel_monte_carlo", "getting_started", "index", "installation", "license", "matlab", "notebooks/audio", "notebooks/beamforming_implementation", "notebooks/beamforming_usage", "notebooks/channel", "notebooks/datasets", "notebooks/evaluator", "notebooks/fec_coding", "notebooks/precoding", "notebooks/roc", "notebooks/waveform", "references", "tutorials"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api/api.rst", "api/beamforming.rst", "api/beamforming.beamformer.rst", "api/beamforming.capon.rst", "api/beamforming.conventional.rst", "api/beamforming.nullsteeringbeamformer.rst", "api/bin.rst", "api/bin.hermes.rst", "api/channel/cdl/cdl.rst", "api/channel/cdl/cluster_delay_lines.rst", "api/channel/cdl/indoor_factory.rst", "api/channel/cdl/indoor_office.rst", "api/channel/cdl/rural_macrocells.rst", "api/channel/cdl/urban_macrocells.rst", "api/channel/cdl/urban_microcells.rst", "api/channel/channel.rst", "api/channel/channel.Channel.rst", "api/channel/channel.ChannelRealization.rst", "api/channel/channel.ChannelSample.rst", "api/channel/consistent.rst", "api/channel/delay/delay.rst", "api/channel/delay/random.rst", "api/channel/delay/spatial.rst", "api/channel/fading/cost259.rst", "api/channel/fading/exponential.rst", "api/channel/fading/fading.rst", "api/channel/fading/fading.AntennaCorrelation.rst", "api/channel/fading/fading.MultipathFadingChannel.rst", "api/channel/fading/fading.MultipathFadingRealization.rst", "api/channel/fading/fading.MultipathFadingSample.rst", "api/channel/fading/tdl.rst", "api/channel/ideal.rst", "api/channel/quadriga.rst", "api/channel/radar/multi.rst", "api/channel/radar/radar.rst", "api/channel/radar/single.rst", "api/channel/sionna-rt.rst", "api/core/antennas.rst", "api/core/channel.rst", "api/core/core.rst", "api/core/definitions.rst", "api/core/device.rst", "api/core/device.DeviceInput.rst", "api/core/device.DeviceOutput.rst", "api/core/device.DeviceReception.rst", "api/core/device.DeviceTransmission.rst", "api/core/device.OperationResult.rst", "api/core/device.ProcessedDeviceInput.rst", "api/core/device.Receiver.rst", "api/core/device.Reception.rst", "api/core/device.Transmission.rst", "api/core/device.Transmitter.rst", "api/core/drop.rst", "api/core/executable.rst", "api/core/factory.rst", "api/core/hooks.rst", "api/core/logarithmic.rst", "api/core/monte_carlo.rst", "api/core/operators.rst", "api/core/pipeline.rst", "api/core/precoding.rst", "api/core/random_node.rst", "api/core/scenario.rst", "api/core/signal.rst", "api/core/state.rst", "api/core/transformation.rst", "api/core/visualize.rst", "api/fec.rst", "api/fec.bch.rst", "api/fec.block_interleaver.rst", "api/fec.coding.rst", "api/fec.crc.rst", "api/fec.ldpc.rst", "api/fec.polar.rst", "api/fec.repetition.rst", "api/fec.rs.rst", "api/fec.rsc.rst", "api/fec.scrambler.rst", "api/fec.turbo.rst", "api/hardware_loop.rst", "api/hardware_loop.audio.device.AudioDevice.rst", "api/hardware_loop.audio.scenario.AudioScenario.rst", "api/hardware_loop.calibration.delay.rst", "api/hardware_loop.calibration.leakage.rst", "api/hardware_loop.hardware_loop.HardwareLoop.rst", "api/hardware_loop.hardware_loop.HardwareLoopPlot.rst", "api/hardware_loop.physical_device.PhysicalDevice.rst", "api/hardware_loop.physical_device_dummy.PhysicalDeviceDummy.rst", "api/hardware_loop.physical_device_dummy.PhysicalScenarioDummy.rst", "api/hardware_loop.scenario.PhysicalScenario.rst", "api/hardware_loop.uhd.system.UsrpSystem.rst", "api/hardware_loop.uhd.usrp.UsrpDevice.rst", "api/hardware_loop.visualizers.rst", "api/jcas.rst", "api/jcas.jcas.rst", "api/jcas.matched_filtering.rst", "api/jcas.ofdm_radar.rst", "api/modem.rst", "api/modem.bits_source.rst", "api/modem.evaluators.rst", "api/modem.evaluators.CommunicationEvaluator.rst", "api/modem.evaluators._table.rst", "api/modem.evaluators.ber.rst", "api/modem.evaluators.bler.rst", "api/modem.evaluators.evm.rst", "api/modem.evaluators.fer.rst", "api/modem.evaluators.throughput.rst", "api/modem.modem.BaseModem.rst", "api/modem.modem.CommunicationReception.rst", "api/modem.modem.CommunicationReceptionFrame.rst", "api/modem.modem.CommunicationTransmission.rst", "api/modem.modem.CommunicationTransmissionFrame.rst", "api/modem.modem.DuplexModem.rst", "api/modem.modem.ReceivingModem.rst", "api/modem.modem.SimplexLink.rst", "api/modem.modem.TransmittingModem.rst", "api/modem.precoding.rst", "api/modem.precoding.dft.rst", "api/modem.precoding.ratio_combining.rst", "api/modem.precoding.single_carrier.rst", "api/modem.precoding.space_time_block_coding.rst", "api/modem.precoding.symbol_precoding.SymbolPrecoding.rst", "api/modem.symbols.rst", "api/modem.waveform.rst", "api/modem.waveform.ChannelEqualization.rst", "api/modem.waveform.ChannelEstimation.rst", "api/modem.waveform.Synchronization.rst", "api/modem.waveform.ZeroForcingChannelEqualization.rst", "api/modem.waveform._table.rst", "api/modem.waveform.chirp_fsk.rst", "api/modem.waveform.correlation_synchronization.rst", "api/modem.waveform.single_carrier.rst", "api/modem.waveform.single_carrier.FMCW.rst", "api/modem.waveform.single_carrier.RaisedCosine.rst", "api/modem.waveform.single_carrier.Rectangular.rst", "api/modem.waveform.single_carrier.RootRaisedCosine.rst", "api/modem.waveforms.orthogonal.rst", "api/modem.waveforms.orthogonal.GridElement.rst", "api/modem.waveforms.orthogonal.GridResource.rst", "api/modem.waveforms.orthogonal.GridSection.rst", "api/modem.waveforms.orthogonal.GuardSection.rst", "api/modem.waveforms.orthogonal.OrthogonalWaveform.rst", "api/modem.waveforms.orthogonal.PilotSection.rst", "api/modem.waveforms.orthogonal.SymbolSection.rst", "api/modem.waveforms.orthogonal.ocdm.rst", "api/modem.waveforms.orthogonal.ofdm.rst", "api/modem.waveforms.orthogonal.ofdm.OFDMWaveform.rst", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection.rst", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.rst", "api/modem.waveforms.orthogonal.otfs.rst", "api/radar.rst", "api/radar.cube.RadarCube.rst", "api/radar.detection.MaxDetector.rst", "api/radar.detection.PointDetection.rst", "api/radar.detection.RadarDetector.rst", "api/radar.detection.RadarPointCloud.rst", "api/radar.detection.ThresholdDetector.rst", "api/radar.evaluators.DetectionProbEvaluator.rst", "api/radar.evaluators.RadarEvaluator.rst", "api/radar.evaluators.ReceiverOperatingCharacteristic.rst", "api/radar.evaluators.RootMeanSquareError.rst", "api/radar.fmcw.rst", "api/radar.radar.Radar.rst", "api/radar.radar.RadarReception.rst", "api/radar.radar.RadarTransmission.rst", "api/radar.radar.RadarWaveform.rst", "api/simulation.rst", "api/simulation.animation.rst", "api/simulation.antennas.rst", "api/simulation.antennas.SimulatedAntenna.rst", "api/simulation.antennas.SimulatedAntennaArray.rst", "api/simulation.antennas.SimulatedAntennaPort.rst", "api/simulation.antennas.SimulatedCustomArray.rst", "api/simulation.antennas.SimulatedDipole.rst", "api/simulation.antennas.SimulatedIdealAntenna.rst", "api/simulation.antennas.SimulatedLinearAntenna.rst", "api/simulation.antennas.SimulatedPatchAntenna.rst", "api/simulation.antennas.SimulatedUniformArray.rst", "api/simulation.coupling.rst", "api/simulation.coupling.coupling.rst", "api/simulation.coupling.impedance.rst", "api/simulation.coupling.perfect.rst", "api/simulation.isolation.rst", "api/simulation.isolation.isolation.rst", "api/simulation.isolation.perfect.rst", "api/simulation.isolation.selective.rst", "api/simulation.isolation.specific.rst", "api/simulation.modem.noise.EBN0.rst", "api/simulation.modem.noise.ESN0.rst", "api/simulation.noise.rst", "api/simulation.noise.level.N0.rst", "api/simulation.noise.level.SNR.rst", "api/simulation.noise.model.AWGN.rst", "api/simulation.noise.model.AWGNRealization.rst", "api/simulation.rf_chain.rst", "api/simulation.rf_chain.adc.rst", "api/simulation.rf_chain.adc.AnalogDigitalConverter.rst", "api/simulation.rf_chain.adc.AutomaticGainControl.rst", "api/simulation.rf_chain.adc.Gain.rst", "api/simulation.rf_chain.adc.GainControlBase.rst", "api/simulation.rf_chain.adc.GainControlType.rst", "api/simulation.rf_chain.adc.QuantizerType.rst", "api/simulation.rf_chain.amplifier.rst", "api/simulation.rf_chain.amplifier.ClippingPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.CustomPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.PowerAmplifier.rst", "api/simulation.rf_chain.amplifier.RappPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.SalehPowerAmplifier.rst", "api/simulation.rf_chain.phase_noise.rst", "api/simulation.rf_chain.phase_noise.NoPhaseNoise.rst", "api/simulation.rf_chain.phase_noise.OscillatorPhaseNoise.rst", "api/simulation.simulated_device.rst", "api/simulation.simulated_device.ProcessedSimulatedDeviceInput.rst", "api/simulation.simulated_device.SimulatedDeviceOutput.rst", "api/simulation.simulated_device.SimulatedDeviceReceiveRealization.rst", "api/simulation.simulated_device.SimulatedDeviceReception.rst", "api/simulation.simulated_device.SimulatedDeviceTransmission.rst", "api/simulation.simulation.SimulatedDrop.rst", "api/simulation.simulation.Simulation.rst", "api/simulation.simulation.SimulationScenario.rst", "api/simulation.synchronization.rst", "api/simulation.synchronization.RandomTrigger.rst", "api/simulation.synchronization.SampleOffsetTrigger.rst", "api/simulation.synchronization.StaticTrigger.rst", "api/simulation.synchronization.TimeOffsetTrigger.rst", "api/simulation.synchronization.TriggerModel.rst", "api/simulation.synchronization.TriggerRealization.rst", "api/simulation.synchronization._table.rst", "api/tools.rst", "api/tools.math.rst", "api/tools.resampling.rst", "api/tools.tile.rst", "developer_hints.rst", "examples/audio.rst", "examples/chirp_fsk_lora.rst", "examples/chirp_qam.rst", "examples/examples.rst", "examples/hardware_model.rst", "examples/interference_ofdm_single_carrier.rst", "examples/jcas.rst", "examples/ofdm_5g.rst", "examples/ofdm_single_carrier.rst", "examples/operator_separation.rst", "examples/uhd.rst", "flowcharts/device_rf_interaction.rst", "flowcharts/simulated_physical_layer.rst", "flowcharts/simulation_parallel_monte_carlo.rst", "getting_started.rst", "index.rst", "installation.rst", "license.rst", "matlab.rst", "notebooks/audio.ipynb", "notebooks/beamforming_implementation.ipynb", "notebooks/beamforming_usage.ipynb", "notebooks/channel.ipynb", "notebooks/datasets.ipynb", "notebooks/evaluator.ipynb", "notebooks/fec_coding.ipynb", "notebooks/precoding.ipynb", "notebooks/roc.ipynb", "notebooks/waveform.ipynb", "references.rst", "tutorials.rst"], "indexentries": {"__num_delay_taps (channelstateinformation attribute)": [[38, "hermespy.core.channel.ChannelStateInformation.__num_delay_taps", false]], "__num_frequency_bins (channelstateinformation attribute)": [[38, "hermespy.core.channel.ChannelStateInformation.__num_frequency_bins", false]], "__state (channelstateinformation attribute)": [[38, "hermespy.core.channel.ChannelStateInformation.__state", false]], "__state_format (channelstateinformation attribute)": [[38, "hermespy.core.channel.ChannelStateInformation.__state_format", false]], "_anglevisualization (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization", false]], "_constellationplot (class in hermespy.modem.symbols)": [[122, "hermespy.modem.symbols._ConstellationPlot", false]], "_decode() (caponbeamformer method)": [[3, "hermespy.beamforming.capon.CaponBeamformer._decode", false]], "_decode() (conventionalbeamformer method)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer._decode", false]], "_decode() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer._decode", false]], "_encode() (conventionalbeamformer method)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer._encode", false]], "_encode() (nullsteeringbeamformer method)": [[5, "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer._encode", false]], "_eyevisualization (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model._EyeVisualization", false]], "_powerdelayvisualization (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization", false]], "_propagate() (idealchannelsample method)": [[31, "hermespy.channel.ideal.IdealChannelSample._propagate", false]], "_realize() (cdl method)": [[8, "hermespy.channel.cdl.cdl.CDL._realize", false]], "_realize() (idealchannel method)": [[31, "hermespy.channel.ideal.IdealChannel._realize", false]], "_realize() (multitargetradarchannel method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel._realize", false]], "_realize() (randomdelaychannel method)": [[21, "hermespy.channel.delay.random.RandomDelayChannel._realize", false]], "_realize() (singletargetradarchannel method)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel._realize", false]], "_realize() (spatialdelaychannel method)": [[22, "hermespy.channel.delay.spatial.SpatialDelayChannel._realize", false]], "_receive() (receivingmodembase method)": [[113, "hermespy.modem.modem.ReceivingModemBase._receive", false]], "_rt (class in hermespy.core.hooks)": [[55, "hermespy.core.hooks._RT", false]], "_sample() (cdlrealization method)": [[8, "hermespy.channel.cdl.cdl.CDLRealization._sample", false]], "_sample() (idealchannelrealization method)": [[31, "hermespy.channel.ideal.IdealChannelRealization._sample", false]], "_samplesvisualization (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model._SamplesVisualization", false]], "_signalvisualization (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model._SignalVisualization", false]], "_transmit() (transmittingmodembase method)": [[115, "hermespy.modem.modem.TransmittingModemBase._transmit", false]], "a (cdltype attribute)": [[8, "hermespy.channel.cdl.CDLType.A", false]], "a (tdltype attribute)": [[30, "hermespy.channel.fading.tdl.TDLType.A", false]], "aat (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AAT", false]], "abbreviation (biterrorevaluator property)": [[102, "hermespy.modem.evaluators.BitErrorEvaluator.abbreviation", false]], "abbreviation (blockerrorevaluator property)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluator.abbreviation", false]], "abbreviation (constellationevm property)": [[104, "hermespy.modem.evaluators.ConstellationEVM.abbreviation", false]], "abbreviation (detectionprobevaluator property)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator.abbreviation", false]], "abbreviation (evaluator property)": [[57, "hermespy.core.monte_carlo.Evaluator.abbreviation", false]], "abbreviation (evmevaluation property)": [[104, "hermespy.modem.evaluators.EVMEvaluation.abbreviation", false]], "abbreviation (frameerrorevaluator property)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluator.abbreviation", false]], "abbreviation (receiveroperatingcharacteristic property)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.abbreviation", false]], "abbreviation (rootmeansquareerror property)": [[160, "hermespy.radar.evaluators.RootMeanSquareError.abbreviation", false]], "abbreviation (throughputevaluator property)": [[106, "hermespy.modem.evaluators.ThroughputEvaluator.abbreviation", false]], "actorrunresult (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.ActorRunResult", false]], "adaptive_sampling (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.adaptive_sampling", false]], "adc (rfchain property)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.adc", false]], "adc_sampling_rate (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.adc_sampling_rate", false]], "add_antenna() (antennaport method)": [[37, "hermespy.core.antennas.AntennaPort.add_antenna", false]], "add_antenna() (customantennaarray method)": [[37, "hermespy.core.antennas.CustomAntennaArray.add_antenna", false]], "add_antenna() (simulatedcustomarray method)": [[172, "hermespy.simulation.antennas.SimulatedCustomArray.add_antenna", false]], "add_callback() (hookable method)": [[55, "hermespy.core.hooks.Hookable.add_callback", false]], "add_device() (physicalscenario method)": [[89, "hermespy.hardware_loop.scenario.PhysicalScenario.add_device", false]], "add_device() (physicalscenariodummy method)": [[88, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.add_device", false]], "add_device() (pipeline method)": [[59, "hermespy.core.pipeline.Pipeline.add_device", false]], "add_device() (scenario method)": [[62, "hermespy.core.scenario.Scenario.add_device", false]], "add_device() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.add_device", false]], "add_device() (triggermodel method)": [[225, "hermespy.simulation.simulated_device.TriggerModel.add_device", false]], "add_device() (usrpsystem method)": [[90, "hermespy.hardware_loop.uhd.system.UsrpSystem.add_device", false]], "add_dimension() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_dimension", false]], "add_dimension() (montecarlo method)": [[57, "hermespy.core.monte_carlo.MonteCarlo.add_dimension", false]], "add_dsp() (device method)": [[41, "hermespy.core.device.Device.add_dsp", false]], "add_encoder() (encodermanager method)": [[70, "hermespy.fec.coding.EncoderManager.add_encoder", false]], "add_evaluator() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_evaluator", false]], "add_evaluator() (montecarlo method)": [[57, "hermespy.core.monte_carlo.MonteCarlo.add_evaluator", false]], "add_hook() (hookable method)": [[55, "hermespy.core.hooks.Hookable.add_hook", false]], "add_iq_imbalance() (rfchain method)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.add_iq_imbalance", false]], "add_link() (transformablelink method)": [[65, "hermespy.core.transformation.TransformableLink.add_link", false]], "add_noise() (noisemodel method)": [[189, "hermespy.simulation.noise.model.NoiseModel.add_noise", false]], "add_noise() (nophasenoise method)": [[209, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise.add_noise", false]], "add_noise() (oscillatorphasenoise method)": [[210, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.add_noise", false]], "add_noise() (phasenoise method)": [[208, "hermespy.simulation.rf_chain.phase_noise.PhaseNoise.add_noise", false]], "add_plot() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_plot", false]], "add_point() (radarpointcloud method)": [[155, "hermespy.radar.detection.RadarPointCloud.add_point", false]], "add_port() (customantennaarray method)": [[37, "hermespy.core.antennas.CustomAntennaArray.add_port", false]], "add_port() (simulatedcustomarray method)": [[172, "hermespy.simulation.antennas.SimulatedCustomArray.add_port", false]], "add_post_drop_hook() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_post_drop_hook", false]], "add_pre_drop_hook() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_pre_drop_hook", false]], "add_propagation() (radarpath method)": [[34, "hermespy.channel.radar.radar.RadarPath.add_propagation", false]], "add_receive_callback() (receiver method)": [[48, "hermespy.core.device.Receiver.add_receive_callback", false]], "add_sample_hook() (channel method)": [[16, "hermespy.channel.channel.Channel.add_sample_hook", false]], "add_samples() (gridsection method)": [[57, "hermespy.core.monte_carlo.GridSection.add_samples", false]], "add_state() (radarpath method)": [[34, "hermespy.channel.radar.radar.RadarPath.add_state", false]], "add_target() (multitargetradarchannel method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.add_target", false]], "add_to() (awgnrealization method)": [[193, "hermespy.simulation.noise.model.AWGNRealization.add_to", false]], "add_to() (noiserealization method)": [[189, "hermespy.simulation.noise.model.NoiseRealization.add_to", false]], "add_transmit_callback() (transmitter method)": [[51, "hermespy.core.device.Transmitter.add_transmit_callback", false]], "add_variable() (consistentgenerator method)": [[19, "hermespy.channel.consistent.ConsistentGenerator.add_variable", false]], "adjust_power (poweramplifier attribute)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.adjust_power", false]], "adjust_signal() (gaincontrolbase method)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.adjust_signal", false]], "agc_type (automaticgaincontrol property)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.agc_type", false]], "alamouti (class in hermespy.modem.precoding.space_time_block_coding)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti", false]], "allow_padding (encodermanager attribute)": [[70, "hermespy.fec.coding.EncoderManager.allow_padding", false]], "allow_truncating (encodermanager attribute)": [[70, "hermespy.fec.coding.EncoderManager.allow_truncating", false]], "amplitude (dbconversiontype attribute)": [[229, "hermespy.tools.math.DbConversionType.AMPLITUDE", false]], "amplitude_alpha (salehpoweramplifier property)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.amplitude_alpha", false]], "amplitude_beta (salehpoweramplifier property)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.amplitude_beta", false]], "amplitude_imbalance (rfchain property)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.amplitude_imbalance", false]], "amplitude_path_loss() (in module hermespy.tools.math)": [[229, "hermespy.tools.math.amplitude_path_loss", false]], "analog_digital_conversion() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.analog_digital_conversion", false]], "analogdigitalconverter (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter", false]], "angle_bins (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.angle_bins", false]], "angles (sphericalfocus property)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.angles", false]], "antenna (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.Antenna", false]], "antenna_calibration (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.antenna_calibration", false]], "antenna_correlation (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.antenna_correlation", false]], "antenna_state() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.antenna_state", false]], "antennaarray (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AntennaArray", false]], "antennaarraybase (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AntennaArrayBase", false]], "antennaarraystate (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AntennaArrayState", false]], "antennacorrelation (class in hermespy.channel.fading.fading)": [[26, "hermespy.channel.fading.fading.AntennaCorrelation", false]], "antennamode (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AntennaMode", false]], "antennaport (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AntennaPort", false]], "antennas (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.antennas", false]], "antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.antennas", false]], "antennas (antennaarraystate property)": [[37, "hermespy.core.antennas.AntennaArrayState.antennas", false]], "antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.antennas", false]], "antennas (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.antennas", false]], "antennas (device property)": [[41, "hermespy.core.device.Device.antennas", false]], "antennas (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.antennas", false]], "antennas (state property)": [[64, "hermespy.core.state.State.antennas", false]], "antennas (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.antennas", false]], "antennas (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.antennas", false]], "antennas_updated() (antennaport method)": [[37, "hermespy.core.antennas.AntennaPort.antennas_updated", false]], "append_samples() (densesignal method)": [[63, "hermespy.core.signal_model.DenseSignal.append_samples", false]], "append_samples() (signal method)": [[63, "hermespy.core.signal_model.Signal.append_samples", false]], "append_samples() (signalblock method)": [[63, "hermespy.core.signal_model.SignalBlock.append_samples", false]], "append_samples() (sparsesignal method)": [[63, "hermespy.core.signal_model.SparseSignal.append_samples", false]], "append_stream() (symbols method)": [[122, "hermespy.modem.symbols.Symbols.append_stream", false]], "append_streams() (densesignal method)": [[63, "hermespy.core.signal_model.DenseSignal.append_streams", false]], "append_streams() (signal method)": [[63, "hermespy.core.signal_model.Signal.append_streams", false]], "append_streams() (sparsesignal method)": [[63, "hermespy.core.signal_model.SparseSignal.append_streams", false]], "append_symbols() (symbols method)": [[122, "hermespy.modem.symbols.Symbols.append_symbols", false]], "apt (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.APT", false]], "array (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.array", false]], "artifact (artifacttemplate property)": [[57, "hermespy.core.monte_carlo.ArtifactTemplate.artifact", false]], "artifact (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.Artifact", false]], "artifact() (biterrorevaluation method)": [[102, "hermespy.modem.evaluators.BitErrorEvaluation.artifact", false]], "artifact() (blockerrorevaluation method)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluation.artifact", false]], "artifact() (detectionprobabilityevaluation method)": [[157, "hermespy.radar.evaluators.DetectionProbabilityEvaluation.artifact", false]], "artifact() (evaluation method)": [[57, "hermespy.core.monte_carlo.Evaluation.artifact", false]], "artifact() (evmevaluation method)": [[104, "hermespy.modem.evaluators.EVMEvaluation.artifact", false]], "artifact() (frameerrorevaluation method)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluation.artifact", false]], "artifact() (rocevaluation method)": [[159, "hermespy.radar.evaluators.RocEvaluation.artifact", false]], "artifact() (rootmeansquareevaluation method)": [[160, "hermespy.radar.evaluators.RootMeanSquareEvaluation.artifact", false]], "artifact() (throughputevaluation method)": [[106, "hermespy.modem.evaluators.ThroughputEvaluation.artifact", false]], "artifact_scalars (montecarlosample property)": [[57, "hermespy.core.monte_carlo.MonteCarloSample.artifact_scalars", false]], "artifactplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.ArtifactPlot", false]], "artifacts (evaluateddrop property)": [[52, "hermespy.core.drop.EvaluatedDrop.artifacts", false]], "artifacts (montecarlosample property)": [[57, "hermespy.core.monte_carlo.MonteCarloSample.artifacts", false]], "artifacttemplate (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.ArtifactTemplate", false]], "at (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.AT", false]], "attached (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.attached", false]], "attenuate (radarchannelbase property)": [[34, "hermespy.channel.radar.radar.RadarChannelBase.attenuate", false]], "attenuate (radarpath property)": [[34, "hermespy.channel.radar.radar.RadarPath.attenuate", false]], "audiodevice (class in hermespy.hardware_loop.audio.device)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice", false]], "audioscenario (class in hermespy.hardware_loop.audio.scenario)": [[81, "hermespy.hardware_loop.audio.scenario.AudioScenario", false]], "automaticgaincontrol (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl", false]], "awgn (class in hermespy.simulation.noise.model)": [[192, "hermespy.simulation.noise.model.AWGN", false]], "awgnrealization (class in hermespy.simulation.noise.model)": [[193, "hermespy.simulation.noise.model.AWGNRealization", false]], "axes (visualization property)": [[66, "hermespy.core.visualize.Visualization.axes", false]], "azimuth_arrival_spread (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_arrival_spread", false]], "azimuth_departure_spread (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_departure_spread", false]], "azimuth_of_arrival (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_of_arrival", false]], "azimuth_of_departure (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_of_departure", false]], "b (cdltype attribute)": [[8, "hermespy.channel.cdl.CDLType.B", false]], "b (tdltype attribute)": [[30, "hermespy.channel.fading.tdl.TDLType.B", false]], "backoff (automaticgaincontrol property)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.backoff", false]], "backwards_transformation (transformable property)": [[65, "hermespy.core.transformation.Transformable.backwards_transformation", false]], "bandwidth (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.bandwidth", false]], "bandwidth (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bandwidth", false]], "bandwidth (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.bandwidth", false]], "bandwidth (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.bandwidth", false]], "bandwidth (fmcwwaveform property)": [[132, "hermespy.modem.waveform_single_carrier.FMCWWaveform.bandwidth", false]], "bandwidth (ocdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform.bandwidth", false]], "bandwidth (ofdmwaveform property)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.bandwidth", false]], "bandwidth (rectangularwaveform property)": [[134, "hermespy.modem.waveform_single_carrier.RectangularWaveform.bandwidth", false]], "bandwidth (rolledoffsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.bandwidth", false]], "base_port (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.base_port", false]], "baseband_signal (processedsimulateddeviceinput property)": [[212, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.baseband_signal", false]], "basemodem (class in hermespy.modem.modem)": [[107, "hermespy.modem.modem.BaseModem", false]], "basic() (devicestate static method)": [[64, "hermespy.core.state.DeviceState.Basic", false]], "bchcoding (class in hermespy.fec.aff3ct.bch)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding", false]], "beamfocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.BeamFocus", false]], "bit_block_size (bchcoding property)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.bit_block_size", false]], "bit_block_size (blockinterleaver property)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.bit_block_size", false]], "bit_block_size (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.bit_block_size", false]], "bit_block_size (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.bit_block_size", false]], "bit_block_size (cyclicredundancycheck property)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.bit_block_size", false]], "bit_block_size (encoder property)": [[70, "hermespy.fec.coding.Encoder.bit_block_size", false]], "bit_block_size (encodermanager property)": [[70, "hermespy.fec.coding.EncoderManager.bit_block_size", false]], "bit_block_size (ldpccoding property)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.bit_block_size", false]], "bit_block_size (polarsccoding property)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding.bit_block_size", false]], "bit_block_size (polarsclcoding property)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding.bit_block_size", false]], "bit_block_size (reedsolomoncoding property)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.bit_block_size", false]], "bit_block_size (repetitionencoder property)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.bit_block_size", false]], "bit_block_size (rsccoding property)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding.bit_block_size", false]], "bit_block_size (scrambler3gpp property)": [[77, "hermespy.fec.scrambler.Scrambler3GPP.bit_block_size", false]], "bit_block_size (scrambler80211a property)": [[77, "hermespy.fec.scrambler.Scrambler80211a.bit_block_size", false]], "bit_block_size (turbocoding property)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.bit_block_size", false]], "bit_energy (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bit_energy", false]], "bit_energy (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.bit_energy", false]], "bit_energy (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.bit_energy", false]], "bit_energy (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.bit_energy", false]], "biterrorartifact (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.BitErrorArtifact", false]], "biterrorevaluation (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.BitErrorEvaluation", false]], "biterrorevaluator (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.BitErrorEvaluator", false]], "bits (communicationreception property)": [[108, "hermespy.modem.modem.CommunicationReception.bits", false]], "bits (communicationtransmission property)": [[110, "hermespy.modem.modem.CommunicationTransmission.bits", false]], "bits (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.bits", false]], "bits_per_frame() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.bits_per_frame", false]], "bits_per_symbol (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bits_per_symbol", false]], "bits_per_symbol (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.bits_per_symbol", false]], "bits_source (transmittingmodembase property)": [[115, "hermespy.modem.modem.TransmittingModemBase.bits_source", false]], "bitssource (class in hermespy.modem.bits_source)": [[98, "hermespy.modem.bits_source.BitsSource", false]], "block_size (blockinterleaver property)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.block_size", false]], "blockerrorartifact (class in hermespy.modem.evaluators)": [[103, "hermespy.modem.evaluators.BlockErrorArtifact", false]], "blockerrorevaluation (class in hermespy.modem.evaluators)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluation", false]], "blockerrorevaluator (class in hermespy.modem.evaluators)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluator", false]], "blockinterleaver (class in hermespy.fec.block_interleaver)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver", false]], "boolean() (consistentgenerator method)": [[19, "hermespy.channel.consistent.ConsistentGenerator.boolean", false]], "c (cdltype attribute)": [[8, "hermespy.channel.cdl.CDLType.C", false]], "c (tdltype attribute)": [[30, "hermespy.channel.fading.tdl.TDLType.C", false]], "campaign (scenario property)": [[62, "hermespy.core.scenario.Scenario.campaign", false]], "caponbeamformer (class in hermespy.beamforming.capon)": [[3, "hermespy.beamforming.capon.CaponBeamformer", false]], "carrier_frequency (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.carrier_frequency", false]], "carrier_frequency (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.carrier_frequency", false]], "carrier_frequency (device property)": [[41, "hermespy.core.device.Device.carrier_frequency", false]], "carrier_frequency (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.carrier_frequency", false]], "carrier_frequency (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.carrier_frequency", false]], "carrier_frequency (signal property)": [[63, "hermespy.core.signal_model.Signal.carrier_frequency", false]], "carrier_frequency (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.carrier_frequency", false]], "carrier_frequency (state property)": [[64, "hermespy.core.state.State.carrier_frequency", false]], "carrier_frequency (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.carrier_frequency", false]], "cartesian_array_response() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.cartesian_array_response", false]], "cartesian_phase_response() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.cartesian_phase_response", false]], "catch_exceptions (montecarlo attribute)": [[57, "hermespy.core.monte_carlo.MonteCarlo.catch_exceptions", false]], "catch_exceptions (montecarloactor attribute)": [[57, "hermespy.core.monte_carlo.MonteCarloActor.catch_exceptions", false]], "cdl (class in hermespy.channel.cdl.cdl)": [[8, "hermespy.channel.cdl.cdl.CDL", false]], "cdlrealization (class in hermespy.channel.cdl.cdl)": [[8, "hermespy.channel.cdl.cdl.CDLRealization", false]], "cdlrt (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.CDLRT", false]], "cdltype (class in hermespy.channel.cdl)": [[8, "hermespy.channel.cdl.CDLType", false]], "channel (antennacorrelation property)": [[26, "hermespy.channel.fading.fading.AntennaCorrelation.channel", false]], "channel (class in hermespy.channel.channel)": [[16, "hermespy.channel.channel.Channel", false]], "channel() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.channel", false]], "channel_equalization (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.channel_equalization", false]], "channel_estimation (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.channel_estimation", false]], "channel_realizations (simulateddrop property)": [[217, "hermespy.simulation.drop.SimulatedDrop.channel_realizations", false]], "channelequalization (class in hermespy.modem.waveform)": [[124, "hermespy.modem.waveform.ChannelEqualization", false]], "channelestimation (class in hermespy.modem.waveform)": [[125, "hermespy.modem.waveform.ChannelEstimation", false]], "channelrealization (class in hermespy.channel.channel)": [[17, "hermespy.channel.channel.ChannelRealization", false]], "channels (simulationscenario property)": [[219, "hermespy.simulation.simulation.SimulationScenario.channels", false]], "channelsample (class in hermespy.channel.channel)": [[18, "hermespy.channel.channel.ChannelSample", false]], "channelsamplehook (class in hermespy.channel.channel)": [[16, "hermespy.channel.channel.ChannelSampleHook", false]], "channelstatedimension (class in hermespy.core.channel)": [[38, "hermespy.core.channel.ChannelStateDimension", false]], "channelstateformat (class in hermespy.core.channel)": [[38, "hermespy.core.channel.ChannelStateFormat", false]], "channelstateinformation (class in hermespy.core.channel)": [[38, "hermespy.core.channel.ChannelStateInformation", false]], "characteristics() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.characteristics", false]], "check_block_size (cyclicredundancycheck property)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.check_block_size", false]], "chirp_bandwidth (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirp_bandwidth", false]], "chirp_duration (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirp_duration", false]], "chirp_duration (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.chirp_duration", false]], "chirp_duration (fmcwwaveform property)": [[132, "hermespy.modem.waveform_single_carrier.FMCWWaveform.chirp_duration", false]], "chirp_slope (fmcwwaveform property)": [[132, "hermespy.modem.waveform_single_carrier.FMCWWaveform.chirp_slope", false]], "chirpfskcorrelationsynchronization (class in hermespy.modem.waveform_chirp_fsk)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization", false]], "chirpfsksynchronization (class in hermespy.modem.waveform_chirp_fsk)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKSynchronization", false]], "chirpfskwaveform (class in hermespy.modem.waveform_chirp_fsk)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform", false]], "chirps_in_frame (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirps_in_frame", false]], "clean (factory property)": [[54, "hermespy.core.factory.Factory.clean", false]], "clippingpoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[203, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier", false]], "cloud (radarreception property)": [[163, "hermespy.radar.radar.RadarReception.cloud", false]], "cluster_delay_spread (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_delay_spread", false]], "cluster_delays (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_delays", false]], "cluster_powers (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_powers", false]], "clusterdelaylinebase (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase", false]], "clusterdelaylinerealization (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization", false]], "clusterdelaylinesample (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample", false]], "clutter_density (factorytype property)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.clutter_density", false]], "clutter_height (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.clutter_height", false]], "clutter_size (factorytype property)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.clutter_size", false]], "code_block_size (bchcoding property)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.code_block_size", false]], "code_block_size (blockinterleaver property)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.code_block_size", false]], "code_block_size (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.code_block_size", false]], "code_block_size (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.code_block_size", false]], "code_block_size (cyclicredundancycheck property)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.code_block_size", false]], "code_block_size (encoder property)": [[70, "hermespy.fec.coding.Encoder.code_block_size", false]], "code_block_size (encodermanager property)": [[70, "hermespy.fec.coding.EncoderManager.code_block_size", false]], "code_block_size (ldpccoding property)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.code_block_size", false]], "code_block_size (polarsccoding property)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding.code_block_size", false]], "code_block_size (polarsclcoding property)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding.code_block_size", false]], "code_block_size (reedsolomoncoding property)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.code_block_size", false]], "code_block_size (repetitionencoder property)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.code_block_size", false]], "code_block_size (rsccoding property)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding.code_block_size", false]], "code_block_size (scrambler3gpp property)": [[77, "hermespy.fec.scrambler.Scrambler3GPP.code_block_size", false]], "code_block_size (scrambler80211a property)": [[77, "hermespy.fec.scrambler.Scrambler80211a.code_block_size", false]], "code_block_size (turbocoding property)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.code_block_size", false]], "communicationevaluator (class in hermespy.modem.evaluators)": [[100, "hermespy.modem.evaluators.CommunicationEvaluator", false]], "communicationreception (class in hermespy.modem.modem)": [[108, "hermespy.modem.modem.CommunicationReception", false]], "communicationreceptionframe (class in hermespy.modem.modem)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame", false]], "communicationtransmission (class in hermespy.modem.modem)": [[110, "hermespy.modem.modem.CommunicationTransmission", false]], "communicationtransmissionframe (class in hermespy.modem.modem)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame", false]], "communicationwaveform (class in hermespy.modem.waveform)": [[123, "hermespy.modem.waveform.CommunicationWaveform", false]], "compute_num_offset_samples() (triggerrealization method)": [[226, "hermespy.simulation.simulated_device.TriggerRealization.compute_num_offset_samples", false]], "concatenate() (channelstateinformation static method)": [[38, "hermespy.core.channel.ChannelStateInformation.concatenate", false]], "confidence (evaluator property)": [[57, "hermespy.core.monte_carlo.Evaluator.confidence", false]], "confidence_status() (gridsection method)": [[57, "hermespy.core.monte_carlo.GridSection.confidence_status", false]], "confidences (gridsection property)": [[57, "hermespy.core.monte_carlo.GridSection.confidences", false]], "configurablepilotwaveform (class in hermespy.modem.waveform)": [[123, "hermespy.modem.waveform.ConfigurablePilotWaveform", false]], "configure_point() (griddimension method)": [[57, "hermespy.core.monte_carlo.GridDimension.configure_point", false]], "connect() (simplexlink method)": [[114, "hermespy.modem.modem.SimplexLink.connect", false]], "considered_objects (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.considered_objects", false]], "consistentboolean (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentBoolean", false]], "consistentgaussian (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentGaussian", false]], "consistentgenerator (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentGenerator", false]], "consistentrealization (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentRealization", false]], "consistentsample (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentSample", false]], "consistentuniform (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentUniform", false]], "consistentvariable (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.ConsistentVariable", false]], "console (executable property)": [[53, "hermespy.core.executable.Executable.console", false]], "console (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.console", false]], "console (simulation property)": [[218, "hermespy.simulation.simulation.Simulation.console", false]], "console_mode (executable property)": [[53, "hermespy.core.executable.Executable.console_mode", false]], "console_mode (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.console_mode", false]], "console_mode (simulation property)": [[218, "hermespy.simulation.simulation.Simulation.console_mode", false]], "consolemode (class in hermespy.core.definitions)": [[40, "hermespy.core.definitions.ConsoleMode", false]], "constellationevm (class in hermespy.modem.evaluators)": [[104, "hermespy.modem.evaluators.ConstellationEVM", false]], "container (stemvisualization property)": [[66, "hermespy.core.visualize.StemVisualization.container", false]], "conventionalbeamformer (class in hermespy.beamforming.conventional)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer", false]], "conversion (logarithmic property)": [[56, "hermespy.core.logarithmic.Logarithmic.conversion", false]], "conversion (logarithmicsequence property)": [[56, "hermespy.core.logarithmic.LogarithmicSequence.conversion", false]], "convert() (analogdigitalconverter method)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.convert", false]], "coordinatefocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus", false]], "coordinates (coordinatefocus property)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.coordinates", false]], "coordinates (gridsection property)": [[57, "hermespy.core.monte_carlo.GridSection.coordinates", false]], "copy() (antenna method)": [[37, "hermespy.core.antennas.Antenna.copy", false]], "copy() (antennaport method)": [[37, "hermespy.core.antennas.AntennaPort.copy", false]], "copy() (beamfocus method)": [[2, "hermespy.beamforming.beamformer.BeamFocus.copy", false]], "copy() (coordinatefocus method)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.copy", false]], "copy() (dipole method)": [[37, "hermespy.core.antennas.Dipole.copy", false]], "copy() (idealantenna method)": [[37, "hermespy.core.antennas.IdealAntenna.copy", false]], "copy() (linearantenna method)": [[37, "hermespy.core.antennas.LinearAntenna.copy", false]], "copy() (patchantenna method)": [[37, "hermespy.core.antennas.PatchAntenna.copy", false]], "copy() (signal method)": [[63, "hermespy.core.signal_model.Signal.copy", false]], "copy() (signalblock method)": [[63, "hermespy.core.signal_model.SignalBlock.copy", false]], "copy() (sphericalfocus method)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.copy", false]], "copy() (statedsymbols method)": [[122, "hermespy.modem.symbols.StatedSymbols.copy", false]], "copy() (symbols method)": [[122, "hermespy.modem.symbols.Symbols.copy", false]], "correction_power (bchcoding property)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.correction_power", false]], "correction_power (reedsolomoncoding property)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.correction_power", false]], "correlation_distance (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.correlation_distance", false]], "correlationsynchronization (class in hermespy.modem.waveform_correlation_synchronization)": [[130, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization", false]], "cost259 (class in hermespy.channel.fading.cost259)": [[23, "hermespy.channel.fading.cost259.Cost259", false]], "cost259type (class in hermespy.channel.fading.cost259)": [[23, "hermespy.channel.fading.cost259.Cost259Type", false]], "count_antennas() (antennaarray method)": [[37, "hermespy.core.antennas.AntennaArray.count_antennas", false]], "count_receive_antennas() (antennaarray method)": [[37, "hermespy.core.antennas.AntennaArray.count_receive_antennas", false]], "count_transmit_antennas() (antennaarray method)": [[37, "hermespy.core.antennas.AntennaArray.count_transmit_antennas", false]], "coupling (class in hermespy.simulation.coupling.coupling)": [[179, "hermespy.simulation.coupling.coupling.Coupling", false]], "coupling (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.coupling", false]], "covariance (customantennacorrelation property)": [[26, "hermespy.channel.fading.fading.CustomAntennaCorrelation.covariance", false]], "cpus_per_actor (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.cpus_per_actor", false]], "create() (densesignal static method)": [[63, "hermespy.core.signal_model.DenseSignal.Create", false]], "create() (signal static method)": [[63, "hermespy.core.signal_model.Signal.Create", false]], "create() (sparsesignal static method)": [[63, "hermespy.core.signal_model.SparseSignal.Create", false]], "create_figure() (_anglevisualization method)": [[9, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization.create_figure", false]], "create_figure() (_samplesvisualization method)": [[63, "hermespy.core.signal_model._SamplesVisualization.create_figure", false]], "create_figure() (radarpointcloud method)": [[155, "hermespy.radar.detection.RadarPointCloud.create_figure", false]], "create_figure() (scalarevaluationresult method)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult.create_figure", false]], "create_figure() (visualizable method)": [[66, "hermespy.core.visualize.Visualizable.create_figure", false]], "cross_section (fixedcrosssection property)": [[33, "hermespy.channel.radar.multi.FixedCrossSection.cross_section", false]], "cross_section (physicalradartarget property)": [[33, "hermespy.channel.radar.multi.PhysicalRadarTarget.cross_section", false]], "cross_section (radartargetpath property)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.cross_section", false]], "cross_section (virtualradartarget property)": [[33, "hermespy.channel.radar.multi.VirtualRadarTarget.cross_section", false]], "crt (class in hermespy.channel.channel)": [[17, "hermespy.channel.channel.CRT", false]], "cst (class in hermespy.channel.channel)": [[18, "hermespy.channel.channel.CST", false]], "cube (radarreception property)": [[163, "hermespy.radar.radar.RadarReception.cube", false]], "cube_h0 (rocevaluation property)": [[159, "hermespy.radar.evaluators.RocEvaluation.cube_h0", false]], "cube_h1 (rocevaluation property)": [[159, "hermespy.radar.evaluators.RocEvaluation.cube_h1", false]], "cummulation (rootmeansquareartifact property)": [[160, "hermespy.radar.evaluators.RootMeanSquareArtifact.cummulation", false]], "customantennaarray (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.CustomAntennaArray", false]], "customantennacorrelation (class in hermespy.channel.fading.fading)": [[26, "hermespy.channel.fading.fading.CustomAntennaCorrelation", false]], "custompoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[204, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier", false]], "cwt (class in hermespy.modem.waveform)": [[123, "hermespy.modem.waveform.CWT", false]], "cyclic (prefixtype attribute)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.CYCLIC", false]], "cyclicredundancycheck (class in hermespy.fec.cyclic_redundancy_check)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck", false]], "d (cdltype attribute)": [[8, "hermespy.channel.cdl.CDLType.D", false]], "d (tdltype attribute)": [[30, "hermespy.channel.fading.tdl.TDLType.D", false]], "data (elementtype attribute)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.DATA", false]], "data (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.data", false]], "data_rate() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.data_rate", false]], "db (class in hermespy.core.logarithmic)": [[56, "hermespy.core.logarithmic.dB", false]], "db (valuetype attribute)": [[56, "hermespy.core.ValueType.DB", false]], "db2lin() (in module hermespy.tools.math)": [[229, "hermespy.tools.math.db2lin", false]], "dbconversiontype (class in hermespy.tools.math)": [[229, "hermespy.tools.math.DbConversionType", false]], "dc_suppression (ofdmwaveform attribute)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.dc_suppression", false]], "dcrt (class in hermespy.channel.delay.delay)": [[20, "hermespy.channel.delay.delay.DCRT", false]], "debug (executable property)": [[53, "hermespy.core.executable.Executable.debug", false]], "decode() (bchcoding method)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.decode", false]], "decode() (blockinterleaver method)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.decode", false]], "decode() (cyclicredundancycheck method)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.decode", false]], "decode() (encoder method)": [[70, "hermespy.fec.coding.Encoder.decode", false]], "decode() (encodermanager method)": [[70, "hermespy.fec.coding.EncoderManager.decode", false]], "decode() (ldpccoding method)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.decode", false]], "decode() (polarsccoding method)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding.decode", false]], "decode() (polarsclcoding method)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding.decode", false]], "decode() (reedsolomoncoding method)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.decode", false]], "decode() (repetitionencoder method)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.decode", false]], "decode() (rsccoding method)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding.decode", false]], "decode() (scrambler3gpp method)": [[77, "hermespy.fec.scrambler.Scrambler3GPP.decode", false]], "decode() (scrambler80211a method)": [[77, "hermespy.fec.scrambler.Scrambler80211a.decode", false]], "decode() (turbocoding method)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.decode", false]], "decode_rate (receivesymboldecoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder.decode_rate", false]], "decode_streams() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.decode_streams", false]], "decode_streams() (receivesignalcoding method)": [[60, "hermespy.core.precoding.ReceiveSignalCoding.decode_streams", false]], "decode_streams() (receivestreamdecoder method)": [[60, "hermespy.core.precoding.ReceiveStreamDecoder.decode_streams", false]], "decode_symbols() (alamouti method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.decode_symbols", false]], "decode_symbols() (dft method)": [[117, "hermespy.modem.precoding.dft.DFT.decode_symbols", false]], "decode_symbols() (ganesan method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.decode_symbols", false]], "decode_symbols() (maximumratiocombining method)": [[118, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.decode_symbols", false]], "decode_symbols() (receivesymboldecoder method)": [[121, "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder.decode_symbols", false]], "decode_symbols() (singlecarrier method)": [[119, "hermespy.modem.precoding.single_carrier.SingleCarrier.decode_symbols", false]], "decoded_bits (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_bits", false]], "decoded_signal (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_signal", false]], "decoded_symbols (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_symbols", false]], "decorrelation_distance (cdl property)": [[8, "hermespy.channel.cdl.cdl.CDL.decorrelation_distance", false]], "decorrelation_distance (multitargetradarchannel property)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.decorrelation_distance", false]], "decorrelation_distance (randomdelaychannel property)": [[21, "hermespy.channel.delay.random.RandomDelayChannel.decorrelation_distance", false]], "decorrelation_distance (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.decorrelation_distance", false]], "default (scenariomode attribute)": [[62, "hermespy.core.scenario.ScenarioMode.DEFAULT", false]], "default_results_dir() (executable static method)": [[53, "hermespy.core.executable.Executable.default_results_dir", false]], "delay (delaycalibration property)": [[82, "hermespy.hardware_loop.calibration.delay.DelayCalibration.delay", false]], "delay (delaychannelsample property)": [[20, "hermespy.channel.delay.delay.DelayChannelSample.delay", false]], "delay (randomdelaychannel property)": [[21, "hermespy.channel.delay.random.RandomDelayChannel.delay", false]], "delay (randomdelaychannelrealization property)": [[21, "hermespy.channel.delay.random.RandomDelayChannelRealization.delay", false]], "delay (selectiveleakagecalibration property)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.delay", false]], "delay (signal attribute)": [[63, "hermespy.core.signal_model.Signal.delay", false]], "delay_calibration (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.delay_calibration", false]], "delay_normalization (clusterdelaylinebase property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.delay_normalization", false]], "delay_offset (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.delay_offset", false]], "delay_profile (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.delay_profile", false]], "delay_resampling_matrix() (in module hermespy.tools.resampling)": [[230, "hermespy.tools.resampling.delay_resampling_matrix", false]], "delaycalibration (class in hermespy.hardware_loop.calibration.delay)": [[82, "hermespy.hardware_loop.calibration.delay.DelayCalibration", false]], "delaychannelbase (class in hermespy.channel.delay.delay)": [[20, "hermespy.channel.delay.delay.DelayChannelBase", false]], "delaychannelrealization (class in hermespy.channel.delay.delay)": [[20, "hermespy.channel.delay.delay.DelayChannelRealization", false]], "delaychannelsample (class in hermespy.channel.delay.delay)": [[20, "hermespy.channel.delay.delay.DelayChannelSample", false]], "delays (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.delays", false]], "deleter() (registereddimension method)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.deleter", false]], "demodulate() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.demodulate", false]], "demodulate() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.demodulate", false]], "demodulate() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.demodulate", false]], "demodulate() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.demodulate", false]], "dense_state() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.dense_state", false]], "dense_states() (statedsymbols method)": [[122, "hermespy.modem.symbols.StatedSymbols.dense_states", false]], "densesignal (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model.DenseSignal", false]], "detect() (maxdetector method)": [[152, "hermespy.radar.detection.MaxDetector.detect", false]], "detect() (radardetector method)": [[154, "hermespy.radar.detection.RadarDetector.detect", false]], "detect() (thresholddetector method)": [[156, "hermespy.radar.detection.ThresholdDetector.detect", false]], "detectionprobabilityevaluation (class in hermespy.radar.evaluators)": [[157, "hermespy.radar.evaluators.DetectionProbabilityEvaluation", false]], "detectionprobartifact (class in hermespy.radar.evaluators)": [[157, "hermespy.radar.evaluators.DetectionProbArtifact", false]], "detectionprobevaluator (class in hermespy.radar.evaluators)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator", false]], "detector (radarbase property)": [[162, "hermespy.radar.radar.RadarBase.detector", false]], "device (class in hermespy.core.device)": [[41, "hermespy.core.device.Device", false]], "device (coupling property)": [[179, "hermespy.simulation.coupling.coupling.Coupling.device", false]], "device (hardwareloopdeviceplot property)": [[92, "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot.device", false]], "device (isolation property)": [[183, "hermespy.simulation.isolation.isolation.Isolation.device", false]], "device_channels() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.device_channels", false]], "device_id (devicestate property)": [[64, "hermespy.core.state.DeviceState.device_id", false]], "device_index() (pipeline method)": [[59, "hermespy.core.pipeline.Pipeline.device_index", false]], "device_index() (scenario method)": [[62, "hermespy.core.scenario.Scenario.device_index", false]], "device_receptions (drop property)": [[52, "hermespy.core.drop.Drop.device_receptions", false]], "device_registered() (scenario method)": [[62, "hermespy.core.scenario.Scenario.device_registered", false]], "device_transmissions (drop property)": [[52, "hermespy.core.drop.Drop.device_transmissions", false]], "deviceinput (class in hermespy.core.device)": [[42, "hermespy.core.device.DeviceInput", false]], "deviceoutput (class in hermespy.core.device)": [[43, "hermespy.core.device.DeviceOutput", false]], "devicereception (class in hermespy.core.device)": [[44, "hermespy.core.device.DeviceReception", false]], "devicereceptionplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.DeviceReceptionPlot", false]], "devices (scenario property)": [[62, "hermespy.core.scenario.Scenario.devices", false]], "devices (triggermodel property)": [[225, "hermespy.simulation.simulated_device.TriggerModel.devices", false]], "devicestate (class in hermespy.core.state)": [[64, "hermespy.core.state.DeviceState", false]], "devicetransmission (class in hermespy.core.device)": [[45, "hermespy.core.device.DeviceTransmission", false]], "devicetransmissionplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.DeviceTransmissionPlot", false]], "dft (class in hermespy.modem.precoding.dft)": [[117, "hermespy.modem.precoding.dft.DFT", false]], "dh (factorytype attribute)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.DH", false]], "dimension (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.dimension", false]], "dimensions (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.dimensions", false]], "dimensions (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.dimensions", false]], "dipole (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.Dipole", false]], "direction (class in hermespy.core.transformation)": [[65, "hermespy.core.transformation.Direction", false]], "dl (factorytype attribute)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.DL", false]], "doppler_bins (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.doppler_bins", false]], "doppler_frequency (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.doppler_frequency", false]], "drop (class in hermespy.core.drop)": [[52, "hermespy.core.drop.Drop", false]], "drop() (scenario method)": [[62, "hermespy.core.scenario.Scenario.drop", false]], "drop_duration (scenario property)": [[62, "hermespy.core.scenario.Scenario.drop_duration", false]], "drop_interval (simulation property)": [[218, "hermespy.simulation.simulation.Simulation.drop_interval", false]], "droptype (class in hermespy.core.drop)": [[52, "hermespy.core.drop.DropType", false]], "dualconsistentrealization (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.DualConsistentRealization", false]], "dualconsistentsample (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.DualConsistentSample", false]], "dump_results (simulation attribute)": [[218, "hermespy.simulation.simulation.Simulation.dump_results", false]], "duplex (antennamode attribute)": [[37, "hermespy.core.antennas.AntennaMode.DUPLEX", false]], "duplexjcasoperator (class in hermespy.jcas.jcas)": [[94, "hermespy.jcas.jcas.DuplexJCASOperator", false]], "duplexmodem (class in hermespy.modem.modem)": [[112, "hermespy.modem.modem.DuplexModem", false]], "duration (guardsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.duration", false]], "duration (signal property)": [[63, "hermespy.core.signal_model.Signal.duration", false]], "e (cdltype attribute)": [[8, "hermespy.channel.cdl.CDLType.E", false]], "e (tdltype attribute)": [[30, "hermespy.channel.fading.tdl.TDLType.E", false]], "ebn0 (class in hermespy.simulation.modem.noise)": [[187, "hermespy.simulation.modem.noise.EBN0", false]], "elements (gridresource attribute)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.elements", false]], "elementtype (class in hermespy.modem.waveforms.orthogonal.waveform)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.ElementType", false]], "emerging_signals (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.emerging_signals", false]], "emerging_signals (simulateddeviceoutput property)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.emerging_signals", false]], "empty() (densesignal static method)": [[63, "hermespy.core.signal_model.DenseSignal.Empty", false]], "empty() (signal static method)": [[63, "hermespy.core.signal_model.Signal.Empty", false]], "empty() (sparsesignal static method)": [[63, "hermespy.core.signal_model.SparseSignal.Empty", false]], "enabled (bchcoding attribute)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.enabled", false]], "enabled (encoder property)": [[70, "hermespy.fec.coding.Encoder.enabled", false]], "enabled (ldpccoding attribute)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.enabled", false]], "enabled (polarsccoding attribute)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding.enabled", false]], "enabled (polarsclcoding attribute)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding.enabled", false]], "enabled (reedsolomoncoding attribute)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.enabled", false]], "enabled (rsccoding attribute)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding.enabled", false]], "enabled (turbocoding attribute)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.enabled", false]], "encode() (bchcoding method)": [[68, "hermespy.fec.aff3ct.bch.BCHCoding.encode", false]], "encode() (blockinterleaver method)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.encode", false]], "encode() (cyclicredundancycheck method)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.encode", false]], "encode() (encoder method)": [[70, "hermespy.fec.coding.Encoder.encode", false]], "encode() (encodermanager method)": [[70, "hermespy.fec.coding.EncoderManager.encode", false]], "encode() (ldpccoding method)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.encode", false]], "encode() (polarsccoding method)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding.encode", false]], "encode() (polarsclcoding method)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding.encode", false]], "encode() (reedsolomoncoding method)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.encode", false]], "encode() (repetitionencoder method)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.encode", false]], "encode() (rsccoding method)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding.encode", false]], "encode() (scrambler3gpp method)": [[77, "hermespy.fec.scrambler.Scrambler3GPP.encode", false]], "encode() (scrambler80211a method)": [[77, "hermespy.fec.scrambler.Scrambler80211a.encode", false]], "encode() (turbocoding method)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.encode", false]], "encode_rate (transmitsymbolencoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder.encode_rate", false]], "encode_streams() (transmitbeamformer method)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.encode_streams", false]], "encode_streams() (transmitsignalcoding method)": [[60, "hermespy.core.precoding.TransmitSignalCoding.encode_streams", false]], "encode_streams() (transmitstreamencoder method)": [[60, "hermespy.core.precoding.TransmitStreamEncoder.encode_streams", false]], "encode_symbols() (alamouti method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.encode_symbols", false]], "encode_symbols() (dft method)": [[117, "hermespy.modem.precoding.dft.DFT.encode_symbols", false]], "encode_symbols() (ganesan method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.encode_symbols", false]], "encode_symbols() (transmitsymbolencoder method)": [[121, "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder.encode_symbols", false]], "encoded_bits (communicationreception property)": [[108, "hermespy.modem.modem.CommunicationReception.encoded_bits", false]], "encoded_bits (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.encoded_bits", false]], "encoded_bits (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.encoded_bits", false]], "encoded_symbols (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.encoded_symbols", false]], "encoder (class in hermespy.fec.coding)": [[70, "hermespy.fec.coding.Encoder", false]], "encoder_manager (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.encoder_manager", false]], "encodermanager (class in hermespy.fec.coding)": [[70, "hermespy.fec.coding.EncoderManager", false]], "encoders (encodermanager property)": [[70, "hermespy.fec.coding.EncoderManager.encoders", false]], "end (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.end", false]], "energy (densesignal property)": [[63, "hermespy.core.signal_model.DenseSignal.energy", false]], "energy (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.energy", false]], "energy (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.energy", false]], "energy (signal property)": [[63, "hermespy.core.signal_model.Signal.energy", false]], "energy (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.energy", false]], "energy (signalreceiver property)": [[58, "hermespy.core.operators.SignalReceiver.energy", false]], "equalize_channel() (channelequalization method)": [[124, "hermespy.modem.waveform.ChannelEqualization.equalize_channel", false]], "equalize_channel() (zeroforcingchannelequalization method)": [[127, "hermespy.modem.waveform.ZeroForcingChannelEqualization.equalize_channel", false]], "equalize_symbols() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.equalize_symbols", false]], "equalized_symbols (communicationreception property)": [[108, "hermespy.modem.modem.CommunicationReception.equalized_symbols", false]], "equalized_symbols (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.equalized_symbols", false]], "esn0 (class in hermespy.simulation.modem.noise)": [[188, "hermespy.simulation.modem.noise.ESN0", false]], "estimate() (delaycalibration static method)": [[82, "hermespy.hardware_loop.calibration.delay.DelayCalibration.Estimate", false]], "estimate() (fmcw method)": [[161, "hermespy.radar.fmcw.FMCW.estimate", false]], "estimate() (radarwaveform method)": [[165, "hermespy.radar.radar.RadarWaveform.estimate", false]], "estimate_channel() (channelestimation method)": [[125, "hermespy.modem.waveform.ChannelEstimation.estimate_channel", false]], "estimate_channel() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.estimate_channel", false]], "estimate_delay() (selectiveleakagecalibration method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.estimate_delay", false]], "estimate_gain() (automaticgaincontrol method)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.estimate_gain", false]], "estimate_gain() (gain method)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.estimate_gain", false]], "estimate_gain() (gaincontrolbase method)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.estimate_gain", false]], "estimate_noise_power() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.estimate_noise_power", false]], "evaluate() (biterrorevaluator method)": [[102, "hermespy.modem.evaluators.BitErrorEvaluator.evaluate", false]], "evaluate() (blockerrorevaluator method)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluator.evaluate", false]], "evaluate() (constellationevm method)": [[104, "hermespy.modem.evaluators.ConstellationEVM.evaluate", false]], "evaluate() (detectionprobevaluator method)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator.evaluate", false]], "evaluate() (evaluator method)": [[57, "hermespy.core.monte_carlo.Evaluator.evaluate", false]], "evaluate() (frameerrorevaluator method)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluator.evaluate", false]], "evaluate() (receiveroperatingcharacteristic method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.evaluate", false]], "evaluate() (rootmeansquareerror method)": [[160, "hermespy.radar.evaluators.RootMeanSquareError.evaluate", false]], "evaluate() (throughputevaluator method)": [[106, "hermespy.modem.evaluators.ThroughputEvaluator.evaluate", false]], "evaluateddrop (class in hermespy.core.drop)": [[52, "hermespy.core.drop.EvaluatedDrop", false]], "evaluation (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.Evaluation", false]], "evaluation (evaluationtemplate property)": [[57, "hermespy.core.monte_carlo.EvaluationTemplate.evaluation", false]], "evaluation_results (montecarloresult property)": [[57, "hermespy.core.monte_carlo.MonteCarloResult.evaluation_results", false]], "evaluationplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.EvaluationPlot", false]], "evaluationresult (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.EvaluationResult", false]], "evaluationtemplate (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.EvaluationTemplate", false]], "evaluator (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.Evaluator", false]], "evaluator (evaluationresult property)": [[57, "hermespy.core.monte_carlo.EvaluationResult.evaluator", false]], "evaluator (hardwareloopevaluatorplot property)": [[92, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot.evaluator", false]], "evaluator_index (hardwareloopevaluatorplot property)": [[92, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot.evaluator_index", false]], "evaluator_index() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.evaluator_index", false]], "evaluators (hardwareloop property)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.evaluators", false]], "evaluators (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.evaluators", false]], "evmartifact (class in hermespy.modem.evaluators)": [[104, "hermespy.modem.evaluators.EVMArtifact", false]], "evmevaluation (class in hermespy.modem.evaluators)": [[104, "hermespy.modem.evaluators.EVMEvaluation", false]], "executable (class in hermespy.core.executable)": [[53, "hermespy.core.executable.Executable", false]], "execute() (executable method)": [[53, "hermespy.core.executable.Executable.execute", false]], "expected_energy_scale (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.expected_energy_scale", false]], "expected_energy_scale (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.expected_energy_scale", false]], "expected_energy_scale (delaychannelsample property)": [[20, "hermespy.channel.delay.delay.DelayChannelSample.expected_energy_scale", false]], "expected_energy_scale (idealchannelsample property)": [[31, "hermespy.channel.ideal.IdealChannelSample.expected_energy_scale", false]], "expected_energy_scale (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.expected_energy_scale", false]], "expected_energy_scale (quadrigachannelsample property)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.expected_energy_scale", false]], "expected_energy_scale (radarchannelsample property)": [[34, "hermespy.channel.radar.radar.RadarChannelSample.expected_energy_scale", false]], "expected_state (clusterdelaylinebase property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.expected_state", false]], "expected_state (clusterdelaylinerealization property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization.expected_state", false]], "exponential (class in hermespy.channel.fading.exponential)": [[24, "hermespy.channel.fading.exponential.Exponential", false]], "extensions (factory attribute)": [[54, "hermespy.core.factory.Factory.extensions", false]], "eye (signal property)": [[63, "hermespy.core.signal_model.Signal.eye", false]], "eyeplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.EyePlot", false]], "factory (class in hermespy.core.factory)": [[54, "hermespy.core.factory.Factory", false]], "factory_type (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.factory_type", false]], "factorytype (class in hermespy.channel.cdl.indoor_factory)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType", false]], "fetch_scalars() (consistentsample method)": [[19, "hermespy.channel.consistent.ConsistentSample.fetch_scalars", false]], "fetch_scalars() (dualconsistentsample method)": [[19, "hermespy.channel.consistent.DualConsistentSample.fetch_scalars", false]], "fetch_scalars() (staticconsistentsample method)": [[19, "hermespy.channel.consistent.StaticConsistentSample.fetch_scalars", false]], "figure (visualization property)": [[66, "hermespy.core.visualize.Visualization.figure", false]], "filter_length (rolledoffsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.filter_length", false]], "filter_order (signal attribute)": [[63, "hermespy.core.signal_model.Signal.filter_order", false]], "filteredsinglecarrierwaveform (class in hermespy.modem.waveform_single_carrier)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform", false]], "first_impact (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.first_impact", false]], "first_impact (registereddimension property)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.first_impact", false]], "fixedcrosssection (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.FixedCrossSection", false]], "fmcw (class in hermespy.radar.fmcw)": [[161, "hermespy.radar.fmcw.FMCW", false]], "fmcwwaveform (class in hermespy.modem.waveform_single_carrier)": [[132, "hermespy.modem.waveform_single_carrier.FMCWWaveform", false]], "forwards_transformation (transformable property)": [[65, "hermespy.core.transformation.Transformable.forwards_transformation", false]], "forwards_transformation (transformablebase property)": [[65, "hermespy.core.transformation.TransformableBase.forwards_transformation", false]], "forwards_transformation (transformablelink property)": [[65, "hermespy.core.transformation.TransformableLink.forwards_transformation", false]], "frame_duration (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.frame_duration", false]], "frame_duration (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.frame_duration", false]], "frame_duration (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.frame_duration", false]], "frame_duration (duplexjcasoperator property)": [[94, "hermespy.jcas.jcas.DuplexJCASOperator.frame_duration", false]], "frame_duration (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.frame_duration", false]], "frame_duration (matchedfilterjcas property)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas.frame_duration", false]], "frame_duration (radar property)": [[162, "hermespy.radar.radar.Radar.frame_duration", false]], "frame_duration (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.frame_duration", false]], "frame_duration (staticoperator property)": [[58, "hermespy.core.operators.StaticOperator.frame_duration", false]], "frame_generator (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.frame_generator", false]], "frameerrorartifact (class in hermespy.modem.evaluators)": [[105, "hermespy.modem.evaluators.FrameErrorArtifact", false]], "frameerrorevaluation (class in hermespy.modem.evaluators)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluation", false]], "frameerrorevaluator (class in hermespy.modem.evaluators)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluator", false]], "frames (communicationreception attribute)": [[108, "hermespy.modem.modem.CommunicationReception.frames", false]], "frames (communicationtransmission attribute)": [[110, "hermespy.modem.modem.CommunicationTransmission.frames", false]], "freq_difference (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.freq_difference", false]], "frequencies (dualconsistentrealization property)": [[19, "hermespy.channel.consistent.DualConsistentRealization.frequencies", false]], "frequencies (signal property)": [[63, "hermespy.core.signal_model.Signal.frequencies", false]], "frequency_selectivity (channelstateformat attribute)": [[38, "hermespy.core.channel.ChannelStateFormat.FREQUENCY_SELECTIVITY", false]], "from_artifacts() (scalarevaluationresult class method)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult.From_Artifacts", false]], "from_cartesian() (direction class method)": [[65, "hermespy.core.transformation.Direction.From_Cartesian", false]], "from_deviceoutput() (simulateddeviceoutput class method)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.From_DeviceOutput", false]], "from_file() (factory method)": [[54, "hermespy.core.factory.Factory.from_file", false]], "from_folder() (factory method)": [[54, "hermespy.core.factory.Factory.from_folder", false]], "from_hdf() (cdlrealization static method)": [[8, "hermespy.channel.cdl.cdl.CDLRealization.From_HDF", false]], "from_hdf() (devicetransmission class method)": [[45, "hermespy.core.device.DeviceTransmission.from_HDF", false]], "from_hdf() (idealchannelrealization static method)": [[31, "hermespy.channel.ideal.IdealChannelRealization.From_HDF", false]], "from_hdf() (indoorfactoryrealization class method)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization.From_HDF", false]], "from_hdf() (indoorofficerealization class method)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization.From_HDF", false]], "from_hdf() (multipathfadingrealization static method)": [[28, "hermespy.channel.fading.fading.MultipathFadingRealization.From_HDF", false]], "from_hdf() (multitargetradarchannelrealization static method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization.From_HDF", false]], "from_hdf() (quadrigachannelrealization static method)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization.From_HDF", false]], "from_hdf() (randomdelaychannelrealization static method)": [[21, "hermespy.channel.delay.random.RandomDelayChannelRealization.From_HDF", false]], "from_hdf() (receiveroperatingcharacteristic class method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.From_HDF", false]], "from_hdf() (ruralmacrocellsrealization class method)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization.From_HDF", false]], "from_hdf() (simulateddevicetransmission class method)": [[216, "hermespy.simulation.simulated_device.SimulatedDeviceTransmission.from_HDF", false]], "from_hdf() (simulateddrop class method)": [[217, "hermespy.simulation.drop.SimulatedDrop.from_HDF", false]], "from_hdf() (singletargetradarchannelrealization static method)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization.From_HDF", false]], "from_hdf() (spatialdelaychannelrealization static method)": [[22, "hermespy.channel.delay.spatial.SpatialDelayChannelRealization.From_HDF", false]], "from_hdf() (urbanmacrocellsrealization class method)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization.From_HDF", false]], "from_hdf() (urbanmicrocellsrealization class method)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization.From_HDF", false]], "from_interleaved() (signal class method)": [[63, "hermespy.core.signal_model.Signal.from_interleaved", false]], "from_ndarray() (signal method)": [[63, "hermespy.core.signal_model.Signal.from_ndarray", false]], "from_output() (devicetransmission class method)": [[45, "hermespy.core.device.DeviceTransmission.From_Output", false]], "from_parameters() (serializableenum class method)": [[54, "hermespy.core.factory.SerializableEnum.from_parameters", false]], "from_path() (factory method)": [[54, "hermespy.core.factory.Factory.from_path", false]], "from_processeddeviceinput() (devicereception class method)": [[44, "hermespy.core.device.DeviceReception.From_ProcessedDeviceInput", false]], "from_processedsimulateddeviceinput() (simulateddevicereception class method)": [[215, "hermespy.simulation.simulated_device.SimulatedDeviceReception.From_ProcessedSimulatedDeviceInput", false]], "from_quaternion() (transformation class method)": [[65, "hermespy.core.transformation.Transformation.From_Quaternion", false]], "from_rpy() (transformation class method)": [[65, "hermespy.core.transformation.Transformation.From_RPY", false]], "from_simulateddeviceoutput() (simulateddevicetransmission class method)": [[216, "hermespy.simulation.simulated_device.SimulatedDeviceTransmission.From_SimulatedDeviceOutput", false]], "from_spherical() (direction class method)": [[65, "hermespy.core.transformation.Direction.From_Spherical", false]], "from_str() (factory method)": [[54, "hermespy.core.factory.Factory.from_str", false]], "from_stream() (factory method)": [[54, "hermespy.core.factory.Factory.from_stream", false]], "from_translation() (transformation class method)": [[65, "hermespy.core.transformation.Transformation.From_Translation", false]], "from_tuple() (logarithmic class method)": [[56, "hermespy.core.logarithmic.Logarithmic.From_Tuple", false]], "from_yaml() (pilotsection class method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.from_yaml", false]], "from_yaml() (precoding class method)": [[60, "hermespy.core.precoding.Precoding.from_yaml", false]], "from_yaml() (simulation class method)": [[218, "hermespy.simulation.simulation.Simulation.from_yaml", false]], "fromscenario() (receiveroperatingcharacteristic static method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.FromScenario", false]], "fromscenarios() (receiveroperatingcharacteristic static method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.FromScenarios", false]], "fromspherical() (pointdetection class method)": [[153, "hermespy.radar.detection.PointDetection.FromSpherical", false]], "ft (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.FT", false]], "gain (analogdigitalconverter attribute)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.gain", false]], "gain (channel property)": [[16, "hermespy.channel.channel.Channel.gain", false]], "gain (channelrealization property)": [[17, "hermespy.channel.channel.ChannelRealization.gain", false]], "gain (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.Gain", false]], "gain (custompoweramplifier property)": [[204, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.gain", false]], "gain (delaychannelsample property)": [[20, "hermespy.channel.delay.delay.DelayChannelSample.gain", false]], "gain (gain property)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.gain", false]], "gain (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.gain", false]], "gain (radarchannelsample property)": [[34, "hermespy.channel.radar.radar.RadarChannelSample.gain", false]], "gaincontrolbase (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase", false]], "gaincontroltype (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType", false]], "ganesan (class in hermespy.modem.precoding.space_time_block_coding)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan", false]], "gaussian() (consistentgenerator method)": [[19, "hermespy.channel.consistent.ConsistentGenerator.gaussian", false]], "generate() (pilotsection method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.generate", false]], "generate() (pseudorandomgenerator method)": [[77, "hermespy.fec.scrambler.PseudoRandomGenerator.generate", false]], "generate_bits() (bitssource method)": [[98, "hermespy.modem.bits_source.BitsSource.generate_bits", false]], "generate_bits() (randombitssource method)": [[98, "hermespy.modem.bits_source.RandomBitsSource.generate_bits", false]], "generate_bits() (streambitssource method)": [[98, "hermespy.modem.bits_source.StreamBitsSource.generate_bits", false]], "generate_output() (device method)": [[41, "hermespy.core.device.Device.generate_output", false]], "generate_output() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.generate_output", false]], "generate_outputs() (scenario method)": [[62, "hermespy.core.scenario.Scenario.generate_outputs", false]], "generate_outputs() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.generate_outputs", false]], "generate_result() (communicationevaluator method)": [[100, "hermespy.modem.evaluators.CommunicationEvaluator.generate_result", false]], "generate_result() (detectionprobevaluator method)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator.generate_result", false]], "generate_result() (evaluator method)": [[57, "hermespy.core.monte_carlo.Evaluator.generate_result", false]], "generate_result() (radarevaluator method)": [[158, "hermespy.radar.evaluators.RadarEvaluator.generate_result", false]], "generate_result() (receiveroperatingcharacteristic method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.generate_result", false]], "generate_result() (rootmeansquareerror method)": [[160, "hermespy.radar.evaluators.RootMeanSquareError.generate_result", false]], "generate_sequence() (pseudorandomgenerator method)": [[77, "hermespy.fec.scrambler.PseudoRandomGenerator.generate_sequence", false]], "generateresult() (receiveroperatingcharacteristic static method)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.GenerateResult", false]], "generator() (randomrealization method)": [[61, "hermespy.core.random_node.RandomRealization.generator", false]], "get_cross_section() (fixedcrosssection method)": [[33, "hermespy.channel.radar.multi.FixedCrossSection.get_cross_section", false]], "get_cross_section() (radarcrosssectionmodel method)": [[33, "hermespy.channel.radar.multi.RadarCrossSectionModel.get_cross_section", false]], "get_monitors() (in module hermespy.tools.tile)": [[231, "hermespy.tools.tile.get_monitors", false]], "get_power() (ebn0 method)": [[187, "hermespy.simulation.modem.noise.EBN0.get_power", false]], "get_power() (esn0 method)": [[188, "hermespy.simulation.modem.noise.ESN0.get_power", false]], "get_power() (n0 method)": [[190, "hermespy.simulation.noise.level.N0.get_power", false]], "get_power() (noiselevel method)": [[189, "hermespy.simulation.noise.level.NoiseLevel.get_power", false]], "get_power() (snr method)": [[191, "hermespy.simulation.noise.level.SNR.get_power", false]], "getitem() (densesignal method)": [[63, "hermespy.core.signal_model.DenseSignal.getitem", false]], "getitem() (signal method)": [[63, "hermespy.core.signal_model.Signal.getitem", false]], "getstreams() (signal method)": [[63, "hermespy.core.signal_model.Signal.getstreams", false]], "getter() (registereddimension method)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.getter", false]], "global_characteristics() (antenna method)": [[37, "hermespy.core.antennas.Antenna.global_characteristics", false]], "global_orientation (transformable property)": [[65, "hermespy.core.transformation.Transformable.global_orientation", false]], "global_position (transformable property)": [[65, "hermespy.core.transformation.Transformable.global_position", false]], "grid (evaluationresult property)": [[57, "hermespy.core.monte_carlo.EvaluationResult.grid", false]], "grid_resources (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.grid_resources", false]], "grid_section (montecarlosample property)": [[57, "hermespy.core.monte_carlo.MonteCarloSample.grid_section", false]], "grid_structure (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.grid_structure", false]], "griddimension (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.GridDimension", false]], "gridelement (class in hermespy.modem.waveforms.orthogonal.waveform)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridElement", false]], "gridresource (class in hermespy.modem.waveforms.orthogonal.waveform)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource", false]], "gridsection (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.GridSection", false]], "gridsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection", false]], "ground_truth (radarinterferencepath property)": [[34, "hermespy.channel.radar.radar.RadarInterferencePath.ground_truth", false]], "ground_truth (radarpath property)": [[34, "hermespy.channel.radar.radar.RadarPath.ground_truth", false]], "ground_truth (radartargetpath property)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.ground_truth", false]], "guard_interval (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.guard_interval", false]], "guard_interval (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.guard_interval", false]], "guard_ratio (correlationsynchronization property)": [[130, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.guard_ratio", false]], "guardsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection", false]], "h0_value (rocartifact property)": [[159, "hermespy.radar.evaluators.RocArtifact.h0_value", false]], "h1_value (rocartifact property)": [[159, "hermespy.radar.evaluators.RocArtifact.h1_value", false]], "hardware_loop (hardwareloopplot property)": [[85, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.hardware_loop", false]], "hardwareloop (class in hermespy.hardware_loop.hardware_loop)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop", false]], "hardwareloopdeviceplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot", false]], "hardwareloopevaluatorplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot", false]], "hardwareloopplot (class in hermespy.hardware_loop.hardware_loop)": [[85, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot", false]], "hdfserializable (class in hermespy.core.factory)": [[54, "hermespy.core.factory.HDFSerializable", false]], "hermes_simulation() (in module hermespy.bin.hermes)": [[7, "hermespy.bin.hermes.hermes_simulation", false]], "hermespy.beamforming.beamformer": [[2, "module-hermespy.beamforming.beamformer", false]], "hermespy.beamforming.capon": [[3, "module-hermespy.beamforming.capon", false]], "hermespy.beamforming.conventional": [[4, "module-hermespy.beamforming.conventional", false]], "hermespy.bin.hermes": [[7, "module-hermespy.bin.hermes", false]], "hermespy.core.monte_carlo": [[57, "module-hermespy.core.monte_carlo", false]], "hermespy.core.random_node": [[61, "module-hermespy.core.random_node", false]], "hermespy.fec.aff3ct.bch": [[68, "module-hermespy.fec.aff3ct.bch", false]], "hermespy.fec.aff3ct.ldpc": [[72, "module-hermespy.fec.aff3ct.ldpc", false]], "hermespy.fec.aff3ct.polar": [[73, "module-hermespy.fec.aff3ct.polar", false]], "hermespy.fec.aff3ct.rs": [[75, "module-hermespy.fec.aff3ct.rs", false]], "hermespy.fec.aff3ct.rsc": [[76, "module-hermespy.fec.aff3ct.rsc", false]], "hermespy.fec.aff3ct.turbo": [[78, "module-hermespy.fec.aff3ct.turbo", false]], "hermespy.fec.block_interleaver": [[69, "module-hermespy.fec.block_interleaver", false]], "hermespy.fec.coding": [[70, "module-hermespy.fec.coding", false]], "hermespy.fec.cyclic_redundancy_check": [[71, "module-hermespy.fec.cyclic_redundancy_check", false]], "hermespy.fec.repetition_encoder": [[74, "module-hermespy.fec.repetition_encoder", false]], "hermespy.fec.scrambler": [[77, "module-hermespy.fec.scrambler", false]], "hermespy.hardware_loop.calibration.delay": [[82, "module-hermespy.hardware_loop.calibration.delay", false]], "hermespy.hardware_loop.calibration.leakage": [[83, "module-hermespy.hardware_loop.calibration.leakage", false]], "hermespy.hardware_loop.visualizers": [[92, "module-hermespy.hardware_loop.visualizers", false]], "hermespy.tools.math": [[229, "module-hermespy.tools.math", false]], "hermespy.tools.resampling": [[230, "module-hermespy.tools.resampling", false]], "hermespy.tools.tile": [[231, "module-hermespy.tools.tile", false]], "hh (factorytype attribute)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.HH", false]], "hilly (cost259type attribute)": [[23, "hermespy.channel.fading.cost259.Cost259Type.HILLY", false]], "hook (class in hermespy.core.hooks)": [[55, "hermespy.core.hooks.Hook", false]], "hookable (class in hermespy.core.hooks)": [[55, "hermespy.core.hooks.Hookable", false]], "horizontal_phase_response() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.horizontal_phase_response", false]], "ideal() (channelstateinformation static method)": [[38, "hermespy.core.channel.ChannelStateInformation.Ideal", false]], "idealantenna (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.IdealAntenna", false]], "idealchannel (class in hermespy.channel.ideal)": [[31, "hermespy.channel.ideal.IdealChannel", false]], "idealchannelrealization (class in hermespy.channel.ideal)": [[31, "hermespy.channel.ideal.IdealChannelRealization", false]], "idealchannelsample (class in hermespy.channel.ideal)": [[31, "hermespy.channel.ideal.IdealChannelSample", false]], "image (imagevisualization property)": [[66, "hermespy.core.visualize.ImageVisualization.image", false]], "imagevisualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.ImageVisualization", false]], "impedancecoupling (class in hermespy.simulation.coupling.impedance)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling", false]], "impinging_signals (deviceinput property)": [[42, "hermespy.core.device.DeviceInput.impinging_signals", false]], "impulse_response (channelstateformat attribute)": [[38, "hermespy.core.channel.ChannelStateFormat.IMPULSE_RESPONSE", false]], "indoorfactory (class in hermespy.channel.cdl.indoor_factory)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory", false]], "indoorfactoryrealization (class in hermespy.channel.cdl.indoor_factory)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization", false]], "indooroffice (class in hermespy.channel.cdl.indoor_office)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOffice", false]], "indoorofficerealization (class in hermespy.channel.cdl.indoor_office)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization", false]], "information (channelstatedimension attribute)": [[38, "hermespy.core.channel.ChannelStateDimension.INFORMATION", false]], "input (custompoweramplifier property)": [[204, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.input", false]], "input_callbacks (device property)": [[41, "hermespy.core.device.Device.input_callbacks", false]], "interactive (consolemode attribute)": [[40, "hermespy.core.definitions.ConsoleMode.INTERACTIVE", false]], "interfernce (multitargetradarchannel attribute)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.interfernce", false]], "interleave_blocks (blockinterleaver property)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.interleave_blocks", false]], "interpolationmode (class in hermespy.channel.channel)": [[16, "hermespy.channel.channel.InterpolationMode", false]], "invert() (transformation method)": [[65, "hermespy.core.transformation.Transformation.invert", false]], "investigated_object (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.investigated_object", false]], "ip (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.ip", false]], "is_base (transformable property)": [[65, "hermespy.core.transformation.Transformable.is_base", false]], "is_registered() (registereddimension class method)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.is_registered", false]], "isolation (class in hermespy.simulation.isolation.isolation)": [[183, "hermespy.simulation.isolation.isolation.Isolation", false]], "isolation (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.isolation", false]], "isolation (specificisolation property)": [[186, "hermespy.simulation.isolation.specific.SpecificIsolation.isolation", false]], "iteration_priority (hardwareloop property)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.iteration_priority", false]], "jcasreception (class in hermespy.jcas.jcas)": [[94, "hermespy.jcas.jcas.JCASReception", false]], "jcastransmission (class in hermespy.jcas.jcas)": [[94, "hermespy.jcas.jcas.JCASTransmission", false]], "k0 (oscillatorphasenoise property)": [[210, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K0", false]], "k2 (oscillatorphasenoise property)": [[210, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K2", false]], "k3 (oscillatorphasenoise property)": [[210, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K3", false]], "kwargs (signal property)": [[63, "hermespy.core.signal_model.Signal.kwargs", false]], "largescalestate (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState", false]], "last_impact (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.last_impact", false]], "last_impact (registereddimension property)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.last_impact", false]], "ldpccoding (class in hermespy.fec.aff3ct.ldpc)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding", false]], "leak() (isolation method)": [[183, "hermespy.simulation.isolation.isolation.Isolation.leak", false]], "leak() (perfectisolation method)": [[184, "hermespy.simulation.isolation.perfect.PerfectIsolation.leak", false]], "leakage_calibration (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.leakage_calibration", false]], "leakage_response (selectiveleakage property)": [[185, "hermespy.simulation.isolation.selective.SelectiveLeakage.leakage_response", false]], "leakage_response (selectiveleakagecalibration property)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.leakage_response", false]], "leaking_signal (processedsimulateddeviceinput property)": [[212, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.leaking_signal", false]], "leaking_signals (simulateddeviceoutput property)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.leaking_signals", false]], "leastsquaresestimate() (selectiveleakagecalibration static method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.LeastSquaresEstimate", false]], "level (n0 property)": [[190, "hermespy.simulation.noise.level.N0.level", false]], "level (noiselevel property)": [[189, "hermespy.simulation.noise.level.NoiseLevel.level", false]], "level (snr property)": [[191, "hermespy.simulation.noise.level.SNR.level", false]], "lin (valuetype attribute)": [[56, "hermespy.core.ValueType.LIN", false]], "lin2db() (in module hermespy.tools.math)": [[229, "hermespy.tools.math.lin2db", false]], "line_of_sight (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.line_of_sight", false]], "line_of_sight (largescalestate property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState.line_of_sight", false]], "linear (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.linear", false]], "linear (consolemode attribute)": [[40, "hermespy.core.definitions.ConsoleMode.LINEAR", false]], "linearantenna (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.LinearAntenna", false]], "lineartrajectory (class in hermespy.simulation.animation)": [[167, "hermespy.simulation.animation.LinearTrajectory", false]], "lines (plotvisualization property)": [[66, "hermespy.core.visualize.PlotVisualization.lines", false]], "linked_frames (transformablelink property)": [[65, "hermespy.core.transformation.TransformableLink.linked_frames", false]], "load_calibration() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.load_calibration", false]], "loading (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.loading", false]], "local_characteristics() (antenna method)": [[37, "hermespy.core.antennas.Antenna.local_characteristics", false]], "local_characteristics() (dipole method)": [[37, "hermespy.core.antennas.Dipole.local_characteristics", false]], "local_characteristics() (idealantenna method)": [[37, "hermespy.core.antennas.IdealAntenna.local_characteristics", false]], "local_characteristics() (linearantenna method)": [[37, "hermespy.core.antennas.LinearAntenna.local_characteristics", false]], "local_characteristics() (patchantenna method)": [[37, "hermespy.core.antennas.PatchAntenna.local_characteristics", false]], "logarithmic (class in hermespy.core.logarithmic)": [[56, "hermespy.core.logarithmic.Logarithmic", false]], "logarithmicsequence (class in hermespy.core.logarithmic)": [[56, "hermespy.core.logarithmic.LogarithmicSequence", false]], "lookat() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.lookat", false]], "lookat() (transformable method)": [[65, "hermespy.core.transformation.Transformable.lookat", false]], "lookat() (transformation method)": [[65, "hermespy.core.transformation.Transformation.lookat", false]], "lookat_disable() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.lookat_disable", false]], "lookat_enable() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.lookat_enable", false]], "los_angle (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.los_angle", false]], "los_angles (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.los_angles", false]], "los_doppler (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.los_doppler", false]], "los_doppler_frequency (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.los_doppler_frequency", false]], "los_gains (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.los_gains", false]], "los_phases (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.los_phases", false]], "lowpass_bandwidth (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.lowpass_bandwidth", false]], "lowpass_filter (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.lowpass_filter", false]], "lsst (class in hermespy.channel.cdl.cluster_delay_lines)": [[9, "hermespy.channel.cdl.cluster_delay_lines.LSST", false]], "make_target() (multitargetradarchannel method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.make_target", false]], "manager (encoder property)": [[70, "hermespy.fec.coding.Encoder.manager", false]], "manual_triggering (hardwareloop attribute)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.manual_triggering", false]], "map() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.map", false]], "map() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.map", false]], "map() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.map", false]], "map() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.map", false]], "mapping (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.mapping", false]], "marcum_q() (in module hermespy.tools.math)": [[229, "hermespy.tools.math.marcum_q", false]], "mask (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.mask", false]], "matchedfilterjcas (class in hermespy.jcas.matched_filtering)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas", false]], "matching_impedance (impedancecoupling property)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.matching_impedance", false]], "max_amplitude (gaincontroltype attribute)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.MAX_AMPLITUDE", false]], "max_delay (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.max_delay", false]], "max_delay (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.max_delay", false]], "max_frame_duration (device property)": [[41, "hermespy.core.device.Device.max_frame_duration", false]], "max_num_clusters (clusterdelaylinebase property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.max_num_clusters", false]], "max_num_clusters (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.max_num_clusters", false]], "max_num_clusters (indooroffice property)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOffice.max_num_clusters", false]], "max_num_clusters (ruralmacrocells property)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.max_num_clusters", false]], "max_num_clusters (urbanmacrocells property)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.max_num_clusters", false]], "max_num_clusters (urbanmicrocells property)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.max_num_clusters", false]], "max_num_rays (clusterdelaylinebase property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.max_num_rays", false]], "max_num_rays (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.max_num_rays", false]], "max_num_rays (indooroffice property)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOffice.max_num_rays", false]], "max_num_rays (ruralmacrocells property)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.max_num_rays", false]], "max_num_rays (urbanmacrocells property)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.max_num_rays", false]], "max_num_rays (urbanmicrocells property)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.max_num_rays", false]], "max_num_samples (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.max_num_samples", false]], "max_range (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.max_range", false]], "max_range (matchedfilterjcas property)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas.max_range", false]], "max_range (ofdmradar property)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar.max_range", false]], "max_range (radar property)": [[162, "hermespy.radar.radar.Radar.max_range", false]], "max_range (radarpointcloud property)": [[155, "hermespy.radar.detection.RadarPointCloud.max_range", false]], "max_range (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.max_range", false]], "max_receive_delay (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.max_receive_delay", false]], "max_relative_doppler (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.max_relative_doppler", false]], "max_relative_doppler (ofdmradar property)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar.max_relative_doppler", false]], "max_relative_doppler (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.max_relative_doppler", false]], "max_sampling_rate (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.max_sampling_rate", false]], "max_sampling_rate (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.max_sampling_rate", false]], "max_sampling_rate (physicaldevicedummy property)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.max_sampling_rate", false]], "max_sampling_rate (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.max_sampling_rate", false]], "max_timestamp (lineartrajectory property)": [[167, "hermespy.simulation.animation.LinearTrajectory.max_timestamp", false]], "max_timestamp (statictrajectory property)": [[167, "hermespy.simulation.animation.StaticTrajectory.max_timestamp", false]], "max_timestamp (trajectory property)": [[167, "hermespy.simulation.animation.Trajectory.max_timestamp", false]], "max_trajectory_timestamp (moveable property)": [[167, "hermespy.simulation.animation.Moveable.max_trajectory_timestamp", false]], "maxdetector (class in hermespy.radar.detection)": [[152, "hermespy.radar.detection.MaxDetector", false]], "maximumratiocombining (class in hermespy.modem.precoding.ratio_combining)": [[118, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining", false]], "mesh (quadmeshvisualization property)": [[66, "hermespy.core.visualize.QuadMeshVisualization.mesh", false]], "message (actorrunresult attribute)": [[57, "hermespy.core.monte_carlo.ActorRunResult.message", false]], "mid_riser (quantizertype attribute)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType.MID_RISER", false]], "mid_tread (quantizertype attribute)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType.MID_TREAD", false]], "min_num_samples (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.min_num_samples", false]], "min_power (thresholddetector property)": [[156, "hermespy.radar.detection.ThresholdDetector.min_power", false]], "mixed (officetype attribute)": [[11, "hermespy.channel.cdl.indoor_office.OfficeType.MIXED", false]], "mixed_signal (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.mixed_signal", false]], "mmseestimate() (selectiveleakagecalibration static method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.MMSEEstimate", false]], "mode (antenna property)": [[37, "hermespy.core.antennas.Antenna.mode", false]], "mode (scenario property)": [[62, "hermespy.core.scenario.Scenario.mode", false]], "model() (clippingpoweramplifier method)": [[203, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier.model", false]], "model() (custompoweramplifier method)": [[204, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.model", false]], "model() (poweramplifier method)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.model", false]], "model() (rapppoweramplifier method)": [[206, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.model", false]], "model() (salehpoweramplifier method)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.model", false]], "model_propagation_loss (delaychannelbase property)": [[20, "hermespy.channel.delay.delay.DelayChannelBase.model_propagation_loss", false]], "model_propagation_loss (delaychannelrealization property)": [[20, "hermespy.channel.delay.delay.DelayChannelRealization.model_propagation_loss", false]], "model_propagation_loss (delaychannelsample property)": [[20, "hermespy.channel.delay.delay.DelayChannelSample.model_propagation_loss", false]], "model_type (cdl property)": [[8, "hermespy.channel.cdl.cdl.CDL.model_type", false]], "model_type (cost259 property)": [[23, "hermespy.channel.fading.cost259.Cost259.model_type", false]], "model_type (tdl property)": [[30, "hermespy.channel.fading.tdl.TDL.model_type", false]], "modem (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.modem", false]], "modem (encodermanager property)": [[70, "hermespy.fec.coding.EncoderManager.modem", false]], "modulate() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.modulate", false]], "modulate() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.modulate", false]], "modulate() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.modulate", false]], "modulate() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.modulate", false]], "modulation_order (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.modulation_order", false]], "modulation_order (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.modulation_order", false]], "modulation_order (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.modulation_order", false]], "modulation_order (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.modulation_order", false]], "module": [[2, "module-hermespy.beamforming.beamformer", false], [3, "module-hermespy.beamforming.capon", false], [4, "module-hermespy.beamforming.conventional", false], [7, "module-hermespy.bin.hermes", false], [57, "module-hermespy.core.monte_carlo", false], [61, "module-hermespy.core.random_node", false], [68, "module-hermespy.fec.aff3ct.bch", false], [69, "module-hermespy.fec.block_interleaver", false], [70, "module-hermespy.fec.coding", false], [71, "module-hermespy.fec.cyclic_redundancy_check", false], [72, "module-hermespy.fec.aff3ct.ldpc", false], [73, "module-hermespy.fec.aff3ct.polar", false], [74, "module-hermespy.fec.repetition_encoder", false], [75, "module-hermespy.fec.aff3ct.rs", false], [76, "module-hermespy.fec.aff3ct.rsc", false], [77, "module-hermespy.fec.scrambler", false], [78, "module-hermespy.fec.aff3ct.turbo", false], [82, "module-hermespy.hardware_loop.calibration.delay", false], [83, "module-hermespy.hardware_loop.calibration.leakage", false], [92, "module-hermespy.hardware_loop.visualizers", false], [229, "module-hermespy.tools.math", false], [230, "module-hermespy.tools.resampling", false], [231, "module-hermespy.tools.tile", false]], "montecarlo (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.MonteCarlo", false]], "montecarloactor (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.MonteCarloActor", false]], "montecarloresult (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.MonteCarloResult", false]], "montecarlosample (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.MonteCarloSample", false]], "moveable (class in hermespy.simulation.animation)": [[167, "hermespy.simulation.animation.Moveable", false]], "moveable (physicalradartarget property)": [[33, "hermespy.channel.radar.multi.PhysicalRadarTarget.moveable", false]], "multipathfadingchannel (class in hermespy.channel.fading.fading)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel", false]], "multipathfadingrealization (class in hermespy.channel.fading.fading)": [[28, "hermespy.channel.fading.fading.MultipathFadingRealization", false]], "multipathfadingsample (class in hermespy.channel.fading.fading)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample", false]], "multitargetradarchannel (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel", false]], "multitargetradarchannelrealization (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization", false]], "n0 (class in hermespy.simulation.noise.level)": [[190, "hermespy.simulation.noise.level.N0", false]], "nearest (interpolationmode attribute)": [[16, "hermespy.channel.channel.InterpolationMode.NEAREST", false]], "new_device() (audioscenario method)": [[81, "hermespy.hardware_loop.audio.scenario.AudioScenario.new_device", false]], "new_device() (physicalscenariodummy method)": [[88, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.new_device", false]], "new_device() (pipeline method)": [[59, "hermespy.core.pipeline.Pipeline.new_device", false]], "new_device() (scenario method)": [[62, "hermespy.core.scenario.Scenario.new_device", false]], "new_device() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.new_device", false]], "new_device() (usrpsystem method)": [[90, "hermespy.hardware_loop.uhd.system.UsrpSystem.new_device", false]], "new_dimension() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.new_dimension", false]], "new_dimension() (montecarlo method)": [[57, "hermespy.core.monte_carlo.MonteCarlo.new_dimension", false]], "nlos_angles (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_angles", false]], "nlos_doppler (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_doppler", false]], "nlos_gains (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_gains", false]], "nlos_phases (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_phases", false]], "no() (transformation class method)": [[65, "hermespy.core.transformation.Transformation.No", false]], "noise (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.noise", false]], "noise_level (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.noise_level", false]], "noise_level (simulationscenario property)": [[219, "hermespy.simulation.simulation.SimulationScenario.noise_level", false]], "noise_model (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.noise_model", false]], "noise_model (simulationscenario property)": [[219, "hermespy.simulation.simulation.SimulationScenario.noise_model", false]], "noise_power (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.noise_power", false]], "noise_power (signal property)": [[63, "hermespy.core.signal_model.Signal.noise_power", false]], "noise_realization (simulateddevicereceiverealization property)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization.noise_realization", false]], "noiselevel (class in hermespy.simulation.noise.level)": [[189, "hermespy.simulation.noise.level.NoiseLevel", false]], "noisemodel (class in hermespy.simulation.noise.model)": [[189, "hermespy.simulation.noise.model.NoiseModel", false]], "noiserealization (class in hermespy.simulation.noise.model)": [[189, "hermespy.simulation.noise.model.NoiseRealization", false]], "none (gaincontroltype attribute)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.NONE", false]], "none (prefixtype attribute)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.NONE", false]], "nophasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[209, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise", false]], "normal() (selectiveleakage class method)": [[185, "hermespy.simulation.isolation.selective.SelectiveLeakage.Normal", false]], "normalize (thresholddetector property)": [[156, "hermespy.radar.detection.ThresholdDetector.normalize", false]], "normalize_power() (radarcube method)": [[151, "hermespy.radar.cube.RadarCube.normalize_power", false]], "notify() (hookable method)": [[55, "hermespy.core.hooks.Hookable.notify", false]], "nrt (class in hermespy.simulation.noise.model)": [[189, "hermespy.simulation.noise.model.NRT", false]], "null (elementtype attribute)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.NULL", false]], "null_hypothesis() (radarchannelsample method)": [[34, "hermespy.channel.radar.radar.RadarChannelSample.null_hypothesis", false]], "nullsteeringbeamformer (class in hermespy.beamforming.nullsteeringbeamformer)": [[5, "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer", false]], "num_actors (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.num_actors", false]], "num_antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_antennas", false]], "num_antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.num_antennas", false]], "num_antennas (device property)": [[41, "hermespy.core.device.Device.num_antennas", false]], "num_antennas (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.num_antennas", false]], "num_antennas (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.num_antennas", false]], "num_appended_zeros (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_appended_zeros", false]], "num_artifacts (evaluateddrop property)": [[52, "hermespy.core.drop.EvaluatedDrop.num_artifacts", false]], "num_artifacts (montecarlosample property)": [[57, "hermespy.core.monte_carlo.MonteCarloSample.num_artifacts", false]], "num_blocks (symbols property)": [[122, "hermespy.modem.symbols.Symbols.num_blocks", false]], "num_chirps (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.num_chirps", false]], "num_clusters (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.num_clusters", false]], "num_data_chirps (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_data_chirps", false]], "num_data_symbols (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_data_symbols", false]], "num_data_symbols (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.num_data_symbols", false]], "num_data_symbols (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_data_symbols", false]], "num_data_symbols (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.num_data_symbols", false]], "num_delay_taps (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.num_delay_taps", false]], "num_device_receptions (drop property)": [[52, "hermespy.core.drop.Drop.num_device_receptions", false]], "num_device_transmissions (drop property)": [[52, "hermespy.core.drop.Drop.num_device_transmissions", false]], "num_devices (scenario property)": [[62, "hermespy.core.scenario.Scenario.num_devices", false]], "num_devices (triggermodel property)": [[225, "hermespy.simulation.simulated_device.TriggerModel.num_devices", false]], "num_digital_receive_ports (device property)": [[41, "hermespy.core.device.Device.num_digital_receive_ports", false]], "num_digital_receive_ports (devicestate property)": [[64, "hermespy.core.state.DeviceState.num_digital_receive_ports", false]], "num_digital_receive_ports (receivestate property)": [[64, "hermespy.core.state.ReceiveState.num_digital_receive_ports", false]], "num_digital_transmit_ports (device property)": [[41, "hermespy.core.device.Device.num_digital_transmit_ports", false]], "num_digital_transmit_ports (devicestate property)": [[64, "hermespy.core.state.DeviceState.num_digital_transmit_ports", false]], "num_digital_transmit_ports (transmitstate property)": [[64, "hermespy.core.state.TransmitState.num_digital_transmit_ports", false]], "num_drops (pipeline property)": [[59, "hermespy.core.pipeline.Pipeline.num_drops", false]], "num_drops (scenario property)": [[62, "hermespy.core.scenario.Scenario.num_drops", false]], "num_emerging_signals (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.num_emerging_signals", false]], "num_errors (rootmeansquareartifact property)": [[160, "hermespy.radar.evaluators.RootMeanSquareArtifact.num_errors", false]], "num_evaluators (hardwareloop property)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.num_evaluators", false]], "num_frames (communicationreception property)": [[108, "hermespy.modem.modem.CommunicationReception.num_frames", false]], "num_frames (communicationtransmission property)": [[110, "hermespy.modem.modem.CommunicationTransmission.num_frames", false]], "num_guard_samples (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_guard_samples", false]], "num_impinging_signals (deviceinput property)": [[42, "hermespy.core.device.DeviceInput.num_impinging_signals", false]], "num_iterations (ldpccoding property)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.num_iterations", false]], "num_iterations (turbocoding property)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding.num_iterations", false]], "num_leaking_signals (simulateddeviceoutput property)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.num_leaking_signals", false]], "num_offset_samples (sampleoffsettrigger property)": [[222, "hermespy.simulation.simulated_device.SampleOffsetTrigger.num_offset_samples", false]], "num_offset_samples (triggerrealization property)": [[226, "hermespy.simulation.simulated_device.TriggerRealization.num_offset_samples", false]], "num_operator_inputs (processeddeviceinput property)": [[47, "hermespy.core.device.ProcessedDeviceInput.num_operator_inputs", false]], "num_operator_receptions (devicereception property)": [[44, "hermespy.core.device.DeviceReception.num_operator_receptions", false]], "num_operator_transmissions (devicetransmission property)": [[45, "hermespy.core.device.DeviceTransmission.num_operator_transmissions", false]], "num_operators (scenario property)": [[62, "hermespy.core.scenario.Scenario.num_operators", false]], "num_pilot_chirps (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_pilot_chirps", false]], "num_points (radarpointcloud property)": [[155, "hermespy.radar.detection.RadarPointCloud.num_points", false]], "num_ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_ports", false]], "num_postamble_symbols (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_postamble_symbols", false]], "num_preamble_symbols (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_preamble_symbols", false]], "num_prepeneded_zeros (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_prepeneded_zeros", false]], "num_quantization_bits (analogdigitalconverter property)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.num_quantization_bits", false]], "num_quantization_levels (analogdigitalconverter property)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.num_quantization_levels", false]], "num_rays (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.num_rays", false]], "num_receive_antenna_ports (device property)": [[41, "hermespy.core.device.Device.num_receive_antenna_ports", false]], "num_receive_antenna_ports (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_receive_antenna_ports", false]], "num_receive_antennas (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.num_receive_antennas", false]], "num_receive_antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_receive_antennas", false]], "num_receive_antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.num_receive_antennas", false]], "num_receive_antennas (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.num_receive_antennas", false]], "num_receive_antennas (device property)": [[41, "hermespy.core.device.Device.num_receive_antennas", false]], "num_receive_focus_points (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.num_receive_focus_points", false]], "num_receive_focus_points (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_receive_focus_points", false]], "num_receive_focus_points (nullsteeringbeamformer property)": [[5, "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer.num_receive_focus_points", false]], "num_receive_focus_points (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.num_receive_focus_points", false]], "num_receive_input_symbols (alamouti property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_receive_input_symbols", false]], "num_receive_input_symbols (dft property)": [[117, "hermespy.modem.precoding.dft.DFT.num_receive_input_symbols", false]], "num_receive_input_symbols (ganesan property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_receive_input_symbols", false]], "num_receive_input_symbols (maximumratiocombining property)": [[118, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.num_receive_input_symbols", false]], "num_receive_input_symbols (receivesymboldecoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder.num_receive_input_symbols", false]], "num_receive_input_symbols (singlecarrier property)": [[119, "hermespy.modem.precoding.single_carrier.SingleCarrier.num_receive_input_symbols", false]], "num_receive_output_streams() (alamouti method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_receive_output_streams", false]], "num_receive_output_streams() (caponbeamformer method)": [[3, "hermespy.beamforming.capon.CaponBeamformer.num_receive_output_streams", false]], "num_receive_output_streams() (conventionalbeamformer method)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_receive_output_streams", false]], "num_receive_output_streams() (dft method)": [[117, "hermespy.modem.precoding.dft.DFT.num_receive_output_streams", false]], "num_receive_output_streams() (ganesan method)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_receive_output_streams", false]], "num_receive_output_streams() (maximumratiocombining method)": [[118, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.num_receive_output_streams", false]], "num_receive_output_streams() (nullsteeringbeamformer method)": [[5, "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer.num_receive_output_streams", false]], "num_receive_output_streams() (receivedecoder method)": [[60, "hermespy.core.precoding.ReceiveDecoder.num_receive_output_streams", false]], "num_receive_output_streams() (receiveprecoding method)": [[60, "hermespy.core.precoding.ReceivePrecoding.num_receive_output_streams", false]], "num_receive_output_streams() (singlecarrier method)": [[119, "hermespy.modem.precoding.single_carrier.SingleCarrier.num_receive_output_streams", false]], "num_receive_output_symbols (alamouti property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_receive_output_symbols", false]], "num_receive_output_symbols (dft property)": [[117, "hermespy.modem.precoding.dft.DFT.num_receive_output_symbols", false]], "num_receive_output_symbols (ganesan property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_receive_output_symbols", false]], "num_receive_output_symbols (maximumratiocombining property)": [[118, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.num_receive_output_symbols", false]], "num_receive_output_symbols (receivesymboldecoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder.num_receive_output_symbols", false]], "num_receive_output_symbols (singlecarrier property)": [[119, "hermespy.modem.precoding.single_carrier.SingleCarrier.num_receive_output_symbols", false]], "num_receive_ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_receive_ports", false]], "num_receive_streams (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.num_receive_streams", false]], "num_receivers (scenario property)": [[62, "hermespy.core.scenario.Scenario.num_receivers", false]], "num_references (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_references", false]], "num_references (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_references", false]], "num_references (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_references", false]], "num_references (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_references", false]], "num_repetitions (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_repetitions", false]], "num_repetitions (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_repetitions", false]], "num_resolvable_paths (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.num_resolvable_paths", false]], "num_sample_points (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.num_sample_points", false]], "num_samples (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.num_samples", false]], "num_samples (gridsection property)": [[57, "hermespy.core.monte_carlo.GridSection.num_samples", false], [139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_samples", false]], "num_samples (guardsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.num_samples", false]], "num_samples (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.num_samples", false]], "num_samples (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_samples", false]], "num_samples (signal property)": [[63, "hermespy.core.signal_model.Signal.num_samples", false]], "num_samples (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.num_samples", false]], "num_samples (simulation property)": [[218, "hermespy.simulation.simulation.Simulation.num_samples", false]], "num_samples (staticoperator property)": [[58, "hermespy.core.operators.StaticOperator.num_samples", false]], "num_samples (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_samples", false]], "num_sinusoids (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.num_sinusoids", false]], "num_streams (signal property)": [[63, "hermespy.core.signal_model.Signal.num_streams", false]], "num_streams (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.num_streams", false]], "num_streams (symbols property)": [[122, "hermespy.modem.symbols.Symbols.num_streams", false]], "num_subcarriers (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_subcarriers", false]], "num_subcarriers (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_subcarriers", false]], "num_subcarriers (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.num_subcarriers", false]], "num_subcarriers (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_subcarriers", false]], "num_subcarriers (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_subcarriers", false]], "num_symbols (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.num_symbols", false]], "num_symbols (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_symbols", false]], "num_symbols (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_symbols", false]], "num_symbols (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_symbols", false]], "num_symbols (symbols property)": [[122, "hermespy.modem.symbols.Symbols.num_symbols", false]], "num_symbols (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_symbols", false]], "num_transmit_antenna_ports (device property)": [[41, "hermespy.core.device.Device.num_transmit_antenna_ports", false]], "num_transmit_antenna_ports (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_transmit_antenna_ports", false]], "num_transmit_antennas (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.num_transmit_antennas", false]], "num_transmit_antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_transmit_antennas", false]], "num_transmit_antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.num_transmit_antennas", false]], "num_transmit_antennas (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.num_transmit_antennas", false]], "num_transmit_antennas (device property)": [[41, "hermespy.core.device.Device.num_transmit_antennas", false]], "num_transmit_focus_points (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_transmit_focus_points", false]], "num_transmit_focus_points (nullsteeringbeamformer property)": [[5, "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer.num_transmit_focus_points", false]], "num_transmit_focus_points (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.num_transmit_focus_points", false]], "num_transmit_input_streams() (transmitprecoding method)": [[60, "hermespy.core.precoding.TransmitPrecoding.num_transmit_input_streams", false]], "num_transmit_input_symbols (alamouti property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_transmit_input_symbols", false]], "num_transmit_input_symbols (dft property)": [[117, "hermespy.modem.precoding.dft.DFT.num_transmit_input_symbols", false]], "num_transmit_input_symbols (ganesan property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_transmit_input_symbols", false]], "num_transmit_input_symbols (transmitsymbolencoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder.num_transmit_input_symbols", false]], "num_transmit_output_symbols (alamouti property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_transmit_output_symbols", false]], "num_transmit_output_symbols (dft property)": [[117, "hermespy.modem.precoding.dft.DFT.num_transmit_output_symbols", false]], "num_transmit_output_symbols (ganesan property)": [[120, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_transmit_output_symbols", false]], "num_transmit_output_symbols (transmitsymbolencoder property)": [[121, "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder.num_transmit_output_symbols", false]], "num_transmit_ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.num_transmit_ports", false]], "num_transmit_streams (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.num_transmit_streams", false]], "num_transmit_streams (statedsymbols property)": [[122, "hermespy.modem.symbols.StatedSymbols.num_transmit_streams", false]], "num_transmitters (scenario property)": [[62, "hermespy.core.scenario.Scenario.num_transmitters", false]], "num_words (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_words", false]], "num_words (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_words", false]], "num_words (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_words", false]], "ocdmwaveform (class in hermespy.modem.waveforms.orthogonal.ocdm)": [[144, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform", false]], "ofdmradar (class in hermespy.jcas.ofdm_radar)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar", false]], "ofdmwaveform (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform", false]], "office_type (indooroffice property)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOffice.office_type", false]], "officetype (class in hermespy.channel.cdl.indoor_office)": [[11, "hermespy.channel.cdl.indoor_office.OfficeType", false]], "offset (consistentvariable property)": [[19, "hermespy.channel.consistent.ConsistentVariable.offset", false]], "offset (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.offset", false]], "offset (timeoffsettrigger property)": [[224, "hermespy.simulation.simulated_device.TimeOffsetTrigger.offset", false]], "open (officetype attribute)": [[11, "hermespy.channel.cdl.indoor_office.OfficeType.OPEN", false]], "operationresult (class in hermespy.core.device)": [[46, "hermespy.core.device.OperationResult", false]], "operator_inputs (drop property)": [[52, "hermespy.core.drop.Drop.operator_inputs", false]], "operator_inputs (processeddeviceinput property)": [[47, "hermespy.core.device.ProcessedDeviceInput.operator_inputs", false]], "operator_receptions (devicereception property)": [[44, "hermespy.core.device.DeviceReception.operator_receptions", false]], "operator_separation (processedsimulateddeviceinput property)": [[212, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.operator_separation", false]], "operator_separation (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.operator_separation", false]], "operator_separation (simulateddeviceoutput property)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.operator_separation", false]], "operator_transmissions (devicetransmission property)": [[45, "hermespy.core.device.DeviceTransmission.operator_transmissions", false]], "operators (scenario property)": [[62, "hermespy.core.scenario.Scenario.operators", false]], "orientation (transformable property)": [[65, "hermespy.core.transformation.Transformable.orientation", false]], "orthogonalwaveform (class in hermespy.modem.waveforms.orthogonal.waveform)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform", false]], "oscillatorphasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[210, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise", false]], "ot (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.OT", false]], "otfswaveform (class in hermespy.modem.waveforms.orthogonal.otfs)": [[149, "hermespy.modem.waveforms.orthogonal.otfs.OTFSWaveform", false]], "output_callbacks (device property)": [[41, "hermespy.core.device.Device.output_callbacks", false]], "oversampling_factor (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.oversampling_factor", false]], "oxygen_absorption (clusterdelaylinebase property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.oxygen_absorption", false]], "patchantenna (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.PatchAntenna", false]], "path_delays (quadrigachannelsample property)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.path_delays", false]], "path_gains (quadrigachannelsample property)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.path_gains", false]], "paths (radarchannelsample property)": [[34, "hermespy.channel.radar.radar.RadarChannelSample.paths", false]], "paths (scattervisualization property)": [[66, "hermespy.core.visualize.ScatterVisualization.paths", false]], "pattern (symbolsection attribute)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.pattern", false]], "peak_detection (thresholddetector property)": [[156, "hermespy.radar.detection.ThresholdDetector.peak_detection", false]], "perfectcoupling (class in hermespy.simulation.coupling.perfect)": [[181, "hermespy.simulation.coupling.perfect.PerfectCoupling", false]], "perfectisolation (class in hermespy.simulation.isolation.perfect)": [[184, "hermespy.simulation.isolation.perfect.PerfectIsolation", false]], "performance_time (montecarloresult property)": [[57, "hermespy.core.monte_carlo.MonteCarloResult.performance_time", false]], "phase (custompoweramplifier property)": [[204, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.phase", false]], "phase_alpha (salehpoweramplifier attribute)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.phase_alpha", false]], "phase_beta (salehpoweramplifier attribute)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.phase_beta", false]], "phase_noise (rfchain property)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.phase_noise", false]], "phase_offset (rfchain property)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.phase_offset", false]], "phasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[208, "hermespy.simulation.rf_chain.phase_noise.PhaseNoise", false]], "phases (dualconsistentrealization property)": [[19, "hermespy.channel.consistent.DualConsistentRealization.phases", false]], "physicaldevice (class in hermespy.hardware_loop.physical_device)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice", false]], "physicaldevicedummy (class in hermespy.hardware_loop.physical_device_dummy)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy", false]], "physicalradartarget (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.PhysicalRadarTarget", false]], "physicalscenario (class in hermespy.hardware_loop.scenario)": [[89, "hermespy.hardware_loop.scenario.PhysicalScenario", false]], "physicalscenariodummy (class in hermespy.hardware_loop.physical_device_dummy)": [[88, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy", false]], "pick() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.pick", false]], "pick() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.pick", false]], "pick() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pick", false]], "pick() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pick", false]], "pick_samples() (gridsection method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.pick_samples", false]], "pick_samples() (guardsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.pick_samples", false]], "pick_samples() (pilotsection method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.pick_samples", false]], "pick_samples() (symbolsection method)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.pick_samples", false]], "pick_symbols() (gridsection method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.pick_symbols", false]], "pilot_elements (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.pilot_elements", false]], "pilot_rate (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pilot_rate", false]], "pilot_section (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pilot_section", false]], "pilot_signal (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.pilot_signal", false]], "pilot_signal (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pilot_signal", false]], "pilot_signal (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pilot_signal", false]], "pilot_signal (pilotcommunicationwaveform property)": [[123, "hermespy.modem.waveform.PilotCommunicationWaveform.pilot_signal", false]], "pilot_symbol_sequence (configurablepilotwaveform attribute)": [[123, "hermespy.modem.waveform.ConfigurablePilotWaveform.pilot_symbol_sequence", false]], "pilot_symbols() (configurablepilotwaveform method)": [[123, "hermespy.modem.waveform.ConfigurablePilotWaveform.pilot_symbols", false]], "pilotcommunicationwaveform (class in hermespy.modem.waveform)": [[123, "hermespy.modem.waveform.PilotCommunicationWaveform", false]], "pilotsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection", false]], "ping() (fmcw method)": [[161, "hermespy.radar.fmcw.FMCW.ping", false]], "ping() (radarwaveform method)": [[165, "hermespy.radar.radar.RadarWaveform.ping", false]], "pipeline (class in hermespy.core.pipeline)": [[59, "hermespy.core.pipeline.Pipeline", false]], "place() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.place", false]], "place() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.place", false]], "place() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.place", false]], "place() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.place", false]], "place_samples() (gridsection method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.place_samples", false]], "place_samples() (guardsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.place_samples", false]], "place_samples() (pilotsection method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.place_samples", false]], "place_samples() (symbolsection method)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.place_samples", false]], "place_symbols() (gridsection method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.place_symbols", false]], "place_symbols() (pilotsection method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.place_symbols", false]], "playback_channels (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.playback_channels", false]], "playback_device (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.playback_device", false]], "plot (signal property)": [[63, "hermespy.core.signal_model.Signal.plot", false]], "plot() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.plot", false]], "plot() (montecarloresult method)": [[57, "hermespy.core.monte_carlo.MonteCarloResult.plot", false]], "plot() (selectiveleakagecalibration method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.plot", false]], "plot_angles (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_angles", false]], "plot_angles (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.plot_angles", false]], "plot_characteristics() (poweramplifier method)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.plot_characteristics", false]], "plot_constellation (symbols property)": [[122, "hermespy.modem.symbols.Symbols.plot_constellation", false]], "plot_filter() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.plot_filter", false]], "plot_filter_correlation() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.plot_filter_correlation", false]], "plot_gain() (antenna method)": [[37, "hermespy.core.antennas.Antenna.plot_gain", false]], "plot_grid (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.plot_grid", false]], "plot_information (hardwareloop attribute)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.plot_information", false]], "plot_pattern() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.plot_pattern", false]], "plot_polarization() (antenna method)": [[37, "hermespy.core.antennas.Antenna.plot_polarization", false]], "plot_power_delay (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_power_delay", false]], "plot_power_delay() (multipathfadingsample method)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.plot_power_delay", false]], "plot_quantizer() (analogdigitalconverter method)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.plot_quantizer", false]], "plot_range (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.plot_range", false]], "plot_range_velocity (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.plot_range_velocity", false]], "plot_rays() (clusterdelaylinesample method)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_rays", false]], "plot_results (simulation attribute)": [[218, "hermespy.simulation.simulation.Simulation.plot_results", false]], "plot_scale (evaluator property)": [[57, "hermespy.core.monte_carlo.Evaluator.plot_scale", false]], "plot_scale (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.plot_scale", false]], "plot_surface (scalarevaluationresult attribute)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult.plot_surface", false]], "plot_topology() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.plot_topology", false]], "plotvisualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.PlotVisualization", false]], "pointdetection (class in hermespy.radar.detection)": [[153, "hermespy.radar.detection.PointDetection", false]], "points (radarpointcloud property)": [[155, "hermespy.radar.detection.RadarPointCloud.points", false]], "polarization_transformations (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.polarization_transformations", false]], "polarsccoding (class in hermespy.fec.aff3ct.polar)": [[73, "hermespy.fec.aff3ct.polar.PolarSCCoding", false]], "polarsclcoding (class in hermespy.fec.aff3ct.polar)": [[73, "hermespy.fec.aff3ct.polar.PolarSCLCoding", false]], "pop_precoder() (precoding method)": [[60, "hermespy.core.precoding.Precoding.pop_precoder", false]], "port (antenna property)": [[37, "hermespy.core.antennas.Antenna.port", false]], "port (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.port", false]], "ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.ports", false]], "ports (antennaarraystate property)": [[37, "hermespy.core.antennas.AntennaArrayState.ports", false]], "ports (customantennaarray property)": [[37, "hermespy.core.antennas.CustomAntennaArray.ports", false]], "ports (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.ports", false]], "pose (state property)": [[64, "hermespy.core.state.State.pose", false]], "pose (statictrajectory property)": [[167, "hermespy.simulation.animation.StaticTrajectory.pose", false]], "pose (trajectorysample property)": [[167, "hermespy.simulation.animation.TrajectorySample.pose", false]], "pose (transformable property)": [[65, "hermespy.core.transformation.Transformable.pose", false]], "position (devicestate property)": [[64, "hermespy.core.state.DeviceState.position", false]], "position (pointdetection property)": [[153, "hermespy.radar.detection.PointDetection.position", false]], "position (radartargetpath property)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.position", false]], "position (state property)": [[64, "hermespy.core.state.State.position", false]], "position (transformable property)": [[65, "hermespy.core.transformation.Transformable.position", false]], "post_drop_hooks (hardwareloop property)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.post_drop_hooks", false]], "power (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.power", false]], "power (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.power", false]], "power (dbconversiontype attribute)": [[229, "hermespy.tools.math.DbConversionType.POWER", false]], "power (densesignal property)": [[63, "hermespy.core.signal_model.DenseSignal.power", false]], "power (device property)": [[41, "hermespy.core.device.Device.power", false]], "power (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.power", false]], "power (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.power", false]], "power (matchedfilterjcas property)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas.power", false]], "power (n0 property)": [[190, "hermespy.simulation.noise.level.N0.power", false]], "power (noiserealization property)": [[189, "hermespy.simulation.noise.model.NoiseRealization.power", false]], "power (ofdmradar property)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar.power", false]], "power (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.power", false]], "power (pointdetection property)": [[153, "hermespy.radar.detection.PointDetection.power", false]], "power (radar property)": [[162, "hermespy.radar.radar.Radar.power", false]], "power (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.power", false]], "power (receiver property)": [[48, "hermespy.core.device.Receiver.power", false]], "power (receivingmodem property)": [[113, "hermespy.modem.modem.ReceivingModem.power", false]], "power (signal property)": [[63, "hermespy.core.signal_model.Signal.power", false]], "power (signalblock property)": [[63, "hermespy.core.signal_model.SignalBlock.power", false]], "power (signalreceiver property)": [[58, "hermespy.core.operators.SignalReceiver.power", false]], "power (signaltransmitter property)": [[58, "hermespy.core.operators.SignalTransmitter.power", false]], "power (silenttransmitter property)": [[58, "hermespy.core.operators.SilentTransmitter.power", false]], "power (transmitter property)": [[51, "hermespy.core.device.Transmitter.power", false]], "power (transmittingmodem property)": [[115, "hermespy.modem.modem.TransmittingModem.power", false]], "power_amplifier (rfchain property)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.power_amplifier", false]], "power_profile (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.power_profile", false]], "power_profile (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.power_profile", false]], "poweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier", false]], "pre_drop_hooks (hardwareloop property)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.pre_drop_hooks", false]], "precoder (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.Precoder", false]], "precodertype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.PrecoderType", false]], "precoding (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.Precoding", false]], "precoding (precoder property)": [[60, "hermespy.core.precoding.Precoder.precoding", false]], "precodingtype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.PrecodingType", false]], "predict_leakage() (selectiveleakagecalibration method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.predict_leakage", false]], "prefix_ratio (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.prefix_ratio", false]], "prefix_type (gridresource attribute)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.prefix_type", false]], "prefixtype (class in hermespy.modem.waveforms.orthogonal.waveform)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType", false]], "prepare_plot() (hardwareloopplot method)": [[85, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.prepare_plot", false]], "print() (evaluationresult method)": [[57, "hermespy.core.monte_carlo.EvaluationResult.print", false]], "print() (montecarloresult method)": [[57, "hermespy.core.monte_carlo.MonteCarloResult.print", false]], "probe() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.probe", false]], "probe_focus_points (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.probe_focus_points", false]], "process_from_realization() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.process_from_realization", false]], "process_input() (device method)": [[41, "hermespy.core.device.Device.process_input", false]], "process_input() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.process_input", false]], "process_input() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.process_input", false]], "process_input() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.process_input", false]], "process_inputs() (scenario method)": [[62, "hermespy.core.scenario.Scenario.process_inputs", false]], "process_inputs() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.process_inputs", false]], "processeddeviceinput (class in hermespy.core.device)": [[47, "hermespy.core.device.ProcessedDeviceInput", false]], "processedsimulateddeviceinput (class in hermespy.simulation.simulated_device)": [[212, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput", false]], "propagate() (channel method)": [[16, "hermespy.channel.channel.Channel.propagate", false]], "propagate() (channelsample method)": [[18, "hermespy.channel.channel.ChannelSample.propagate", false]], "propagate() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.propagate", false]], "propagate() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.propagate", false]], "propagation_delay() (radarinterferencepath method)": [[34, "hermespy.channel.radar.radar.RadarInterferencePath.propagation_delay", false]], "propagation_delay() (radarpath method)": [[34, "hermespy.channel.radar.radar.RadarPath.propagation_delay", false]], "propagation_delay() (radartargetpath method)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.propagation_delay", false]], "propagation_response() (radarinterferencepath method)": [[34, "hermespy.channel.radar.radar.RadarInterferencePath.propagation_response", false]], "propagation_response() (radarpath method)": [[34, "hermespy.channel.radar.radar.RadarPath.propagation_response", false]], "propagation_response() (radartargetpath method)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.propagation_response", false]], "pseudorandomgenerator (class in hermespy.fec.scrambler)": [[77, "hermespy.fec.scrambler.PseudoRandomGenerator", false]], "pulse_rep_interval (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.pulse_rep_interval", false]], "quadmeshvisualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.QuadMeshVisualization", false]], "quadrigachannel (class in hermespy.channel.quadriga.quadriga)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannel", false]], "quadrigachannelrealization (class in hermespy.channel.quadriga.quadriga)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization", false]], "quadrigachannelsample (class in hermespy.channel.quadriga.quadriga)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample", false]], "quantizer_type (analogdigitalconverter property)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.quantizer_type", false]], "quantizertype (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType", false]], "radar (class in hermespy.radar.radar)": [[162, "hermespy.radar.radar.Radar", false]], "radar (detectionprobevaluator property)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator.radar", false]], "radar (radarrangeplot property)": [[92, "hermespy.hardware_loop.visualizers.RadarRangePlot.radar", false]], "radar_channel (radarevaluator property)": [[158, "hermespy.radar.evaluators.RadarEvaluator.radar_channel", false]], "radar_cross_section (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.radar_cross_section", false]], "radarbase (class in hermespy.radar.radar)": [[162, "hermespy.radar.radar.RadarBase", false]], "radarchannelbase (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarChannelBase", false]], "radarchannelrealization (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarChannelRealization", false]], "radarchannelsample (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarChannelSample", false]], "radarcrosssectionmodel (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.RadarCrossSectionModel", false]], "radarcube (class in hermespy.radar.cube)": [[151, "hermespy.radar.cube.RadarCube", false]], "radardetector (class in hermespy.radar.detection)": [[154, "hermespy.radar.detection.RadarDetector", false]], "radarevaluator (class in hermespy.radar.evaluators)": [[158, "hermespy.radar.evaluators.RadarEvaluator", false]], "radarinterferencepath (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarInterferencePath", false]], "radarpath (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarPath", false]], "radarpointcloud (class in hermespy.radar.detection)": [[155, "hermespy.radar.detection.RadarPointCloud", false]], "radarrangeplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.RadarRangePlot", false]], "radarreception (class in hermespy.radar.radar)": [[163, "hermespy.radar.radar.RadarReception", false]], "radartarget (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.RadarTarget", false]], "radartargetpath (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RadarTargetPath", false]], "radartransmission (class in hermespy.radar.radar)": [[164, "hermespy.radar.radar.RadarTransmission", false]], "radarwaveform (class in hermespy.radar.radar)": [[165, "hermespy.radar.radar.RadarWaveform", false]], "raisedcosinewaveform (class in hermespy.modem.waveform_single_carrier)": [[133, "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform", false]], "randombitssource (class in hermespy.modem.bits_source)": [[98, "hermespy.modem.bits_source.RandomBitsSource", false]], "randomdelaychannel (class in hermespy.channel.delay.random)": [[21, "hermespy.channel.delay.random.RandomDelayChannel", false]], "randomdelaychannelrealization (class in hermespy.channel.delay.random)": [[21, "hermespy.channel.delay.random.RandomDelayChannelRealization", false]], "randomnode (class in hermespy.core.random_node)": [[61, "hermespy.core.random_node.RandomNode", false]], "randomrealization (class in hermespy.core.random_node)": [[61, "hermespy.core.random_node.RandomRealization", false]], "randomtrigger (class in hermespy.simulation.simulated_device)": [[221, "hermespy.simulation.simulated_device.RandomTrigger", false]], "range_bins (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.range_bins", false]], "range_bins (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.range_bins", false]], "range_resolution (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.range_resolution", false]], "range_resolution (matchedfilterjcas property)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas.range_resolution", false]], "range_resolution (ofdmradar property)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar.range_resolution", false]], "range_resolution (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.range_resolution", false]], "rapppoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[206, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier", false]], "rate (blockinterleaver property)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.rate", false]], "rate (encoder property)": [[70, "hermespy.fec.coding.Encoder.rate", false]], "rate (encodermanager property)": [[70, "hermespy.fec.coding.EncoderManager.rate", false]], "rate (ldpccoding property)": [[72, "hermespy.fec.aff3ct.ldpc.LDPCCoding.rate", false]], "raw (symbols property)": [[122, "hermespy.modem.symbols.Symbols.raw", false]], "rayleigh_factor (cdl property)": [[8, "hermespy.channel.cdl.cdl.CDL.rayleigh_factor", false]], "rcrt (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RCRT", false]], "rcst (class in hermespy.channel.radar.radar)": [[34, "hermespy.channel.radar.radar.RCST", false]], "realization (channel property)": [[16, "hermespy.channel.channel.Channel.realization", false]], "realize() (awgn method)": [[192, "hermespy.simulation.noise.model.AWGN.realize", false]], "realize() (channel method)": [[16, "hermespy.channel.channel.Channel.realize", false]], "realize() (consistentgenerator method)": [[19, "hermespy.channel.consistent.ConsistentGenerator.realize", false]], "realize() (noisemodel method)": [[189, "hermespy.simulation.noise.model.NoiseModel.realize", false]], "realize() (randomtrigger method)": [[221, "hermespy.simulation.simulated_device.RandomTrigger.realize", false]], "realize() (sampleoffsettrigger method)": [[222, "hermespy.simulation.simulated_device.SampleOffsetTrigger.realize", false]], "realize() (statictrigger method)": [[223, "hermespy.simulation.simulated_device.StaticTrigger.realize", false]], "realize() (timeoffsettrigger method)": [[224, "hermespy.simulation.simulated_device.TimeOffsetTrigger.realize", false]], "realize() (triggermodel method)": [[225, "hermespy.simulation.simulated_device.TriggerModel.realize", false]], "realize_channels() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.realize_channels", false]], "realize_reception() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.realize_reception", false]], "realize_triggers() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.realize_triggers", false]], "recall() (devicereception class method)": [[44, "hermespy.core.device.DeviceReception.Recall", false]], "recall() (devicetransmission class method)": [[45, "hermespy.core.device.DeviceTransmission.Recall", false]], "recall_realization() (cdl method)": [[8, "hermespy.channel.cdl.cdl.CDL.recall_realization", false]], "recall_realization() (channel method)": [[16, "hermespy.channel.channel.Channel.recall_realization", false]], "recall_realization() (clusterdelaylinebase method)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.recall_realization", false]], "recall_realization() (idealchannel method)": [[31, "hermespy.channel.ideal.IdealChannel.recall_realization", false]], "recall_realization() (multipathfadingchannel method)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.recall_realization", false]], "recall_realization() (multitargetradarchannel method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.recall_realization", false]], "recall_realization() (quadrigachannel method)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannel.recall_realization", false]], "recall_realization() (randomdelaychannel method)": [[21, "hermespy.channel.delay.random.RandomDelayChannel.recall_realization", false]], "recall_realization() (singletargetradarchannel method)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.recall_realization", false]], "recall_realization() (spatialdelaychannel method)": [[22, "hermespy.channel.delay.spatial.SpatialDelayChannel.recall_realization", false]], "recall_reception() (device method)": [[41, "hermespy.core.device.Device.recall_reception", false]], "recall_transmission() (device method)": [[41, "hermespy.core.device.Device.recall_transmission", false]], "receive() (coupling method)": [[179, "hermespy.simulation.coupling.coupling.Coupling.receive", false]], "receive() (device method)": [[41, "hermespy.core.device.Device.receive", false]], "receive() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.receive", false]], "receive() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.receive", false]], "receive() (receiver method)": [[48, "hermespy.core.device.Receiver.receive", false]], "receive() (rfchain method)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.receive", false]], "receive() (simulatedantenna method)": [[169, "hermespy.simulation.antennas.SimulatedAntenna.receive", false], [173, "hermespy.simulation.antennas.SimulatedAntenna.receive", false]], "receive() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.receive", false]], "receive() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.receive", false]], "receive_antennas (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.receive_antennas", false]], "receive_antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.receive_antennas", false]], "receive_antennas (antennaarraystate property)": [[37, "hermespy.core.antennas.AntennaArrayState.receive_antennas", false]], "receive_antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.receive_antennas", false]], "receive_beamformer (radarbase property)": [[162, "hermespy.radar.radar.RadarBase.receive_beamformer", false]], "receive_coding (device property)": [[41, "hermespy.core.device.Device.receive_coding", false]], "receive_correlation (impedancecoupling property)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.receive_correlation", false]], "receive_devices() (physicalscenario method)": [[89, "hermespy.hardware_loop.scenario.PhysicalScenario.receive_devices", false]], "receive_devices() (physicalscenariodummy method)": [[88, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.receive_devices", false]], "receive_devices() (scenario method)": [[62, "hermespy.core.scenario.Scenario.receive_devices", false]], "receive_devices() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.receive_devices", false]], "receive_focus (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.receive_focus", false]], "receive_impedance (impedancecoupling property)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.receive_impedance", false]], "receive_operators() (device method)": [[41, "hermespy.core.device.Device.receive_operators", false]], "receive_operators() (scenario method)": [[62, "hermespy.core.scenario.Scenario.receive_operators", false]], "receive_ports (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.receive_ports", false]], "receive_ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.receive_ports", false]], "receive_signal_coding (receivingmodembase property)": [[113, "hermespy.modem.modem.ReceivingModemBase.receive_signal_coding", false]], "receive_state() (devicestate method)": [[64, "hermespy.core.state.DeviceState.receive_state", false]], "receive_streams (channelstatedimension attribute)": [[38, "hermespy.core.channel.ChannelStateDimension.RECEIVE_STREAMS", false]], "receive_symbol_coding (receivingmodembase property)": [[113, "hermespy.modem.modem.ReceivingModemBase.receive_symbol_coding", false]], "receive_topology (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.receive_topology", false]], "receive_transmission (physicaldevicedummy property)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.receive_transmission", false]], "receivebeamformer (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer", false]], "received_streams() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.received_streams", false]], "receivedconstellationplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.ReceivedConstellationPlot", false]], "receivedecoder (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceiveDecoder", false]], "receivedecodertype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceiveDecoderType", false]], "receiveprecoding (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceivePrecoding", false]], "receiveprecodingtype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceivePrecodingType", false]], "receiver (class in hermespy.core.device)": [[48, "hermespy.core.device.Receiver", false]], "receiver_antennas (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.receiver_antennas", false]], "receiver_pose (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.receiver_pose", false]], "receiver_state (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.receiver_state", false]], "receiver_velocity (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.receiver_velocity", false]], "receiveroperatingcharacteristic (class in hermespy.radar.evaluators)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic", false]], "receivers (device attribute)": [[41, "hermespy.core.device.Device.receivers", false]], "receivers (scenario property)": [[62, "hermespy.core.scenario.Scenario.receivers", false]], "receivesignalcoding (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceiveSignalCoding", false]], "receivestate (class in hermespy.core.state)": [[64, "hermespy.core.state.ReceiveState", false]], "receivestreamdecoder (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.ReceiveStreamDecoder", false]], "receivesymboldecoder (class in hermespy.modem.precoding.symbol_precoding)": [[121, "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder", false]], "receiving (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.receiving", false]], "receiving_device (radarevaluator property)": [[158, "hermespy.radar.evaluators.RadarEvaluator.receiving_device", false]], "receiving_modem (communicationevaluator property)": [[100, "hermespy.modem.evaluators.CommunicationEvaluator.receiving_modem", false]], "receiving_radar (radarevaluator property)": [[158, "hermespy.radar.evaluators.RadarEvaluator.receiving_radar", false]], "receivingmodem (class in hermespy.modem.modem)": [[113, "hermespy.modem.modem.ReceivingModem", false]], "receivingmodembase (class in hermespy.modem.modem)": [[113, "hermespy.modem.modem.ReceivingModemBase", false]], "reception (class in hermespy.core.device)": [[49, "hermespy.core.device.Reception", false]], "reciprocal() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.reciprocal", false]], "reciprocal() (clusterdelaylinesample method)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.reciprocal", false]], "reciprocal_sample() (channelrealization method)": [[17, "hermespy.channel.channel.ChannelRealization.reciprocal_sample", false]], "record (scenariomode attribute)": [[62, "hermespy.core.scenario.ScenarioMode.RECORD", false]], "record() (scenario method)": [[62, "hermespy.core.scenario.Scenario.record", false]], "record_channels (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.record_channels", false]], "record_device (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.record_device", false]], "record_drops (hardwareloop attribute)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.record_drops", false]], "rectangularwaveform (class in hermespy.modem.waveform_single_carrier)": [[134, "hermespy.modem.waveform_single_carrier.RectangularWaveform", false]], "reedsolomoncoding (class in hermespy.fec.aff3ct.rs)": [[75, "hermespy.fec.aff3ct.rs.ReedSolomonCoding", false]], "reference (coordinatefocus property)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.reference", false]], "reference (elementtype attribute)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.REFERENCE", false]], "reference (receiver property)": [[48, "hermespy.core.device.Receiver.reference", false]], "reference (snr property)": [[191, "hermespy.simulation.noise.level.SNR.reference", false]], "references_per_frame (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.references_per_frame", false]], "reflection_phase (radartargetpath property)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.reflection_phase", false]], "register() (in module hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.register", false]], "registered_classes (factory property)": [[54, "hermespy.core.factory.Factory.registered_classes", false]], "registered_tags (factory property)": [[54, "hermespy.core.factory.Factory.registered_tags", false]], "registereddimension (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.RegisteredDimension", false]], "relative_bandwidth (rectangularwaveform property)": [[134, "hermespy.modem.waveform_single_carrier.RectangularWaveform.relative_bandwidth", false]], "relative_bandwidth (rolledoffsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.relative_bandwidth", false]], "relative_doppler_bins (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.relative_doppler_bins", false]], "relative_doppler_bins (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.relative_doppler_bins", false]], "relative_doppler_resolution (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.relative_doppler_resolution", false]], "relative_doppler_resolution (ofdmradar property)": [[96, "hermespy.jcas.ofdm_radar.OFDMRadar.relative_doppler_resolution", false]], "relative_doppler_resolution (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.relative_doppler_resolution", false]], "relative_velocity() (radarinterferencepath method)": [[34, "hermespy.channel.radar.radar.RadarInterferencePath.relative_velocity", false]], "relative_velocity() (radarpath method)": [[34, "hermespy.channel.radar.radar.RadarPath.relative_velocity", false]], "relative_velocity() (radartargetpath method)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.relative_velocity", false]], "remove() (hook method)": [[55, "hermespy.core.hooks.Hook.remove", false]], "remove_antenna() (antennaport method)": [[37, "hermespy.core.antennas.AntennaPort.remove_antenna", false]], "remove_device() (triggermodel method)": [[225, "hermespy.simulation.simulated_device.TriggerModel.remove_device", false]], "remove_dimension() (montecarlo method)": [[57, "hermespy.core.monte_carlo.MonteCarlo.remove_dimension", false]], "remove_hook() (hookable method)": [[55, "hermespy.core.hooks.Hookable.remove_hook", false]], "remove_leakage() (selectiveleakagecalibration method)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.remove_leakage", false]], "remove_link() (transformablelink method)": [[65, "hermespy.core.transformation.TransformableLink.remove_link", false]], "remove_port() (customantennaarray method)": [[37, "hermespy.core.antennas.CustomAntennaArray.remove_port", false]], "remove_port() (simulatedcustomarray method)": [[172, "hermespy.simulation.antennas.SimulatedCustomArray.remove_port", false]], "remove_sample_hook() (channel method)": [[16, "hermespy.channel.channel.Channel.remove_sample_hook", false]], "repeat_pilot_symbol_sequence (configurablepilotwaveform attribute)": [[123, "hermespy.modem.waveform.ConfigurablePilotWaveform.repeat_pilot_symbol_sequence", false]], "repetitionencoder (class in hermespy.fec.repetition_encoder)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder", false]], "repetitions (gridelement attribute)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridElement.repetitions", false]], "repetitions (gridresource property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.repetitions", false]], "repetitions (repetitionencoder property)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.repetitions", false]], "replay (scenariomode attribute)": [[62, "hermespy.core.scenario.ScenarioMode.REPLAY", false]], "replay() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.replay", false]], "replay() (scenario class method)": [[62, "hermespy.core.scenario.Scenario.Replay", false]], "replay() (scenario method)": [[62, "hermespy.core.scenario.Scenario.replay", false]], "replayscenario (class in hermespy.core.scenario)": [[62, "hermespy.core.scenario.ReplayScenario", false]], "required_num_data_bits() (encodermanager method)": [[70, "hermespy.fec.coding.EncoderManager.required_num_data_bits", false]], "resample() (signal method)": [[63, "hermespy.core.signal_model.Signal.resample", false]], "resample() (signalblock method)": [[63, "hermespy.core.signal_model.SignalBlock.resample", false]], "rescale_quantization (gaincontrolbase property)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.rescale_quantization", false]], "reset() (pseudorandomgenerator method)": [[77, "hermespy.fec.scrambler.PseudoRandomGenerator.reset", false]], "resource_mask (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.resource_mask", false]], "resource_mask (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.resource_mask", false]], "resource_mask (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.resource_mask", false]], "resource_mask (symbolsection property)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.resource_mask", false]], "results_dir (executable property)": [[53, "hermespy.core.executable.Executable.results_dir", false]], "rf_chain (simulatedantennaport property)": [[171, "hermespy.simulation.antennas.SimulatedAntennaPort.rf_chain", false]], "rf_chain (simulateddevice attribute)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.rf_chain", false]], "rf_chain_modified() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.rf_chain_modified", false]], "rfchain (class in hermespy.simulation.rf_chain.rf_chain)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain", false]], "rice_factor (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.rice_factor", false]], "rice_factors (multipathfadingchannel property)": [[27, "hermespy.channel.fading.fading.MultipathFadingChannel.rice_factors", false]], "rms_amplitude (gaincontroltype attribute)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.RMS_AMPLITUDE", false]], "rms_delay (cdl property)": [[8, "hermespy.channel.cdl.cdl.CDL.rms_delay", false]], "rms_delay (exponential property)": [[24, "hermespy.channel.fading.exponential.Exponential.rms_delay", false]], "rms_delay (tdl property)": [[30, "hermespy.channel.fading.tdl.TDL.rms_delay", false]], "rms_value() (in module hermespy.tools.math)": [[229, "hermespy.tools.math.rms_value", false]], "rocartifact (class in hermespy.radar.evaluators)": [[159, "hermespy.radar.evaluators.RocArtifact", false]], "rocevaluation (class in hermespy.radar.evaluators)": [[159, "hermespy.radar.evaluators.RocEvaluation", false]], "rocevaluationresult (class in hermespy.radar.evaluators)": [[159, "hermespy.radar.evaluators.RocEvaluationResult", false]], "roll_off (rolledoffsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.roll_off", false]], "rolledoffsinglecarrierwaveform (class in hermespy.modem.waveform_single_carrier)": [[131, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform", false]], "rootmeansquareartifact (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RootMeanSquareArtifact", false]], "rootmeansquareerror (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RootMeanSquareError", false]], "rootmeansquareerrorresult (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RootMeanSquareErrorResult", false]], "rootmeansquareevaluation (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RootMeanSquareEvaluation", false]], "rootraisedcosinewaveform (class in hermespy.modem.waveform_single_carrier)": [[135, "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform", false]], "rotate_direction() (transformation method)": [[65, "hermespy.core.transformation.Transformation.rotate_direction", false]], "rotation_quaternion (transformation property)": [[65, "hermespy.core.transformation.Transformation.rotation_quaternion", false]], "rotation_rpy (transformation property)": [[65, "hermespy.core.transformation.Transformation.rotation_rpy", false]], "rsccoding (class in hermespy.fec.aff3ct.rsc)": [[76, "hermespy.fec.aff3ct.rsc.RSCCoding", false]], "run() (executable method)": [[53, "hermespy.core.executable.Executable.run", false]], "run() (hardwareloop method)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.run", false]], "run() (montecarloactor method)": [[57, "hermespy.core.monte_carlo.MonteCarloActor.run", false]], "run() (simulation method)": [[218, "hermespy.simulation.simulation.Simulation.run", false]], "runtime_env (montecarlo attribute)": [[57, "hermespy.core.monte_carlo.MonteCarlo.runtime_env", false]], "rural (cost259type attribute)": [[23, "hermespy.channel.fading.cost259.Cost259Type.RURAL", false]], "ruralmacrocells (class in hermespy.channel.cdl.rural_macrocells)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells", false]], "ruralmacrocellsrealization (class in hermespy.channel.cdl.rural_macrocells)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization", false]], "rx (antennamode attribute)": [[37, "hermespy.core.antennas.AntennaMode.RX", false]], "rx_gain (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.rx_gain", false]], "salehpoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[207, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier", false]], "sample() (channelrealization method)": [[17, "hermespy.channel.channel.ChannelRealization.sample", false]], "sample() (consistentboolean method)": [[19, "hermespy.channel.consistent.ConsistentBoolean.sample", false]], "sample() (consistentgaussian method)": [[19, "hermespy.channel.consistent.ConsistentGaussian.sample", false]], "sample() (consistentrealization method)": [[19, "hermespy.channel.consistent.ConsistentRealization.sample", false]], "sample() (consistentuniform method)": [[19, "hermespy.channel.consistent.ConsistentUniform.sample", false]], "sample() (consistentvariable method)": [[19, "hermespy.channel.consistent.ConsistentVariable.sample", false]], "sample() (dualconsistentrealization method)": [[19, "hermespy.channel.consistent.DualConsistentRealization.sample", false]], "sample() (staticconsistentrealization method)": [[19, "hermespy.channel.consistent.StaticConsistentRealization.sample", false]], "sample() (statictrajectory method)": [[167, "hermespy.simulation.animation.StaticTrajectory.sample", false]], "sample() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.sample", false]], "sample_covariance() (antennacorrelation method)": [[26, "hermespy.channel.fading.fading.AntennaCorrelation.sample_covariance", false]], "sample_covariance() (customantennacorrelation method)": [[26, "hermespy.channel.fading.fading.CustomAntennaCorrelation.sample_covariance", false]], "sample_cross_section() (physicalradartarget method)": [[33, "hermespy.channel.radar.multi.PhysicalRadarTarget.sample_cross_section", false]], "sample_cross_section() (radartarget method)": [[33, "hermespy.channel.radar.multi.RadarTarget.sample_cross_section", false]], "sample_cross_section() (virtualradartarget method)": [[33, "hermespy.channel.radar.multi.VirtualRadarTarget.sample_cross_section", false]], "sample_hooks (channel property)": [[16, "hermespy.channel.channel.Channel.sample_hooks", false]], "sample_hooks (channelrealization property)": [[17, "hermespy.channel.channel.ChannelRealization.sample_hooks", false]], "sample_index (montecarlosample property)": [[57, "hermespy.core.monte_carlo.MonteCarloSample.sample_index", false]], "sample_offset (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.sample_offset", false]], "sample_offset (pilotsection property)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.sample_offset", false]], "sample_orientation() (lineartrajectory method)": [[167, "hermespy.simulation.animation.LinearTrajectory.sample_orientation", false]], "sample_orientation() (statictrajectory method)": [[167, "hermespy.simulation.animation.StaticTrajectory.sample_orientation", false]], "sample_orientation() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.sample_orientation", false]], "sample_points (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.sample_points", false]], "sample_trajectory() (physicalradartarget method)": [[33, "hermespy.channel.radar.multi.PhysicalRadarTarget.sample_trajectory", false]], "sample_trajectory() (radartarget method)": [[33, "hermespy.channel.radar.multi.RadarTarget.sample_trajectory", false]], "sample_trajectory() (virtualradartarget method)": [[33, "hermespy.channel.radar.multi.VirtualRadarTarget.sample_trajectory", false]], "sample_translation() (lineartrajectory method)": [[167, "hermespy.simulation.animation.LinearTrajectory.sample_translation", false]], "sample_translation() (statictrajectory method)": [[167, "hermespy.simulation.animation.StaticTrajectory.sample_translation", false]], "sample_translation() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.sample_translation", false]], "sample_velocity() (lineartrajectory method)": [[167, "hermespy.simulation.animation.LinearTrajectory.sample_velocity", false]], "sample_velocity() (statictrajectory method)": [[167, "hermespy.simulation.animation.StaticTrajectory.sample_velocity", false]], "sample_velocity() (trajectory method)": [[167, "hermespy.simulation.animation.Trajectory.sample_velocity", false]], "samplegrid (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.SampleGrid", false]], "sampleoffsettrigger (class in hermespy.simulation.simulated_device)": [[222, "hermespy.simulation.simulated_device.SampleOffsetTrigger", false]], "samplepoint (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.SamplePoint", false]], "samples (actorrunresult attribute)": [[57, "hermespy.core.monte_carlo.ActorRunResult.samples", false]], "samples (channelstatedimension attribute)": [[38, "hermespy.core.channel.ChannelStateDimension.SAMPLES", false]], "samples (gridsection property)": [[57, "hermespy.core.monte_carlo.GridSection.samples", false]], "samples() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.samples", false]], "samples_in_chirp (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.samples_in_chirp", false]], "samples_per_frame (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.samples_per_frame", false]], "samples_per_frame (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.samples_per_frame", false]], "samples_per_frame (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.samples_per_frame", false]], "samples_per_frame (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.samples_per_frame", false]], "samples_per_frame (ofdmwaveform property)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.samples_per_frame", false]], "samples_per_frame (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.samples_per_frame", false]], "sampling_rate (audiodevice property)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.sampling_rate", false]], "sampling_rate (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.sampling_rate", false]], "sampling_rate (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.sampling_rate", false]], "sampling_rate (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.sampling_rate", false]], "sampling_rate (device property)": [[41, "hermespy.core.device.Device.sampling_rate", false]], "sampling_rate (deviceoutput property)": [[43, "hermespy.core.device.DeviceOutput.sampling_rate", false]], "sampling_rate (duplexjcasoperator property)": [[94, "hermespy.jcas.jcas.DuplexJCASOperator.sampling_rate", false]], "sampling_rate (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.sampling_rate", false]], "sampling_rate (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.sampling_rate", false]], "sampling_rate (matchedfilterjcas property)": [[95, "hermespy.jcas.matched_filtering.MatchedFilterJcas.sampling_rate", false]], "sampling_rate (ocdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform.sampling_rate", false]], "sampling_rate (ofdmwaveform property)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.sampling_rate", false]], "sampling_rate (radar property)": [[162, "hermespy.radar.radar.Radar.sampling_rate", false]], "sampling_rate (radarwaveform property)": [[165, "hermespy.radar.radar.RadarWaveform.sampling_rate", false]], "sampling_rate (selectiveleakagecalibration property)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.sampling_rate", false]], "sampling_rate (signal property)": [[63, "hermespy.core.signal_model.Signal.sampling_rate", false]], "sampling_rate (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.sampling_rate", false]], "sampling_rate (state property)": [[64, "hermespy.core.state.State.sampling_rate", false]], "sampling_rate (staticoperator property)": [[58, "hermespy.core.operators.StaticOperator.sampling_rate", false]], "sampling_rate (triggerrealization property)": [[226, "hermespy.simulation.simulated_device.TriggerRealization.sampling_rate", false]], "sampling_rate (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.sampling_rate", false]], "saturation_amplitude (poweramplifier property)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.saturation_amplitude", false]], "save_calibration() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.save_calibration", false]], "save_to_matlab() (montecarloresult method)": [[57, "hermespy.core.monte_carlo.MonteCarloResult.save_to_matlab", false]], "scalardimension (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.ScalarDimension", false]], "scalarevaluationresult (class in hermespy.core.monte_carlo)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult", false]], "scale_quantized_signal() (gaincontrolbase method)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.scale_quantized_signal", false]], "scale_transmission (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.scale_transmission", false]], "scattervisualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.ScatterVisualization", false]], "scenario (channel property)": [[16, "hermespy.channel.channel.Channel.scenario", false]], "scenario (class in hermespy.core.scenario)": [[62, "hermespy.core.scenario.Scenario", false]], "scenario (pipeline property)": [[59, "hermespy.core.pipeline.Pipeline.scenario", false]], "scenario (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.scenario", false]], "scenariomode (class in hermespy.core.scenario)": [[62, "hermespy.core.scenario.ScenarioMode", false]], "scenariotype (class in hermespy.core.scenario)": [[62, "hermespy.core.scenario.ScenarioType", false]], "schmidlcoxpilotsection (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[147, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection", false]], "schmidlcoxsynchronization (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[148, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization", false]], "scrambler3gpp (class in hermespy.fec.scrambler)": [[77, "hermespy.fec.scrambler.Scrambler3GPP", false]], "scrambler80211a (class in hermespy.fec.scrambler)": [[77, "hermespy.fec.scrambler.Scrambler80211a", false]], "screen_geometry() (in module hermespy.tools.tile)": [[231, "hermespy.tools.tile.screen_geometry", false]], "section_block_size (montecarlo property)": [[57, "hermespy.core.monte_carlo.MonteCarlo.section_block_size", false]], "seed (randomrealization property)": [[61, "hermespy.core.random_node.RandomRealization.seed", false]], "seed (scrambler80211a property)": [[77, "hermespy.fec.scrambler.Scrambler80211a.seed", false]], "selected_receive_ports (receiver property)": [[48, "hermespy.core.device.Receiver.selected_receive_ports", false]], "selected_receive_ports (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.selected_receive_ports", false]], "selected_transmit_ports (transmitter property)": [[51, "hermespy.core.device.Transmitter.selected_transmit_ports", false]], "selected_transmit_ports (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.selected_transmit_ports", false]], "selectiveleakage (class in hermespy.simulation.isolation.selective)": [[185, "hermespy.simulation.isolation.selective.SelectiveLeakage", false]], "selectiveleakagecalibration (class in hermespy.hardware_loop.calibration.leakage)": [[83, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration", false]], "send() (poweramplifier method)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.send", false]], "serializable (class in hermespy.core.factory)": [[54, "hermespy.core.factory.Serializable", false]], "serializableenum (class in hermespy.core.factory)": [[54, "hermespy.core.factory.SerializableEnum", false]], "serializabletype (class in hermespy.core.factory)": [[54, "hermespy.core.factory.SerializableType", false]], "serialized_attribute (simulateddevice attribute)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.serialized_attribute", false]], "serialized_attributes (scenario attribute)": [[62, "hermespy.core.scenario.Scenario.serialized_attributes", false]], "set (class in hermespy.core.factory)": [[54, "hermespy.core.factory.SET", false]], "set_base() (transformable method)": [[65, "hermespy.core.transformation.Transformable.set_base", false]], "set_base() (transformablebase method)": [[65, "hermespy.core.transformation.TransformableBase.set_base", false]], "set_base() (transformablelink method)": [[65, "hermespy.core.transformation.TransformableLink.set_base", false]], "set_channel() (simulation method)": [[218, "hermespy.simulation.simulation.Simulation.set_channel", false]], "set_channel() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.set_channel", false]], "set_figure_geometry() (in module hermespy.tools.tile)": [[231, "hermespy.tools.tile.set_figure_geometry", false]], "set_samples() (densesignal method)": [[63, "hermespy.core.signal_model.DenseSignal.set_samples", false]], "set_samples() (signal method)": [[63, "hermespy.core.signal_model.Signal.set_samples", false]], "set_samples() (sparsesignal method)": [[63, "hermespy.core.signal_model.SparseSignal.set_samples", false]], "set_state() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.set_state", false]], "setter() (registereddimension method)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.setter", false]], "sh (factorytype attribute)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.SH", false]], "shape (consistentvariable property)": [[19, "hermespy.channel.consistent.ConsistentVariable.shape", false]], "shape (signal property)": [[63, "hermespy.core.signal_model.Signal.shape", false]], "show() (visualization method)": [[66, "hermespy.core.visualize.Visualization.show", false]], "signal (_signalvisualization property)": [[63, "hermespy.core.signal_model._SignalVisualization.signal", false]], "signal (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model.Signal", false]], "signal (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.signal", false]], "signal (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.signal", false]], "signal (operationresult attribute)": [[46, "hermespy.core.device.OperationResult.signal", false]], "signal (signaltransmitter property)": [[58, "hermespy.core.operators.SignalTransmitter.signal", false]], "signalblock (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model.SignalBlock", false]], "signalplot (class in hermespy.hardware_loop.visualizers)": [[92, "hermespy.hardware_loop.visualizers.SignalPlot", false]], "signalreceiver (class in hermespy.core.operators)": [[58, "hermespy.core.operators.SignalReceiver", false]], "signaltransmitter (class in hermespy.core.operators)": [[58, "hermespy.core.operators.SignalTransmitter", false]], "silent (consolemode attribute)": [[40, "hermespy.core.definitions.ConsoleMode.SILENT", false]], "silenttransmitter (class in hermespy.core.operators)": [[58, "hermespy.core.operators.SilentTransmitter", false]], "simplexlink (class in hermespy.modem.modem)": [[114, "hermespy.modem.modem.SimplexLink", false]], "simulate() (montecarlo method)": [[57, "hermespy.core.monte_carlo.MonteCarlo.simulate", false]], "simulated_input_callbacks (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.simulated_input_callbacks", false]], "simulated_output_callbacks (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.simulated_output_callbacks", false]], "simulatedantenna (class in hermespy.simulation.antennas)": [[169, "hermespy.simulation.antennas.SimulatedAntenna", false], [173, "hermespy.simulation.antennas.SimulatedAntenna", false]], "simulatedantennaarray (class in hermespy.simulation.antennas)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray", false]], "simulatedantennaport (class in hermespy.simulation.antennas)": [[171, "hermespy.simulation.antennas.SimulatedAntennaPort", false]], "simulatedcustomarray (class in hermespy.simulation.antennas)": [[172, "hermespy.simulation.antennas.SimulatedCustomArray", false]], "simulateddevice (class in hermespy.simulation.simulated_device)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice", false]], "simulateddeviceoutput (class in hermespy.simulation.simulated_device)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput", false]], "simulateddevicereceiverealization (class in hermespy.simulation.simulated_device)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization", false]], "simulateddevicereception (class in hermespy.simulation.simulated_device)": [[215, "hermespy.simulation.simulated_device.SimulatedDeviceReception", false]], "simulateddevicetransmission (class in hermespy.simulation.simulated_device)": [[216, "hermespy.simulation.simulated_device.SimulatedDeviceTransmission", false]], "simulateddrop (class in hermespy.simulation.drop)": [[217, "hermespy.simulation.drop.SimulatedDrop", false]], "simulatedidealantenna (class in hermespy.simulation.antennas)": [[174, "hermespy.simulation.antennas.SimulatedIdealAntenna", false]], "simulatedlinearantenna (class in hermespy.simulation.antennas)": [[175, "hermespy.simulation.antennas.SimulatedLinearAntenna", false]], "simulatedpatchantenna (class in hermespy.simulation.antennas)": [[176, "hermespy.simulation.antennas.SimulatedPatchAntenna", false]], "simulateduniformarray (class in hermespy.simulation.antennas)": [[177, "hermespy.simulation.antennas.SimulatedUniformArray", false]], "simulation (class in hermespy.simulation.simulation)": [[218, "hermespy.simulation.simulation.Simulation", false]], "simulationscenario (class in hermespy.simulation.simulation)": [[219, "hermespy.simulation.simulation.SimulationScenario", false]], "sinc (interpolationmode attribute)": [[16, "hermespy.channel.channel.InterpolationMode.SINC", false]], "singlecarrier (class in hermespy.modem.precoding.single_carrier)": [[119, "hermespy.modem.precoding.single_carrier.SingleCarrier", false]], "singletargetradarchannel (class in hermespy.channel.radar.single)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel", false]], "singletargetradarchannelrealization (class in hermespy.channel.radar.single)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization", false]], "size (consistentvariable property)": [[19, "hermespy.channel.consistent.ConsistentVariable.size", false]], "sl (factorytype attribute)": [[10, "hermespy.channel.cdl.indoor_factory.FactoryType.SL", false]], "slant (linearantenna property)": [[37, "hermespy.core.antennas.LinearAntenna.slant", false]], "slope (fmcw property)": [[161, "hermespy.radar.fmcw.FMCW.slope", false]], "smoothness_factor (rapppoweramplifier property)": [[206, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.smoothness_factor", false]], "snr (class in hermespy.simulation.noise.level)": [[191, "hermespy.simulation.noise.level.SNR", false]], "snr (device property)": [[41, "hermespy.core.device.Device.snr", false]], "snr (snr property)": [[191, "hermespy.simulation.noise.level.SNR.snr", false]], "space (signalplot property)": [[92, "hermespy.hardware_loop.visualizers.SignalPlot.space", false]], "spacing (uniformarray property)": [[37, "hermespy.core.antennas.UniformArray.spacing", false]], "sparsesignal (class in hermespy.core.signal_model)": [[63, "hermespy.core.signal_model.SparseSignal", false]], "spatial_response (multipathfadingsample property)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.spatial_response", false]], "spatialdelaychannel (class in hermespy.channel.delay.spatial)": [[22, "hermespy.channel.delay.spatial.SpatialDelayChannel", false]], "spatialdelaychannelrealization (class in hermespy.channel.delay.spatial)": [[22, "hermespy.channel.delay.spatial.SpatialDelayChannelRealization", false]], "specificisolation (class in hermespy.simulation.isolation.specific)": [[186, "hermespy.simulation.isolation.specific.SpecificIsolation", false]], "spherical_angles() (beamfocus method)": [[2, "hermespy.beamforming.beamformer.BeamFocus.spherical_angles", false]], "spherical_angles() (coordinatefocus method)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.spherical_angles", false]], "spherical_angles() (sphericalfocus method)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.spherical_angles", false]], "spherical_phase_response() (antennaarraybase method)": [[37, "hermespy.core.antennas.AntennaArrayBase.spherical_phase_response", false]], "sphericalfocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.SphericalFocus", false]], "stage_executors() (montecarloactor method)": [[57, "hermespy.core.monte_carlo.MonteCarloActor.stage_executors", false]], "stage_identifiers() (montecarloactor static method)": [[57, "hermespy.core.monte_carlo.MonteCarloActor.stage_identifiers", false]], "state (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.state", false]], "state (class in hermespy.core.state)": [[64, "hermespy.core.state.State", false]], "state() (antennaarray method)": [[37, "hermespy.core.antennas.AntennaArray.state", false]], "state() (audiodevice method)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.state", false]], "state() (channelsample method)": [[18, "hermespy.channel.channel.ChannelSample.state", false]], "state() (clusterdelaylinesample method)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.state", false]], "state() (delaychannelsample method)": [[20, "hermespy.channel.delay.delay.DelayChannelSample.state", false]], "state() (device method)": [[41, "hermespy.core.device.Device.state", false]], "state() (idealchannelsample method)": [[31, "hermespy.channel.ideal.IdealChannelSample.state", false]], "state() (multipathfadingsample method)": [[29, "hermespy.channel.fading.fading.MultipathFadingSample.state", false]], "state() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.state", false]], "state() (quadrigachannelsample method)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.state", false]], "state() (radarchannelsample method)": [[34, "hermespy.channel.radar.radar.RadarChannelSample.state", false]], "state() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.state", false]], "state() (usrpdevice method)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.state", false]], "state_format (channelstateinformation property)": [[38, "hermespy.core.channel.ChannelStateInformation.state_format", false]], "statedsymbols (class in hermespy.modem.symbols)": [[122, "hermespy.modem.symbols.StatedSymbols", false]], "states (statedsymbols property)": [[122, "hermespy.modem.symbols.StatedSymbols.states", false]], "static (radarpath property)": [[34, "hermespy.channel.radar.radar.RadarPath.static", false]], "static (radartarget property)": [[33, "hermespy.channel.radar.multi.RadarTarget.static", false]], "staticconsistentrealization (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.StaticConsistentRealization", false]], "staticconsistentsample (class in hermespy.channel.consistent)": [[19, "hermespy.channel.consistent.StaticConsistentSample", false]], "staticoperator (class in hermespy.core.operators)": [[58, "hermespy.core.operators.StaticOperator", false]], "statictrajectory (class in hermespy.simulation.animation)": [[167, "hermespy.simulation.animation.StaticTrajectory", false]], "statictrigger (class in hermespy.simulation.simulated_device)": [[223, "hermespy.simulation.simulated_device.StaticTrigger", false]], "stemvisualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.StemVisualization", false]], "stop() (scenario method)": [[62, "hermespy.core.scenario.Scenario.stop", false]], "streambitssource (class in hermespy.modem.bits_source)": [[98, "hermespy.modem.bits_source.StreamBitsSource", false]], "style (executable property)": [[53, "hermespy.core.executable.Executable.style", false]], "style_context() (executable static method)": [[53, "hermespy.core.executable.Executable.style_context", false]], "subcarrier_spacing (ofdmwaveform property)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.subcarrier_spacing", false]], "subcluster_indices (clusterdelaylinesample attribute)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.subcluster_indices", false]], "superimpose() (signal method)": [[63, "hermespy.core.signal_model.Signal.superimpose", false]], "surface (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.surface", false]], "symbol_duration (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.symbol_duration", false]], "symbol_duration (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_duration", false]], "symbol_duration (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.symbol_duration", false]], "symbol_duration (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_duration", false]], "symbol_duration (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbol_duration", false]], "symbol_energy (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_energy", false]], "symbol_energy (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.symbol_energy", false]], "symbol_energy (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_energy", false]], "symbol_energy (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbol_energy", false]], "symbol_precoding_support (chirpfskwaveform property)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_precoding_support", false]], "symbol_precoding_support (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.symbol_precoding_support", false]], "symbol_rate (filteredsinglecarrierwaveform property)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_rate", false]], "symbol_type (chirpfskwaveform attribute)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_type", false]], "symbol_type (communicationwaveform attribute)": [[123, "hermespy.modem.waveform.CommunicationWaveform.symbol_type", false]], "symbols (class in hermespy.modem.symbols)": [[122, "hermespy.modem.symbols.Symbols", false]], "symbols (communicationreception property)": [[108, "hermespy.modem.modem.CommunicationReception.symbols", false]], "symbols (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.symbols", false]], "symbols (communicationtransmission property)": [[110, "hermespy.modem.modem.CommunicationTransmission.symbols", false]], "symbols (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.symbols", false]], "symbols_per_frame (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbols_per_frame", false]], "symbolsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[143, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection", false]], "synchronization (class in hermespy.modem.waveform)": [[126, "hermespy.modem.waveform.Synchronization", false]], "synchronization (communicationwaveform property)": [[123, "hermespy.modem.waveform.CommunicationWaveform.synchronization", false]], "synchronize() (correlationsynchronization method)": [[130, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.synchronize", false]], "synchronize() (schmidlcoxsynchronization method)": [[148, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.synchronize", false]], "synchronize() (synchronization method)": [[126, "hermespy.modem.waveform.Synchronization.synchronize", false]], "tag_registry (factory property)": [[54, "hermespy.core.factory.Factory.tag_registry", false]], "tap_interval (exponential property)": [[24, "hermespy.channel.fading.exponential.Exponential.tap_interval", false]], "target_azimuth (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_azimuth", false]], "target_exists (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_exists", false]], "target_range (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_range", false]], "target_velocity (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_velocity", false]], "target_zenith (singletargetradarchannel property)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_zenith", false]], "targets (multitargetradarchannel property)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannel.targets", false]], "tdl (class in hermespy.channel.fading.tdl)": [[30, "hermespy.channel.fading.tdl.TDL", false]], "tdltype (class in hermespy.channel.fading.tdl)": [[30, "hermespy.channel.fading.tdl.TDLType", false]], "threshold (correlationsynchronization property)": [[130, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.threshold", false]], "thresholddetector (class in hermespy.radar.detection)": [[156, "hermespy.radar.detection.ThresholdDetector", false]], "throughputartifact (class in hermespy.modem.evaluators)": [[106, "hermespy.modem.evaluators.ThroughputArtifact", false]], "throughputevaluation (class in hermespy.modem.evaluators)": [[106, "hermespy.modem.evaluators.ThroughputEvaluation", false]], "throughputevaluator (class in hermespy.modem.evaluators)": [[106, "hermespy.modem.evaluators.ThroughputEvaluator", false]], "tick_format (evaluator attribute)": [[57, "hermespy.core.monte_carlo.Evaluator.tick_format", false]], "tick_format (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.tick_format", false]], "tile_figures() (in module hermespy.tools.tile)": [[231, "hermespy.tools.tile.tile_figures", false]], "time (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.time", false]], "timeoffsettrigger (class in hermespy.simulation.simulated_device)": [[224, "hermespy.simulation.simulated_device.TimeOffsetTrigger", false]], "timestamp (communicationreceptionframe attribute)": [[109, "hermespy.modem.modem.CommunicationReceptionFrame.timestamp", false]], "timestamp (communicationtransmissionframe attribute)": [[111, "hermespy.modem.modem.CommunicationTransmissionFrame.timestamp", false]], "timestamp (drop property)": [[52, "hermespy.core.drop.Drop.timestamp", false]], "timestamp (state property)": [[64, "hermespy.core.state.State.timestamp", false]], "timestamp (trajectorysample property)": [[167, "hermespy.simulation.animation.TrajectorySample.timestamp", false]], "timestamps (signal property)": [[63, "hermespy.core.signal_model.Signal.timestamps", false]], "title (_anglevisualization property)": [[9, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization.title", false]], "title (_constellationplot property)": [[122, "hermespy.modem.symbols._ConstellationPlot.title", false]], "title (_eyevisualization property)": [[63, "hermespy.core.signal_model._EyeVisualization.title", false]], "title (_powerdelayvisualization property)": [[9, "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization.title", false]], "title (_samplesvisualization property)": [[63, "hermespy.core.signal_model._SamplesVisualization.title", false]], "title (biterrorevaluation property)": [[102, "hermespy.modem.evaluators.BitErrorEvaluation.title", false]], "title (biterrorevaluator property)": [[102, "hermespy.modem.evaluators.BitErrorEvaluator.title", false]], "title (blockerrorevaluation property)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluation.title", false]], "title (blockerrorevaluator property)": [[103, "hermespy.modem.evaluators.BlockErrorEvaluator.title", false]], "title (constellationevm property)": [[104, "hermespy.modem.evaluators.ConstellationEVM.title", false]], "title (densesignal property)": [[63, "hermespy.core.signal_model.DenseSignal.title", false]], "title (detectionprobevaluator property)": [[157, "hermespy.radar.evaluators.DetectionProbEvaluator.title", false]], "title (ebn0 property)": [[187, "hermespy.simulation.modem.noise.EBN0.title", false]], "title (esn0 property)": [[188, "hermespy.simulation.modem.noise.ESN0.title", false]], "title (evaluator property)": [[57, "hermespy.core.monte_carlo.Evaluator.title", false]], "title (evmevaluation property)": [[104, "hermespy.modem.evaluators.EVMEvaluation.title", false]], "title (frameerrorevaluation property)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluation.title", false]], "title (frameerrorevaluator property)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluator.title", false]], "title (griddimension property)": [[57, "hermespy.core.monte_carlo.GridDimension.title", false]], "title (hardwareloopplot property)": [[85, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.title", false]], "title (n0 property)": [[190, "hermespy.simulation.noise.level.N0.title", false]], "title (poweramplifier property)": [[205, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.title", false]], "title (radarpointcloud property)": [[155, "hermespy.radar.detection.RadarPointCloud.title", false]], "title (receiveroperatingcharacteristic property)": [[159, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.title", false]], "title (registereddimension property)": [[57, "hermespy.core.monte_carlo.RegisteredDimension.title", false]], "title (rootmeansquareerror property)": [[160, "hermespy.radar.evaluators.RootMeanSquareError.title", false]], "title (samplepoint property)": [[57, "hermespy.core.monte_carlo.SamplePoint.title", false]], "title (scalardimension property)": [[57, "hermespy.core.monte_carlo.ScalarDimension.title", false]], "title (scalarevaluationresult property)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult.title", false]], "title (signal property)": [[63, "hermespy.core.signal_model.Signal.title", false]], "title (snr property)": [[191, "hermespy.simulation.noise.level.SNR.title", false]], "title (sparsesignal property)": [[63, "hermespy.core.signal_model.SparseSignal.title", false]], "title (specificisolation property)": [[186, "hermespy.simulation.isolation.specific.SpecificIsolation.title", false]], "title (throughputevaluation property)": [[106, "hermespy.modem.evaluators.ThroughputEvaluation.title", false]], "title (throughputevaluator property)": [[106, "hermespy.modem.evaluators.ThroughputEvaluator.title", false]], "title (visualizable property)": [[66, "hermespy.core.visualize.Visualizable.title", false]], "to_array() (evaluationresult method)": [[57, "hermespy.core.monte_carlo.EvaluationResult.to_array", false]], "to_array() (rocevaluationresult method)": [[159, "hermespy.radar.evaluators.RocEvaluationResult.to_array", false]], "to_array() (scalarevaluationresult method)": [[57, "hermespy.core.monte_carlo.ScalarEvaluationResult.to_array", false]], "to_dense() (densesignal method)": [[63, "hermespy.core.signal_model.DenseSignal.to_dense", false]], "to_dense() (signal method)": [[63, "hermespy.core.signal_model.Signal.to_dense", false]], "to_file() (factory method)": [[54, "hermespy.core.factory.Factory.to_file", false]], "to_folder() (factory method)": [[54, "hermespy.core.factory.Factory.to_folder", false]], "to_frequency_selectivity() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.to_frequency_selectivity", false]], "to_hdf() (cdlrealization method)": [[8, "hermespy.channel.cdl.cdl.CDLRealization.to_HDF", false]], "to_hdf() (channelrealization method)": [[17, "hermespy.channel.channel.ChannelRealization.to_HDF", false]], "to_hdf() (clusterdelaylinerealization method)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization.to_HDF", false]], "to_hdf() (delaychannelrealization method)": [[20, "hermespy.channel.delay.delay.DelayChannelRealization.to_HDF", false]], "to_hdf() (idealchannelrealization method)": [[31, "hermespy.channel.ideal.IdealChannelRealization.to_HDF", false]], "to_hdf() (indoorfactoryrealization method)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization.to_HDF", false]], "to_hdf() (indoorofficerealization method)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization.to_HDF", false]], "to_hdf() (multipathfadingrealization method)": [[28, "hermespy.channel.fading.fading.MultipathFadingRealization.to_HDF", false]], "to_hdf() (multitargetradarchannelrealization method)": [[33, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization.to_HDF", false]], "to_hdf() (quadrigachannelrealization method)": [[32, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization.to_HDF", false]], "to_hdf() (randomdelaychannelrealization method)": [[21, "hermespy.channel.delay.random.RandomDelayChannelRealization.to_HDF", false]], "to_hdf() (ruralmacrocellsrealization method)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization.to_HDF", false]], "to_hdf() (singletargetradarchannelrealization method)": [[35, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization.to_HDF", false]], "to_hdf() (urbanmacrocellsrealization method)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization.to_HDF", false]], "to_hdf() (urbanmicrocellsrealization method)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization.to_HDF", false]], "to_impulse_response() (channelstateinformation method)": [[38, "hermespy.core.channel.ChannelStateInformation.to_impulse_response", false]], "to_interleaved() (signal method)": [[63, "hermespy.core.signal_model.Signal.to_interleaved", false]], "to_local_coordinates() (transformable method)": [[65, "hermespy.core.transformation.Transformable.to_local_coordinates", false]], "to_scalar() (artifact method)": [[57, "hermespy.core.monte_carlo.Artifact.to_scalar", false]], "to_scalar() (artifacttemplate method)": [[57, "hermespy.core.monte_carlo.ArtifactTemplate.to_scalar", false]], "to_scalar() (rocartifact method)": [[159, "hermespy.radar.evaluators.RocArtifact.to_scalar", false]], "to_scalar() (rootmeansquareartifact method)": [[160, "hermespy.radar.evaluators.RootMeanSquareArtifact.to_scalar", false]], "to_spherical() (direction method)": [[65, "hermespy.core.transformation.Direction.to_spherical", false]], "to_str() (factory method)": [[54, "hermespy.core.factory.Factory.to_str", false]], "to_stream() (factory method)": [[54, "hermespy.core.factory.Factory.to_stream", false]], "to_yaml() (cost259 class method)": [[23, "hermespy.channel.fading.cost259.Cost259.to_yaml", false]], "to_yaml() (pilotsection class method)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.to_yaml", false]], "to_yaml() (precoding class method)": [[60, "hermespy.core.precoding.Precoding.to_yaml", false]], "to_yaml() (simulation class method)": [[218, "hermespy.simulation.simulation.Simulation.to_yaml", false]], "tolerance (evaluator property)": [[57, "hermespy.core.monte_carlo.Evaluator.tolerance", false]], "tolist() (logarithmicsequence method)": [[56, "hermespy.core.logarithmic.LogarithmicSequence.tolist", false]], "topology (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.topology", false]], "trajectory (class in hermespy.simulation.animation)": [[167, "hermespy.simulation.animation.Trajectory", false]], "trajectory (moveable property)": [[167, "hermespy.simulation.animation.Moveable.trajectory", false]], "trajectorysample (class in hermespy.simulation.animation)": [[167, "hermespy.simulation.animation.TrajectorySample", false]], "transform_direction() (transformation method)": [[65, "hermespy.core.transformation.Transformation.transform_direction", false]], "transform_position() (transformation method)": [[65, "hermespy.core.transformation.Transformation.transform_position", false]], "transformable (class in hermespy.core.transformation)": [[65, "hermespy.core.transformation.Transformable", false]], "transformablebase (class in hermespy.core.transformation)": [[65, "hermespy.core.transformation.TransformableBase", false]], "transformablelink (class in hermespy.core.transformation)": [[65, "hermespy.core.transformation.TransformableLink", false]], "transformation (class in hermespy.core.transformation)": [[65, "hermespy.core.transformation.Transformation", false]], "translation (transformation property)": [[65, "hermespy.core.transformation.Transformation.translation", false]], "transmission (class in hermespy.core.device)": [[50, "hermespy.core.device.Transmission", false]], "transmit() (coupling method)": [[179, "hermespy.simulation.coupling.coupling.Coupling.transmit", false]], "transmit() (device method)": [[41, "hermespy.core.device.Device.transmit", false]], "transmit() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.transmit", false]], "transmit() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.transmit", false]], "transmit() (rfchain method)": [[194, "hermespy.simulation.rf_chain.rf_chain.RfChain.transmit", false]], "transmit() (simulatedantenna method)": [[169, "hermespy.simulation.antennas.SimulatedAntenna.transmit", false], [173, "hermespy.simulation.antennas.SimulatedAntenna.transmit", false]], "transmit() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.transmit", false]], "transmit() (simulateddevice method)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.transmit", false]], "transmit() (transmitter method)": [[51, "hermespy.core.device.Transmitter.transmit", false]], "transmit_antennas (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.transmit_antennas", false]], "transmit_antennas (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.transmit_antennas", false]], "transmit_antennas (antennaarraystate property)": [[37, "hermespy.core.antennas.AntennaArrayState.transmit_antennas", false]], "transmit_antennas (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.transmit_antennas", false]], "transmit_coding (device property)": [[41, "hermespy.core.device.Device.transmit_coding", false]], "transmit_correlation (impedancecoupling property)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.transmit_correlation", false]], "transmit_devices() (scenario method)": [[62, "hermespy.core.scenario.Scenario.transmit_devices", false]], "transmit_devices() (simulationscenario method)": [[219, "hermespy.simulation.simulation.SimulationScenario.transmit_devices", false]], "transmit_focus (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.transmit_focus", false]], "transmit_impedance (impedancecoupling property)": [[180, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.transmit_impedance", false]], "transmit_operators() (device method)": [[41, "hermespy.core.device.Device.transmit_operators", false]], "transmit_operators() (scenario method)": [[62, "hermespy.core.scenario.Scenario.transmit_operators", false]], "transmit_ports (antennaarray property)": [[37, "hermespy.core.antennas.AntennaArray.transmit_ports", false]], "transmit_ports (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.transmit_ports", false]], "transmit_signal_coding (transmittingmodembase property)": [[115, "hermespy.modem.modem.TransmittingModemBase.transmit_signal_coding", false]], "transmit_state() (devicestate method)": [[64, "hermespy.core.state.DeviceState.transmit_state", false]], "transmit_streams (channelstatedimension attribute)": [[38, "hermespy.core.channel.ChannelStateDimension.TRANSMIT_STREAMS", false]], "transmit_symbol_coding (transmittingmodembase property)": [[115, "hermespy.modem.modem.TransmittingModemBase.transmit_symbol_coding", false]], "transmit_topology (antennaarraybase property)": [[37, "hermespy.core.antennas.AntennaArrayBase.transmit_topology", false]], "transmitbeamformer (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer", false]], "transmitencoder (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitEncoder", false]], "transmitencodertype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitEncoderType", false]], "transmitprecoding (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitPrecoding", false]], "transmitprecodingtype (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitPrecodingType", false]], "transmitsignalcoding (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitSignalCoding", false]], "transmitstate (class in hermespy.core.state)": [[64, "hermespy.core.state.TransmitState", false]], "transmitstreamencoder (class in hermespy.core.precoding)": [[60, "hermespy.core.precoding.TransmitStreamEncoder", false]], "transmitsymbolencoder (class in hermespy.modem.precoding.symbol_precoding)": [[121, "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder", false]], "transmitter (class in hermespy.core.device)": [[51, "hermespy.core.device.Transmitter", false]], "transmitter_antennas (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.transmitter_antennas", false]], "transmitter_pose (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.transmitter_pose", false]], "transmitter_state (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.transmitter_state", false]], "transmitter_velocity (channelsample property)": [[18, "hermespy.channel.channel.ChannelSample.transmitter_velocity", false]], "transmitters (device attribute)": [[41, "hermespy.core.device.Device.transmitters", false]], "transmitters (scenario property)": [[62, "hermespy.core.scenario.Scenario.transmitters", false]], "transmitting (antennaport property)": [[37, "hermespy.core.antennas.AntennaPort.transmitting", false]], "transmitting_device (radarevaluator property)": [[158, "hermespy.radar.evaluators.RadarEvaluator.transmitting_device", false]], "transmitting_modem (communicationevaluator property)": [[100, "hermespy.modem.evaluators.CommunicationEvaluator.transmitting_modem", false]], "transmittingmodem (class in hermespy.modem.modem)": [[115, "hermespy.modem.modem.TransmittingModem", false]], "transmittingmodembase (class in hermespy.modem.modem)": [[115, "hermespy.modem.modem.TransmittingModemBase", false]], "trigger() (audiodevice method)": [[80, "hermespy.hardware_loop.audio.device.AudioDevice.trigger", false]], "trigger() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.trigger", false]], "trigger() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.trigger", false]], "trigger() (usrpdevice method)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.trigger", false]], "trigger_delay (triggerrealization property)": [[226, "hermespy.simulation.simulated_device.TriggerRealization.trigger_delay", false]], "trigger_direct() (physicaldevice method)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.trigger_direct", false]], "trigger_direct() (physicaldevicedummy method)": [[87, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.trigger_direct", false]], "trigger_direct() (physicalscenario method)": [[89, "hermespy.hardware_loop.scenario.PhysicalScenario.trigger_direct", false]], "trigger_model (simulateddevice property)": [[211, "hermespy.simulation.simulated_device.SimulatedDevice.trigger_model", false]], "trigger_realization (processedsimulateddeviceinput property)": [[212, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.trigger_realization", false]], "trigger_realization (simulateddeviceoutput property)": [[213, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.trigger_realization", false]], "triggermodel (class in hermespy.simulation.simulated_device)": [[225, "hermespy.simulation.simulated_device.TriggerModel", false]], "triggerrealization (class in hermespy.simulation.simulated_device)": [[226, "hermespy.simulation.simulated_device.TriggerRealization", false]], "turbocoding (class in hermespy.fec.aff3ct.turbo)": [[78, "hermespy.fec.aff3ct.turbo.TurboCoding", false]], "tx (antennamode attribute)": [[37, "hermespy.core.antennas.AntennaMode.TX", false]], "tx_gain (usrpdevice property)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.tx_gain", false]], "type (gridelement attribute)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridElement.type", false]], "uniform() (consistentgenerator method)": [[19, "hermespy.channel.consistent.ConsistentGenerator.uniform", false]], "uniformarray (class in hermespy.core.antennas)": [[37, "hermespy.core.antennas.UniformArray", false]], "unmap() (chirpfskwaveform method)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.unmap", false]], "unmap() (communicationwaveform method)": [[123, "hermespy.modem.waveform.CommunicationWaveform.unmap", false]], "unmap() (filteredsinglecarrierwaveform method)": [[131, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.unmap", false]], "unmap() (orthogonalwaveform method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.unmap", false]], "unmatchableexception": [[57, "hermespy.core.monte_carlo.UnmatchableException", false]], "update_plot() (hardwareloopplot method)": [[85, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.update_plot", false]], "update_visualization() (visualizable method)": [[66, "hermespy.core.visualize.Visualizable.update_visualization", false]], "urban (cost259type attribute)": [[23, "hermespy.channel.fading.cost259.Cost259Type.URBAN", false]], "urbanmacrocells (class in hermespy.channel.cdl.urban_macrocells)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells", false]], "urbanmacrocellsrealization (class in hermespy.channel.cdl.urban_macrocells)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization", false]], "urbanmicrocells (class in hermespy.channel.cdl.urban_microcells)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells", false]], "urbanmicrocellsrealization (class in hermespy.channel.cdl.urban_microcells)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization", false]], "usrpdevice (class in hermespy.hardware_loop.uhd.usrp)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice", false]], "usrpsystem (class in hermespy.hardware_loop.uhd.system)": [[90, "hermespy.hardware_loop.uhd.system.UsrpSystem", false]], "value (largescalestate property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState.value", false]], "value (samplepoint property)": [[57, "hermespy.core.monte_carlo.SamplePoint.value", false]], "value_db (logarithmic property)": [[56, "hermespy.core.logarithmic.Logarithmic.value_db", false]], "valuetype (class in hermespy.core)": [[56, "hermespy.core.ValueType", false]], "vat (in module hermespy.core.visualize)": [[66, "hermespy.core.visualize.VAT", false]], "velocity (physicaldevice property)": [[86, "hermespy.hardware_loop.physical_device.PhysicalDevice.velocity", false]], "velocity (pointdetection property)": [[153, "hermespy.radar.detection.PointDetection.velocity", false]], "velocity (radartargetpath property)": [[34, "hermespy.channel.radar.radar.RadarTargetPath.velocity", false]], "velocity (state property)": [[64, "hermespy.core.state.State.velocity", false]], "velocity (statictrajectory property)": [[167, "hermespy.simulation.animation.StaticTrajectory.velocity", false]], "velocity (trajectorysample property)": [[167, "hermespy.simulation.animation.TrajectorySample.velocity", false]], "velocity_bins (radarcube property)": [[151, "hermespy.radar.cube.RadarCube.velocity_bins", false]], "velocity_resolution() (radar method)": [[162, "hermespy.radar.radar.Radar.velocity_resolution", false]], "verbosity (executable property)": [[53, "hermespy.core.executable.Executable.verbosity", false]], "virtualradartarget (class in hermespy.channel.radar.multi)": [[33, "hermespy.channel.radar.multi.VirtualRadarTarget", false]], "visualizable (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.Visualizable", false]], "visualizableattribute (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.VisualizableAttribute", false]], "visualization (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.Visualization", false]], "visualization (visualizable property)": [[66, "hermespy.core.visualize.Visualizable.visualization", false]], "visualize (simulationscenario property)": [[219, "hermespy.simulation.simulation.SimulationScenario.visualize", false]], "visualize() (visualizable method)": [[66, "hermespy.core.visualize.Visualizable.visualize", false]], "visualize_far_field_pattern() (simulatedantennaarray method)": [[170, "hermespy.simulation.antennas.SimulatedAntennaArray.visualize_far_field_pattern", false]], "vlt (in module hermespy.core.visualize)": [[66, "hermespy.core.visualize.VLT", false]], "volume (indoorfactory property)": [[10, "hermespy.channel.cdl.indoor_factory.IndoorFactory.volume", false]], "vt (class in hermespy.core.visualize)": [[66, "hermespy.core.visualize.VT", false]], "wave (gridsection property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.wave", false]], "waveform (basemodem property)": [[107, "hermespy.modem.modem.BaseModem.waveform", false]], "waveform (channelequalization property)": [[124, "hermespy.modem.waveform.ChannelEqualization.waveform", false]], "waveform (channelestimation property)": [[125, "hermespy.modem.waveform.ChannelEstimation.waveform", false]], "waveform (radar property)": [[162, "hermespy.radar.radar.Radar.waveform", false]], "waveform (synchronization property)": [[126, "hermespy.modem.waveform.Synchronization.waveform", false]], "wavelength (device property)": [[41, "hermespy.core.device.Device.wavelength", false]], "weight (simulatedantenna property)": [[169, "hermespy.simulation.antennas.SimulatedAntenna.weight", false], [173, "hermespy.simulation.antennas.SimulatedAntenna.weight", false]], "words_per_frame (orthogonalwaveform property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.words_per_frame", false]], "yaml_tag (analogdigitalconverter attribute)": [[196, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.yaml_tag", false]], "yaml_tag (audioscenario attribute)": [[81, "hermespy.hardware_loop.audio.scenario.AudioScenario.yaml_tag", false]], "yaml_tag (automaticgaincontrol attribute)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.yaml_tag", false]], "yaml_tag (blockinterleaver attribute)": [[69, "hermespy.fec.block_interleaver.BlockInterleaver.yaml_tag", false]], "yaml_tag (chirpfskcorrelationsynchronization attribute)": [[129, "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization.yaml_tag", false]], "yaml_tag (clippingpoweramplifier attribute)": [[203, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier.yaml_tag", false]], "yaml_tag (conventionalbeamformer attribute)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.yaml_tag", false]], "yaml_tag (correlationsynchronization attribute)": [[130, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.yaml_tag", false]], "yaml_tag (customantennacorrelation attribute)": [[26, "hermespy.channel.fading.fading.CustomAntennaCorrelation.yaml_tag", false]], "yaml_tag (cyclicredundancycheck attribute)": [[71, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.yaml_tag", false]], "yaml_tag (dipole attribute)": [[37, "hermespy.core.antennas.Dipole.yaml_tag", false]], "yaml_tag (duplexmodem attribute)": [[112, "hermespy.modem.modem.DuplexModem.yaml_tag", false]], "yaml_tag (encoder attribute)": [[70, "hermespy.fec.coding.Encoder.yaml_tag", false]], "yaml_tag (fmcwwaveform attribute)": [[132, "hermespy.modem.waveform_single_carrier.FMCWWaveform.yaml_tag", false]], "yaml_tag (frameerrorevaluator attribute)": [[105, "hermespy.modem.evaluators.FrameErrorEvaluator.yaml_tag", false]], "yaml_tag (gain attribute)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.yaml_tag", false]], "yaml_tag (hardwareloop attribute)": [[84, "hermespy.hardware_loop.hardware_loop.HardwareLoop.yaml_tag", false]], "yaml_tag (idealantenna attribute)": [[37, "hermespy.core.antennas.IdealAntenna.yaml_tag", false]], "yaml_tag (indooroffice attribute)": [[11, "hermespy.channel.cdl.indoor_office.IndoorOffice.yaml_tag", false]], "yaml_tag (maxdetector attribute)": [[152, "hermespy.radar.detection.MaxDetector.yaml_tag", false]], "yaml_tag (nophasenoise attribute)": [[209, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise.yaml_tag", false]], "yaml_tag (patchantenna attribute)": [[37, "hermespy.core.antennas.PatchAntenna.yaml_tag", false]], "yaml_tag (pilotsection attribute)": [[142, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.yaml_tag", false]], "yaml_tag (raisedcosinewaveform attribute)": [[133, "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform.yaml_tag", false]], "yaml_tag (rapppoweramplifier attribute)": [[206, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.yaml_tag", false]], "yaml_tag (receivesignalcoding attribute)": [[60, "hermespy.core.precoding.ReceiveSignalCoding.yaml_tag", false]], "yaml_tag (receivingmodem attribute)": [[113, "hermespy.modem.modem.ReceivingModem.yaml_tag", false]], "yaml_tag (rectangularwaveform attribute)": [[134, "hermespy.modem.waveform_single_carrier.RectangularWaveform.yaml_tag", false]], "yaml_tag (repetitionencoder attribute)": [[74, "hermespy.fec.repetition_encoder.RepetitionEncoder.yaml_tag", false]], "yaml_tag (rootraisedcosinewaveform attribute)": [[135, "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform.yaml_tag", false]], "yaml_tag (ruralmacrocells attribute)": [[12, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.yaml_tag", false]], "yaml_tag (scenario attribute)": [[62, "hermespy.core.scenario.Scenario.yaml_tag", false]], "yaml_tag (schmidlcoxpilotsection attribute)": [[147, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection.yaml_tag", false]], "yaml_tag (schmidlcoxsynchronization attribute)": [[148, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.yaml_tag", false]], "yaml_tag (scrambler3gpp attribute)": [[77, "hermespy.fec.scrambler.Scrambler3GPP.yaml_tag", false]], "yaml_tag (scrambler80211a attribute)": [[77, "hermespy.fec.scrambler.Scrambler80211a.yaml_tag", false]], "yaml_tag (simplexlink attribute)": [[114, "hermespy.modem.modem.SimplexLink.yaml_tag", false]], "yaml_tag (simulatedidealantenna attribute)": [[174, "hermespy.simulation.antennas.SimulatedIdealAntenna.yaml_tag", false]], "yaml_tag (simulatedpatchantenna attribute)": [[176, "hermespy.simulation.antennas.SimulatedPatchAntenna.yaml_tag", false]], "yaml_tag (simulationscenario attribute)": [[219, "hermespy.simulation.simulation.SimulationScenario.yaml_tag", false]], "yaml_tag (throughputevaluator attribute)": [[106, "hermespy.modem.evaluators.ThroughputEvaluator.yaml_tag", false]], "yaml_tag (transmitsignalcoding attribute)": [[60, "hermespy.core.precoding.TransmitSignalCoding.yaml_tag", false]], "yaml_tag (urbanmacrocells attribute)": [[13, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.yaml_tag", false]], "yaml_tag (urbanmicrocells attribute)": [[14, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.yaml_tag", false]], "yaml_tag (usrpdevice attribute)": [[91, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.yaml_tag", false]], "yaml_tag (usrpsystem attribute)": [[90, "hermespy.hardware_loop.uhd.system.UsrpSystem.yaml_tag", false]], "yaml_tag (zeroforcingchannelequalization attribute)": [[127, "hermespy.modem.waveform.ZeroForcingChannelEqualization.yaml_tag", false]], "zenith_arrival_spread (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_arrival_spread", false]], "zenith_departure_spread (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_departure_spread", false]], "zenith_of_arrival (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_of_arrival", false]], "zenith_of_departure (clusterdelaylinesample property)": [[9, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_of_departure", false]], "zeroforcingchannelequalization (class in hermespy.modem.waveform)": [[127, "hermespy.modem.waveform.ZeroForcingChannelEqualization", false]], "zeropad (prefixtype attribute)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.ZEROPAD", false]]}, "objects": {"hermespy.beamforming": [[2, 0, 0, "-", "beamformer"], [3, 0, 0, "-", "capon"], [4, 0, 0, "-", "conventional"]], "hermespy.beamforming.beamformer": [[2, 1, 1, "", "BeamFocus"], [2, 1, 1, "", "CoordinateFocus"], [2, 1, 1, "", "FT"], [2, 1, 1, "", "OT"], [2, 1, 1, "", "ReceiveBeamformer"], [2, 1, 1, "", "SphericalFocus"], [2, 1, 1, "", "TransmitBeamformer"]], "hermespy.beamforming.beamformer.BeamFocus": [[2, 2, 1, "", "copy"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.CoordinateFocus": [[2, 3, 1, "", "coordinates"], [2, 2, 1, "", "copy"], [2, 3, 1, "", "reference"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.ReceiveBeamformer": [[2, 2, 1, "", "_decode"], [2, 2, 1, "", "decode_streams"], [2, 3, 1, "", "num_receive_focus_points"], [2, 2, 1, "", "probe"], [2, 3, 1, "", "probe_focus_points"], [2, 3, 1, "", "receive_focus"]], "hermespy.beamforming.beamformer.SphericalFocus": [[2, 3, 1, "", "angles"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.TransmitBeamformer": [[2, 2, 1, "", "encode_streams"], [2, 3, 1, "", "num_transmit_focus_points"], [2, 3, 1, "", "transmit_focus"]], "hermespy.beamforming.capon": [[3, 1, 1, "", "CaponBeamformer"]], "hermespy.beamforming.capon.CaponBeamformer": [[3, 2, 1, "", "_decode"], [3, 3, 1, "", "loading"], [3, 3, 1, "", "num_receive_focus_points"], [3, 2, 1, "", "num_receive_output_streams"]], "hermespy.beamforming.conventional": [[4, 1, 1, "", "ConventionalBeamformer"]], "hermespy.beamforming.conventional.ConventionalBeamformer": [[4, 2, 1, "", "_decode"], [4, 2, 1, "", "_encode"], [4, 3, 1, "", "num_receive_focus_points"], [4, 2, 1, "", "num_receive_output_streams"], [4, 3, 1, "", "num_transmit_focus_points"], [4, 4, 1, "", "yaml_tag"]], "hermespy.beamforming.nullsteeringbeamformer": [[5, 1, 1, "", "NullSteeringBeamformer"]], "hermespy.beamforming.nullsteeringbeamformer.NullSteeringBeamformer": [[5, 2, 1, "", "_encode"], [5, 3, 1, "", "num_receive_focus_points"], [5, 2, 1, "", "num_receive_output_streams"], [5, 3, 1, "", "num_transmit_focus_points"]], "hermespy.bin": [[7, 0, 0, "-", "hermes"]], "hermespy.bin.hermes": [[7, 5, 1, "", "hermes_simulation"]], "hermespy.channel.cdl": [[8, 1, 1, "", "CDLType"]], "hermespy.channel.cdl.CDLType": [[8, 4, 1, "", "A"], [8, 4, 1, "", "B"], [8, 4, 1, "", "C"], [8, 4, 1, "", "D"], [8, 4, 1, "", "E"]], "hermespy.channel.cdl.cdl": [[8, 1, 1, "", "CDL"], [8, 1, 1, "", "CDLRealization"]], "hermespy.channel.cdl.cdl.CDL": [[8, 2, 1, "", "_realize"], [8, 3, 1, "", "decorrelation_distance"], [8, 3, 1, "", "model_type"], [8, 3, 1, "", "rayleigh_factor"], [8, 2, 1, "", "recall_realization"], [8, 3, 1, "", "rms_delay"]], "hermespy.channel.cdl.cdl.CDLRealization": [[8, 2, 1, "", "From_HDF"], [8, 2, 1, "", "_sample"], [8, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.cluster_delay_lines": [[9, 1, 1, "", "CDLRT"], [9, 1, 1, "", "ClusterDelayLineBase"], [9, 1, 1, "", "ClusterDelayLineRealization"], [9, 1, 1, "", "ClusterDelayLineSample"], [9, 1, 1, "", "LSST"], [9, 1, 1, "", "LargeScaleState"], [9, 1, 1, "", "_AngleVisualization"], [9, 1, 1, "", "_PowerDelayVisualization"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase": [[9, 3, 1, "", "delay_normalization"], [9, 3, 1, "", "expected_state"], [9, 3, 1, "", "max_num_clusters"], [9, 3, 1, "", "max_num_rays"], [9, 3, 1, "", "oxygen_absorption"], [9, 2, 1, "", "recall_realization"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization": [[9, 3, 1, "", "expected_state"], [9, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample": [[9, 3, 1, "", "azimuth_arrival_spread"], [9, 3, 1, "", "azimuth_departure_spread"], [9, 3, 1, "", "azimuth_of_arrival"], [9, 3, 1, "", "azimuth_of_departure"], [9, 3, 1, "", "cluster_delay_spread"], [9, 3, 1, "", "cluster_delays"], [9, 3, 1, "", "cluster_powers"], [9, 3, 1, "", "delay_offset"], [9, 3, 1, "", "expected_energy_scale"], [9, 3, 1, "", "line_of_sight"], [9, 3, 1, "", "max_delay"], [9, 3, 1, "", "num_clusters"], [9, 3, 1, "", "num_rays"], [9, 3, 1, "", "plot_angles"], [9, 3, 1, "", "plot_power_delay"], [9, 2, 1, "", "plot_rays"], [9, 3, 1, "", "polarization_transformations"], [9, 2, 1, "", "reciprocal"], [9, 3, 1, "", "rice_factor"], [9, 2, 1, "", "state"], [9, 4, 1, "", "subcluster_indices"], [9, 3, 1, "", "zenith_arrival_spread"], [9, 3, 1, "", "zenith_departure_spread"], [9, 3, 1, "", "zenith_of_arrival"], [9, 3, 1, "", "zenith_of_departure"]], "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState": [[9, 3, 1, "", "line_of_sight"], [9, 3, 1, "", "value"]], "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization": [[9, 2, 1, "", "create_figure"], [9, 3, 1, "", "title"]], "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization": [[9, 3, 1, "", "title"]], "hermespy.channel.cdl.indoor_factory": [[10, 1, 1, "", "FactoryType"], [10, 1, 1, "", "IndoorFactory"], [10, 1, 1, "", "IndoorFactoryRealization"]], "hermespy.channel.cdl.indoor_factory.FactoryType": [[10, 4, 1, "", "DH"], [10, 4, 1, "", "DL"], [10, 4, 1, "", "HH"], [10, 4, 1, "", "SH"], [10, 4, 1, "", "SL"], [10, 3, 1, "", "clutter_density"], [10, 3, 1, "", "clutter_size"]], "hermespy.channel.cdl.indoor_factory.IndoorFactory": [[10, 3, 1, "", "clutter_height"], [10, 3, 1, "", "factory_type"], [10, 3, 1, "", "max_num_clusters"], [10, 3, 1, "", "max_num_rays"], [10, 3, 1, "", "surface"], [10, 3, 1, "", "volume"]], "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization": [[10, 2, 1, "", "From_HDF"], [10, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.indoor_office": [[11, 1, 1, "", "IndoorOffice"], [11, 1, 1, "", "IndoorOfficeRealization"], [11, 1, 1, "", "OfficeType"]], "hermespy.channel.cdl.indoor_office.IndoorOffice": [[11, 3, 1, "", "max_num_clusters"], [11, 3, 1, "", "max_num_rays"], [11, 3, 1, "", "office_type"], [11, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization": [[11, 2, 1, "", "From_HDF"], [11, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.indoor_office.OfficeType": [[11, 4, 1, "", "MIXED"], [11, 4, 1, "", "OPEN"]], "hermespy.channel.cdl.rural_macrocells": [[12, 1, 1, "", "RuralMacrocells"], [12, 1, 1, "", "RuralMacrocellsRealization"]], "hermespy.channel.cdl.rural_macrocells.RuralMacrocells": [[12, 3, 1, "", "max_num_clusters"], [12, 3, 1, "", "max_num_rays"], [12, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization": [[12, 2, 1, "", "From_HDF"], [12, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.urban_macrocells": [[13, 1, 1, "", "UrbanMacrocells"], [13, 1, 1, "", "UrbanMacrocellsRealization"]], "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells": [[13, 3, 1, "", "max_num_clusters"], [13, 3, 1, "", "max_num_rays"], [13, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization": [[13, 2, 1, "", "From_HDF"], [13, 2, 1, "", "to_HDF"]], "hermespy.channel.cdl.urban_microcells": [[14, 1, 1, "", "UrbanMicrocells"], [14, 1, 1, "", "UrbanMicrocellsRealization"]], "hermespy.channel.cdl.urban_microcells.UrbanMicrocells": [[14, 3, 1, "", "max_num_clusters"], [14, 3, 1, "", "max_num_rays"], [14, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization": [[14, 2, 1, "", "From_HDF"], [14, 2, 1, "", "to_HDF"]], "hermespy.channel.channel": [[17, 1, 1, "", "CRT"], [18, 1, 1, "", "CST"], [16, 1, 1, "", "Channel"], [17, 1, 1, "", "ChannelRealization"], [18, 1, 1, "", "ChannelSample"], [16, 1, 1, "", "ChannelSampleHook"], [16, 1, 1, "", "InterpolationMode"]], "hermespy.channel.channel.Channel": [[16, 2, 1, "", "add_sample_hook"], [16, 3, 1, "", "gain"], [16, 2, 1, "", "propagate"], [16, 3, 1, "", "realization"], [16, 2, 1, "", "realize"], [16, 2, 1, "", "recall_realization"], [16, 2, 1, "", "remove_sample_hook"], [16, 3, 1, "", "sample_hooks"], [16, 3, 1, "", "scenario"]], "hermespy.channel.channel.ChannelRealization": [[17, 3, 1, "", "gain"], [17, 2, 1, "", "reciprocal_sample"], [17, 2, 1, "", "sample"], [17, 3, 1, "", "sample_hooks"], [17, 2, 1, "", "to_HDF"]], "hermespy.channel.channel.ChannelSample": [[18, 3, 1, "", "bandwidth"], [18, 3, 1, "", "carrier_frequency"], [18, 3, 1, "", "expected_energy_scale"], [18, 3, 1, "", "num_receive_antennas"], [18, 3, 1, "", "num_transmit_antennas"], [18, 2, 1, "", "propagate"], [18, 3, 1, "", "receiver_antennas"], [18, 3, 1, "", "receiver_pose"], [18, 3, 1, "", "receiver_state"], [18, 3, 1, "", "receiver_velocity"], [18, 2, 1, "", "state"], [18, 3, 1, "", "time"], [18, 3, 1, "", "transmitter_antennas"], [18, 3, 1, "", "transmitter_pose"], [18, 3, 1, "", "transmitter_state"], [18, 3, 1, "", "transmitter_velocity"]], "hermespy.channel.channel.InterpolationMode": [[16, 4, 1, "", "NEAREST"], [16, 4, 1, "", "SINC"]], "hermespy.channel.consistent": [[19, 1, 1, "", "ConsistentBoolean"], [19, 1, 1, "", "ConsistentGaussian"], [19, 1, 1, "", "ConsistentGenerator"], [19, 1, 1, "", "ConsistentRealization"], [19, 1, 1, "", "ConsistentSample"], [19, 1, 1, "", "ConsistentUniform"], [19, 1, 1, "", "ConsistentVariable"], [19, 1, 1, "", "DualConsistentRealization"], [19, 1, 1, "", "DualConsistentSample"], [19, 1, 1, "", "StaticConsistentRealization"], [19, 1, 1, "", "StaticConsistentSample"]], "hermespy.channel.consistent.ConsistentBoolean": [[19, 2, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentGaussian": [[19, 2, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentGenerator": [[19, 2, 1, "", "add_variable"], [19, 2, 1, "", "boolean"], [19, 2, 1, "", "gaussian"], [19, 2, 1, "", "realize"], [19, 2, 1, "", "uniform"]], "hermespy.channel.consistent.ConsistentRealization": [[19, 2, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentSample": [[19, 2, 1, "", "fetch_scalars"]], "hermespy.channel.consistent.ConsistentUniform": [[19, 2, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentVariable": [[19, 3, 1, "", "offset"], [19, 2, 1, "", "sample"], [19, 3, 1, "", "shape"], [19, 3, 1, "", "size"]], "hermespy.channel.consistent.DualConsistentRealization": [[19, 3, 1, "", "frequencies"], [19, 3, 1, "", "phases"], [19, 2, 1, "", "sample"]], "hermespy.channel.consistent.DualConsistentSample": [[19, 2, 1, "", "fetch_scalars"]], "hermespy.channel.consistent.StaticConsistentRealization": [[19, 2, 1, "", "sample"]], "hermespy.channel.consistent.StaticConsistentSample": [[19, 2, 1, "", "fetch_scalars"]], "hermespy.channel.delay.delay": [[20, 1, 1, "", "DCRT"], [20, 1, 1, "", "DelayChannelBase"], [20, 1, 1, "", "DelayChannelRealization"], [20, 1, 1, "", "DelayChannelSample"]], "hermespy.channel.delay.delay.DelayChannelBase": [[20, 3, 1, "", "model_propagation_loss"]], "hermespy.channel.delay.delay.DelayChannelRealization": [[20, 3, 1, "", "model_propagation_loss"], [20, 2, 1, "", "to_HDF"]], "hermespy.channel.delay.delay.DelayChannelSample": [[20, 3, 1, "", "delay"], [20, 3, 1, "", "expected_energy_scale"], [20, 3, 1, "", "gain"], [20, 3, 1, "", "model_propagation_loss"], [20, 2, 1, "", "state"]], "hermespy.channel.delay.random": [[21, 1, 1, "", "RandomDelayChannel"], [21, 1, 1, "", "RandomDelayChannelRealization"]], "hermespy.channel.delay.random.RandomDelayChannel": [[21, 2, 1, "", "_realize"], [21, 3, 1, "", "decorrelation_distance"], [21, 3, 1, "", "delay"], [21, 2, 1, "", "recall_realization"]], "hermespy.channel.delay.random.RandomDelayChannelRealization": [[21, 2, 1, "", "From_HDF"], [21, 3, 1, "", "delay"], [21, 2, 1, "", "to_HDF"]], "hermespy.channel.delay.spatial": [[22, 1, 1, "", "SpatialDelayChannel"], [22, 1, 1, "", "SpatialDelayChannelRealization"]], "hermespy.channel.delay.spatial.SpatialDelayChannel": [[22, 2, 1, "", "_realize"], [22, 2, 1, "", "recall_realization"]], "hermespy.channel.delay.spatial.SpatialDelayChannelRealization": [[22, 2, 1, "", "From_HDF"]], "hermespy.channel.fading.cost259": [[23, 1, 1, "", "Cost259"], [23, 1, 1, "", "Cost259Type"]], "hermespy.channel.fading.cost259.Cost259": [[23, 3, 1, "", "model_type"], [23, 2, 1, "", "to_yaml"]], "hermespy.channel.fading.cost259.Cost259Type": [[23, 4, 1, "", "HILLY"], [23, 4, 1, "", "RURAL"], [23, 4, 1, "", "URBAN"]], "hermespy.channel.fading.exponential": [[24, 1, 1, "", "Exponential"]], "hermespy.channel.fading.exponential.Exponential": [[24, 3, 1, "", "rms_delay"], [24, 3, 1, "", "tap_interval"]], "hermespy.channel.fading.fading": [[26, 1, 1, "", "AntennaCorrelation"], [26, 1, 1, "", "CustomAntennaCorrelation"], [27, 1, 1, "", "MultipathFadingChannel"], [28, 1, 1, "", "MultipathFadingRealization"], [29, 1, 1, "", "MultipathFadingSample"]], "hermespy.channel.fading.fading.AntennaCorrelation": [[26, 3, 1, "", "channel"], [26, 2, 1, "", "sample_covariance"]], "hermespy.channel.fading.fading.CustomAntennaCorrelation": [[26, 3, 1, "", "covariance"], [26, 2, 1, "", "sample_covariance"], [26, 4, 1, "", "yaml_tag"]], "hermespy.channel.fading.fading.MultipathFadingChannel": [[27, 3, 1, "", "antenna_correlation"], [27, 3, 1, "", "correlation_distance"], [27, 3, 1, "", "delays"], [27, 3, 1, "", "doppler_frequency"], [27, 3, 1, "", "los_angle"], [27, 3, 1, "", "los_doppler_frequency"], [27, 3, 1, "", "max_delay"], [27, 3, 1, "", "num_resolvable_paths"], [27, 3, 1, "", "num_sinusoids"], [27, 3, 1, "", "power_profile"], [27, 2, 1, "", "recall_realization"], [27, 3, 1, "", "rice_factors"]], "hermespy.channel.fading.fading.MultipathFadingRealization": [[28, 2, 1, "", "From_HDF"], [28, 2, 1, "", "to_HDF"]], "hermespy.channel.fading.fading.MultipathFadingSample": [[29, 3, 1, "", "delay_profile"], [29, 3, 1, "", "expected_energy_scale"], [29, 3, 1, "", "gain"], [29, 3, 1, "", "los_angles"], [29, 3, 1, "", "los_doppler"], [29, 3, 1, "", "los_gains"], [29, 3, 1, "", "los_phases"], [29, 3, 1, "", "nlos_angles"], [29, 3, 1, "", "nlos_doppler"], [29, 3, 1, "", "nlos_gains"], [29, 3, 1, "", "nlos_phases"], [29, 2, 1, "", "plot_power_delay"], [29, 3, 1, "", "power_profile"], [29, 3, 1, "", "spatial_response"], [29, 2, 1, "", "state"]], "hermespy.channel.fading.tdl": [[30, 1, 1, "", "TDL"], [30, 1, 1, "", "TDLType"]], "hermespy.channel.fading.tdl.TDL": [[30, 3, 1, "", "model_type"], [30, 3, 1, "", "rms_delay"]], "hermespy.channel.fading.tdl.TDLType": [[30, 4, 1, "", "A"], [30, 4, 1, "", "B"], [30, 4, 1, "", "C"], [30, 4, 1, "", "D"], [30, 4, 1, "", "E"]], "hermespy.channel.ideal": [[31, 1, 1, "", "IdealChannel"], [31, 1, 1, "", "IdealChannelRealization"], [31, 1, 1, "", "IdealChannelSample"]], "hermespy.channel.ideal.IdealChannel": [[31, 2, 1, "", "_realize"], [31, 2, 1, "", "recall_realization"]], "hermespy.channel.ideal.IdealChannelRealization": [[31, 2, 1, "", "From_HDF"], [31, 2, 1, "", "_sample"], [31, 2, 1, "", "to_HDF"]], "hermespy.channel.ideal.IdealChannelSample": [[31, 2, 1, "", "_propagate"], [31, 3, 1, "", "expected_energy_scale"], [31, 2, 1, "", "state"]], "hermespy.channel.quadriga.quadriga": [[32, 1, 1, "", "QuadrigaChannel"], [32, 1, 1, "", "QuadrigaChannelRealization"], [32, 1, 1, "", "QuadrigaChannelSample"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannel": [[32, 2, 1, "", "recall_realization"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization": [[32, 2, 1, "", "From_HDF"], [32, 2, 1, "", "to_HDF"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample": [[32, 3, 1, "", "expected_energy_scale"], [32, 3, 1, "", "path_delays"], [32, 3, 1, "", "path_gains"], [32, 2, 1, "", "state"]], "hermespy.channel.radar.multi": [[33, 1, 1, "", "FixedCrossSection"], [33, 1, 1, "", "MultiTargetRadarChannel"], [33, 1, 1, "", "MultiTargetRadarChannelRealization"], [33, 1, 1, "", "PhysicalRadarTarget"], [33, 1, 1, "", "RadarCrossSectionModel"], [33, 1, 1, "", "RadarTarget"], [33, 1, 1, "", "VirtualRadarTarget"]], "hermespy.channel.radar.multi.FixedCrossSection": [[33, 3, 1, "", "cross_section"], [33, 2, 1, "", "get_cross_section"]], "hermespy.channel.radar.multi.MultiTargetRadarChannel": [[33, 2, 1, "", "_realize"], [33, 2, 1, "", "add_target"], [33, 3, 1, "", "decorrelation_distance"], [33, 4, 1, "", "interfernce"], [33, 2, 1, "", "make_target"], [33, 2, 1, "", "recall_realization"], [33, 3, 1, "", "targets"]], "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization": [[33, 2, 1, "", "From_HDF"], [33, 2, 1, "", "to_HDF"]], "hermespy.channel.radar.multi.PhysicalRadarTarget": [[33, 3, 1, "", "cross_section"], [33, 3, 1, "", "moveable"], [33, 2, 1, "", "sample_cross_section"], [33, 2, 1, "", "sample_trajectory"]], "hermespy.channel.radar.multi.RadarCrossSectionModel": [[33, 2, 1, "", "get_cross_section"]], "hermespy.channel.radar.multi.RadarTarget": [[33, 2, 1, "", "sample_cross_section"], [33, 2, 1, "", "sample_trajectory"], [33, 3, 1, "", "static"]], "hermespy.channel.radar.multi.VirtualRadarTarget": [[33, 3, 1, "", "cross_section"], [33, 2, 1, "", "sample_cross_section"], [33, 2, 1, "", "sample_trajectory"]], "hermespy.channel.radar.radar": [[34, 1, 1, "", "RCRT"], [34, 1, 1, "", "RCST"], [34, 1, 1, "", "RadarChannelBase"], [34, 1, 1, "", "RadarChannelRealization"], [34, 1, 1, "", "RadarChannelSample"], [34, 1, 1, "", "RadarInterferencePath"], [34, 1, 1, "", "RadarPath"], [34, 1, 1, "", "RadarTargetPath"]], "hermespy.channel.radar.radar.RadarChannelBase": [[34, 3, 1, "", "attenuate"]], "hermespy.channel.radar.radar.RadarChannelSample": [[34, 3, 1, "", "expected_energy_scale"], [34, 3, 1, "", "gain"], [34, 2, 1, "", "null_hypothesis"], [34, 3, 1, "", "paths"], [34, 2, 1, "", "state"]], "hermespy.channel.radar.radar.RadarInterferencePath": [[34, 3, 1, "", "ground_truth"], [34, 2, 1, "", "propagation_delay"], [34, 2, 1, "", "propagation_response"], [34, 2, 1, "", "relative_velocity"]], "hermespy.channel.radar.radar.RadarPath": [[34, 2, 1, "", "add_propagation"], [34, 2, 1, "", "add_state"], [34, 3, 1, "", "attenuate"], [34, 3, 1, "", "ground_truth"], [34, 2, 1, "", "propagation_delay"], [34, 2, 1, "", "propagation_response"], [34, 2, 1, "", "relative_velocity"], [34, 3, 1, "", "static"]], "hermespy.channel.radar.radar.RadarTargetPath": [[34, 3, 1, "", "cross_section"], [34, 3, 1, "", "ground_truth"], [34, 3, 1, "", "position"], [34, 2, 1, "", "propagation_delay"], [34, 2, 1, "", "propagation_response"], [34, 3, 1, "", "reflection_phase"], [34, 2, 1, "", "relative_velocity"], [34, 3, 1, "", "velocity"]], "hermespy.channel.radar.single": [[35, 1, 1, "", "SingleTargetRadarChannel"], [35, 1, 1, "", "SingleTargetRadarChannelRealization"]], "hermespy.channel.radar.single.SingleTargetRadarChannel": [[35, 2, 1, "", "_realize"], [35, 3, 1, "", "decorrelation_distance"], [35, 3, 1, "", "radar_cross_section"], [35, 2, 1, "", "recall_realization"], [35, 3, 1, "", "target_azimuth"], [35, 3, 1, "", "target_exists"], [35, 3, 1, "", "target_range"], [35, 3, 1, "", "target_velocity"], [35, 3, 1, "", "target_zenith"]], "hermespy.channel.radar.single.SingleTargetRadarChannelRealization": [[35, 2, 1, "", "From_HDF"], [35, 2, 1, "", "to_HDF"]], "hermespy.core": [[56, 1, 1, "", "ValueType"], [57, 0, 0, "-", "monte_carlo"], [61, 0, 0, "-", "random_node"]], "hermespy.core.ValueType": [[56, 4, 1, "", "DB"], [56, 4, 1, "", "LIN"]], "hermespy.core.antennas": [[37, 1, 1, "", "AAT"], [37, 1, 1, "", "APT"], [37, 1, 1, "", "AT"], [37, 1, 1, "", "Antenna"], [37, 1, 1, "", "AntennaArray"], [37, 1, 1, "", "AntennaArrayBase"], [37, 1, 1, "", "AntennaArrayState"], [37, 1, 1, "", "AntennaMode"], [37, 1, 1, "", "AntennaPort"], [37, 1, 1, "", "CustomAntennaArray"], [37, 1, 1, "", "Dipole"], [37, 1, 1, "", "IdealAntenna"], [37, 1, 1, "", "LinearAntenna"], [37, 1, 1, "", "PatchAntenna"], [37, 1, 1, "", "UniformArray"]], "hermespy.core.antennas.Antenna": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "global_characteristics"], [37, 2, 1, "", "local_characteristics"], [37, 3, 1, "", "mode"], [37, 2, 1, "", "plot_gain"], [37, 2, 1, "", "plot_polarization"], [37, 3, 1, "", "port"]], "hermespy.core.antennas.AntennaArray": [[37, 3, 1, "", "antennas"], [37, 2, 1, "", "count_antennas"], [37, 2, 1, "", "count_receive_antennas"], [37, 2, 1, "", "count_transmit_antennas"], [37, 3, 1, "", "num_receive_antennas"], [37, 3, 1, "", "num_transmit_antennas"], [37, 3, 1, "", "receive_antennas"], [37, 3, 1, "", "receive_ports"], [37, 2, 1, "", "state"], [37, 3, 1, "", "transmit_antennas"], [37, 3, 1, "", "transmit_ports"]], "hermespy.core.antennas.AntennaArrayBase": [[37, 3, 1, "", "antennas"], [37, 2, 1, "", "cartesian_array_response"], [37, 2, 1, "", "cartesian_phase_response"], [37, 2, 1, "", "characteristics"], [37, 2, 1, "", "horizontal_phase_response"], [37, 3, 1, "", "num_antennas"], [37, 3, 1, "", "num_ports"], [37, 3, 1, "", "num_receive_antennas"], [37, 3, 1, "", "num_receive_ports"], [37, 3, 1, "", "num_transmit_antennas"], [37, 3, 1, "", "num_transmit_ports"], [37, 2, 1, "", "plot_topology"], [37, 3, 1, "", "ports"], [37, 3, 1, "", "receive_antennas"], [37, 3, 1, "", "receive_ports"], [37, 3, 1, "", "receive_topology"], [37, 2, 1, "", "spherical_phase_response"], [37, 3, 1, "", "topology"], [37, 3, 1, "", "transmit_antennas"], [37, 3, 1, "", "transmit_ports"], [37, 3, 1, "", "transmit_topology"]], "hermespy.core.antennas.AntennaArrayState": [[37, 3, 1, "", "antennas"], [37, 3, 1, "", "ports"], [37, 3, 1, "", "receive_antennas"], [37, 3, 1, "", "transmit_antennas"]], "hermespy.core.antennas.AntennaMode": [[37, 4, 1, "", "DUPLEX"], [37, 4, 1, "", "RX"], [37, 4, 1, "", "TX"]], "hermespy.core.antennas.AntennaPort": [[37, 2, 1, "", "add_antenna"], [37, 3, 1, "", "antennas"], [37, 2, 1, "", "antennas_updated"], [37, 3, 1, "", "array"], [37, 2, 1, "", "copy"], [37, 3, 1, "", "num_antennas"], [37, 3, 1, "", "num_receive_antennas"], [37, 3, 1, "", "num_transmit_antennas"], [37, 3, 1, "", "receive_antennas"], [37, 3, 1, "", "receiving"], [37, 2, 1, "", "remove_antenna"], [37, 3, 1, "", "transmit_antennas"], [37, 3, 1, "", "transmitting"]], "hermespy.core.antennas.CustomAntennaArray": [[37, 2, 1, "", "add_antenna"], [37, 2, 1, "", "add_port"], [37, 3, 1, "", "ports"], [37, 2, 1, "", "remove_port"]], "hermespy.core.antennas.Dipole": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "local_characteristics"], [37, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.IdealAntenna": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "local_characteristics"], [37, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.LinearAntenna": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "local_characteristics"], [37, 3, 1, "", "slant"]], "hermespy.core.antennas.PatchAntenna": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "local_characteristics"], [37, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.UniformArray": [[37, 3, 1, "", "antennas"], [37, 3, 1, "", "base_port"], [37, 3, 1, "", "dimensions"], [37, 3, 1, "", "num_antennas"], [37, 3, 1, "", "ports"], [37, 3, 1, "", "spacing"]], "hermespy.core.channel": [[38, 1, 1, "", "ChannelStateDimension"], [38, 1, 1, "", "ChannelStateFormat"], [38, 1, 1, "", "ChannelStateInformation"]], "hermespy.core.channel.ChannelStateDimension": [[38, 4, 1, "", "INFORMATION"], [38, 4, 1, "", "RECEIVE_STREAMS"], [38, 4, 1, "", "SAMPLES"], [38, 4, 1, "", "TRANSMIT_STREAMS"]], "hermespy.core.channel.ChannelStateFormat": [[38, 4, 1, "", "FREQUENCY_SELECTIVITY"], [38, 4, 1, "", "IMPULSE_RESPONSE"]], "hermespy.core.channel.ChannelStateInformation": [[38, 2, 1, "", "Ideal"], [38, 4, 1, "", "__num_delay_taps"], [38, 4, 1, "", "__num_frequency_bins"], [38, 4, 1, "", "__state"], [38, 4, 1, "", "__state_format"], [38, 2, 1, "", "concatenate"], [38, 2, 1, "", "dense_state"], [38, 3, 1, "", "linear"], [38, 3, 1, "", "num_delay_taps"], [38, 3, 1, "", "num_receive_streams"], [38, 3, 1, "", "num_samples"], [38, 3, 1, "", "num_symbols"], [38, 3, 1, "", "num_transmit_streams"], [38, 2, 1, "", "plot"], [38, 2, 1, "", "propagate"], [38, 2, 1, "", "received_streams"], [38, 2, 1, "", "reciprocal"], [38, 2, 1, "", "samples"], [38, 2, 1, "", "set_state"], [38, 3, 1, "", "state"], [38, 3, 1, "", "state_format"], [38, 2, 1, "", "to_frequency_selectivity"], [38, 2, 1, "", "to_impulse_response"]], "hermespy.core.definitions": [[40, 1, 1, "", "ConsoleMode"]], "hermespy.core.definitions.ConsoleMode": [[40, 4, 1, "", "INTERACTIVE"], [40, 4, 1, "", "LINEAR"], [40, 4, 1, "", "SILENT"]], "hermespy.core.device": [[41, 1, 1, "", "Device"], [42, 1, 1, "", "DeviceInput"], [43, 1, 1, "", "DeviceOutput"], [44, 1, 1, "", "DeviceReception"], [45, 1, 1, "", "DeviceTransmission"], [46, 1, 1, "", "OperationResult"], [47, 1, 1, "", "ProcessedDeviceInput"], [48, 1, 1, "", "Receiver"], [49, 1, 1, "", "Reception"], [50, 1, 1, "", "Transmission"], [51, 1, 1, "", "Transmitter"]], "hermespy.core.device.Device": [[41, 2, 1, "", "add_dsp"], [41, 3, 1, "", "antennas"], [41, 3, 1, "", "carrier_frequency"], [41, 2, 1, "", "generate_output"], [41, 3, 1, "", "input_callbacks"], [41, 3, 1, "", "max_frame_duration"], [41, 3, 1, "", "num_antennas"], [41, 3, 1, "", "num_digital_receive_ports"], [41, 3, 1, "", "num_digital_transmit_ports"], [41, 3, 1, "", "num_receive_antenna_ports"], [41, 3, 1, "", "num_receive_antennas"], [41, 3, 1, "", "num_transmit_antenna_ports"], [41, 3, 1, "", "num_transmit_antennas"], [41, 3, 1, "", "output_callbacks"], [41, 3, 1, "", "power"], [41, 2, 1, "", "process_input"], [41, 2, 1, "", "recall_reception"], [41, 2, 1, "", "recall_transmission"], [41, 2, 1, "", "receive"], [41, 3, 1, "", "receive_coding"], [41, 2, 1, "", "receive_operators"], [41, 4, 1, "", "receivers"], [41, 3, 1, "", "sampling_rate"], [41, 3, 1, "", "snr"], [41, 2, 1, "", "state"], [41, 2, 1, "", "transmit"], [41, 3, 1, "", "transmit_coding"], [41, 2, 1, "", "transmit_operators"], [41, 4, 1, "", "transmitters"], [41, 3, 1, "", "wavelength"]], "hermespy.core.device.DeviceInput": [[42, 3, 1, "", "impinging_signals"], [42, 3, 1, "", "num_impinging_signals"]], "hermespy.core.device.DeviceOutput": [[43, 3, 1, "", "carrier_frequency"], [43, 3, 1, "", "emerging_signals"], [43, 3, 1, "", "mixed_signal"], [43, 3, 1, "", "num_antennas"], [43, 3, 1, "", "num_emerging_signals"], [43, 3, 1, "", "sampling_rate"]], "hermespy.core.device.DeviceReception": [[44, 2, 1, "", "From_ProcessedDeviceInput"], [44, 2, 1, "", "Recall"], [44, 3, 1, "", "num_operator_receptions"], [44, 3, 1, "", "operator_receptions"]], "hermespy.core.device.DeviceTransmission": [[45, 2, 1, "", "From_Output"], [45, 2, 1, "", "Recall"], [45, 2, 1, "", "from_HDF"], [45, 3, 1, "", "num_operator_transmissions"], [45, 3, 1, "", "operator_transmissions"]], "hermespy.core.device.OperationResult": [[46, 4, 1, "", "signal"]], "hermespy.core.device.ProcessedDeviceInput": [[47, 3, 1, "", "num_operator_inputs"], [47, 3, 1, "", "operator_inputs"]], "hermespy.core.device.Receiver": [[48, 2, 1, "", "add_receive_callback"], [48, 3, 1, "", "power"], [48, 2, 1, "", "receive"], [48, 3, 1, "", "reference"], [48, 3, 1, "", "selected_receive_ports"]], "hermespy.core.device.Transmitter": [[51, 2, 1, "", "add_transmit_callback"], [51, 3, 1, "", "power"], [51, 3, 1, "", "selected_transmit_ports"], [51, 2, 1, "", "transmit"]], "hermespy.core.drop": [[52, 1, 1, "", "Drop"], [52, 1, 1, "", "DropType"], [52, 1, 1, "", "EvaluatedDrop"]], "hermespy.core.drop.Drop": [[52, 3, 1, "", "device_receptions"], [52, 3, 1, "", "device_transmissions"], [52, 3, 1, "", "num_device_receptions"], [52, 3, 1, "", "num_device_transmissions"], [52, 3, 1, "", "operator_inputs"], [52, 3, 1, "", "timestamp"]], "hermespy.core.drop.EvaluatedDrop": [[52, 3, 1, "", "artifacts"], [52, 3, 1, "", "num_artifacts"]], "hermespy.core.executable": [[53, 1, 1, "", "Executable"]], "hermespy.core.executable.Executable": [[53, 3, 1, "", "console"], [53, 3, 1, "", "console_mode"], [53, 3, 1, "", "debug"], [53, 2, 1, "", "default_results_dir"], [53, 2, 1, "", "execute"], [53, 3, 1, "", "results_dir"], [53, 2, 1, "", "run"], [53, 3, 1, "", "style"], [53, 2, 1, "", "style_context"], [53, 3, 1, "", "verbosity"]], "hermespy.core.factory": [[54, 1, 1, "", "Factory"], [54, 1, 1, "", "HDFSerializable"], [54, 1, 1, "", "SET"], [54, 1, 1, "", "Serializable"], [54, 1, 1, "", "SerializableEnum"], [54, 1, 1, "", "SerializableType"]], "hermespy.core.factory.Factory": [[54, 3, 1, "", "clean"], [54, 4, 1, "", "extensions"], [54, 2, 1, "", "from_file"], [54, 2, 1, "", "from_folder"], [54, 2, 1, "", "from_path"], [54, 2, 1, "", "from_str"], [54, 2, 1, "", "from_stream"], [54, 3, 1, "", "registered_classes"], [54, 3, 1, "", "registered_tags"], [54, 3, 1, "", "tag_registry"], [54, 2, 1, "", "to_file"], [54, 2, 1, "", "to_folder"], [54, 2, 1, "", "to_str"], [54, 2, 1, "", "to_stream"]], "hermespy.core.factory.SerializableEnum": [[54, 2, 1, "", "from_parameters"]], "hermespy.core.hooks": [[55, 1, 1, "", "Hook"], [55, 1, 1, "", "Hookable"], [55, 1, 1, "", "_RT"]], "hermespy.core.hooks.Hook": [[55, 2, 1, "", "remove"]], "hermespy.core.hooks.Hookable": [[55, 2, 1, "", "add_callback"], [55, 2, 1, "", "add_hook"], [55, 2, 1, "", "notify"], [55, 2, 1, "", "remove_hook"]], "hermespy.core.logarithmic": [[56, 1, 1, "", "Logarithmic"], [56, 1, 1, "", "LogarithmicSequence"], [56, 1, 1, "", "dB"]], "hermespy.core.logarithmic.Logarithmic": [[56, 2, 1, "", "From_Tuple"], [56, 3, 1, "", "conversion"], [56, 3, 1, "", "value_db"]], "hermespy.core.logarithmic.LogarithmicSequence": [[56, 3, 1, "", "conversion"], [56, 2, 1, "", "tolist"]], "hermespy.core.monte_carlo": [[57, 1, 1, "", "ActorRunResult"], [57, 1, 1, "", "Artifact"], [57, 1, 1, "", "ArtifactTemplate"], [57, 1, 1, "", "Evaluation"], [57, 1, 1, "", "EvaluationResult"], [57, 1, 1, "", "EvaluationTemplate"], [57, 1, 1, "", "Evaluator"], [57, 1, 1, "", "GridDimension"], [57, 1, 1, "", "GridSection"], [57, 1, 1, "", "MonteCarlo"], [57, 1, 1, "", "MonteCarloActor"], [57, 1, 1, "", "MonteCarloResult"], [57, 1, 1, "", "MonteCarloSample"], [57, 1, 1, "", "RegisteredDimension"], [57, 1, 1, "", "SampleGrid"], [57, 1, 1, "", "SamplePoint"], [57, 1, 1, "", "ScalarDimension"], [57, 1, 1, "", "ScalarEvaluationResult"], [57, 6, 1, "", "UnmatchableException"], [57, 5, 1, "", "register"]], "hermespy.core.monte_carlo.ActorRunResult": [[57, 4, 1, "", "message"], [57, 4, 1, "", "samples"]], "hermespy.core.monte_carlo.Artifact": [[57, 2, 1, "", "to_scalar"]], "hermespy.core.monte_carlo.ArtifactTemplate": [[57, 3, 1, "", "artifact"], [57, 2, 1, "", "to_scalar"]], "hermespy.core.monte_carlo.Evaluation": [[57, 2, 1, "", "artifact"]], "hermespy.core.monte_carlo.EvaluationResult": [[57, 3, 1, "", "evaluator"], [57, 3, 1, "", "grid"], [57, 2, 1, "", "print"], [57, 2, 1, "", "to_array"]], "hermespy.core.monte_carlo.EvaluationTemplate": [[57, 3, 1, "", "evaluation"]], "hermespy.core.monte_carlo.Evaluator": [[57, 3, 1, "", "abbreviation"], [57, 3, 1, "", "confidence"], [57, 2, 1, "", "evaluate"], [57, 2, 1, "", "generate_result"], [57, 3, 1, "", "plot_scale"], [57, 4, 1, "", "tick_format"], [57, 3, 1, "", "title"], [57, 3, 1, "", "tolerance"]], "hermespy.core.monte_carlo.GridDimension": [[57, 2, 1, "", "configure_point"], [57, 3, 1, "", "considered_objects"], [57, 3, 1, "", "dimension"], [57, 3, 1, "", "first_impact"], [57, 3, 1, "", "last_impact"], [57, 3, 1, "", "num_sample_points"], [57, 3, 1, "", "plot_scale"], [57, 3, 1, "", "sample_points"], [57, 3, 1, "", "tick_format"], [57, 3, 1, "", "title"]], "hermespy.core.monte_carlo.GridSection": [[57, 2, 1, "", "add_samples"], [57, 2, 1, "", "confidence_status"], [57, 3, 1, "", "confidences"], [57, 3, 1, "", "coordinates"], [57, 3, 1, "", "num_samples"], [57, 3, 1, "", "samples"]], "hermespy.core.monte_carlo.MonteCarlo": [[57, 2, 1, "", "add_dimension"], [57, 2, 1, "", "add_evaluator"], [57, 4, 1, "", "catch_exceptions"], [57, 3, 1, "", "console"], [57, 3, 1, "", "console_mode"], [57, 3, 1, "", "cpus_per_actor"], [57, 3, 1, "", "dimensions"], [57, 3, 1, "", "evaluators"], [57, 3, 1, "", "investigated_object"], [57, 3, 1, "", "max_num_samples"], [57, 3, 1, "", "min_num_samples"], [57, 2, 1, "", "new_dimension"], [57, 3, 1, "", "num_actors"], [57, 3, 1, "", "num_samples"], [57, 2, 1, "", "remove_dimension"], [57, 4, 1, "", "runtime_env"], [57, 3, 1, "", "section_block_size"], [57, 2, 1, "", "simulate"]], "hermespy.core.monte_carlo.MonteCarloActor": [[57, 4, 1, "", "catch_exceptions"], [57, 2, 1, "", "run"], [57, 2, 1, "", "stage_executors"], [57, 2, 1, "", "stage_identifiers"]], "hermespy.core.monte_carlo.MonteCarloResult": [[57, 3, 1, "", "evaluation_results"], [57, 3, 1, "", "performance_time"], [57, 2, 1, "", "plot"], [57, 2, 1, "", "print"], [57, 2, 1, "", "save_to_matlab"]], "hermespy.core.monte_carlo.MonteCarloSample": [[57, 3, 1, "", "artifact_scalars"], [57, 3, 1, "", "artifacts"], [57, 3, 1, "", "grid_section"], [57, 3, 1, "", "num_artifacts"], [57, 3, 1, "", "sample_index"]], "hermespy.core.monte_carlo.RegisteredDimension": [[57, 2, 1, "", "deleter"], [57, 3, 1, "", "first_impact"], [57, 2, 1, "", "getter"], [57, 2, 1, "", "is_registered"], [57, 3, 1, "", "last_impact"], [57, 2, 1, "", "setter"], [57, 3, 1, "", "title"]], "hermespy.core.monte_carlo.SamplePoint": [[57, 3, 1, "", "title"], [57, 3, 1, "", "value"]], "hermespy.core.monte_carlo.ScalarDimension": [[57, 3, 1, "", "title"]], "hermespy.core.monte_carlo.ScalarEvaluationResult": [[57, 2, 1, "", "From_Artifacts"], [57, 2, 1, "", "create_figure"], [57, 4, 1, "", "plot_surface"], [57, 3, 1, "", "title"], [57, 2, 1, "", "to_array"]], "hermespy.core.operators": [[58, 1, 1, "", "SignalReceiver"], [58, 1, 1, "", "SignalTransmitter"], [58, 1, 1, "", "SilentTransmitter"], [58, 1, 1, "", "StaticOperator"]], "hermespy.core.operators.SignalReceiver": [[58, 3, 1, "", "energy"], [58, 3, 1, "", "power"]], "hermespy.core.operators.SignalTransmitter": [[58, 3, 1, "", "power"], [58, 3, 1, "", "signal"]], "hermespy.core.operators.SilentTransmitter": [[58, 3, 1, "", "power"]], "hermespy.core.operators.StaticOperator": [[58, 3, 1, "", "frame_duration"], [58, 3, 1, "", "num_samples"], [58, 3, 1, "", "sampling_rate"]], "hermespy.core.pipeline": [[59, 1, 1, "", "Pipeline"]], "hermespy.core.pipeline.Pipeline": [[59, 2, 1, "", "add_device"], [59, 2, 1, "", "device_index"], [59, 2, 1, "", "new_device"], [59, 3, 1, "", "num_drops"], [59, 3, 1, "", "scenario"]], "hermespy.core.precoding": [[60, 1, 1, "", "Precoder"], [60, 1, 1, "", "PrecoderType"], [60, 1, 1, "", "Precoding"], [60, 1, 1, "", "PrecodingType"], [60, 1, 1, "", "ReceiveDecoder"], [60, 1, 1, "", "ReceiveDecoderType"], [60, 1, 1, "", "ReceivePrecoding"], [60, 1, 1, "", "ReceivePrecodingType"], [60, 1, 1, "", "ReceiveSignalCoding"], [60, 1, 1, "", "ReceiveStreamDecoder"], [60, 1, 1, "", "TransmitEncoder"], [60, 1, 1, "", "TransmitEncoderType"], [60, 1, 1, "", "TransmitPrecoding"], [60, 1, 1, "", "TransmitPrecodingType"], [60, 1, 1, "", "TransmitSignalCoding"], [60, 1, 1, "", "TransmitStreamEncoder"]], "hermespy.core.precoding.Precoder": [[60, 3, 1, "", "precoding"]], "hermespy.core.precoding.Precoding": [[60, 2, 1, "", "from_yaml"], [60, 2, 1, "", "pop_precoder"], [60, 2, 1, "", "to_yaml"]], "hermespy.core.precoding.ReceiveDecoder": [[60, 2, 1, "", "num_receive_output_streams"]], "hermespy.core.precoding.ReceivePrecoding": [[60, 2, 1, "", "num_receive_output_streams"]], "hermespy.core.precoding.ReceiveSignalCoding": [[60, 2, 1, "", "decode_streams"], [60, 4, 1, "", "yaml_tag"]], "hermespy.core.precoding.ReceiveStreamDecoder": [[60, 2, 1, "", "decode_streams"]], "hermespy.core.precoding.TransmitPrecoding": [[60, 2, 1, "", "num_transmit_input_streams"]], "hermespy.core.precoding.TransmitSignalCoding": [[60, 2, 1, "", "encode_streams"], [60, 4, 1, "", "yaml_tag"]], "hermespy.core.precoding.TransmitStreamEncoder": [[60, 2, 1, "", "encode_streams"]], "hermespy.core.random_node": [[61, 1, 1, "", "RandomNode"], [61, 1, 1, "", "RandomRealization"]], "hermespy.core.random_node.RandomRealization": [[61, 2, 1, "", "generator"], [61, 3, 1, "", "seed"]], "hermespy.core.scenario": [[62, 1, 1, "", "ReplayScenario"], [62, 1, 1, "", "Scenario"], [62, 1, 1, "", "ScenarioMode"], [62, 1, 1, "", "ScenarioType"]], "hermespy.core.scenario.Scenario": [[62, 2, 1, "", "Replay"], [62, 2, 1, "", "add_device"], [62, 3, 1, "", "campaign"], [62, 2, 1, "", "device_index"], [62, 2, 1, "", "device_registered"], [62, 3, 1, "", "devices"], [62, 2, 1, "", "drop"], [62, 3, 1, "", "drop_duration"], [62, 2, 1, "", "generate_outputs"], [62, 3, 1, "", "mode"], [62, 2, 1, "", "new_device"], [62, 3, 1, "", "num_devices"], [62, 3, 1, "", "num_drops"], [62, 3, 1, "", "num_operators"], [62, 3, 1, "", "num_receivers"], [62, 3, 1, "", "num_transmitters"], [62, 3, 1, "", "operators"], [62, 2, 1, "", "process_inputs"], [62, 2, 1, "", "receive_devices"], [62, 2, 1, "", "receive_operators"], [62, 3, 1, "", "receivers"], [62, 2, 1, "", "record"], [62, 2, 1, "", "replay"], [62, 4, 1, "", "serialized_attributes"], [62, 2, 1, "", "stop"], [62, 2, 1, "", "transmit_devices"], [62, 2, 1, "", "transmit_operators"], [62, 3, 1, "", "transmitters"], [62, 4, 1, "", "yaml_tag"]], "hermespy.core.scenario.ScenarioMode": [[62, 4, 1, "", "DEFAULT"], [62, 4, 1, "", "RECORD"], [62, 4, 1, "", "REPLAY"]], "hermespy.core.signal_model": [[63, 1, 1, "", "DenseSignal"], [63, 1, 1, "", "Signal"], [63, 1, 1, "", "SignalBlock"], [63, 1, 1, "", "SparseSignal"], [63, 1, 1, "", "_EyeVisualization"], [63, 1, 1, "", "_SamplesVisualization"], [63, 1, 1, "", "_SignalVisualization"]], "hermespy.core.signal_model.DenseSignal": [[63, 2, 1, "", "Create"], [63, 2, 1, "", "Empty"], [63, 2, 1, "", "append_samples"], [63, 2, 1, "", "append_streams"], [63, 3, 1, "", "energy"], [63, 2, 1, "", "getitem"], [63, 3, 1, "", "power"], [63, 2, 1, "", "set_samples"], [63, 3, 1, "", "title"], [63, 2, 1, "", "to_dense"]], "hermespy.core.signal_model.Signal": [[63, 2, 1, "", "Create"], [63, 2, 1, "", "Empty"], [63, 2, 1, "", "append_samples"], [63, 2, 1, "", "append_streams"], [63, 3, 1, "", "carrier_frequency"], [63, 2, 1, "", "copy"], [63, 4, 1, "", "delay"], [63, 3, 1, "", "duration"], [63, 3, 1, "", "energy"], [63, 3, 1, "", "eye"], [63, 4, 1, "", "filter_order"], [63, 3, 1, "", "frequencies"], [63, 2, 1, "", "from_interleaved"], [63, 2, 1, "", "from_ndarray"], [63, 2, 1, "", "getitem"], [63, 2, 1, "", "getstreams"], [63, 3, 1, "", "kwargs"], [63, 3, 1, "", "noise_power"], [63, 3, 1, "", "num_samples"], [63, 3, 1, "", "num_streams"], [63, 3, 1, "", "plot"], [63, 3, 1, "", "power"], [63, 2, 1, "", "resample"], [63, 3, 1, "", "sampling_rate"], [63, 2, 1, "", "set_samples"], [63, 3, 1, "", "shape"], [63, 2, 1, "", "superimpose"], [63, 3, 1, "", "timestamps"], [63, 3, 1, "", "title"], [63, 2, 1, "", "to_dense"], [63, 2, 1, "", "to_interleaved"]], "hermespy.core.signal_model.SignalBlock": [[63, 2, 1, "", "append_samples"], [63, 2, 1, "", "copy"], [63, 3, 1, "", "end"], [63, 3, 1, "", "energy"], [63, 3, 1, "", "num_samples"], [63, 3, 1, "", "num_streams"], [63, 3, 1, "", "offset"], [63, 3, 1, "", "power"], [63, 2, 1, "", "resample"]], "hermespy.core.signal_model.SparseSignal": [[63, 2, 1, "", "Create"], [63, 2, 1, "", "Empty"], [63, 2, 1, "", "append_samples"], [63, 2, 1, "", "append_streams"], [63, 2, 1, "", "set_samples"], [63, 3, 1, "", "title"]], "hermespy.core.signal_model._EyeVisualization": [[63, 3, 1, "", "title"]], "hermespy.core.signal_model._SamplesVisualization": [[63, 2, 1, "", "create_figure"], [63, 3, 1, "", "title"]], "hermespy.core.signal_model._SignalVisualization": [[63, 3, 1, "", "signal"]], "hermespy.core.state": [[64, 1, 1, "", "DeviceState"], [64, 1, 1, "", "ReceiveState"], [64, 1, 1, "", "State"], [64, 1, 1, "", "TransmitState"]], "hermespy.core.state.DeviceState": [[64, 2, 1, "", "Basic"], [64, 3, 1, "", "device_id"], [64, 3, 1, "", "num_digital_receive_ports"], [64, 3, 1, "", "num_digital_transmit_ports"], [64, 3, 1, "", "position"], [64, 2, 1, "", "receive_state"], [64, 2, 1, "", "transmit_state"]], "hermespy.core.state.ReceiveState": [[64, 3, 1, "", "num_digital_receive_ports"]], "hermespy.core.state.State": [[64, 3, 1, "", "antennas"], [64, 3, 1, "", "carrier_frequency"], [64, 3, 1, "", "pose"], [64, 3, 1, "", "position"], [64, 3, 1, "", "sampling_rate"], [64, 3, 1, "", "timestamp"], [64, 3, 1, "", "velocity"]], "hermespy.core.state.TransmitState": [[64, 3, 1, "", "num_digital_transmit_ports"]], "hermespy.core.transformation": [[65, 1, 1, "", "Direction"], [65, 1, 1, "", "Transformable"], [65, 1, 1, "", "TransformableBase"], [65, 1, 1, "", "TransformableLink"], [65, 1, 1, "", "Transformation"]], "hermespy.core.transformation.Direction": [[65, 2, 1, "", "From_Cartesian"], [65, 2, 1, "", "From_Spherical"], [65, 2, 1, "", "to_spherical"]], "hermespy.core.transformation.Transformable": [[65, 3, 1, "", "backwards_transformation"], [65, 3, 1, "", "forwards_transformation"], [65, 3, 1, "", "global_orientation"], [65, 3, 1, "", "global_position"], [65, 3, 1, "", "is_base"], [65, 2, 1, "", "lookat"], [65, 3, 1, "", "orientation"], [65, 3, 1, "", "pose"], [65, 3, 1, "", "position"], [65, 2, 1, "", "set_base"], [65, 2, 1, "", "to_local_coordinates"]], "hermespy.core.transformation.TransformableBase": [[65, 3, 1, "", "forwards_transformation"], [65, 2, 1, "", "set_base"]], "hermespy.core.transformation.TransformableLink": [[65, 2, 1, "", "add_link"], [65, 3, 1, "", "forwards_transformation"], [65, 3, 1, "", "linked_frames"], [65, 2, 1, "", "remove_link"], [65, 2, 1, "", "set_base"]], "hermespy.core.transformation.Transformation": [[65, 2, 1, "", "From_Quaternion"], [65, 2, 1, "", "From_RPY"], [65, 2, 1, "", "From_Translation"], [65, 2, 1, "", "No"], [65, 2, 1, "", "invert"], [65, 2, 1, "", "lookat"], [65, 2, 1, "", "rotate_direction"], [65, 3, 1, "", "rotation_quaternion"], [65, 3, 1, "", "rotation_rpy"], [65, 2, 1, "", "transform_direction"], [65, 2, 1, "", "transform_position"], [65, 3, 1, "", "translation"]], "hermespy.core.visualize": [[66, 1, 1, "", "ImageVisualization"], [66, 1, 1, "", "PlotVisualization"], [66, 1, 1, "", "QuadMeshVisualization"], [66, 1, 1, "", "ScatterVisualization"], [66, 1, 1, "", "StemVisualization"], [66, 4, 1, "", "VAT"], [66, 4, 1, "", "VLT"], [66, 1, 1, "", "VT"], [66, 1, 1, "", "Visualizable"], [66, 1, 1, "", "VisualizableAttribute"], [66, 1, 1, "", "Visualization"]], "hermespy.core.visualize.ImageVisualization": [[66, 3, 1, "", "image"]], "hermespy.core.visualize.PlotVisualization": [[66, 3, 1, "", "lines"]], "hermespy.core.visualize.QuadMeshVisualization": [[66, 3, 1, "", "mesh"]], "hermespy.core.visualize.ScatterVisualization": [[66, 3, 1, "", "paths"]], "hermespy.core.visualize.StemVisualization": [[66, 3, 1, "", "container"]], "hermespy.core.visualize.Visualizable": [[66, 2, 1, "", "create_figure"], [66, 3, 1, "", "title"], [66, 2, 1, "", "update_visualization"], [66, 3, 1, "", "visualization"], [66, 2, 1, "", "visualize"]], "hermespy.core.visualize.Visualization": [[66, 3, 1, "", "axes"], [66, 3, 1, "", "figure"], [66, 2, 1, "", "show"]], "hermespy.fec": [[69, 0, 0, "-", "block_interleaver"], [70, 0, 0, "-", "coding"], [71, 0, 0, "-", "cyclic_redundancy_check"], [74, 0, 0, "-", "repetition_encoder"], [77, 0, 0, "-", "scrambler"]], "hermespy.fec.aff3ct": [[68, 0, 0, "-", "bch"], [72, 0, 0, "-", "ldpc"], [73, 0, 0, "-", "polar"], [75, 0, 0, "-", "rs"], [76, 0, 0, "-", "rsc"], [78, 0, 0, "-", "turbo"]], "hermespy.fec.aff3ct.bch": [[68, 1, 1, "", "BCHCoding"]], "hermespy.fec.aff3ct.bch.BCHCoding": [[68, 3, 1, "", "bit_block_size"], [68, 3, 1, "", "code_block_size"], [68, 3, 1, "", "correction_power"], [68, 2, 1, "", "decode"], [68, 4, 1, "", "enabled"], [68, 2, 1, "", "encode"]], "hermespy.fec.aff3ct.ldpc": [[72, 1, 1, "", "LDPCCoding"]], "hermespy.fec.aff3ct.ldpc.LDPCCoding": [[72, 3, 1, "", "bit_block_size"], [72, 3, 1, "", "code_block_size"], [72, 2, 1, "", "decode"], [72, 4, 1, "", "enabled"], [72, 2, 1, "", "encode"], [72, 3, 1, "", "num_iterations"], [72, 3, 1, "", "rate"]], "hermespy.fec.aff3ct.polar": [[73, 1, 1, "", "PolarSCCoding"], [73, 1, 1, "", "PolarSCLCoding"]], "hermespy.fec.aff3ct.polar.PolarSCCoding": [[73, 3, 1, "", "bit_block_size"], [73, 3, 1, "", "code_block_size"], [73, 2, 1, "", "decode"], [73, 4, 1, "", "enabled"], [73, 2, 1, "", "encode"]], "hermespy.fec.aff3ct.polar.PolarSCLCoding": [[73, 3, 1, "", "bit_block_size"], [73, 3, 1, "", "code_block_size"], [73, 2, 1, "", "decode"], [73, 4, 1, "", "enabled"], [73, 2, 1, "", "encode"]], "hermespy.fec.aff3ct.rs": [[75, 1, 1, "", "ReedSolomonCoding"]], "hermespy.fec.aff3ct.rs.ReedSolomonCoding": [[75, 3, 1, "", "bit_block_size"], [75, 3, 1, "", "code_block_size"], [75, 3, 1, "", "correction_power"], [75, 2, 1, "", "decode"], [75, 4, 1, "", "enabled"], [75, 2, 1, "", "encode"]], "hermespy.fec.aff3ct.rsc": [[76, 1, 1, "", "RSCCoding"]], "hermespy.fec.aff3ct.rsc.RSCCoding": [[76, 3, 1, "", "bit_block_size"], [76, 3, 1, "", "code_block_size"], [76, 2, 1, "", "decode"], [76, 4, 1, "", "enabled"], [76, 2, 1, "", "encode"]], "hermespy.fec.aff3ct.turbo": [[78, 1, 1, "", "TurboCoding"]], "hermespy.fec.aff3ct.turbo.TurboCoding": [[78, 3, 1, "", "bit_block_size"], [78, 3, 1, "", "code_block_size"], [78, 2, 1, "", "decode"], [78, 4, 1, "", "enabled"], [78, 2, 1, "", "encode"], [78, 3, 1, "", "num_iterations"]], "hermespy.fec.block_interleaver": [[69, 1, 1, "", "BlockInterleaver"]], "hermespy.fec.block_interleaver.BlockInterleaver": [[69, 3, 1, "", "bit_block_size"], [69, 3, 1, "", "block_size"], [69, 3, 1, "", "code_block_size"], [69, 2, 1, "", "decode"], [69, 2, 1, "", "encode"], [69, 3, 1, "", "interleave_blocks"], [69, 3, 1, "", "rate"], [69, 4, 1, "", "yaml_tag"]], "hermespy.fec.coding": [[70, 1, 1, "", "Encoder"], [70, 1, 1, "", "EncoderManager"]], "hermespy.fec.coding.Encoder": [[70, 3, 1, "", "bit_block_size"], [70, 3, 1, "", "code_block_size"], [70, 2, 1, "", "decode"], [70, 3, 1, "", "enabled"], [70, 2, 1, "", "encode"], [70, 3, 1, "", "manager"], [70, 3, 1, "", "rate"], [70, 4, 1, "", "yaml_tag"]], "hermespy.fec.coding.EncoderManager": [[70, 2, 1, "", "add_encoder"], [70, 4, 1, "", "allow_padding"], [70, 4, 1, "", "allow_truncating"], [70, 3, 1, "", "bit_block_size"], [70, 3, 1, "", "code_block_size"], [70, 2, 1, "", "decode"], [70, 2, 1, "", "encode"], [70, 3, 1, "", "encoders"], [70, 3, 1, "", "modem"], [70, 3, 1, "", "rate"], [70, 2, 1, "", "required_num_data_bits"]], "hermespy.fec.cyclic_redundancy_check": [[71, 1, 1, "", "CyclicRedundancyCheck"]], "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck": [[71, 3, 1, "", "bit_block_size"], [71, 3, 1, "", "check_block_size"], [71, 3, 1, "", "code_block_size"], [71, 2, 1, "", "decode"], [71, 2, 1, "", "encode"], [71, 4, 1, "", "yaml_tag"]], "hermespy.fec.repetition_encoder": [[74, 1, 1, "", "RepetitionEncoder"]], "hermespy.fec.repetition_encoder.RepetitionEncoder": [[74, 3, 1, "", "bit_block_size"], [74, 3, 1, "", "code_block_size"], [74, 2, 1, "", "decode"], [74, 2, 1, "", "encode"], [74, 3, 1, "", "repetitions"], [74, 4, 1, "", "yaml_tag"]], "hermespy.fec.scrambler": [[77, 1, 1, "", "PseudoRandomGenerator"], [77, 1, 1, "", "Scrambler3GPP"], [77, 1, 1, "", "Scrambler80211a"]], "hermespy.fec.scrambler.PseudoRandomGenerator": [[77, 2, 1, "", "generate"], [77, 2, 1, "", "generate_sequence"], [77, 2, 1, "", "reset"]], "hermespy.fec.scrambler.Scrambler3GPP": [[77, 3, 1, "", "bit_block_size"], [77, 3, 1, "", "code_block_size"], [77, 2, 1, "", "decode"], [77, 2, 1, "", "encode"], [77, 4, 1, "", "yaml_tag"]], "hermespy.fec.scrambler.Scrambler80211a": [[77, 3, 1, "", "bit_block_size"], [77, 3, 1, "", "code_block_size"], [77, 2, 1, "", "decode"], [77, 2, 1, "", "encode"], [77, 3, 1, "", "seed"], [77, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop": [[92, 0, 0, "-", "visualizers"]], "hermespy.hardware_loop.audio.device": [[80, 1, 1, "", "AudioDevice"]], "hermespy.hardware_loop.audio.device.AudioDevice": [[80, 3, 1, "", "antennas"], [80, 3, 1, "", "carrier_frequency"], [80, 3, 1, "", "max_sampling_rate"], [80, 3, 1, "", "playback_channels"], [80, 3, 1, "", "playback_device"], [80, 3, 1, "", "record_channels"], [80, 3, 1, "", "record_device"], [80, 3, 1, "", "sampling_rate"], [80, 2, 1, "", "state"], [80, 2, 1, "", "trigger"]], "hermespy.hardware_loop.audio.scenario": [[81, 1, 1, "", "AudioScenario"]], "hermespy.hardware_loop.audio.scenario.AudioScenario": [[81, 2, 1, "", "new_device"], [81, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.calibration": [[82, 0, 0, "-", "delay"], [83, 0, 0, "-", "leakage"]], "hermespy.hardware_loop.calibration.delay": [[82, 1, 1, "", "DelayCalibration"]], "hermespy.hardware_loop.calibration.delay.DelayCalibration": [[82, 2, 1, "", "Estimate"], [82, 3, 1, "", "delay"]], "hermespy.hardware_loop.calibration.leakage": [[83, 1, 1, "", "SelectiveLeakageCalibration"]], "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration": [[83, 2, 1, "", "LeastSquaresEstimate"], [83, 2, 1, "", "MMSEEstimate"], [83, 3, 1, "", "delay"], [83, 2, 1, "", "estimate_delay"], [83, 3, 1, "", "leakage_response"], [83, 2, 1, "", "plot"], [83, 2, 1, "", "predict_leakage"], [83, 2, 1, "", "remove_leakage"], [83, 3, 1, "", "sampling_rate"]], "hermespy.hardware_loop.hardware_loop": [[84, 1, 1, "", "HardwareLoop"], [85, 1, 1, "", "HardwareLoopPlot"]], "hermespy.hardware_loop.hardware_loop.HardwareLoop": [[84, 2, 1, "", "add_dimension"], [84, 2, 1, "", "add_evaluator"], [84, 2, 1, "", "add_plot"], [84, 2, 1, "", "add_post_drop_hook"], [84, 2, 1, "", "add_pre_drop_hook"], [84, 2, 1, "", "evaluator_index"], [84, 3, 1, "", "evaluators"], [84, 3, 1, "", "iteration_priority"], [84, 4, 1, "", "manual_triggering"], [84, 2, 1, "", "new_dimension"], [84, 3, 1, "", "num_evaluators"], [84, 4, 1, "", "plot_information"], [84, 3, 1, "", "post_drop_hooks"], [84, 3, 1, "", "pre_drop_hooks"], [84, 4, 1, "", "record_drops"], [84, 2, 1, "", "replay"], [84, 2, 1, "", "run"], [84, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot": [[85, 3, 1, "", "hardware_loop"], [85, 2, 1, "", "prepare_plot"], [85, 3, 1, "", "title"], [85, 2, 1, "", "update_plot"]], "hermespy.hardware_loop.physical_device": [[86, 1, 1, "", "PhysicalDevice"]], "hermespy.hardware_loop.physical_device.PhysicalDevice": [[86, 3, 1, "", "adaptive_sampling"], [86, 3, 1, "", "antenna_calibration"], [86, 3, 1, "", "delay_calibration"], [86, 2, 1, "", "estimate_noise_power"], [86, 3, 1, "", "leakage_calibration"], [86, 2, 1, "", "load_calibration"], [86, 3, 1, "", "lowpass_bandwidth"], [86, 3, 1, "", "lowpass_filter"], [86, 3, 1, "", "max_receive_delay"], [86, 3, 1, "", "max_sampling_rate"], [86, 3, 1, "", "noise_power"], [86, 2, 1, "", "process_input"], [86, 2, 1, "", "receive"], [86, 2, 1, "", "save_calibration"], [86, 2, 1, "", "transmit"], [86, 2, 1, "", "trigger"], [86, 2, 1, "", "trigger_direct"], [86, 3, 1, "", "velocity"]], "hermespy.hardware_loop.physical_device_dummy": [[87, 1, 1, "", "PhysicalDeviceDummy"], [88, 1, 1, "", "PhysicalScenarioDummy"]], "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy": [[87, 3, 1, "", "max_sampling_rate"], [87, 2, 1, "", "process_input"], [87, 2, 1, "", "receive"], [87, 3, 1, "", "receive_transmission"], [87, 2, 1, "", "state"], [87, 2, 1, "", "transmit"], [87, 2, 1, "", "trigger"], [87, 2, 1, "", "trigger_direct"]], "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy": [[88, 2, 1, "", "add_device"], [88, 2, 1, "", "new_device"], [88, 2, 1, "", "receive_devices"]], "hermespy.hardware_loop.scenario": [[89, 1, 1, "", "PhysicalScenario"]], "hermespy.hardware_loop.scenario.PhysicalScenario": [[89, 2, 1, "", "add_device"], [89, 2, 1, "", "receive_devices"], [89, 2, 1, "", "trigger_direct"]], "hermespy.hardware_loop.uhd.system": [[90, 1, 1, "", "UsrpSystem"]], "hermespy.hardware_loop.uhd.system.UsrpSystem": [[90, 2, 1, "", "add_device"], [90, 2, 1, "", "new_device"], [90, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.uhd.usrp": [[91, 1, 1, "", "UsrpDevice"]], "hermespy.hardware_loop.uhd.usrp.UsrpDevice": [[91, 3, 1, "", "antennas"], [91, 3, 1, "", "carrier_frequency"], [91, 3, 1, "", "ip"], [91, 3, 1, "", "max_sampling_rate"], [91, 3, 1, "", "num_appended_zeros"], [91, 3, 1, "", "num_prepeneded_zeros"], [91, 3, 1, "", "num_receive_antenna_ports"], [91, 3, 1, "", "num_transmit_antenna_ports"], [91, 3, 1, "", "port"], [91, 3, 1, "", "rx_gain"], [91, 3, 1, "", "sampling_rate"], [91, 3, 1, "", "scale_transmission"], [91, 3, 1, "", "selected_receive_ports"], [91, 3, 1, "", "selected_transmit_ports"], [91, 2, 1, "", "state"], [91, 2, 1, "", "trigger"], [91, 3, 1, "", "tx_gain"], [91, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.visualizers": [[92, 1, 1, "", "ArtifactPlot"], [92, 1, 1, "", "DeviceReceptionPlot"], [92, 1, 1, "", "DeviceTransmissionPlot"], [92, 1, 1, "", "EvaluationPlot"], [92, 1, 1, "", "EyePlot"], [92, 1, 1, "", "HardwareLoopDevicePlot"], [92, 1, 1, "", "HardwareLoopEvaluatorPlot"], [92, 1, 1, "", "RadarRangePlot"], [92, 1, 1, "", "ReceivedConstellationPlot"], [92, 1, 1, "", "SignalPlot"]], "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot": [[92, 3, 1, "", "device"]], "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot": [[92, 3, 1, "", "evaluator"], [92, 3, 1, "", "evaluator_index"]], "hermespy.hardware_loop.visualizers.RadarRangePlot": [[92, 3, 1, "", "radar"]], "hermespy.hardware_loop.visualizers.SignalPlot": [[92, 3, 1, "", "space"]], "hermespy.jcas.jcas": [[94, 1, 1, "", "DuplexJCASOperator"], [94, 1, 1, "", "JCASReception"], [94, 1, 1, "", "JCASTransmission"]], "hermespy.jcas.jcas.DuplexJCASOperator": [[94, 3, 1, "", "frame_duration"], [94, 3, 1, "", "sampling_rate"]], "hermespy.jcas.matched_filtering": [[95, 1, 1, "", "MatchedFilterJcas"]], "hermespy.jcas.matched_filtering.MatchedFilterJcas": [[95, 3, 1, "", "frame_duration"], [95, 3, 1, "", "max_range"], [95, 3, 1, "", "power"], [95, 3, 1, "", "range_resolution"], [95, 3, 1, "", "sampling_rate"]], "hermespy.jcas.ofdm_radar": [[96, 1, 1, "", "OFDMRadar"]], "hermespy.jcas.ofdm_radar.OFDMRadar": [[96, 3, 1, "", "max_range"], [96, 3, 1, "", "max_relative_doppler"], [96, 3, 1, "", "power"], [96, 3, 1, "", "range_resolution"], [96, 3, 1, "", "relative_doppler_resolution"]], "hermespy.modem.bits_source": [[98, 1, 1, "", "BitsSource"], [98, 1, 1, "", "RandomBitsSource"], [98, 1, 1, "", "StreamBitsSource"]], "hermespy.modem.bits_source.BitsSource": [[98, 2, 1, "", "generate_bits"]], "hermespy.modem.bits_source.RandomBitsSource": [[98, 2, 1, "", "generate_bits"]], "hermespy.modem.bits_source.StreamBitsSource": [[98, 2, 1, "", "generate_bits"]], "hermespy.modem.evaluators": [[102, 1, 1, "", "BitErrorArtifact"], [102, 1, 1, "", "BitErrorEvaluation"], [102, 1, 1, "", "BitErrorEvaluator"], [103, 1, 1, "", "BlockErrorArtifact"], [103, 1, 1, "", "BlockErrorEvaluation"], [103, 1, 1, "", "BlockErrorEvaluator"], [100, 1, 1, "", "CommunicationEvaluator"], [104, 1, 1, "", "ConstellationEVM"], [104, 1, 1, "", "EVMArtifact"], [104, 1, 1, "", "EVMEvaluation"], [105, 1, 1, "", "FrameErrorArtifact"], [105, 1, 1, "", "FrameErrorEvaluation"], [105, 1, 1, "", "FrameErrorEvaluator"], [106, 1, 1, "", "ThroughputArtifact"], [106, 1, 1, "", "ThroughputEvaluation"], [106, 1, 1, "", "ThroughputEvaluator"]], "hermespy.modem.evaluators.BitErrorEvaluation": [[102, 2, 1, "", "artifact"], [102, 3, 1, "", "title"]], "hermespy.modem.evaluators.BitErrorEvaluator": [[102, 3, 1, "", "abbreviation"], [102, 2, 1, "", "evaluate"], [102, 3, 1, "", "title"]], "hermespy.modem.evaluators.BlockErrorEvaluation": [[103, 2, 1, "", "artifact"], [103, 3, 1, "", "title"]], "hermespy.modem.evaluators.BlockErrorEvaluator": [[103, 3, 1, "", "abbreviation"], [103, 2, 1, "", "evaluate"], [103, 3, 1, "", "title"]], "hermespy.modem.evaluators.CommunicationEvaluator": [[100, 2, 1, "", "generate_result"], [100, 3, 1, "", "receiving_modem"], [100, 3, 1, "", "transmitting_modem"]], "hermespy.modem.evaluators.ConstellationEVM": [[104, 3, 1, "", "abbreviation"], [104, 2, 1, "", "evaluate"], [104, 3, 1, "", "title"]], "hermespy.modem.evaluators.EVMEvaluation": [[104, 3, 1, "", "abbreviation"], [104, 2, 1, "", "artifact"], [104, 3, 1, "", "title"]], "hermespy.modem.evaluators.FrameErrorEvaluation": [[105, 2, 1, "", "artifact"], [105, 3, 1, "", "title"]], "hermespy.modem.evaluators.FrameErrorEvaluator": [[105, 3, 1, "", "abbreviation"], [105, 2, 1, "", "evaluate"], [105, 3, 1, "", "title"], [105, 4, 1, "", "yaml_tag"]], "hermespy.modem.evaluators.ThroughputEvaluation": [[106, 2, 1, "", "artifact"], [106, 3, 1, "", "title"]], "hermespy.modem.evaluators.ThroughputEvaluator": [[106, 3, 1, "", "abbreviation"], [106, 2, 1, "", "evaluate"], [106, 3, 1, "", "title"], [106, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem": [[107, 1, 1, "", "BaseModem"], [108, 1, 1, "", "CommunicationReception"], [109, 1, 1, "", "CommunicationReceptionFrame"], [110, 1, 1, "", "CommunicationTransmission"], [111, 1, 1, "", "CommunicationTransmissionFrame"], [112, 1, 1, "", "DuplexModem"], [113, 1, 1, "", "ReceivingModem"], [113, 1, 1, "", "ReceivingModemBase"], [114, 1, 1, "", "SimplexLink"], [115, 1, 1, "", "TransmittingModem"], [115, 1, 1, "", "TransmittingModemBase"]], "hermespy.modem.modem.BaseModem": [[107, 3, 1, "", "encoder_manager"], [107, 3, 1, "", "frame_duration"], [107, 3, 1, "", "frame_generator"], [107, 3, 1, "", "samples_per_frame"], [107, 3, 1, "", "sampling_rate"], [107, 3, 1, "", "symbol_duration"], [107, 3, 1, "", "waveform"]], "hermespy.modem.modem.CommunicationReception": [[108, 3, 1, "", "bits"], [108, 3, 1, "", "encoded_bits"], [108, 3, 1, "", "equalized_symbols"], [108, 4, 1, "", "frames"], [108, 3, 1, "", "num_frames"], [108, 3, 1, "", "symbols"]], "hermespy.modem.modem.CommunicationReceptionFrame": [[109, 4, 1, "", "bit_block_size"], [109, 4, 1, "", "code_block_size"], [109, 4, 1, "", "decoded_bits"], [109, 4, 1, "", "decoded_signal"], [109, 4, 1, "", "decoded_symbols"], [109, 4, 1, "", "encoded_bits"], [109, 4, 1, "", "equalized_symbols"], [109, 4, 1, "", "signal"], [109, 4, 1, "", "symbols"], [109, 4, 1, "", "timestamp"]], "hermespy.modem.modem.CommunicationTransmission": [[110, 3, 1, "", "bits"], [110, 4, 1, "", "frames"], [110, 3, 1, "", "num_frames"], [110, 3, 1, "", "symbols"]], "hermespy.modem.modem.CommunicationTransmissionFrame": [[111, 4, 1, "", "bit_block_size"], [111, 4, 1, "", "bits"], [111, 4, 1, "", "code_block_size"], [111, 4, 1, "", "encoded_bits"], [111, 4, 1, "", "encoded_symbols"], [111, 4, 1, "", "signal"], [111, 4, 1, "", "symbols"], [111, 4, 1, "", "timestamp"]], "hermespy.modem.modem.DuplexModem": [[112, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.ReceivingModem": [[113, 3, 1, "", "power"], [113, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.ReceivingModemBase": [[113, 2, 1, "", "_receive"], [113, 3, 1, "", "receive_signal_coding"], [113, 3, 1, "", "receive_symbol_coding"]], "hermespy.modem.modem.SimplexLink": [[114, 2, 1, "", "connect"], [114, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.TransmittingModem": [[115, 3, 1, "", "power"]], "hermespy.modem.modem.TransmittingModemBase": [[115, 2, 1, "", "_transmit"], [115, 3, 1, "", "bits_source"], [115, 3, 1, "", "transmit_signal_coding"], [115, 3, 1, "", "transmit_symbol_coding"]], "hermespy.modem.precoding.dft": [[117, 1, 1, "", "DFT"]], "hermespy.modem.precoding.dft.DFT": [[117, 2, 1, "", "decode_symbols"], [117, 2, 1, "", "encode_symbols"], [117, 3, 1, "", "num_receive_input_symbols"], [117, 2, 1, "", "num_receive_output_streams"], [117, 3, 1, "", "num_receive_output_symbols"], [117, 3, 1, "", "num_transmit_input_symbols"], [117, 3, 1, "", "num_transmit_output_symbols"]], "hermespy.modem.precoding.ratio_combining": [[118, 1, 1, "", "MaximumRatioCombining"]], "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining": [[118, 2, 1, "", "decode_symbols"], [118, 3, 1, "", "num_receive_input_symbols"], [118, 2, 1, "", "num_receive_output_streams"], [118, 3, 1, "", "num_receive_output_symbols"]], "hermespy.modem.precoding.single_carrier": [[119, 1, 1, "", "SingleCarrier"]], "hermespy.modem.precoding.single_carrier.SingleCarrier": [[119, 2, 1, "", "decode_symbols"], [119, 3, 1, "", "num_receive_input_symbols"], [119, 2, 1, "", "num_receive_output_streams"], [119, 3, 1, "", "num_receive_output_symbols"]], "hermespy.modem.precoding.space_time_block_coding": [[120, 1, 1, "", "Alamouti"], [120, 1, 1, "", "Ganesan"]], "hermespy.modem.precoding.space_time_block_coding.Alamouti": [[120, 2, 1, "", "decode_symbols"], [120, 2, 1, "", "encode_symbols"], [120, 3, 1, "", "num_receive_input_symbols"], [120, 2, 1, "", "num_receive_output_streams"], [120, 3, 1, "", "num_receive_output_symbols"], [120, 3, 1, "", "num_transmit_input_symbols"], [120, 3, 1, "", "num_transmit_output_symbols"]], "hermespy.modem.precoding.space_time_block_coding.Ganesan": [[120, 2, 1, "", "decode_symbols"], [120, 2, 1, "", "encode_symbols"], [120, 3, 1, "", "num_receive_input_symbols"], [120, 2, 1, "", "num_receive_output_streams"], [120, 3, 1, "", "num_receive_output_symbols"], [120, 3, 1, "", "num_transmit_input_symbols"], [120, 3, 1, "", "num_transmit_output_symbols"]], "hermespy.modem.precoding.symbol_precoding": [[121, 1, 1, "", "ReceiveSymbolDecoder"], [121, 1, 1, "", "TransmitSymbolEncoder"]], "hermespy.modem.precoding.symbol_precoding.ReceiveSymbolDecoder": [[121, 3, 1, "", "decode_rate"], [121, 2, 1, "", "decode_symbols"], [121, 3, 1, "", "num_receive_input_symbols"], [121, 3, 1, "", "num_receive_output_symbols"]], "hermespy.modem.precoding.symbol_precoding.TransmitSymbolEncoder": [[121, 3, 1, "", "encode_rate"], [121, 2, 1, "", "encode_symbols"], [121, 3, 1, "", "num_transmit_input_symbols"], [121, 3, 1, "", "num_transmit_output_symbols"]], "hermespy.modem.symbols": [[122, 1, 1, "", "StatedSymbols"], [122, 1, 1, "", "Symbols"], [122, 1, 1, "", "_ConstellationPlot"]], "hermespy.modem.symbols.StatedSymbols": [[122, 2, 1, "", "copy"], [122, 2, 1, "", "dense_states"], [122, 3, 1, "", "num_transmit_streams"], [122, 3, 1, "", "states"]], "hermespy.modem.symbols.Symbols": [[122, 2, 1, "", "append_stream"], [122, 2, 1, "", "append_symbols"], [122, 2, 1, "", "copy"], [122, 3, 1, "", "num_blocks"], [122, 3, 1, "", "num_streams"], [122, 3, 1, "", "num_symbols"], [122, 3, 1, "", "plot_constellation"], [122, 3, 1, "", "raw"]], "hermespy.modem.symbols._ConstellationPlot": [[122, 3, 1, "", "title"]], "hermespy.modem.waveform": [[123, 1, 1, "", "CWT"], [124, 1, 1, "", "ChannelEqualization"], [125, 1, 1, "", "ChannelEstimation"], [123, 1, 1, "", "CommunicationWaveform"], [123, 1, 1, "", "ConfigurablePilotWaveform"], [123, 1, 1, "", "PilotCommunicationWaveform"], [126, 1, 1, "", "Synchronization"], [127, 1, 1, "", "ZeroForcingChannelEqualization"]], "hermespy.modem.waveform.ChannelEqualization": [[124, 2, 1, "", "equalize_channel"], [124, 3, 1, "", "waveform"]], "hermespy.modem.waveform.ChannelEstimation": [[125, 2, 1, "", "estimate_channel"], [125, 3, 1, "", "waveform"]], "hermespy.modem.waveform.CommunicationWaveform": [[123, 3, 1, "", "bandwidth"], [123, 3, 1, "", "bit_energy"], [123, 2, 1, "", "bits_per_frame"], [123, 3, 1, "", "bits_per_symbol"], [123, 3, 1, "", "channel_equalization"], [123, 3, 1, "", "channel_estimation"], [123, 2, 1, "", "data_rate"], [123, 2, 1, "", "demodulate"], [123, 2, 1, "", "equalize_symbols"], [123, 2, 1, "", "estimate_channel"], [123, 3, 1, "", "frame_duration"], [123, 2, 1, "", "map"], [123, 3, 1, "", "modem"], [123, 2, 1, "", "modulate"], [123, 3, 1, "", "modulation_order"], [123, 3, 1, "", "num_data_symbols"], [123, 3, 1, "", "oversampling_factor"], [123, 2, 1, "", "pick"], [123, 2, 1, "", "place"], [123, 3, 1, "", "power"], [123, 3, 1, "", "samples_per_frame"], [123, 3, 1, "", "sampling_rate"], [123, 3, 1, "", "symbol_duration"], [123, 3, 1, "", "symbol_energy"], [123, 3, 1, "", "symbol_precoding_support"], [123, 4, 1, "", "symbol_type"], [123, 3, 1, "", "synchronization"], [123, 2, 1, "", "unmap"]], "hermespy.modem.waveform.ConfigurablePilotWaveform": [[123, 4, 1, "", "pilot_symbol_sequence"], [123, 2, 1, "", "pilot_symbols"], [123, 4, 1, "", "repeat_pilot_symbol_sequence"]], "hermespy.modem.waveform.PilotCommunicationWaveform": [[123, 3, 1, "", "pilot_signal"]], "hermespy.modem.waveform.Synchronization": [[126, 2, 1, "", "synchronize"], [126, 3, 1, "", "waveform"]], "hermespy.modem.waveform.ZeroForcingChannelEqualization": [[127, 2, 1, "", "equalize_channel"], [127, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_chirp_fsk": [[129, 1, 1, "", "ChirpFSKCorrelationSynchronization"], [129, 1, 1, "", "ChirpFSKSynchronization"], [129, 1, 1, "", "ChirpFSKWaveform"]], "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization": [[129, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform": [[129, 3, 1, "", "bandwidth"], [129, 3, 1, "", "bit_energy"], [129, 3, 1, "", "bits_per_symbol"], [129, 3, 1, "", "chirp_bandwidth"], [129, 3, 1, "", "chirp_duration"], [129, 3, 1, "", "chirps_in_frame"], [129, 2, 1, "", "demodulate"], [129, 3, 1, "", "frame_duration"], [129, 3, 1, "", "freq_difference"], [129, 3, 1, "", "guard_interval"], [129, 2, 1, "", "map"], [129, 2, 1, "", "modulate"], [129, 3, 1, "", "modulation_order"], [129, 3, 1, "", "num_data_chirps"], [129, 3, 1, "", "num_data_symbols"], [129, 3, 1, "", "num_pilot_chirps"], [129, 2, 1, "", "pick"], [129, 3, 1, "", "pilot_signal"], [129, 2, 1, "", "place"], [129, 3, 1, "", "power"], [129, 3, 1, "", "samples_in_chirp"], [129, 3, 1, "", "samples_per_frame"], [129, 3, 1, "", "sampling_rate"], [129, 3, 1, "", "symbol_duration"], [129, 3, 1, "", "symbol_energy"], [129, 3, 1, "", "symbol_precoding_support"], [129, 4, 1, "", "symbol_type"], [129, 2, 1, "", "unmap"]], "hermespy.modem.waveform_correlation_synchronization": [[130, 1, 1, "", "CorrelationSynchronization"]], "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization": [[130, 3, 1, "", "guard_ratio"], [130, 2, 1, "", "synchronize"], [130, 3, 1, "", "threshold"], [130, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier": [[132, 1, 1, "", "FMCWWaveform"], [131, 1, 1, "", "FilteredSingleCarrierWaveform"], [133, 1, 1, "", "RaisedCosineWaveform"], [134, 1, 1, "", "RectangularWaveform"], [131, 1, 1, "", "RolledOffSingleCarrierWaveform"], [135, 1, 1, "", "RootRaisedCosineWaveform"]], "hermespy.modem.waveform_single_carrier.FMCWWaveform": [[132, 3, 1, "", "bandwidth"], [132, 3, 1, "", "chirp_duration"], [132, 3, 1, "", "chirp_slope"], [132, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform": [[131, 3, 1, "", "bit_energy"], [131, 2, 1, "", "demodulate"], [131, 3, 1, "", "guard_interval"], [131, 2, 1, "", "map"], [131, 2, 1, "", "modulate"], [131, 3, 1, "", "modulation_order"], [131, 3, 1, "", "num_data_symbols"], [131, 3, 1, "", "num_guard_samples"], [131, 3, 1, "", "num_postamble_symbols"], [131, 3, 1, "", "num_preamble_symbols"], [131, 2, 1, "", "pick"], [131, 3, 1, "", "pilot_rate"], [131, 3, 1, "", "pilot_signal"], [131, 2, 1, "", "place"], [131, 2, 1, "", "plot_filter"], [131, 2, 1, "", "plot_filter_correlation"], [131, 3, 1, "", "power"], [131, 3, 1, "", "samples_per_frame"], [131, 3, 1, "", "sampling_rate"], [131, 3, 1, "", "symbol_duration"], [131, 3, 1, "", "symbol_energy"], [131, 3, 1, "", "symbol_rate"], [131, 2, 1, "", "unmap"]], "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform": [[133, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.RectangularWaveform": [[134, 3, 1, "", "bandwidth"], [134, 3, 1, "", "relative_bandwidth"], [134, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform": [[131, 3, 1, "", "bandwidth"], [131, 3, 1, "", "filter_length"], [131, 3, 1, "", "relative_bandwidth"], [131, 3, 1, "", "roll_off"]], "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform": [[135, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.ocdm": [[144, 1, 1, "", "OCDMWaveform"]], "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform": [[144, 3, 1, "", "bandwidth"], [144, 3, 1, "", "sampling_rate"]], "hermespy.modem.waveforms.orthogonal.ofdm": [[146, 1, 1, "", "OFDMWaveform"], [147, 1, 1, "", "SchmidlCoxPilotSection"], [148, 1, 1, "", "SchmidlCoxSynchronization"]], "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform": [[146, 3, 1, "", "bandwidth"], [146, 4, 1, "", "dc_suppression"], [146, 3, 1, "", "samples_per_frame"], [146, 3, 1, "", "sampling_rate"], [146, 3, 1, "", "subcarrier_spacing"]], "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection": [[147, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization": [[148, 2, 1, "", "synchronize"], [148, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.otfs": [[149, 1, 1, "", "OTFSWaveform"]], "hermespy.modem.waveforms.orthogonal.waveform": [[137, 1, 1, "", "ElementType"], [137, 1, 1, "", "GridElement"], [138, 1, 1, "", "GridResource"], [139, 1, 1, "", "GridSection"], [140, 1, 1, "", "GuardSection"], [141, 1, 1, "", "OrthogonalWaveform"], [142, 1, 1, "", "PilotSection"], [138, 1, 1, "", "PrefixType"], [143, 1, 1, "", "SymbolSection"]], "hermespy.modem.waveforms.orthogonal.waveform.ElementType": [[137, 4, 1, "", "DATA"], [137, 4, 1, "", "NULL"], [137, 4, 1, "", "REFERENCE"]], "hermespy.modem.waveforms.orthogonal.waveform.GridElement": [[137, 4, 1, "", "repetitions"], [137, 4, 1, "", "type"]], "hermespy.modem.waveforms.orthogonal.waveform.GridResource": [[138, 4, 1, "", "elements"], [138, 3, 1, "", "mask"], [138, 3, 1, "", "num_references"], [138, 3, 1, "", "num_subcarriers"], [138, 3, 1, "", "num_symbols"], [138, 3, 1, "", "prefix_ratio"], [138, 4, 1, "", "prefix_type"], [138, 3, 1, "", "repetitions"]], "hermespy.modem.waveforms.orthogonal.waveform.GridSection": [[139, 3, 1, "", "num_references"], [139, 3, 1, "", "num_repetitions"], [139, 3, 1, "", "num_samples"], [139, 3, 1, "", "num_subcarriers"], [139, 3, 1, "", "num_symbols"], [139, 3, 1, "", "num_words"], [139, 2, 1, "", "pick_samples"], [139, 2, 1, "", "pick_symbols"], [139, 2, 1, "", "place_samples"], [139, 2, 1, "", "place_symbols"], [139, 3, 1, "", "resource_mask"], [139, 3, 1, "", "sample_offset"], [139, 3, 1, "", "wave"]], "hermespy.modem.waveforms.orthogonal.waveform.GuardSection": [[140, 3, 1, "", "duration"], [140, 3, 1, "", "num_samples"], [140, 2, 1, "", "pick_samples"], [140, 2, 1, "", "place_samples"]], "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform": [[141, 3, 1, "", "bit_energy"], [141, 2, 1, "", "demodulate"], [141, 3, 1, "", "grid_resources"], [141, 3, 1, "", "grid_structure"], [141, 2, 1, "", "map"], [141, 3, 1, "", "mapping"], [141, 2, 1, "", "modulate"], [141, 3, 1, "", "modulation_order"], [141, 3, 1, "", "num_data_symbols"], [141, 3, 1, "", "num_subcarriers"], [141, 2, 1, "", "pick"], [141, 3, 1, "", "pilot_section"], [141, 3, 1, "", "pilot_signal"], [141, 2, 1, "", "place"], [141, 3, 1, "", "plot_grid"], [141, 3, 1, "", "power"], [141, 3, 1, "", "references_per_frame"], [141, 3, 1, "", "resource_mask"], [141, 3, 1, "", "samples_per_frame"], [141, 3, 1, "", "symbol_duration"], [141, 3, 1, "", "symbol_energy"], [141, 3, 1, "", "symbols_per_frame"], [141, 2, 1, "", "unmap"], [141, 3, 1, "", "words_per_frame"]], "hermespy.modem.waveforms.orthogonal.waveform.PilotSection": [[142, 2, 1, "", "from_yaml"], [142, 2, 1, "", "generate"], [142, 3, 1, "", "num_references"], [142, 3, 1, "", "num_repetitions"], [142, 3, 1, "", "num_samples"], [142, 3, 1, "", "num_subcarriers"], [142, 3, 1, "", "num_symbols"], [142, 3, 1, "", "num_words"], [142, 2, 1, "", "pick_samples"], [142, 3, 1, "", "pilot_elements"], [142, 2, 1, "", "place_samples"], [142, 2, 1, "", "place_symbols"], [142, 3, 1, "", "resource_mask"], [142, 3, 1, "", "sample_offset"], [142, 2, 1, "", "to_yaml"], [142, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.waveform.PrefixType": [[138, 4, 1, "", "CYCLIC"], [138, 4, 1, "", "NONE"], [138, 4, 1, "", "ZEROPAD"]], "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection": [[143, 3, 1, "", "num_references"], [143, 3, 1, "", "num_samples"], [143, 3, 1, "", "num_subcarriers"], [143, 3, 1, "", "num_symbols"], [143, 3, 1, "", "num_words"], [143, 4, 1, "", "pattern"], [143, 2, 1, "", "pick_samples"], [143, 2, 1, "", "place_samples"], [143, 3, 1, "", "resource_mask"]], "hermespy.radar.cube": [[151, 1, 1, "", "RadarCube"]], "hermespy.radar.cube.RadarCube": [[151, 3, 1, "", "angle_bins"], [151, 3, 1, "", "carrier_frequency"], [151, 3, 1, "", "data"], [151, 3, 1, "", "doppler_bins"], [151, 2, 1, "", "normalize_power"], [151, 3, 1, "", "plot_angles"], [151, 3, 1, "", "plot_range"], [151, 3, 1, "", "plot_range_velocity"], [151, 3, 1, "", "range_bins"], [151, 3, 1, "", "velocity_bins"]], "hermespy.radar.detection": [[152, 1, 1, "", "MaxDetector"], [153, 1, 1, "", "PointDetection"], [154, 1, 1, "", "RadarDetector"], [155, 1, 1, "", "RadarPointCloud"], [156, 1, 1, "", "ThresholdDetector"]], "hermespy.radar.detection.MaxDetector": [[152, 2, 1, "", "detect"], [152, 4, 1, "", "yaml_tag"]], "hermespy.radar.detection.PointDetection": [[153, 2, 1, "", "FromSpherical"], [153, 3, 1, "", "position"], [153, 3, 1, "", "power"], [153, 3, 1, "", "velocity"]], "hermespy.radar.detection.RadarDetector": [[154, 2, 1, "", "detect"]], "hermespy.radar.detection.RadarPointCloud": [[155, 2, 1, "", "add_point"], [155, 2, 1, "", "create_figure"], [155, 3, 1, "", "max_range"], [155, 3, 1, "", "num_points"], [155, 3, 1, "", "points"], [155, 3, 1, "", "title"]], "hermespy.radar.detection.ThresholdDetector": [[156, 2, 1, "", "detect"], [156, 3, 1, "", "min_power"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peak_detection"]], "hermespy.radar.evaluators": [[157, 1, 1, "", "DetectionProbArtifact"], [157, 1, 1, "", "DetectionProbEvaluator"], [157, 1, 1, "", "DetectionProbabilityEvaluation"], [158, 1, 1, "", "RadarEvaluator"], [159, 1, 1, "", "ReceiverOperatingCharacteristic"], [159, 1, 1, "", "RocArtifact"], [159, 1, 1, "", "RocEvaluation"], [159, 1, 1, "", "RocEvaluationResult"], [160, 1, 1, "", "RootMeanSquareArtifact"], [160, 1, 1, "", "RootMeanSquareError"], [160, 1, 1, "", "RootMeanSquareErrorResult"], [160, 1, 1, "", "RootMeanSquareEvaluation"]], "hermespy.radar.evaluators.DetectionProbEvaluator": [[157, 3, 1, "", "abbreviation"], [157, 2, 1, "", "evaluate"], [157, 2, 1, "", "generate_result"], [157, 3, 1, "", "radar"], [157, 3, 1, "", "title"]], "hermespy.radar.evaluators.DetectionProbabilityEvaluation": [[157, 2, 1, "", "artifact"]], "hermespy.radar.evaluators.RadarEvaluator": [[158, 2, 1, "", "generate_result"], [158, 3, 1, "", "radar_channel"], [158, 3, 1, "", "receiving_device"], [158, 3, 1, "", "receiving_radar"], [158, 3, 1, "", "transmitting_device"]], "hermespy.radar.evaluators.ReceiverOperatingCharacteristic": [[159, 2, 1, "", "FromScenario"], [159, 2, 1, "", "FromScenarios"], [159, 2, 1, "", "From_HDF"], [159, 2, 1, "", "GenerateResult"], [159, 3, 1, "", "abbreviation"], [159, 2, 1, "", "evaluate"], [159, 2, 1, "", "generate_result"], [159, 3, 1, "", "title"]], "hermespy.radar.evaluators.RocArtifact": [[159, 3, 1, "", "h0_value"], [159, 3, 1, "", "h1_value"], [159, 2, 1, "", "to_scalar"]], "hermespy.radar.evaluators.RocEvaluation": [[159, 2, 1, "", "artifact"], [159, 3, 1, "", "cube_h0"], [159, 3, 1, "", "cube_h1"]], "hermespy.radar.evaluators.RocEvaluationResult": [[159, 2, 1, "", "to_array"]], "hermespy.radar.evaluators.RootMeanSquareArtifact": [[160, 3, 1, "", "cummulation"], [160, 3, 1, "", "num_errors"], [160, 2, 1, "", "to_scalar"]], "hermespy.radar.evaluators.RootMeanSquareError": [[160, 3, 1, "", "abbreviation"], [160, 2, 1, "", "evaluate"], [160, 2, 1, "", "generate_result"], [160, 3, 1, "", "title"]], "hermespy.radar.evaluators.RootMeanSquareEvaluation": [[160, 2, 1, "", "artifact"]], "hermespy.radar.fmcw": [[161, 1, 1, "", "FMCW"]], "hermespy.radar.fmcw.FMCW": [[161, 3, 1, "", "adc_sampling_rate"], [161, 3, 1, "", "bandwidth"], [161, 3, 1, "", "chirp_duration"], [161, 3, 1, "", "energy"], [161, 2, 1, "", "estimate"], [161, 3, 1, "", "frame_duration"], [161, 3, 1, "", "max_range"], [161, 3, 1, "", "max_relative_doppler"], [161, 3, 1, "", "num_chirps"], [161, 2, 1, "", "ping"], [161, 3, 1, "", "power"], [161, 3, 1, "", "pulse_rep_interval"], [161, 3, 1, "", "range_resolution"], [161, 3, 1, "", "relative_doppler_bins"], [161, 3, 1, "", "relative_doppler_resolution"], [161, 3, 1, "", "sampling_rate"], [161, 3, 1, "", "slope"]], "hermespy.radar.radar": [[162, 1, 1, "", "Radar"], [162, 1, 1, "", "RadarBase"], [163, 1, 1, "", "RadarReception"], [164, 1, 1, "", "RadarTransmission"], [165, 1, 1, "", "RadarWaveform"]], "hermespy.radar.radar.Radar": [[162, 3, 1, "", "frame_duration"], [162, 3, 1, "", "max_range"], [162, 3, 1, "", "power"], [162, 3, 1, "", "sampling_rate"], [162, 2, 1, "", "velocity_resolution"], [162, 3, 1, "", "waveform"]], "hermespy.radar.radar.RadarBase": [[162, 3, 1, "", "detector"], [162, 3, 1, "", "receive_beamformer"]], "hermespy.radar.radar.RadarReception": [[163, 3, 1, "", "cloud"], [163, 3, 1, "", "cube"]], "hermespy.radar.radar.RadarWaveform": [[165, 3, 1, "", "energy"], [165, 2, 1, "", "estimate"], [165, 3, 1, "", "frame_duration"], [165, 3, 1, "", "max_range"], [165, 3, 1, "", "max_relative_doppler"], [165, 2, 1, "", "ping"], [165, 3, 1, "", "power"], [165, 3, 1, "", "range_bins"], [165, 3, 1, "", "range_resolution"], [165, 3, 1, "", "relative_doppler_bins"], [165, 3, 1, "", "relative_doppler_resolution"], [165, 3, 1, "", "sampling_rate"]], "hermespy.simulation.animation": [[167, 1, 1, "", "LinearTrajectory"], [167, 1, 1, "", "Moveable"], [167, 1, 1, "", "StaticTrajectory"], [167, 1, 1, "", "Trajectory"], [167, 1, 1, "", "TrajectorySample"]], "hermespy.simulation.animation.LinearTrajectory": [[167, 3, 1, "", "max_timestamp"], [167, 2, 1, "", "sample_orientation"], [167, 2, 1, "", "sample_translation"], [167, 2, 1, "", "sample_velocity"]], "hermespy.simulation.animation.Moveable": [[167, 3, 1, "", "max_trajectory_timestamp"], [167, 3, 1, "", "trajectory"]], "hermespy.simulation.animation.StaticTrajectory": [[167, 3, 1, "", "max_timestamp"], [167, 3, 1, "", "pose"], [167, 2, 1, "", "sample"], [167, 2, 1, "", "sample_orientation"], [167, 2, 1, "", "sample_translation"], [167, 2, 1, "", "sample_velocity"], [167, 3, 1, "", "velocity"]], "hermespy.simulation.animation.Trajectory": [[167, 2, 1, "", "lookat"], [167, 2, 1, "", "lookat_disable"], [167, 2, 1, "", "lookat_enable"], [167, 3, 1, "", "max_timestamp"], [167, 2, 1, "", "sample"], [167, 2, 1, "", "sample_orientation"], [167, 2, 1, "", "sample_translation"], [167, 2, 1, "", "sample_velocity"]], "hermespy.simulation.animation.TrajectorySample": [[167, 3, 1, "", "pose"], [167, 3, 1, "", "timestamp"], [167, 3, 1, "", "velocity"]], "hermespy.simulation.antennas": [[173, 1, 1, "", "SimulatedAntenna"], [170, 1, 1, "", "SimulatedAntennaArray"], [171, 1, 1, "", "SimulatedAntennaPort"], [172, 1, 1, "", "SimulatedCustomArray"], [174, 1, 1, "", "SimulatedIdealAntenna"], [175, 1, 1, "", "SimulatedLinearAntenna"], [176, 1, 1, "", "SimulatedPatchAntenna"], [177, 1, 1, "", "SimulatedUniformArray"]], "hermespy.simulation.antennas.SimulatedAntenna": [[173, 2, 1, "", "receive"], [173, 2, 1, "", "transmit"], [173, 3, 1, "", "weight"]], "hermespy.simulation.antennas.SimulatedAntennaArray": [[170, 2, 1, "", "analog_digital_conversion"], [170, 2, 1, "", "antenna_state"], [170, 2, 1, "", "plot_pattern"], [170, 2, 1, "", "receive"], [170, 2, 1, "", "rf_chain_modified"], [170, 2, 1, "", "transmit"], [170, 2, 1, "", "visualize_far_field_pattern"]], "hermespy.simulation.antennas.SimulatedAntennaPort": [[171, 3, 1, "", "rf_chain"]], "hermespy.simulation.antennas.SimulatedCustomArray": [[172, 2, 1, "", "add_antenna"], [172, 2, 1, "", "add_port"], [172, 2, 1, "", "remove_port"]], "hermespy.simulation.antennas.SimulatedIdealAntenna": [[174, 4, 1, "", "yaml_tag"]], "hermespy.simulation.antennas.SimulatedPatchAntenna": [[176, 4, 1, "", "yaml_tag"]], "hermespy.simulation.coupling.coupling": [[179, 1, 1, "", "Coupling"]], "hermespy.simulation.coupling.coupling.Coupling": [[179, 3, 1, "", "device"], [179, 2, 1, "", "receive"], [179, 2, 1, "", "transmit"]], "hermespy.simulation.coupling.impedance": [[180, 1, 1, "", "ImpedanceCoupling"]], "hermespy.simulation.coupling.impedance.ImpedanceCoupling": [[180, 3, 1, "", "matching_impedance"], [180, 3, 1, "", "receive_correlation"], [180, 3, 1, "", "receive_impedance"], [180, 3, 1, "", "transmit_correlation"], [180, 3, 1, "", "transmit_impedance"]], "hermespy.simulation.coupling.perfect": [[181, 1, 1, "", "PerfectCoupling"]], "hermespy.simulation.drop": [[217, 1, 1, "", "SimulatedDrop"]], "hermespy.simulation.drop.SimulatedDrop": [[217, 3, 1, "", "channel_realizations"], [217, 2, 1, "", "from_HDF"]], "hermespy.simulation.isolation.isolation": [[183, 1, 1, "", "Isolation"]], "hermespy.simulation.isolation.isolation.Isolation": [[183, 3, 1, "", "device"], [183, 2, 1, "", "leak"]], "hermespy.simulation.isolation.perfect": [[184, 1, 1, "", "PerfectIsolation"]], "hermespy.simulation.isolation.perfect.PerfectIsolation": [[184, 2, 1, "", "leak"]], "hermespy.simulation.isolation.selective": [[185, 1, 1, "", "SelectiveLeakage"]], "hermespy.simulation.isolation.selective.SelectiveLeakage": [[185, 2, 1, "", "Normal"], [185, 3, 1, "", "leakage_response"]], "hermespy.simulation.isolation.specific": [[186, 1, 1, "", "SpecificIsolation"]], "hermespy.simulation.isolation.specific.SpecificIsolation": [[186, 3, 1, "", "isolation"], [186, 3, 1, "", "title"]], "hermespy.simulation.modem.noise": [[187, 1, 1, "", "EBN0"], [188, 1, 1, "", "ESN0"]], "hermespy.simulation.modem.noise.EBN0": [[187, 2, 1, "", "get_power"], [187, 3, 1, "", "title"]], "hermespy.simulation.modem.noise.ESN0": [[188, 2, 1, "", "get_power"], [188, 3, 1, "", "title"]], "hermespy.simulation.noise.level": [[190, 1, 1, "", "N0"], [189, 1, 1, "", "NoiseLevel"], [191, 1, 1, "", "SNR"]], "hermespy.simulation.noise.level.N0": [[190, 2, 1, "", "get_power"], [190, 3, 1, "", "level"], [190, 3, 1, "", "power"], [190, 3, 1, "", "title"]], "hermespy.simulation.noise.level.NoiseLevel": [[189, 2, 1, "", "get_power"], [189, 3, 1, "", "level"]], "hermespy.simulation.noise.level.SNR": [[191, 2, 1, "", "get_power"], [191, 3, 1, "", "level"], [191, 3, 1, "", "reference"], [191, 3, 1, "", "snr"], [191, 3, 1, "", "title"]], "hermespy.simulation.noise.model": [[192, 1, 1, "", "AWGN"], [193, 1, 1, "", "AWGNRealization"], [189, 1, 1, "", "NRT"], [189, 1, 1, "", "NoiseModel"], [189, 1, 1, "", "NoiseRealization"]], "hermespy.simulation.noise.model.AWGN": [[192, 2, 1, "", "realize"]], "hermespy.simulation.noise.model.AWGNRealization": [[193, 2, 1, "", "add_to"]], "hermespy.simulation.noise.model.NoiseModel": [[189, 2, 1, "", "add_noise"], [189, 2, 1, "", "realize"]], "hermespy.simulation.noise.model.NoiseRealization": [[189, 2, 1, "", "add_to"], [189, 3, 1, "", "power"]], "hermespy.simulation.rf_chain.analog_digital_converter": [[196, 1, 1, "", "AnalogDigitalConverter"], [197, 1, 1, "", "AutomaticGainControl"], [198, 1, 1, "", "Gain"], [199, 1, 1, "", "GainControlBase"], [200, 1, 1, "", "GainControlType"], [201, 1, 1, "", "QuantizerType"]], "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter": [[196, 2, 1, "", "convert"], [196, 4, 1, "", "gain"], [196, 3, 1, "", "num_quantization_bits"], [196, 3, 1, "", "num_quantization_levels"], [196, 2, 1, "", "plot_quantizer"], [196, 3, 1, "", "quantizer_type"], [196, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl": [[197, 3, 1, "", "agc_type"], [197, 3, 1, "", "backoff"], [197, 2, 1, "", "estimate_gain"], [197, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.Gain": [[198, 2, 1, "", "estimate_gain"], [198, 3, 1, "", "gain"], [198, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase": [[199, 2, 1, "", "adjust_signal"], [199, 2, 1, "", "estimate_gain"], [199, 3, 1, "", "rescale_quantization"], [199, 2, 1, "", "scale_quantized_signal"]], "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType": [[200, 4, 1, "", "MAX_AMPLITUDE"], [200, 4, 1, "", "NONE"], [200, 4, 1, "", "RMS_AMPLITUDE"]], "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType": [[201, 4, 1, "", "MID_RISER"], [201, 4, 1, "", "MID_TREAD"]], "hermespy.simulation.rf_chain.phase_noise": [[209, 1, 1, "", "NoPhaseNoise"], [210, 1, 1, "", "OscillatorPhaseNoise"], [208, 1, 1, "", "PhaseNoise"]], "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise": [[209, 2, 1, "", "add_noise"], [209, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise": [[210, 3, 1, "", "K0"], [210, 3, 1, "", "K2"], [210, 3, 1, "", "K3"], [210, 2, 1, "", "add_noise"]], "hermespy.simulation.rf_chain.phase_noise.PhaseNoise": [[208, 2, 1, "", "add_noise"]], "hermespy.simulation.rf_chain.power_amplifier": [[203, 1, 1, "", "ClippingPowerAmplifier"], [204, 1, 1, "", "CustomPowerAmplifier"], [205, 1, 1, "", "PowerAmplifier"], [206, 1, 1, "", "RappPowerAmplifier"], [207, 1, 1, "", "SalehPowerAmplifier"]], "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier": [[203, 2, 1, "", "model"], [203, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier": [[204, 3, 1, "", "gain"], [204, 3, 1, "", "input"], [204, 2, 1, "", "model"], [204, 3, 1, "", "phase"]], "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier": [[205, 4, 1, "", "adjust_power"], [205, 2, 1, "", "model"], [205, 2, 1, "", "plot_characteristics"], [205, 3, 1, "", "saturation_amplitude"], [205, 2, 1, "", "send"], [205, 3, 1, "", "title"]], "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier": [[206, 2, 1, "", "model"], [206, 3, 1, "", "smoothness_factor"], [206, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier": [[207, 3, 1, "", "amplitude_alpha"], [207, 3, 1, "", "amplitude_beta"], [207, 2, 1, "", "model"], [207, 4, 1, "", "phase_alpha"], [207, 4, 1, "", "phase_beta"]], "hermespy.simulation.rf_chain.rf_chain": [[194, 1, 1, "", "RfChain"]], "hermespy.simulation.rf_chain.rf_chain.RfChain": [[194, 3, 1, "", "adc"], [194, 2, 1, "", "add_iq_imbalance"], [194, 3, 1, "", "amplitude_imbalance"], [194, 3, 1, "", "phase_noise"], [194, 3, 1, "", "phase_offset"], [194, 3, 1, "", "power_amplifier"], [194, 2, 1, "", "receive"], [194, 2, 1, "", "transmit"]], "hermespy.simulation.simulated_device": [[212, 1, 1, "", "ProcessedSimulatedDeviceInput"], [221, 1, 1, "", "RandomTrigger"], [222, 1, 1, "", "SampleOffsetTrigger"], [211, 1, 1, "", "SimulatedDevice"], [213, 1, 1, "", "SimulatedDeviceOutput"], [214, 1, 1, "", "SimulatedDeviceReceiveRealization"], [215, 1, 1, "", "SimulatedDeviceReception"], [216, 1, 1, "", "SimulatedDeviceTransmission"], [223, 1, 1, "", "StaticTrigger"], [224, 1, 1, "", "TimeOffsetTrigger"], [225, 1, 1, "", "TriggerModel"], [226, 1, 1, "", "TriggerRealization"]], "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput": [[212, 3, 1, "", "baseband_signal"], [212, 3, 1, "", "leaking_signal"], [212, 3, 1, "", "operator_separation"], [212, 3, 1, "", "trigger_realization"]], "hermespy.simulation.simulated_device.RandomTrigger": [[221, 2, 1, "", "realize"]], "hermespy.simulation.simulated_device.SampleOffsetTrigger": [[222, 3, 1, "", "num_offset_samples"], [222, 2, 1, "", "realize"]], "hermespy.simulation.simulated_device.SimulatedDevice": [[211, 3, 1, "", "antennas"], [211, 3, 1, "", "attached"], [211, 3, 1, "", "carrier_frequency"], [211, 3, 1, "", "coupling"], [211, 2, 1, "", "generate_output"], [211, 3, 1, "", "isolation"], [211, 3, 1, "", "noise"], [211, 3, 1, "", "noise_level"], [211, 3, 1, "", "noise_model"], [211, 3, 1, "", "operator_separation"], [211, 2, 1, "", "process_from_realization"], [211, 2, 1, "", "process_input"], [211, 2, 1, "", "realize_reception"], [211, 2, 1, "", "receive"], [211, 4, 1, "", "rf_chain"], [211, 3, 1, "", "sampling_rate"], [211, 3, 1, "", "scenario"], [211, 4, 1, "", "serialized_attribute"], [211, 3, 1, "", "simulated_input_callbacks"], [211, 3, 1, "", "simulated_output_callbacks"], [211, 2, 1, "", "state"], [211, 2, 1, "", "transmit"], [211, 3, 1, "", "trigger_model"]], "hermespy.simulation.simulated_device.SimulatedDeviceOutput": [[213, 2, 1, "", "From_DeviceOutput"], [213, 3, 1, "", "emerging_signals"], [213, 3, 1, "", "leaking_signals"], [213, 3, 1, "", "num_leaking_signals"], [213, 3, 1, "", "operator_separation"], [213, 3, 1, "", "trigger_realization"]], "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization": [[214, 3, 1, "", "noise_realization"]], "hermespy.simulation.simulated_device.SimulatedDeviceReception": [[215, 2, 1, "", "From_ProcessedSimulatedDeviceInput"]], "hermespy.simulation.simulated_device.SimulatedDeviceTransmission": [[216, 2, 1, "", "From_SimulatedDeviceOutput"], [216, 2, 1, "", "from_HDF"]], "hermespy.simulation.simulated_device.StaticTrigger": [[223, 2, 1, "", "realize"]], "hermespy.simulation.simulated_device.TimeOffsetTrigger": [[224, 3, 1, "", "offset"], [224, 2, 1, "", "realize"]], "hermespy.simulation.simulated_device.TriggerModel": [[225, 2, 1, "", "add_device"], [225, 3, 1, "", "devices"], [225, 3, 1, "", "num_devices"], [225, 2, 1, "", "realize"], [225, 2, 1, "", "remove_device"]], "hermespy.simulation.simulated_device.TriggerRealization": [[226, 2, 1, "", "compute_num_offset_samples"], [226, 3, 1, "", "num_offset_samples"], [226, 3, 1, "", "sampling_rate"], [226, 3, 1, "", "trigger_delay"]], "hermespy.simulation.simulation": [[218, 1, 1, "", "Simulation"], [219, 1, 1, "", "SimulationScenario"]], "hermespy.simulation.simulation.Simulation": [[218, 3, 1, "", "console"], [218, 3, 1, "", "console_mode"], [218, 3, 1, "", "drop_interval"], [218, 4, 1, "", "dump_results"], [218, 2, 1, "", "from_yaml"], [218, 3, 1, "", "num_samples"], [218, 4, 1, "", "plot_results"], [218, 2, 1, "", "run"], [218, 2, 1, "", "set_channel"], [218, 2, 1, "", "to_yaml"]], "hermespy.simulation.simulation.SimulationScenario": [[219, 2, 1, "", "add_device"], [219, 2, 1, "", "channel"], [219, 3, 1, "", "channels"], [219, 2, 1, "", "device_channels"], [219, 2, 1, "", "generate_outputs"], [219, 2, 1, "", "new_device"], [219, 3, 1, "", "noise_level"], [219, 3, 1, "", "noise_model"], [219, 2, 1, "", "process_inputs"], [219, 2, 1, "", "propagate"], [219, 2, 1, "", "realize_channels"], [219, 2, 1, "", "realize_triggers"], [219, 2, 1, "", "receive_devices"], [219, 2, 1, "", "set_channel"], [219, 2, 1, "", "transmit_devices"], [219, 3, 1, "", "visualize"], [219, 4, 1, "", "yaml_tag"]], "hermespy.tools": [[229, 0, 0, "-", "math"], [230, 0, 0, "-", "resampling"], [231, 0, 0, "-", "tile"]], "hermespy.tools.math": [[229, 1, 1, "", "DbConversionType"], [229, 5, 1, "", "amplitude_path_loss"], [229, 5, 1, "", "db2lin"], [229, 5, 1, "", "lin2db"], [229, 5, 1, "", "marcum_q"], [229, 5, 1, "", "rms_value"]], "hermespy.tools.math.DbConversionType": [[229, 4, 1, "", "AMPLITUDE"], [229, 4, 1, "", "POWER"]], "hermespy.tools.resampling": [[230, 5, 1, "", "delay_resampling_matrix"]], "hermespy.tools.tile": [[231, 5, 1, "", "get_monitors"], [231, 5, 1, "", "screen_geometry"], [231, 5, 1, "", "set_figure_geometry"], [231, 5, 1, "", "tile_figures"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "terms": {"": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 43, 48, 51, 52, 55, 57, 59, 60, 62, 63, 64, 65, 75, 80, 82, 83, 86, 87, 88, 89, 91, 92, 94, 95, 96, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 129, 132, 133, 134, 135, 136, 139, 140, 142, 143, 146, 149, 151, 153, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 189, 195, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "0": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 33, 35, 37, 38, 40, 41, 51, 56, 57, 58, 62, 63, 64, 65, 69, 74, 77, 82, 83, 86, 87, 91, 96, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 149, 151, 155, 157, 160, 161, 162, 166, 167, 168, 170, 175, 185, 186, 196, 197, 198, 200, 201, 206, 211, 218, 221, 222, 224, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "00": [9, 10, 11, 12, 13, 14, 23, 30, 262], "0066": 27, "00_60": [9, 10, 11, 12, 13, 14, 23, 30, 77, 262], "01": [234, 238, 239, 240, 241, 242], "0108018": [75, 262], "016": [126, 262], "02": [77, 157, 261, 262], "02ch37367": [25, 262], "0582": 27, "06": [4, 161, 262], "0670": [126, 262], "0684": 117, "07": [77, 262], "0703125": [233, 238, 240, 241, 243], "072": 260, "072e9": 260, "078125": [233, 238, 240, 241, 243], "08": 129, "0810": 27, "0j": [169, 173, 174, 175, 176], "1": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 54, 56, 57, 59, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 102, 103, 104, 105, 106, 116, 117, 118, 119, 120, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 185, 186, 194, 196, 197, 198, 200, 201, 202, 206, 207, 210, 211, 229, 230, 233, 235, 238, 239, 240, 241, 243, 247, 248, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262], "10": [3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 36, 37, 56, 57, 63, 68, 72, 73, 75, 76, 77, 78, 82, 96, 102, 103, 104, 105, 106, 118, 120, 126, 136, 144, 145, 147, 148, 149, 160, 161, 166, 168, 194, 202, 206, 207, 210, 211, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262], "100": [5, 9, 10, 11, 12, 13, 14, 30, 33, 35, 63, 102, 103, 104, 105, 106, 117, 166, 167, 185, 211, 218, 232, 235, 238, 239, 240, 241, 243, 247, 254, 256, 262], "1000": [10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 33, 35, 36, 86, 102, 103, 104, 105, 106, 146, 149, 160, 234, 235, 237, 239, 240, 241, 242, 253, 255, 258, 260, 261], "10000": [10, 210, 235, 237], "100000000": 161, "1000000000": 129, "1002729": [25, 262], "100345": [68, 72, 73, 75, 76, 78, 262], "1005": 262, "1008": 262, "100e": 240, "100e6": [211, 235, 237, 239], "100e9": 247, "101": [159, 185, 186], "1016": [68, 72, 73, 75, 76, 78, 262], "1024": [96, 117, 146, 149, 235, 255, 257, 259], "1054010": 262, "1055186": [76, 262], "1064": [78, 262], "1070": [78, 262], "1094911": [202, 207, 262], "10cm": [240, 241], "10e": [21, 240, 241], "10e6": 132, "10e9": [247, 253, 258, 260], "10ghz": [253, 258], "10m": [10, 33, 35, 234, 240], "11": [9, 27, 77, 118, 202, 207, 210, 237, 249, 250, 254, 256, 262], "110": 210, "1109": [3, 5, 16, 23, 25, 32, 37, 73, 76, 77, 78, 96, 118, 120, 147, 148, 194, 202, 207, 210, 248, 262], "1137": [57, 75, 262], "1162830": 262, "1186": [126, 262], "11a": [77, 262], "12": [9, 10, 11, 12, 13, 14, 15, 23, 24, 25, 27, 30, 37, 96, 102, 103, 104, 105, 106, 147, 148, 247, 250, 254, 258, 259, 262], "120": 254, "1200": 238, "120256": [248, 262], "120273": [248, 262], "125": [211, 234, 242], "125900_125999": [23, 262], "125943": [23, 262], "125hz": 234, "127": 83, "1274": [32, 262], "1278": [32, 262], "128": [5, 96, 132, 136, 144, 145, 149, 235, 241, 252], "128e3": 144, "13": [9, 23, 27, 96, 250, 254, 262], "130911433": [57, 262], "132": 243, "1361130": 262, "138": 10, "138200_138299": [77, 262], "138211": [77, 262], "138900_138999": [9, 10, 11, 12, 13, 14, 30, 262], "138901": [9, 10, 11, 12, 13, 14, 30, 262], "14": [9, 10, 11, 12, 13, 14, 23, 24, 27, 30, 102, 103, 104, 105, 106, 129, 250, 254, 262], "1408": [3, 262], "1418": [3, 262], "1451": [120, 262], "1458": [120, 262], "15": [9, 27, 77, 250, 254, 260, 262], "1553": [210, 262], "15625": 234, "1565": [210, 262], "15e3": [238, 241], "16": [4, 9, 10, 11, 12, 13, 14, 15, 23, 24, 27, 30, 96, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 123, 129, 131, 132, 133, 134, 135, 195, 234, 235, 237, 238, 239, 241, 242, 247, 250, 254, 255, 258, 259, 261, 262], "160": 234, "1600": 77, "1613": [147, 148, 262], "1621": [147, 148, 262], "16384": [136, 144, 145, 149], "1650": [120, 262], "1656": [120, 262], "168": 243, "1698": [118, 262], "17": [9, 10, 11, 12, 13, 14, 30, 77, 250, 254, 262], "1704": [118, 262], "1715": [202, 207, 262], "1717": 27, "1720": [202, 207, 262], "179": [202, 206, 262], "18": [9, 10, 11, 12, 13, 14, 23, 24, 27, 30, 102, 103, 104, 105, 106, 120, 258, 262], "180": [37, 126, 262], "184": [202, 206, 262], "1889": [5, 262], "189": 243, "19": [9, 27, 250, 262], "1903": [5, 262], "192": [112, 113, 115, 243], "1950": [4, 262], "1953": [234, 242], "1954": [118, 262], "1960": [68, 75, 262], "1963": [72, 262], "1967": 262, "1969": [3, 262], "1974": [76, 262], "1976": 262, "1981": [202, 207, 262], "1983": 262, "1989": 262, "1991": [202, 206, 262], "1993": [78, 262], "1996": 250, "1997": [147, 148, 262], "1998": [120, 262], "1999": [77, 262], "1d": [161, 165], "1e": [21, 24, 27, 30, 129, 136, 144, 145, 149, 161, 170, 210, 211, 235, 237, 238, 239, 241], "1e10": [112, 113, 114, 115, 166], "1e11": 166, "1e3": [145, 149], "1e4": [237, 252], "1e6": [5, 112, 113, 114, 115, 118, 119, 120, 132, 133, 134, 135, 235, 237, 238, 247, 258], "1e7": 23, "1e8": [10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 102, 103, 104, 105, 106, 166, 170], "1e9": [129, 161, 166, 239, 243, 247, 254], "1ghz": 239, "1j": [211, 255], "1m": 239, "1x2": [118, 119], "2": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 27, 30, 32, 33, 34, 35, 36, 37, 38, 40, 57, 62, 63, 68, 72, 73, 75, 76, 77, 78, 96, 102, 103, 104, 105, 106, 117, 118, 119, 120, 123, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 150, 151, 157, 161, 170, 196, 200, 202, 207, 210, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "20": [10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 56, 76, 92, 102, 103, 104, 105, 106, 160, 166, 167, 189, 211, 234, 235, 237, 238, 240, 241, 242, 243, 247, 250, 258, 259, 260, 262], "200": [91, 238, 254], "2001": [120, 262], "2002": [16, 25, 262], "2004": 262, "2006": [23, 25, 262], "2007": [250, 262], "2009": [5, 73, 96, 262], "2010": [5, 262], "2012": [37, 262], "2013": [210, 262], "2014": [32, 57, 210, 262], "2015": [73, 262], "2016": [23, 126, 262], "2017": [194, 262], "2018": [77, 194, 262], "2019": [68, 72, 73, 75, 76, 78, 262], "2020": [9, 10, 11, 12, 13, 14, 30, 262], "2021379": [73, 262], "2022": [4, 248, 262], "2036476": [5, 262], "2048": [222, 238, 252], "20db": 56, "21": [36, 189], "2100": [233, 240], "22": [21, 33, 35, 202, 206, 262], "2213": [73, 262], "2214017": [37, 262], "2226": [73, 262], "223": 262, "2242": 27, "226": 262, "2285698": [210, 262], "2299": [194, 262], "2310220": [32, 262], "2312": [194, 262], "2332141": [4, 262], "23rd": 262, "24": [21, 202, 206, 255, 257, 262], "2410251": [73, 262], "24e9": [36, 96], "25": [254, 260, 262], "256": [234, 240, 241, 242], "256966": [23, 262], "256967": [23, 262], "256990": [25, 262], "259": 262, "25j": [132, 133, 134, 135], "26": [21, 147, 148, 254, 262], "260": 262, "269": 262, "27": 36, "274666": [118, 262], "2786729": [194, 262], "28": [4, 21, 250, 262], "284": [76, 262], "287": [76, 262], "29": [27, 202, 207, 262], "2d": [63, 161, 165], "2e": [238, 239, 241, 260], "2e6": 239, "2f": 257, "2j": [166, 254], "2m": 239, "2nd": 210, "2p_": 206, "2x2": [120, 240], "3": [5, 8, 9, 10, 16, 23, 27, 32, 34, 37, 38, 65, 68, 73, 74, 77, 112, 113, 114, 115, 117, 120, 132, 133, 134, 135, 136, 144, 145, 149, 161, 166, 167, 210, 211, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "30": [8, 19, 21, 56, 160, 250, 253, 260], "300": [75, 262], "30000": 10, "304": [75, 262], "3043": 27, "3051": [73, 262], "3073": [73, 262], "309350": 262, "30db": 56, "30e3": [233, 240, 243], "30khz": 240, "31": 77, "319": [16, 262], "32": [5, 21, 74, 112, 113, 114, 115, 118, 119, 120, 132, 133, 134, 135, 238], "320": 262, "3222063": [248, 262], "3242": [32, 262], "3256": [32, 262], "327": 262, "3333333333333333": 258, "33776": [202, 206, 262], "34": 21, "342": [16, 262], "3421": [23, 262], "3433": [23, 262], "3434": [23, 262], "3450": [23, 262], "35": [233, 240, 243], "36": [21, 57, 238, 262], "3667": [25, 262], "366852": 262, "3679": [25, 262], "37": [4, 262], "370": [25, 262], "374": [25, 262], "38": [21, 30], "3819": 27, "39": 258, "397441": [78, 262], "3d": [35, 65], "3e9": 240, "3ghz": 240, "3gpp": [10, 11, 12, 13, 14, 15, 23, 30, 77, 136, 144, 145, 149, 234, 262], "3gpptran04": 262, "3k": 258, "3pi": 254, "3rd": 210, "4": [8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 27, 30, 34, 77, 96, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 131, 133, 134, 135, 157, 202, 206, 210, 211, 231, 233, 235, 237, 239, 240, 241, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "40": [10, 11, 12, 13, 14, 21, 253], "400": 235, "4025": 27, "4096": [233, 240, 243], "41392685158225": 56, "42": [5, 10, 11, 35, 36, 112, 114, 115, 118, 247, 252, 254, 256, 261, 262], "43": 254, "45": [36, 147, 148, 262], "4579": 27, "4610": 27, "4673": 83, "47": [120, 262], "48": 80, "48000": 80, "49": [120, 262], "4942": 27, "4e9": 237, "4th": 38, "4x4": 120, "5": [5, 9, 10, 11, 12, 13, 14, 16, 23, 25, 27, 30, 33, 35, 36, 73, 77, 96, 126, 150, 160, 161, 167, 168, 194, 210, 211, 224, 238, 239, 241, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262], "50": [33, 63, 129, 168, 185, 186, 234, 237, 242, 253, 254, 256], "500e3": [234, 242], "500khz": 234, "501": 238, "501e9": 238, "5073387": [96, 262], "50m": 33, "51": [185, 186], "5119": 27, "512": 234, "512e": [234, 242], "53": 262, "5375": 27, "55": [73, 262], "5555": [90, 91, 243], "55th": [25, 262], "5695": 27, "57": [3, 240, 262], "5750": 27, "58": [5, 262], "5868": 27, "5966": [37, 262], "5977": [37, 262], "5e": 161, "5e8": 253, "5e9": [33, 35, 238], "5g": [136, 144, 145, 149, 236, 239, 241, 247], "5gtdl": [239, 240, 241], "5m2": 239, "6": [9, 10, 11, 12, 13, 14, 23, 24, 27, 30, 32, 157, 161, 233, 235, 237, 238, 239, 240, 243, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262], "60": [37, 150, 167, 250, 254, 262], "600": 233, "608": 262, "60e9": [150, 157, 159, 160, 161], "61": [73, 210, 262], "61503168": 231, "62": [32, 262], "621": 262, "64": [96, 113, 114, 115, 118, 119, 120, 129, 132, 133, 134, 135, 136, 144, 145, 149, 235, 238, 252], "650240": [147, 148, 262], "6586": 27, "66": [194, 262], "6708": 27, "677083e": [233, 240, 243], "68": [68, 262], "6902008": [32, 262], "69th": [96, 262], "6b": 250, "6d": 250, "6g": [248, 262], "7": [9, 10, 24, 27, 73, 77, 83, 96, 136, 144, 145, 149, 250, 252, 254, 260, 262], "70": 254, "700": 91, "700000000": 91, "70e9": [5, 254], "7278": [3, 262], "72e9": 253, "730453": [120, 262], "75": [63, 96, 254, 260], "75pi": 254, "7618": 27, "78": [33, 35], "79": [68, 262], "7966": 27, "7e9": [136, 144, 145, 149, 211, 220, 221, 222, 223, 224, 225], "8": [3, 9, 10, 11, 12, 13, 14, 15, 21, 23, 24, 25, 27, 30, 36, 75, 102, 103, 104, 105, 106, 120, 129, 130, 136, 144, 145, 149, 157, 234, 238, 239, 247, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262], "80": 254, "800": 256, "800e6": 256, "802": [77, 262], "8647704": 262, "865e6": [234, 241, 242], "865mhz": 234, "881182": 262, "8978": 27, "8th": [32, 262], "8x8": 253, "9": [5, 9, 27, 30, 117, 118, 119, 120, 126, 129, 130, 133, 135, 234, 237, 238, 239, 240, 241, 242, 247, 250, 251, 254, 262], "90": [16, 33, 35, 36, 96, 238, 254, 262], "900": 30, "901": 10, "90606": [77, 262], "909e3": 96, "91": [202, 206, 262], "923754": [120, 262], "93": [78, 262], "943": 262, "95": 235, "99": 63, "993400": [16, 262], "998": 240, "9e9": [220, 221, 222, 223, 224, 225], "A": [2, 3, 4, 5, 8, 9, 15, 16, 20, 21, 22, 23, 25, 30, 31, 33, 34, 35, 37, 38, 48, 56, 57, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 90, 95, 96, 98, 109, 111, 115, 117, 120, 122, 123, 126, 131, 132, 136, 142, 144, 145, 149, 150, 151, 153, 155, 157, 159, 160, 161, 162, 165, 167, 172, 177, 194, 196, 202, 207, 210, 211, 218, 219, 220, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 247, 250, 254, 262, 263], "AND": 250, "AS": 250, "AT": [37, 57, 102, 103, 104, 105, 106, 157, 172], "And": 253, "As": [5, 54, 126, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259], "At": 259, "BE": 250, "BEING": 250, "BUT": 250, "BY": 250, "Be": 82, "But": [250, 258], "By": [1, 7, 21, 27, 33, 37, 38, 57, 61, 62, 65, 70, 80, 87, 92, 122, 123, 132, 142, 147, 159, 169, 173, 174, 175, 176, 196, 208, 209, 211, 220, 225, 250], "FOR": 250, "For": [3, 5, 9, 10, 15, 16, 25, 27, 31, 33, 57, 59, 62, 80, 86, 91, 112, 113, 114, 129, 131, 132, 133, 134, 135, 150, 155, 161, 162, 166, 167, 191, 202, 211, 226, 231, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261], "IF": 250, "IN": 250, "If": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 45, 48, 51, 53, 54, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 74, 77, 80, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 112, 113, 114, 115, 120, 122, 123, 126, 129, 130, 131, 132, 138, 141, 142, 146, 148, 149, 151, 153, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 179, 183, 184, 185, 189, 190, 191, 194, 196, 197, 198, 199, 204, 205, 206, 207, 210, 211, 212, 213, 216, 218, 219, 221, 222, 223, 224, 225, 229, 231, 249, 250, 252], "In": [7, 15, 20, 25, 32, 53, 57, 63, 64, 69, 70, 71, 74, 77, 78, 96, 102, 103, 104, 105, 106, 115, 123, 129, 131, 132, 133, 134, 135, 141, 161, 166, 168, 170, 202, 203, 205, 206, 219, 232, 234, 235, 236, 237, 238, 240, 247, 249, 250, 254, 255, 257, 262, 263], "It": [18, 31, 32, 36, 39, 41, 52, 67, 79, 97, 118, 119, 149, 150, 160, 166, 183, 187, 188, 191, 192, 196, 218, 221, 222, 223, 224, 232, 240, 248, 250, 254, 261], "Its": [21, 22], "NO": 250, "NOT": 250, "Near": [78, 262], "No": [7, 25, 37, 40, 65, 97, 123, 128, 138, 208, 239, 250, 262], "Not": 250, "OF": 250, "OR": 250, "Of": [162, 178, 182, 189, 202, 208, 220, 225, 254, 261], "On": [2, 24, 41, 57, 68, 80, 91, 131, 134, 156, 166, 168, 211, 254, 255, 262], "One": [57, 59, 131, 133, 135, 185], "SUCH": 250, "Such": [250, 257], "THE": 250, "THERE": 250, "TO": 250, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 204, 205, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "Then": [3, 4, 253], "There": [34, 98, 158, 211, 247, 249, 250], "These": [9, 250, 254], "To": [5, 15, 248, 250, 254, 255, 256, 259], "WILL": 250, "WITH": 250, "Will": [63, 120, 231], "_": [3, 4, 5, 9, 10, 15, 27, 33, 34, 37, 57, 102, 103, 104, 105, 106, 205, 207, 220, 252, 253, 254, 256, 257, 258, 259, 260, 261], "_0": 5, "_2": [22, 34, 103, 105, 106], "__": 33, "__decorrelation_dist": 255, "__del__": 257, "__future__": [255, 257], "__gain": 255, "__getitem__": 63, "__init__": [36, 253, 255, 257], "__num_delay_tap": 38, "__num_frequency_bin": 38, "__phase_shift": 255, "__phase_shift_vari": 255, "__receive_callback": 257, "__receive_hook": 257, "__recept": 257, "__rng": 255, "__state": 38, "__state_format": 38, "__str__": 257, "_angleplot": 151, "_anglevisu": 9, "_block": 63, "_constellationplot": 122, "_create_group": 255, "_decod": [2, 3, 4, 253], "_description_": 143, "_encod": [2, 4, 5], "_eyevisu": 63, "_m": [37, 57], "_num_transmit_input_stream": 259, "_powerdelayvisu": 9, "_prepare_multidim_visu": 257, "_prepare_visu": 257, "_propag": [18, 31, 255], "_properti": 57, "_rangeplot": 151, "_rangevelocityplot": 151, "_ray_trace_ctx": 57, "_realiz": [8, 16, 21, 22, 31, 33, 35, 255], "_receiv": [48, 112, 113, 114, 162], "_reciprocal_sampl": 255, "_rt": 55, "_sampl": [8, 31, 255], "_samplesvisu": 63, "_scenariovisu": 219, "_signalvisu": 63, "_summary_": [33, 34], "_transmit": [51, 112, 114, 115, 162], "_update_multidim_visu": 257, "_update_plot": 85, "_update_visu": 257, "a869": [57, 262], "a885": [57, 262], "a_": 37, "a_0": 5, "a_1": 37, "a_2": 37, "aat": 37, "ab": 261, "abbrevi": [57, 102, 103, 104, 105, 106, 157, 158, 159, 160, 257], "abc": [2, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 41, 53, 57, 58, 59, 60, 62, 63, 66, 70, 85, 92, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 117, 118, 119, 120, 121, 123, 124, 126, 127, 130, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 158, 162, 167, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 208, 209, 210, 218, 219, 221, 222, 223, 224, 225], "abdelaziz": [194, 262], "abil": 250, "abl": [249, 256], "abort": 57, "about": [41, 51, 57, 62, 86, 87, 88, 89, 211, 219, 226, 250, 254], "abov": [5, 10, 63, 166, 178, 182, 189, 202, 203, 208, 211, 220, 225, 247, 250, 254], "absenc": 250, "absolut": [35, 38, 229, 250, 260], "absorpt": [9, 12, 13, 14], "abstract": [2, 8, 9, 15, 16, 17, 18, 19, 21, 22, 31, 33, 34, 35, 37, 41, 48, 51, 53, 57, 60, 63, 65, 70, 85, 86, 87, 98, 107, 121, 123, 124, 126, 136, 139, 150, 154, 158, 165, 167, 178, 179, 182, 183, 189, 199, 202, 208, 220, 225, 247, 253, 255, 258, 259, 261], "accept": [57, 84, 250], "acces": 57, "access": [23, 30, 34, 35, 37, 38, 57, 60, 77, 122, 123, 125, 129, 131, 141, 194, 211, 218, 219, 247, 248, 250, 254, 255, 262, 263], "accompani": 250, "accomplish": 250, "accord": [20, 63, 194, 206, 207, 210, 250], "accordingli": 191, "account": 63, "accur": [16, 25, 166], "accuraci": 25, "accustom": [247, 248, 257, 259], "acess": 219, "achiev": [69, 70, 71, 73, 74, 96, 123, 168, 187, 232, 250, 251, 258, 262], "achiv": [178, 182, 184, 185, 186], "acknowledg": 250, "acoust": 262, "acquir": [3, 4, 250, 253], "across": [37, 250], "act": [15, 41, 56, 65, 247], "action": [23, 63, 84, 249, 250], "activ": [7, 166, 219, 236, 249, 250, 251], "active_onli": 219, "actor": [57, 166, 218, 240], "actorrunresult": 57, "actual": [57, 64, 169, 170, 173, 189, 247, 250, 253, 255, 261], "ad": [5, 15, 33, 37, 41, 55, 57, 59, 62, 70, 81, 84, 88, 89, 90, 112, 113, 114, 115, 116, 117, 118, 119, 120, 129, 132, 133, 134, 135, 155, 168, 172, 189, 192, 193, 208, 209, 210, 219, 237, 247, 250, 251, 254, 255, 261], "adapt": [36, 86, 194, 247, 250, 262], "adaptive_sampl": 86, "adc": [161, 166, 194, 195, 196, 197, 198, 199, 211, 237, 260], "adc_sampling_r": 161, "add": [10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 27, 30, 33, 34, 36, 37, 41, 48, 51, 55, 57, 59, 62, 84, 88, 89, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 155, 166, 172, 189, 194, 208, 209, 210, 211, 219, 220, 225, 247, 250, 254, 255, 257, 259, 260], "add_antenna": [37, 168, 170, 172], "add_callback": 55, "add_devic": [15, 59, 62, 88, 89, 90, 219, 225], "add_dimens": [57, 84], "add_dsp": [5, 33, 35, 41, 96, 112, 117, 157, 159, 160, 161, 252, 253, 259, 260, 261], "add_encod": [70, 112, 113, 114, 115, 258], "add_evalu": [5, 10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 33, 35, 57, 84, 102, 103, 104, 105, 106, 157, 159, 160, 161, 166, 247, 253, 254, 255, 257, 258, 259, 260, 261], "add_hook": 55, "add_iq_imbal": 194, "add_link": 65, "add_nois": [189, 208, 209, 210], "add_plot": [84, 247], "add_point": 155, "add_port": [37, 168, 172], "add_post_drop_hook": 84, "add_pre_drop_hook": 84, "add_propag": 34, "add_receive_callback": [48, 257], "add_sampl": 57, "add_sample_hook": 16, "add_stat": 34, "add_target": 33, "add_to": [189, 193], "add_transmit_callback": 51, "add_vari": 19, "added_sign": 63, "addit": [8, 9, 10, 11, 12, 13, 14, 15, 30, 31, 33, 54, 55, 57, 59, 62, 63, 84, 86, 87, 91, 97, 112, 113, 114, 115, 123, 129, 132, 133, 134, 135, 169, 189, 192, 193, 194, 211, 232, 242, 243, 249, 250, 259, 261], "addition": [123, 129, 131, 136, 141, 144, 145, 149, 195, 211, 249, 259, 260, 261], "additional_dimens": 57, "address": [57, 64, 91, 218, 250, 255], "addtion": 210, "adequ": [57, 123, 129, 131, 132, 134, 144, 146], "adjac": 129, "adjust": [189, 195, 196, 197, 198, 199, 205, 231], "adjust_pow": 205, "adjust_sign": 199, "adler": [248, 262], "admiss": 5, "adnan": [194, 262], "adopt": 250, "adress": [91, 225], "advantag": 247, "advers": 250, "advis": 250, "ae": 262, "aerospac": 262, "aff": [5, 262], "aff3ct": [68, 72, 73, 75, 76, 78, 262], "affect": 250, "affero": 250, "affirm": 250, "aforement": 170, "after": [4, 5, 8, 9, 16, 17, 18, 20, 28, 29, 31, 32, 33, 34, 37, 38, 41, 48, 51, 55, 57, 60, 62, 63, 68, 70, 71, 72, 73, 75, 76, 78, 84, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 126, 130, 159, 166, 170, 194, 203, 204, 205, 206, 207, 218, 234, 235, 237, 238, 239, 240, 241, 242, 247, 250, 251, 253, 256, 258, 260], "afterward": [7, 113, 129, 132, 133, 134, 135, 150, 236, 249, 261], "again": [54, 166], "against": [139, 142, 250], "agc": 197, "agc_typ": 197, "aggreg": 250, "agm": 262, "agpl": [248, 250], "agplv3": 250, "agre": 250, "agreement": 250, "aim": [5, 247, 248], "air": [170, 194, 247], "akb22": 262, "al": [23, 25, 37, 57, 126, 194, 210, 248], "ala98": 262, "alamouti": [120, 257, 262], "alarm": [159, 248], "alayon": [23, 262], "alexand": [73, 262], "algorithm": [1, 2, 41, 44, 47, 48, 51, 57, 60, 62, 64, 71, 86, 87, 113, 115, 123, 130, 147, 148, 154, 156, 158, 160, 211, 212, 215, 219, 239, 247, 248, 253, 258, 262], "ali": [126, 262], "alia": [2, 9, 17, 18, 20, 34, 37, 52, 54, 55, 60, 62, 66, 123, 129, 166, 189], "alias": 63, "aliasing_filt": 63, "align": 63, "all": [0, 2, 3, 4, 5, 9, 15, 16, 17, 18, 25, 34, 36, 37, 38, 39, 41, 48, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 70, 74, 79, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 108, 112, 113, 114, 115, 123, 136, 150, 162, 166, 169, 178, 179, 182, 183, 189, 199, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "alleg": 250, "allow": [1, 27, 34, 59, 62, 63, 84, 86, 91, 123, 131, 134, 145, 166, 185, 236, 242, 247, 250, 258], "allow_pad": 70, "allow_trunc": 70, "allowd": 63, "almost": [251, 254, 260], "alon": [57, 211], "along": [65, 138, 162, 168, 250, 254], "alpha": [9, 20, 21, 22, 31, 34, 76, 78, 102, 103, 104, 105, 106, 207, 218, 242], "alpha_": 207, "alpha_alpha_channel": 166, "alpha_beta_channel": 166, "alpha_devic": [10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 29, 30, 36, 219], "alpha_propag": 15, "alpha_receiv": 166, "alpha_recept": 15, "alpha_transmiss": 15, "alpha_transmitt": 166, "alreadi": [15, 37, 57, 59, 62, 84, 88, 89, 172, 189, 219, 247, 249, 250, 259, 261], "also": [3, 4, 15, 16, 34, 37, 63, 87, 117, 206, 211, 225, 235, 238, 247, 249, 250, 253, 254, 260], "alter": [249, 254, 259], "altern": [136, 144, 145, 149, 159, 189, 250], "alwai": [21, 33, 38, 56, 63, 87, 120, 223, 253, 254, 261], "among": [63, 74, 250], "amount": [2, 3, 4, 31, 37, 63], "amplif": [87, 166, 194, 203, 204, 205, 206, 207, 211], "amplifc": 202, "amplifi": [166, 194, 202, 235, 237, 262], "amplitud": [9, 10, 11, 12, 13, 14, 31, 131, 166, 169, 173, 174, 175, 176, 194, 195, 196, 197, 203, 205, 207, 229, 237, 261], "amplitude_alpha": 207, "amplitude_beta": 207, "amplitude_imbal": [194, 237], "amplitude_path_loss": 229, "amplitudeshiftkei": 261, "an": [1, 2, 3, 4, 5, 9, 10, 11, 13, 14, 15, 18, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 54, 57, 59, 62, 63, 65, 66, 69, 70, 77, 80, 82, 84, 88, 90, 92, 93, 96, 100, 102, 103, 104, 105, 106, 116, 117, 118, 119, 120, 123, 125, 126, 129, 136, 139, 142, 144, 145, 149, 150, 157, 158, 159, 160, 161, 162, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 182, 184, 185, 186, 189, 192, 194, 195, 196, 202, 209, 210, 211, 218, 219, 222, 224, 229, 230, 235, 237, 238, 239, 240, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "analog": [41, 80, 91, 112, 113, 114, 115, 161, 166, 168, 170, 178, 194, 195, 197, 211, 237, 247, 254, 260], "analog_digital_convers": 170, "analog_digital_convert": [196, 197, 198, 199, 200, 201], "analogdigitalconvert": [194, 195, 196], "analysi": [3, 4, 262], "analyz": [5, 15], "ancient": [16, 262], "ancillari": 250, "andr": [23, 262], "andrea": [23, 262], "andr\u00e9": [248, 262], "angl": [1, 2, 3, 4, 5, 9, 23, 25, 27, 29, 35, 37, 65, 151, 153, 175, 203, 253, 254], "angle_bin": 151, "angle_coupling_indic": 8, "angle_resolut": 37, "angular": 9, "ani": [6, 7, 9, 10, 15, 16, 20, 23, 24, 27, 29, 30, 36, 37, 53, 54, 56, 57, 63, 66, 83, 84, 85, 86, 129, 130, 131, 134, 146, 149, 155, 157, 159, 166, 189, 203, 204, 206, 207, 209, 211, 236, 247, 248, 249, 250, 251, 254, 259], "anim": 211, "annot": [57, 102, 103, 104, 105, 106, 157, 159, 160, 232, 255, 257], "anntena": [37, 172, 177], "anntenna": 177, "anoth": [19, 37, 126, 130, 172, 178], "answer": 257, "ant": 166, "anteannaarrai": 170, "antenna": [1, 2, 3, 4, 5, 9, 15, 16, 18, 20, 21, 22, 25, 27, 29, 31, 32, 34, 35, 36, 38, 39, 41, 43, 48, 51, 64, 65, 80, 83, 86, 87, 91, 94, 95, 96, 112, 113, 114, 115, 118, 119, 120, 162, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 195, 205, 211, 213, 216, 234, 240, 241, 247, 248, 253, 254, 255, 257, 259, 260, 262], "antenna_calibr": 86, "antenna_correl": [27, 28, 234], "antenna_correlation_vari": 28, "antenna_st": 170, "antennaarrai": [37, 41, 170, 172, 177, 253], "antennaarraybas": 37, "antennaarrayst": [2, 3, 4, 5, 18, 26, 37, 64, 170], "antennacalibr": 86, "antennacorrel": [26, 27], "antennamod": [26, 37, 118, 119, 120, 169, 173, 174, 175, 176, 253, 254], "antennaport": [37, 113, 171, 254], "antennas_upd": 37, "antennna": 168, "anti": [63, 250], "anttila": [194, 262], "anual": 249, "anyon": [250, 251], "anyth": 250, "aoa": [5, 9], "aod": 9, "apart": [240, 241], "api": [32, 40, 56, 150, 232, 247, 248, 250, 254, 255, 256, 257, 260, 263], "appear": 63, "append": [40, 63, 71, 86, 91, 122, 249], "append_sampl": 63, "append_stream": [63, 122], "append_symbol": 122, "appli": [9, 12, 13, 14, 18, 33, 41, 48, 51, 57, 58, 63, 66, 75, 86, 89, 95, 96, 97, 113, 115, 116, 117, 131, 138, 148, 161, 162, 169, 173, 174, 175, 176, 179, 194, 196, 197, 198, 199, 247, 249, 250, 252, 253, 262], "applic": [0, 2, 62, 90, 129, 130, 189, 248, 250, 253], "apprixm": 195, "approach": [25, 93, 96, 120, 262], "appropri": [198, 220, 250], "approv": 250, "approxim": [19, 25, 229, 250, 255], "april": 262, "apt": [37, 172], "ar": [2, 5, 6, 7, 9, 15, 16, 17, 18, 20, 25, 27, 30, 33, 34, 36, 37, 38, 40, 41, 45, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 70, 74, 80, 84, 88, 97, 98, 99, 100, 112, 114, 115, 116, 120, 122, 123, 129, 131, 134, 136, 141, 144, 145, 149, 150, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 172, 178, 179, 182, 183, 189, 194, 195, 196, 202, 204, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 225, 226, 231, 232, 236, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "arang": [33, 35, 254, 261], "arbitrari": [37, 54, 57, 70, 80, 98, 102, 103, 104, 105, 106, 127, 130, 131, 157, 159, 160, 166, 254], "architectur": 32, "archiv": [249, 250], "area": [9, 10, 23, 120, 231, 262], "arg": [7, 17, 32, 33, 34, 54, 57, 58, 59, 62, 81, 84, 86, 88, 90, 112, 113, 114, 115, 129, 130, 131, 132, 133, 134, 135, 185, 219, 253], "arg0": [68, 72, 73, 75, 76, 78], "arg1": [68, 72, 73, 75, 76, 78], "arg2": [68, 72, 73, 76, 78], "arg3": [72, 73, 76, 78], "arg4": [72, 76], "arg_0": [37, 65, 170], "arg_1": [65, 170], "arguabl": [257, 258], "argument": [2, 9, 10, 11, 12, 13, 14, 20, 22, 24, 33, 37, 48, 51, 55, 57, 63, 80, 84, 91, 129, 151, 203, 204, 206, 207], "argument_tupl": 57, "ari09": 262, "aribtrai": 170, "aribtrarili": 166, "arikan": [73, 262], "aris": 250, "around": [2, 37, 48, 51, 68, 72, 73, 75, 76, 78, 131, 166, 172, 196, 211, 257], "arrai": [1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 25, 26, 27, 31, 33, 34, 36, 37, 38, 41, 48, 51, 57, 63, 64, 65, 66, 77, 80, 86, 87, 91, 94, 95, 96, 100, 108, 110, 112, 113, 114, 115, 122, 132, 133, 134, 135, 139, 142, 151, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 180, 181, 186, 211, 229, 240, 241, 247, 253, 254, 256, 259], "arrang": 250, "arrari": [3, 4, 253], "array_comparison": 254, "array_lik": 63, "array_respons": 253, "arriv": [2, 3, 4, 9, 29, 37, 87, 151, 211], "arsenia": 262, "art": [77, 126, 262], "articl": [68, 72, 73, 75, 76, 78, 250, 262], "artifact": [7, 52, 53, 57, 92, 99, 100, 102, 103, 104, 105, 106, 157, 158, 159, 160, 218, 257], "artifact_scalar": 57, "artifacto": 157, "artifactplot": 92, "artifacttempl": [57, 102, 103, 104, 105, 106, 157], "arxiv": [75, 262], "asarrai": 63, "ashkan": [210, 262], "asign": 16, "ask": [232, 261], "aspect": [0, 23, 262], "asplund": [23, 262], "assert": [232, 250], "assess": 252, "asset": 250, "assigend": 247, "assign": [5, 57, 74, 114, 116, 146, 149, 162, 165, 167, 168, 170, 191, 211, 221, 222, 223, 224, 225, 247, 252, 254, 261], "associ": [16, 97, 139, 140, 142, 147, 193, 250], "assum": [2, 3, 4, 5, 9, 10, 11, 15, 18, 20, 21, 22, 27, 29, 31, 32, 33, 34, 35, 37, 41, 48, 51, 56, 57, 62, 63, 64, 73, 83, 86, 87, 88, 94, 95, 96, 120, 123, 131, 132, 133, 135, 136, 144, 145, 146, 149, 157, 159, 162, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 186, 189, 194, 211, 219, 226, 239, 240, 241, 247, 250, 251, 253, 254, 258, 260], "assumpt": [15, 36, 184, 186, 247, 250, 260], "ast": [15, 34], "astronomi": [16, 262], "astyp": [258, 261], "asymptot": [57, 262], "asynchron": 225, "atennna": 254, "attach": [33, 37, 60, 65, 70, 85, 87, 123, 124, 125, 126, 127, 129, 148, 172, 211, 250], "attempt": [57, 250], "attenu": [20, 33, 34, 35, 82, 96, 157, 159, 160, 161, 253, 260], "attr": 255, "attribut": [16, 30, 57, 63, 66, 84, 107, 117, 118, 119, 120, 162, 170, 211, 250, 254], "audio": [79, 236, 247, 249, 263], "audiodevic": [80, 81, 233, 252], "audiodeviceantenna": 80, "audioscenario": 81, "audiosystem": [81, 233], "aumag": [68, 72, 73, 75, 76, 78, 262], "author": 250, "autodoc": 232, "autom": 232, "automat": [37, 54, 57, 86, 166, 168, 170, 172, 196, 232, 237, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "automaticgaincontrol": [195, 197, 237, 260], "automatig": 200, "automot": 166, "avail": [7, 37, 41, 48, 51, 53, 57, 62, 63, 64, 94, 95, 96, 98, 112, 113, 114, 115, 125, 131, 136, 141, 144, 159, 162, 165, 166, 167, 168, 170, 172, 182, 189, 202, 211, 218, 220, 239, 240, 241, 247, 249, 250, 257, 261], "averag": [41, 102, 123, 129, 131, 141, 160, 257, 261], "avoid": [15, 36, 38, 63, 64, 122], "awai": [250, 253, 254], "awgn": [131, 189, 211, 235, 238, 255, 259, 261], "awgnreal": [192, 193], "ax": [9, 29, 57, 63, 66, 85, 102, 103, 104, 105, 106, 122, 155, 157, 159, 160, 196, 205, 257], "axesimag": 66, "axi": [57, 63, 66, 138, 151, 168, 196, 205, 233, 238, 240, 241, 243, 254, 258, 259, 261], "azimuth": [2, 3, 4, 5, 9, 35, 37, 65, 151, 153, 253], "azimuth_arrival_spread": 9, "azimuth_departure_spread": 9, "azimuth_of_arriv": 9, "azimuth_of_departur": 9, "b": [2, 3, 4, 5, 8, 25, 30, 56, 63, 68, 72, 73, 75, 76, 78, 96, 102, 103, 104, 105, 106, 151, 220, 229, 234, 247, 250, 255, 262], "b_": [102, 103, 105, 106], "back": [77, 87, 199, 247, 249, 261], "backend": 231, "background": 191, "backoff": 197, "backscatt": [94, 239], "backward": 65, "backwards_transform": 65, "bahl": [76, 262], "balanc": [9, 25, 27], "band": [16, 31, 41, 46, 48, 49, 50, 51, 63, 64, 77, 80, 86, 87, 91, 92, 94, 95, 96, 108, 109, 110, 111, 113, 116, 123, 126, 129, 130, 131, 141, 148, 162, 166, 170, 194, 211, 218, 220, 234, 237, 240, 241, 242, 247, 259, 261, 262], "bandlimit": 16, "bandwidth": [3, 4, 18, 29, 33, 34, 35, 86, 123, 129, 131, 132, 133, 134, 135, 144, 146, 161, 211, 234, 235, 238, 242, 253, 260, 261], "bandwith": 166, "bar": [57, 231], "bar50": 262, "bare": [113, 115], "barebon": [112, 113, 114, 115], "barkausen": 250, "barreto": [248, 262], "barthou": [68, 72, 73, 75, 76, 78, 262], "bartlett": [4, 262], "base": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 232, 239, 247, 248, 249, 250, 254, 255, 259, 260, 261], "base_port": 37, "base_pos": [37, 170], "base_st": 239, "base_station_devic": [5, 254], "base_station_oper": 239, "base_station_transmitt": [5, 254], "baseband": [2, 115, 161, 212, 215, 253, 261], "baseband_recept": 261, "baseband_sampl": 261, "baseband_sign": [123, 129, 131, 141, 212, 215, 254, 256], "baseband_transmiss": 261, "basemodem": [70, 94, 95, 96, 107, 112, 113, 114, 115, 117, 123, 187, 188], "basi": [41, 166, 256, 257], "basic": [15, 16, 34, 39, 64, 67, 74, 98, 166, 183, 229, 248, 250, 254, 255, 258], "bastract": 158, "bat": 7, "bayer": [57, 262], "bch": 67, "bchcode": 68, "bcjr": 76, "bcjr74": 262, "beach": [25, 262], "beaform": 253, "beam": [2, 254], "beamfocu": 2, "beamfor": 162, "beamform": [0, 162, 247, 257, 262, 263], "beamformed_sampl": 253, "beamformerbas": 2, "beamformingtransmitt": 254, "beaulieu": [25, 262], "becaus": [250, 255], "becom": [57, 126, 156, 248, 250, 257], "been": [8, 16, 38, 57, 118, 119, 211, 247, 250, 251, 252, 253, 258], "befor": [38, 41, 63, 65, 84, 108, 109, 110, 112, 114, 117, 118, 119, 121, 125, 156, 166, 194, 197, 198, 199, 205, 234, 235, 237, 238, 239, 240, 241, 242, 247, 249, 251, 253, 254, 256, 257], "beforehand": 63, "begin": [31, 37, 131, 141, 144, 194, 218, 235, 253, 258, 263], "behalf": 250, "behav": 247, "behaviour": [9, 15, 16, 18, 20, 29, 31, 32, 34, 40, 53, 57, 63, 70, 87, 196, 205, 211, 218, 225, 247, 255, 257], "being": [2, 3, 4, 5, 7, 9, 10, 12, 13, 14, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 56, 59, 64, 69, 84, 131, 134, 150, 166, 182, 218, 225, 247, 250, 251, 253, 257], "belgium": [202, 206, 262], "believ": 250, "belong": [16, 19, 37, 57, 84], "below": 250, "benefit": 250, "bengtsson": [25, 262], "ber": [10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 73, 102, 220, 247, 252, 255, 259], "ber_a": 220, "ber_b": 220, "berrou": [78, 262], "best": 250, "beta": [9, 20, 21, 22, 31, 34, 76, 78, 102, 103, 104, 105, 106, 207, 218], "beta_": 207, "beta_beta_channel": 166, "beta_devic": [10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 29, 30, 36, 219], "beta_propag": 15, "beta_receiv": 166, "beta_recept": 15, "beta_transmiss": 15, "beta_transmitt": 166, "better": 250, "betwe": 156, "betweeen": 114, "between": [5, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 30, 31, 33, 34, 36, 37, 38, 57, 64, 69, 70, 77, 82, 87, 97, 99, 100, 101, 102, 103, 104, 105, 106, 114, 117, 118, 119, 120, 121, 124, 126, 129, 130, 131, 133, 134, 135, 136, 138, 144, 145, 146, 149, 160, 161, 166, 167, 170, 177, 181, 182, 183, 184, 186, 197, 198, 211, 212, 213, 215, 216, 219, 220, 221, 222, 224, 226, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 254, 255, 256, 257, 259, 260, 262], "beyond": 250, "bgt93": 262, "bhvst14": 262, "bi": [249, 250], "bidirect": 97, "big": 63, "bigger": [31, 63, 70, 230], "bin": [7, 38, 63, 151, 157, 161, 165, 249], "binari": [6, 57, 68, 73, 159, 249, 260, 261, 262], "bind": [79, 80, 81, 89, 236, 249], "bindung": 91, "biometrika": [4, 262], "bistat": [33, 166], "bit": [15, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 129, 131, 141, 187, 188, 189, 196, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 252, 255, 258, 259, 260, 261], "bit_block_s": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 109, 111, 234, 235, 242, 258], "bit_energi": [123, 129, 131, 141, 261], "biterrorartifact": 102, "biterrorevalu": [10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 99, 102, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 255, 258, 259, 261], "bitord": 261, "bits_per_fram": [106, 123, 261], "bits_per_symbol": [123, 129], "bits_sourc": [98, 112, 114, 115], "bitssourc": [98, 112, 114, 115], "bjepc14": 262, "black": 232, "blazingli": 257, "bler": 103, "bloat": 63, "block": [31, 57, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 99, 101, 105, 106, 109, 111, 116, 122, 123, 125, 129, 131, 138, 141, 234, 235, 240, 242, 248, 258, 262], "block_siz": [69, 240, 241], "blockerrorartifact": 103, "blockerrorevalu": 103, "blockinterleav": [69, 112, 113, 115], "blostein": [126, 262], "bmatrix": 31, "bodi": 250, "bomfin": 251, "bool": [9, 12, 13, 14, 16, 20, 21, 22, 33, 34, 35, 37, 41, 44, 48, 51, 53, 54, 57, 62, 63, 65, 70, 72, 76, 83, 84, 86, 87, 88, 89, 91, 100, 102, 103, 104, 105, 106, 123, 129, 131, 134, 141, 144, 146, 149, 156, 157, 160, 197, 198, 199, 205, 211, 212, 213, 215, 218, 219], "boolean": [19, 57, 63, 65, 91, 123, 129, 138, 141, 157, 212], "borner": [37, 262], "bose": [68, 262], "both": [2, 9, 15, 20, 22, 25, 34, 41, 63, 77, 92, 93, 97, 114, 116, 125, 136, 138, 141, 144, 145, 149, 166, 170, 178, 182, 189, 192, 197, 232, 234, 239, 247, 248, 250, 255, 257, 259], "bound": [2, 9, 16, 17, 18, 20, 34, 37, 41, 44, 48, 51, 52, 54, 57, 59, 60, 62, 66, 89, 123, 189, 262], "boundari": [8, 11, 16, 23, 30, 37, 38, 40, 54, 56, 62, 137, 138, 200, 201, 229], "box": [97, 247], "brc60": 262, "brief": 250, "broadcast": [41, 169, 202, 206, 247, 262], "brook": 262, "browser": 232, "buffer": 34, "bufferd": 76, "buffered_cod": 76, "bug": 249, "build": [9, 232, 249], "built": [249, 257], "bullet": 5, "burkhardt": [32, 262], "busi": 250, "bw": 234, "bypass": [86, 87, 247], "b\u00f6rner": [32, 262], "c": [2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 34, 37, 56, 63, 68, 72, 73, 75, 76, 78, 104, 147, 148, 151, 162, 202, 232, 249, 250, 251, 253, 254, 262], "c_0": [22, 34, 96, 162], "cabl": [82, 252], "cach": [16, 55, 66, 86, 150, 162], "calcul": [57, 197, 210, 229, 234, 235, 237, 238, 239, 240, 241, 242, 262], "calibr": [79, 86, 87, 89], "call": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 19, 28, 30, 31, 32, 33, 34, 37, 41, 48, 51, 55, 57, 62, 64, 84, 85, 86, 88, 89, 108, 109, 110, 111, 112, 113, 114, 115, 150, 162, 163, 164, 165, 166, 170, 205, 211, 218, 219, 247, 248, 250, 251, 252, 253, 254, 256, 257, 259], "callabl": [16, 48, 51, 55, 57, 84], "callback": [9, 16, 37, 41, 48, 51, 55, 57, 62, 86, 87, 88, 89, 211, 219], "caller": 63, "campa": 84, "campaign": [5, 57, 62, 84, 102, 103, 104, 105, 106, 159, 166, 247, 254, 256, 260, 261], "can": [1, 2, 5, 6, 7, 15, 23, 25, 33, 34, 37, 54, 55, 57, 62, 63, 65, 70, 74, 84, 96, 97, 103, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 126, 129, 132, 133, 134, 135, 138, 139, 142, 143, 145, 150, 162, 166, 168, 170, 182, 189, 191, 195, 196, 198, 211, 218, 221, 222, 223, 224, 225, 231, 232, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "cancel": [73, 194, 262], "candid": [254, 260], "cannot": [15, 159, 166, 250], "canyon": [9, 13, 14], "cap69": [253, 262], "capab": 166, "capabl": [211, 247, 255], "capac": [73, 262], "capaign": 258, "capon": [1, 4, 253, 262], "caponbeamform": [3, 253], "captur": [41, 261], "card": [79, 81, 252], "care": 82, "carlo": [57, 166, 211, 218, 219, 234, 235, 237, 238, 239, 240, 241, 242, 247, 248, 254, 255, 257, 259, 260, 262], "carri": [48, 51, 58, 95, 96, 113, 115, 123, 136, 144, 145, 149, 162, 250, 259], "carrier": [2, 3, 4, 5, 18, 20, 29, 34, 41, 43, 48, 51, 63, 64, 80, 86, 87, 91, 94, 95, 96, 116, 118, 120, 126, 132, 133, 134, 135, 141, 145, 148, 151, 162, 166, 210, 211, 213, 216, 229, 234, 236, 237, 238, 239, 240, 247, 252, 253, 256, 260, 262], "carrier_frequ": [2, 3, 4, 5, 10, 11, 12, 13, 14, 18, 21, 22, 23, 24, 27, 29, 30, 33, 34, 35, 36, 37, 41, 43, 48, 51, 63, 64, 80, 87, 91, 94, 95, 96, 112, 113, 114, 115, 136, 144, 145, 149, 150, 151, 157, 159, 160, 161, 162, 166, 170, 211, 213, 216, 220, 221, 222, 223, 224, 225, 229, 234, 237, 238, 239, 240, 241, 242, 243, 247, 253, 254, 256, 258, 260], "carter": 262, "cartesean": 65, "cartesian": [2, 34, 37, 64, 65, 153, 254], "cartesian_array_respons": 37, "cartesian_phase_respons": 37, "case": [2, 3, 9, 33, 53, 57, 63, 65, 86, 102, 103, 104, 105, 106, 126, 157, 168, 170, 178, 182, 203, 219, 247, 250, 254, 255, 256, 257], "cassagn": [68, 72, 73, 75, 76, 78, 262], "cat": [25, 262], "catch": 57, "catch_except": 57, "catesean": 65, "caught": 57, "caus": [63, 250, 254], "caution": 53, "cb06": 262, "cb07": 262, "cd": 249, "cdl": [9, 10, 11, 12, 13, 14], "cdlrealiz": 8, "cdlrt": 9, "cdltype": 8, "cdot": [5, 9, 69, 70, 74, 203, 206, 207], "ceas": 250, "ceil": [10, 167], "cell": [32, 262], "center": [37, 63, 87, 211, 233, 234, 237, 240, 241, 242, 243], "central": [2, 3, 4, 5, 34, 41, 48, 51, 57, 80, 91, 94, 95, 96, 123, 151, 162, 166, 211], "cerdeira": [32, 262], "certain": [2, 37, 70, 75, 187, 250, 262], "cessat": 250, "cfar": 262, "cfg": 54, "ch": [202, 206, 262], "chafii": 262, "chain": [34, 60, 65, 67, 70, 86, 87, 88, 112, 114, 150, 166, 168, 170, 171, 178, 181, 182, 183, 184, 186, 195, 205, 211, 212, 213, 215, 216, 219, 235, 237, 249, 253, 254, 259, 260], "chanc": 232, "chanel": [9, 18, 20, 29, 31, 32, 34], "chang": [5, 31, 36, 37, 38, 62, 65, 120, 161, 166, 167, 170, 250, 254], "chann": 33, "channel": [0, 5, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 39, 48, 69, 70, 71, 73, 74, 77, 80, 82, 86, 87, 88, 97, 112, 113, 114, 118, 119, 120, 122, 123, 126, 127, 128, 131, 132, 133, 134, 135, 136, 142, 144, 145, 149, 150, 157, 158, 159, 160, 161, 166, 191, 211, 217, 218, 219, 220, 233, 234, 235, 238, 239, 240, 241, 242, 243, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263], "channel_equ": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 112, 113, 114, 123, 132, 133, 134, 135, 136, 144, 145, 149, 233, 235, 239, 240, 241, 243, 247, 252, 255, 256], "channel_estim": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 112, 113, 114, 118, 119, 120, 123, 132, 133, 134, 135, 136, 144, 145, 149, 233, 235, 239, 240, 241, 243, 247, 252, 255, 256], "channel_r": [15, 217, 219], "channelequ": [123, 124, 127, 255], "channelestim": [123, 125], "channelpropag": 18, "channelr": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 28, 31, 32, 33, 34, 35, 38, 217, 219, 255], "channelsampl": [9, 15, 16, 17, 18, 20, 29, 31, 32, 34, 255], "channelsamplehook": [8, 9, 11, 12, 13, 14, 16, 17, 28, 31, 32, 33, 34, 255], "channelst": [9, 18, 20, 31, 32, 34], "channelstatedimens": 38, "channelstateformat": [38, 255], "channelstateinform": [9, 18, 20, 29, 31, 32, 34, 38, 255, 259], "chapter": 236, "characerist": 254, "character": [37, 250], "characterest": 5, "characteris": 2, "characterist": [3, 4, 5, 9, 33, 34, 35, 37, 131, 150, 158, 168, 169, 170, 173, 185, 186, 196, 202, 203, 204, 205, 206, 207, 208, 239, 253, 263], "characteristc": [159, 260], "charactersit": [37, 260], "charaterist": 196, "charcterist": 254, "charg": 250, "chaudhuri": [68, 262], "check": [57, 62, 67, 235, 262], "check_block_s": 71, "checksum": 71, "chengshan": [25, 262], "chi": 229, "chirp": [97, 123, 128, 129, 132, 144, 161, 236, 238, 242, 260], "chirp_bandwidth": [129, 234, 242], "chirp_dur": [129, 132, 161, 234, 242, 260], "chirp_slop": 132, "chirpfsk": [129, 234, 242], "chirpfskcorrelationsynchron": 129, "chirpfsksynchron": 129, "chirpfskwaveform": 129, "chirps_in_fram": 129, "chleonardon": 262, "choic": [232, 249, 250], "choos": [247, 250], "chorti": 262, "chosen": 261, "christian": [57, 96, 262], "chronologi": [16, 262], "circl": 261, "circuit": [210, 262], "circular": 192, "circumst": 250, "circumvent": 250, "cite": 248, "civil": 250, "claim": 250, "class": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 247, 250, 253, 255, 257, 258, 259, 261, 262], "classic": 254, "classif": [126, 262], "classmethod": [10, 11, 12, 13, 14, 23, 44, 45, 54, 56, 57, 60, 62, 63, 65, 142, 153, 159, 185, 213, 215, 216, 217, 218], "claus": 250, "clean": 54, "clear": 250, "clearli": [252, 256], "cli": 249, "clip": 202, "clippingpoweramplifi": 203, "clock": [126, 129, 130], "clone": 249, "close": [250, 256], "closest": 15, "cloud": [96, 150, 152, 154, 156, 157, 162, 163, 166], "cluster": [8, 10, 11, 12, 13, 14, 15, 166, 248], "cluster_delai": 9, "cluster_delay_lin": [9, 10, 11, 12, 13, 14], "cluster_delay_spread": 9, "cluster_pow": 9, "clusterdelaylinebas": [9, 10, 11, 12, 13, 14], "clusterdelayliner": [9, 10, 11, 12, 13, 14], "clusterdelaylinerealizationparamet": [9, 10, 11, 12, 13, 14], "clusterdelaylinesampl": [8, 9, 11, 12, 13, 14], "cluter": 10, "clutter": [10, 34, 35, 262], "clutter_dens": 10, "clutter_height": 10, "clutter_s": 10, "cmake": 249, "co": [5, 25, 37, 254], "cock": [76, 262], "code": [5, 23, 41, 60, 63, 67, 69, 71, 72, 77, 97, 107, 113, 115, 116, 125, 132, 133, 134, 135, 142, 161, 201, 202, 218, 236, 240, 247, 249, 250, 259, 261, 262, 263], "code_block_s": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 109, 111, 258], "coeffici": 3, "cofid": 57, "coher": [122, 259], "col": 231, "colab": [261, 263], "collabor": [5, 262], "collect": [15, 37, 57, 60, 66, 100, 108, 110, 157, 158, 160, 166, 170, 211, 219, 228, 247, 250, 254, 257, 260], "color": 53, "column": [5, 63], "com": [68, 72, 73, 75, 76, 78, 231, 262], "combi": 253, "combin": [30, 43, 57, 70, 95, 112, 114, 116, 119, 161, 162, 166, 168, 247, 249, 250, 254, 255, 260], "come": 250, "comm": [202, 206, 262], "command": [6, 66, 232, 236, 247, 249, 250, 260], "commerci": 250, "commit": 250, "common": [57, 92, 97, 99, 100, 168, 182, 192, 250, 255, 259], "commonli": 169, "commuic": [97, 220, 239], "commun": [0, 5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 27, 30, 36, 63, 67, 69, 70, 78, 93, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 141, 144, 145, 146, 147, 148, 149, 166, 169, 182, 187, 188, 189, 192, 202, 207, 210, 211, 218, 219, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 252, 254, 255, 256, 258, 259, 262, 263], "communc": 261, "communication_artifact": 99, "communication_evalu": 99, "communicationevalu": [100, 102, 103, 104, 105, 106], "communicationnoiselevel": [187, 188], "communicationrecept": [94, 108, 109, 113], "communicationreceptionfram": [94, 108, 109], "communicationtransmiss": [94, 110, 115], "communicationtransmissionfram": [94, 110, 111], "communicationwaveform": [95, 113, 115, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 141, 144, 146, 148, 149, 187, 188, 261], "communicaton": [123, 129, 131, 141], "communict": [233, 240, 243], "compact": 248, "compar": [97, 99, 101, 170, 191, 247, 253, 254, 256], "comparison": [242, 262], "compat": 56, "compens": [82, 131, 220, 231, 235], "compil": 250, "complementari": 261, "complet": [31, 57, 181, 219, 225, 248, 251, 254], "complex": [4, 5, 16, 25, 34, 37, 60, 63, 113, 115, 122, 123, 126, 129, 130, 131, 141, 148, 166, 169, 173, 174, 175, 176, 189, 192, 197, 202, 203, 211, 247, 248, 252, 253, 255, 257, 259, 261], "complex128": [63, 123], "compli": 250, "complianc": [232, 250], "compliant": [2, 70, 232], "compon": [9, 16, 18, 20, 23, 25, 27, 29, 31, 32, 34, 37, 112, 113, 114, 115, 126, 146, 149, 183, 184, 210, 233, 240, 241, 243, 250], "compos": [9, 25, 166], "composit": 162, "comprehens": 9, "compress": [2, 257], "compris": 97, "comput": [2, 9, 18, 20, 25, 29, 31, 32, 34, 37, 38, 57, 63, 65, 70, 159, 162, 166, 183, 184, 226, 229, 248, 250, 253, 257, 260, 261, 262], "computation": [38, 57, 122], "compute_num_offset_sampl": 226, "con": 254, "concaten": [38, 63, 122, 247], "concept": [70, 96, 106, 242, 248, 254, 255, 257, 262], "concern": 250, "concret": 15, "conda": [7, 249, 251], "condit": [9, 250], "conduct": [5, 247, 254], "conf": [202, 206, 262], "confer": [25, 32, 78, 96, 262], "confid": [57, 234, 235, 237, 238, 239, 240, 241, 242], "confidence_level": 57, "confidence_statu": 57, "config": 54, "config_test": 232, "configur": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 41, 53, 54, 57, 60, 62, 69, 70, 80, 83, 84, 86, 87, 88, 89, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 157, 159, 160, 161, 162, 166, 168, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 202, 208, 211, 218, 219, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "configurablepilotwaveform": [123, 131, 132, 133, 134, 135, 141, 144, 146, 149], "configure_devic": 83, "configure_point": 57, "confin": 178, "confirm": 254, "conflict": 36, "confus": 64, "conid": 57, "conist": 15, "conj": 253, "conmsid": 48, "connect": [37, 82, 114, 118, 119, 120, 136, 144, 145, 149, 168, 170, 171, 172, 250, 254, 256, 257], "consecut": [59, 161], "consequ": [250, 257], "consequenti": 250, "consid": [2, 3, 4, 5, 9, 15, 16, 18, 19, 20, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 48, 51, 57, 58, 60, 61, 63, 64, 65, 70, 73, 83, 87, 94, 95, 96, 99, 102, 103, 104, 105, 106, 112, 113, 114, 115, 123, 125, 126, 129, 131, 132, 133, 134, 135, 136, 141, 144, 145, 149, 158, 159, 162, 166, 167, 179, 183, 191, 195, 197, 208, 209, 211, 212, 219, 220, 225, 234, 235, 237, 240, 241, 247, 250, 254, 255, 256, 259, 260], "considered_object": 57, "consisd": 32, "consist": [0, 5, 8, 10, 11, 12, 13, 14, 15, 25, 62, 67, 70, 79, 136, 144, 145, 149, 150, 161, 189, 211, 247, 250, 254, 255, 256, 257, 259, 260], "consistent_r": [8, 21, 33, 35, 255], "consistent_sampl": 255, "consistentboolean": 19, "consistentgaussian": 19, "consistentgener": [19, 255], "consistentr": [8, 9, 10, 11, 12, 13, 14, 19, 255], "consistentsampl": 19, "consistentuniform": [8, 19, 255], "consistentvari": 19, "consol": [53, 57, 84, 102, 103, 104, 105, 106, 157, 159, 160, 166, 218], "console_mod": [53, 57, 218, 253, 254, 255, 257, 258, 259, 260, 261], "consolemod": [40, 53, 57, 218, 253, 254, 255, 257, 258, 259, 260, 261], "consolid": [34, 247], "conspicu": 250, "constant": [21, 27, 63, 167, 205, 222, 224, 253, 254], "constel": [92, 104, 122, 131, 141, 247, 252, 256, 261], "constellationevm": 104, "constitut": 250, "constraint": 166, "constru": 250, "construct": [63, 73, 211, 262], "constructor": [33, 60, 142, 218], "constructorerror": 54, "consum": [64, 250], "contact": [248, 250], "contain": [2, 3, 4, 5, 6, 7, 9, 37, 38, 40, 41, 44, 45, 47, 52, 54, 57, 58, 62, 63, 64, 66, 70, 77, 87, 97, 108, 123, 126, 129, 131, 132, 133, 134, 135, 141, 142, 155, 157, 158, 159, 160, 162, 166, 168, 211, 212, 216, 217, 219, 225, 226, 228, 249, 250, 256, 257, 262], "content": [56, 57, 159, 160, 250, 252], "context": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 33, 35, 36, 53, 54, 102, 103, 104, 105, 106, 116, 150, 157, 159, 160, 161, 168, 169, 211, 247, 250, 261], "continu": [4, 15, 16, 132, 161, 211, 250, 262], "contractu": 250, "contradict": 250, "contrast": 250, "contribut": [232, 248], "contributor": [232, 250], "control": [15, 57, 68, 77, 84, 86, 91, 166, 168, 195, 196, 221, 222, 223, 224, 225, 237, 250, 251, 257, 260, 261, 262], "convei": 250, "conveni": [7, 25, 37, 58, 59, 62, 107, 114, 162, 166, 172, 218, 236, 247, 250, 261], "convent": [1, 2, 253, 254, 262], "conventionalbeamform": [4, 112, 113, 114, 253, 254], "convers": [38, 41, 54, 56, 57, 63, 91, 112, 113, 114, 115, 159, 160, 161, 166, 170, 178, 194, 197, 229, 237, 247, 260], "conversion_typ": 229, "convert": [38, 41, 56, 57, 63, 65, 80, 91, 122, 154, 159, 194, 195, 211, 229, 252, 254, 261], "convey": 250, "convolut": [15, 76, 131, 262], "cooper": 250, "coordiant": [35, 37, 153], "coordin": [2, 3, 4, 15, 34, 35, 37, 39, 41, 57, 64, 87, 153, 211, 253, 254], "coordinatefocu": 2, "copi": [2, 37, 57, 63, 122, 166, 236, 249, 250, 256, 258, 259], "copyleft": 250, "copyright": 250, "core": [0, 5, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 160, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261], "correct": [0, 68, 71, 72, 73, 75, 76, 78, 97, 99, 101, 107, 109, 111, 112, 113, 114, 115, 124, 250, 258, 262], "corrected_data": 258, "correction_pow": [68, 75], "correl": [3, 15, 25, 27, 129, 144, 180, 234, 253, 262], "correlatiom": 95, "correlation_dist": 27, "correlationsynchron": [129, 130, 136, 144, 145, 149], "corresp": [76, 262], "correspond": [5, 62, 64, 214, 234, 250], "corret": [68, 247], "cosin": [5, 97, 123, 128, 131, 169, 247, 252], "cost": [250, 262], "cost256": 23, "cost259": [23, 25, 262], "cost259typ": 23, "costli": 38, "cought": 36, "could": [247, 250, 257], "count": [37, 42, 43, 47, 63], "count_antenna": 37, "count_receive_antenna": 37, "count_transmit_antenna": 37, "counterclaim": 250, "counterpart": 259, "countri": 250, "coupl": [8, 87, 166, 170, 182, 211], "coupling_model": 170, "cours": [178, 182, 189, 202, 208, 220, 225, 247, 254, 261], "court": 250, "courtesi": 251, "covari": [3, 26, 83, 253], "coven": 250, "coventionalbeamform": 253, "cover": [232, 250], "coverag": [232, 250], "cox": [145, 233, 243, 262], "cpu": [57, 166, 218, 247, 257], "cpus_per_actor": 57, "cr": 31, "crc": 71, "creat": [1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 27, 30, 33, 35, 36, 37, 53, 57, 59, 60, 62, 63, 64, 66, 81, 84, 90, 96, 99, 102, 103, 104, 105, 106, 117, 118, 119, 120, 122, 155, 157, 159, 160, 161, 166, 167, 168, 172, 178, 182, 184, 185, 186, 189, 195, 196, 202, 208, 211, 218, 220, 221, 222, 223, 224, 225, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "create_figur": [9, 57, 63, 66, 155], "creation": [59, 62, 249], "criteria": [57, 159, 160, 262], "criterion": 250, "cross": [8, 27, 33, 34, 35, 57, 144, 150, 239, 250, 260], "cross_sect": [33, 34], "crt": [16, 17], "cst": [16, 17, 18, 28, 31, 33, 34], "cube": [94, 96, 150, 152, 153, 154, 156, 159, 162, 163], "cube_h0": 159, "cube_h1": 159, "cubic": 210, "cummul": 160, "cure": 250, "current": [6, 7, 9, 20, 26, 34, 36, 37, 38, 41, 51, 53, 57, 60, 62, 65, 70, 86, 87, 89, 93, 97, 98, 99, 106, 122, 123, 126, 131, 146, 149, 150, 158, 165, 166, 167, 169, 170, 178, 189, 196, 202, 208, 211, 218, 219, 220, 225, 232, 236, 247, 248, 257, 261], "curtesi": 231, "curv": [10, 11, 12, 13, 14, 21, 23, 24, 27, 30, 33, 35, 159, 206], "custom": [5, 25, 58, 112, 113, 114, 115, 116, 129, 132, 133, 134, 135, 145, 166, 170, 178, 195, 202, 226, 247, 250, 254, 257, 259], "custom_arrai": 170, "customantennaarrai": [37, 172], "customantennacorrel": 26, "customari": 250, "customarili": 250, "customcorrel": 26, "customiz": [26, 97, 202, 204], "custompilotsymbolsequ": [132, 133, 134, 135], "custompoweramplifi": 204, "cut": [70, 205], "cwt": [94, 107, 113, 115, 123, 124, 125, 126, 127], "cyclic": [67, 96, 136, 138, 139, 142, 144, 145, 149, 238, 240, 241], "cyclicredundancycheck": 71, "d": [8, 15, 25, 30, 32, 37, 68, 72, 73, 75, 76, 78, 126, 147, 148, 247, 250, 253, 262], "d_": [34, 96], "dac": [91, 166, 195], "dai": 250, "damag": 250, "dan": [210, 262], "dani": [194, 262], "data": [38, 52, 53, 57, 59, 60, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 106, 109, 111, 115, 117, 118, 119, 120, 121, 123, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 149, 151, 159, 163, 196, 233, 234, 238, 240, 241, 242, 243, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261], "data_bit": [70, 123, 129, 131, 141, 261], "data_block_s": [68, 73, 75], "data_r": 123, "data_symbol": [123, 129, 131, 139, 141, 142, 261], "data_typ": 63, "dataclass": [57, 167, 211], "dataset": [62, 260, 263], "date": [53, 250], "db": [10, 11, 12, 13, 14, 15, 16, 21, 23, 24, 27, 30, 33, 35, 54, 56, 91, 102, 103, 104, 105, 106, 160, 166, 189, 210, 211, 229, 234, 235, 237, 238, 239, 240, 241, 242, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261], "db2lin": 229, "db_val": 229, "dbconversiontyp": [56, 229], "dc": [233, 240, 241, 243], "dc_suppress": [146, 149, 233, 238, 240, 241, 243], "dcrt": 20, "dddd": 240, "ddddd": 240, "ddddffuddddffu": 240, "ddot": 31, "de": [54, 63, 142, 202, 206, 262], "deactiv": [54, 259], "debug": [53, 58, 64, 247, 257], "decai": [24, 210], "decemb": 250, "decibel": 56, "decid": [250, 258], "decis": [69, 157], "declar": [33, 247], "declin": 250, "decod": [2, 3, 4, 5, 60, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 104, 107, 108, 109, 113, 116, 117, 118, 120, 121, 253, 258, 259, 262], "decode_r": 121, "decode_stream": [2, 3, 4, 60], "decode_symbol": [117, 118, 119, 120, 121, 259], "decoded_bit": 109, "decoded_sign": 109, "decoded_symbol": [109, 259], "decorrel": [8, 21, 33, 35], "decorrelation_dist": [8, 19, 21, 33, 35, 255], "decreas": [120, 253], "decsript": 170, "decvic": [87, 211], "dedic": [27, 33, 57, 59, 114, 136, 144, 145, 146, 149, 161, 168, 234, 242, 247, 254, 256], "deduc": 256, "deem": 250, "deep": [37, 122], "deepcopi": [5, 220], "def": [253, 255, 257, 258, 259, 261], "default": [2, 3, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 31, 33, 34, 35, 37, 38, 41, 48, 51, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 70, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 112, 114, 115, 122, 123, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 146, 147, 149, 151, 156, 159, 160, 161, 162, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 184, 185, 189, 196, 197, 198, 199, 202, 205, 208, 209, 211, 218, 219, 220, 225, 227, 229, 231, 255, 261], "default_channel": [88, 219], "default_results_dir": [53, 247, 260], "default_rf_chain": 170, "default_rng": 261, "defect": 250, "defend": 250, "defens": 250, "defici": 3, "defin": [3, 5, 7, 9, 10, 23, 30, 36, 37, 57, 65, 69, 70, 79, 96, 102, 103, 104, 105, 106, 123, 129, 131, 141, 168, 187, 188, 191, 204, 210, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 253, 254, 256, 257, 259, 260, 261], "definit": [6, 39, 145, 185, 250, 254], "defint": 26, "degener": 63, "delai": [4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 25, 27, 29, 30, 31, 32, 34, 36, 38, 63, 79, 83, 86, 87, 125, 126, 211, 212, 213, 215, 216, 220, 230, 234, 240, 241, 242, 247, 254, 255, 262], "delay_calibr": 86, "delay_norm": [9, 12, 13, 14], "delay_offset": 9, "delay_profil": [28, 29], "delay_resampling_matrix": 230, "delay_vari": 21, "delaycalibr": [82, 83], "delaycalibrationbas": [82, 86], "delaychannel": 20, "delaychannelbas": [20, 21, 22], "delaychannelr": [20, 21, 22], "delaychannelsampl": 20, "delaynorm": [9, 12, 13, 14], "deleg": [112, 113, 114, 115], "delet": [57, 250], "deliv": [9, 10, 11, 12, 13, 14, 23, 30, 77, 262], "delta": [20, 21, 22, 25, 31, 34, 57, 96, 161, 162, 165, 196, 210], "delta_f": 234, "demand": [57, 240, 258], "demap": 117, "demodul": [69, 113, 117, 118, 119, 123, 125, 129, 131, 141, 252, 259, 261], "demonstr": [87, 88, 167, 242, 247, 255, 256, 257, 258, 259], "deni": 250, "denomin": 250, "denot": [5, 9, 10, 15, 18, 20, 27, 29, 31, 32, 33, 34, 37, 94, 95, 102, 103, 104, 105, 106, 122, 151, 161, 162, 165, 206, 210, 221], "dens": [38, 63, 122], "dense_st": [38, 122], "densesign": 63, "densiti": [72, 187, 188, 210, 262], "departur": [4, 5, 9], "depend": [0, 2, 15, 16, 20, 22, 31, 34, 35, 37, 38, 57, 61, 63, 65, 66, 115, 194, 197, 202, 207, 224, 232, 243, 247, 249, 261, 262], "depict": [196, 205, 247], "deploi": [55, 218, 232, 248], "deploy": [23, 248, 262], "depriv": 250, "depth": [236, 248, 254], "deriv": [2, 5, 57, 94, 250], "describ": [0, 2, 7, 15, 38, 62, 63, 64, 65, 69, 74, 77, 123, 167, 168, 196, 207, 211, 247, 249, 254, 255, 261], "descript": [7, 9, 39, 57, 67, 107, 112, 114, 123, 129, 132, 133, 134, 135, 139, 146, 147, 148, 150, 162, 165, 166, 167, 168, 169, 170, 178, 182, 189, 202, 208, 211, 218, 219, 220, 225, 227, 247, 249], "descriptor": 57, "deseri": [54, 256], "design": [20, 149, 166, 187, 188, 250], "desir": [1, 2, 5, 36, 60, 159, 168, 178, 182, 191, 196, 220, 225, 229], "desktop": 233, "detach": 65, "detail": [10, 11, 12, 13, 14, 57, 77, 81, 90, 112, 113, 114, 115, 117, 146, 147, 148, 149, 150, 166, 206, 207, 243, 247, 250], "detect": [54, 57, 71, 95, 96, 126, 129, 130, 148, 150, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 239, 247, 248, 249, 252, 253, 257], "detection_prob": 159, "detectionprobabilityevalu": 157, "detectionprobartifact": 157, "detectionprobevalu": 157, "detector": [96, 150, 157, 158, 159, 160, 162, 239, 260], "deterior": 194, "determin": [86, 91, 159, 161, 187, 188, 196, 197, 250], "determinist": [15, 16, 31, 36, 98], "determinst": 32, "develop": [166, 249, 250, 251, 259, 261], "devic": [2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 48, 49, 50, 51, 52, 58, 59, 60, 62, 64, 65, 79, 81, 82, 83, 88, 89, 90, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 126, 136, 144, 145, 149, 150, 157, 158, 159, 160, 161, 162, 166, 167, 168, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 194, 195, 202, 205, 208, 209, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "device_a_rx": [220, 221, 222, 223, 224, 225], "device_a_tx": [220, 221, 222, 223, 224, 225], "device_alpha": [102, 103, 104, 105, 106, 166, 167, 234, 235, 238, 240, 241, 242], "device_b_rx": [220, 221, 222, 223, 224, 225], "device_b_tx": [220, 221, 222, 223, 224, 225], "device_beta": [102, 103, 104, 105, 106, 166, 167, 238], "device_channel": 219, "device_id": 64, "device_index": [59, 62], "device_input": [44, 215], "device_output": 213, "device_recept": [52, 217, 247, 254, 256], "device_regist": 62, "device_sign": 211, "device_st": 219, "device_transmiss": [52, 217, 247, 256], "devicefocu": [5, 254], "deviceinput": [41, 42, 44, 47, 62, 86, 87, 88, 89, 211, 212, 215, 219], "deviceoutput": [16, 18, 41, 43, 45, 62, 213, 216, 219], "devicerecept": [41, 44, 52, 62, 86, 89, 215], "devicereceptionplot": [92, 247], "devicest": [29, 34, 41, 48, 51, 62, 64, 89], "devicetransmiss": [41, 45, 52, 62, 86, 216, 217], "devicetransmissionplot": [92, 247], "devicetyp": [59, 62], "devis": 145, "dft": [112, 113, 114, 115, 117, 233, 240, 241, 243], "dh": 10, "diagon": [3, 31], "diagram": [15, 63, 92, 104], "dict": 63, "dictionari": [1, 253], "differ": [0, 20, 30, 36, 37, 52, 55, 57, 63, 64, 102, 103, 104, 105, 106, 129, 158, 159, 161, 170, 178, 182, 211, 225, 234, 247, 250, 252, 254], "differenti": [15, 67], "diffus": 25, "digial": 195, "digit": [5, 41, 64, 80, 86, 91, 112, 113, 114, 115, 144, 145, 161, 166, 168, 170, 178, 187, 188, 194, 195, 197, 202, 206, 211, 218, 237, 247, 254, 260, 262], "digtial": 52, "dim": 63, "dimens": [2, 3, 4, 5, 15, 19, 31, 37, 38, 57, 62, 63, 76, 77, 78, 83, 84, 87, 100, 122, 138, 151, 157, 158, 159, 160, 161, 165, 177, 185, 186, 187, 188, 190, 191, 211, 234, 235, 237, 238, 239, 240, 241, 242, 254, 259], "dimension": [2, 3, 4, 5, 16, 18, 26, 37, 57, 62, 65, 87, 100, 102, 103, 104, 105, 106, 119, 122, 139, 142, 151, 153, 160, 185, 186, 211], "dipol": [37, 169], "dipoleantenna": 37, "direct": [1, 2, 3, 4, 5, 9, 15, 23, 27, 33, 37, 57, 65, 86, 87, 146, 149, 162, 168, 231, 250, 253, 254, 256, 262], "directli": [15, 25, 27, 41, 63, 86, 87, 116, 125, 136, 232, 247, 248, 250, 263], "directori": [7, 53, 54, 218, 232, 247, 249, 251], "diretli": 252, "disabl": [33, 34, 54, 57, 62, 65, 70, 84, 197, 198, 199, 218, 219, 255], "disciplin": 251, "disclaim": 250, "discov": 232, "discret": [3, 4, 9, 15, 16, 18, 20, 29, 31, 32, 34, 38, 63, 107, 116, 123, 129, 131, 141, 151, 161, 165, 222, 226, 253], "discriminatori": 250, "discuss": 15, "disloc": 63, "displai": [7, 57, 63, 186, 187, 188, 190, 191, 250, 263], "distanc": [8, 15, 19, 21, 22, 27, 33, 34, 35, 63, 150, 153, 160, 210, 229, 239, 260], "distinct": 18, "distinguish": [9, 250], "distorionless": 205, "distort": [31, 38, 169, 170, 173, 194, 202, 203, 204, 205, 206, 207], "distortionless": [3, 88, 219, 253], "distribut": [5, 8, 15, 16, 19, 20, 21, 23, 25, 27, 30, 57, 69, 119, 120, 125, 166, 168, 185, 192, 193, 218, 221, 229, 248, 249, 250, 257, 261, 262], "diverg": 57, "divers": [120, 262], "divid": [63, 69, 97, 99, 101, 132], "divis": [120, 144, 146], "dl": [10, 240], "dlr": [202, 206, 262], "do": [15, 20, 25, 57, 63, 69, 71, 77, 122, 220, 233, 240, 243, 249, 250, 256, 257], "docssourc": 232, "document": [9, 57, 63, 150, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "doe": [2, 9, 35, 41, 48, 54, 57, 59, 60, 62, 65, 69, 70, 71, 74, 77, 86, 87, 88, 89, 106, 167, 170, 179, 183, 184, 209, 219, 247, 250, 251], "doi": [3, 5, 16, 23, 25, 32, 37, 57, 68, 72, 73, 75, 76, 77, 78, 96, 118, 120, 126, 147, 148, 194, 202, 207, 210, 248, 262], "domain": [9, 15, 18, 20, 27, 29, 31, 32, 34, 38, 63, 83, 92, 122, 123, 126, 129, 130, 131, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 185, 194, 208, 210, 220, 233, 238, 240, 241, 243, 252, 254, 259, 261], "don": [63, 122, 151, 259], "done": [54, 69], "doppler": [23, 25, 27, 29, 30, 34, 96, 151, 161, 162, 165], "doppler_bin": 151, "doppler_frequ": [23, 27, 30, 136, 144, 145, 149], "dot": [5, 15, 16, 18, 31, 37, 69, 74], "dotsc": [15, 16, 27, 31], "doubl": 63, "doubt": 250, "down": [23, 34, 60, 77, 142, 218, 248, 252], "downl": 239, "downlink": 239, "download": [86, 89, 236, 247, 249, 263], "downsampl": 63, "downstream": 250, "dpsk": [202, 206, 262], "dpu": 106, "dr": 250, "draw": 16, "drawn": [9, 21, 57], "drive": [86, 166, 236, 260], "driven": [202, 203, 248], "driver": [236, 249], "drop": [15, 39, 53, 59, 62, 84, 87, 89, 125, 150, 159, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 233, 240, 243, 247, 254, 256, 257, 260], "drop_dur": [62, 218], "drop_interv": 218, "droptyp": [52, 62], "drt": [44, 52], "drx": 106, "dsp": [41, 44, 47, 48, 51, 55, 62, 64, 86, 87, 88, 89, 112, 113, 114, 115, 158, 160, 211, 212, 215, 219, 234, 235, 237, 238, 239, 240, 241, 242], "dst": [41, 62, 86], "dtt": 52, "dtype": [9, 29, 57, 63, 66, 83, 85, 155, 211, 253, 255, 257, 261], "dual": 19, "dualconsistentr": 19, "dualconsistentsampl": 19, "due": [2, 178, 220, 230, 247, 262], "dummi": 79, "dump": [54, 218], "dump_result": 218, "duplex": [37, 93, 166, 169, 173, 174, 175, 176, 182], "duplexjcasoper": [94, 95, 96], "duplexlink": 117, "duplexmodem": [97, 107, 112, 252, 255, 258, 259, 261], "duplic": 166, "durabl": 250, "durat": [41, 51, 62, 63, 94, 95, 106, 107, 115, 123, 129, 130, 131, 132, 140, 141, 161, 162, 165, 167, 170, 196, 218, 221, 224, 233, 234, 235, 238, 240, 241, 242, 243], "dure": [1, 2, 3, 4, 5, 9, 12, 13, 14, 33, 34, 38, 40, 41, 48, 51, 52, 53, 57, 59, 60, 62, 63, 64, 69, 70, 71, 72, 74, 77, 78, 81, 84, 85, 86, 87, 89, 94, 95, 96, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 146, 149, 156, 157, 160, 161, 162, 166, 170, 179, 186, 187, 188, 190, 191, 194, 211, 213, 216, 217, 218, 220, 233, 240, 241, 243, 247, 249, 254, 255, 256, 257, 258, 259, 260, 261], "durrani": [126, 262], "dwell": 250, "dwijendra": [68, 262], "dynam": [57, 63, 195, 250, 254], "e": [5, 8, 16, 25, 26, 27, 30, 32, 34, 37, 38, 51, 56, 57, 63, 65, 69, 70, 77, 82, 86, 91, 103, 105, 106, 123, 129, 131, 134, 139, 141, 142, 143, 144, 159, 161, 162, 166, 178, 182, 188, 191, 196, 202, 207, 219, 232, 233, 234, 238, 239, 240, 241, 243, 247, 249, 250, 254, 262], "each": [0, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 37, 41, 55, 57, 58, 59, 60, 62, 63, 66, 84, 86, 102, 103, 104, 105, 106, 113, 117, 123, 129, 132, 133, 134, 135, 136, 141, 142, 144, 145, 149, 159, 161, 162, 166, 167, 168, 170, 181, 185, 196, 211, 214, 215, 218, 219, 220, 225, 226, 233, 234, 235, 238, 240, 241, 242, 243, 247, 250, 254, 255, 257, 258, 260, 261, 263], "earlier": 250, "eas": 15, "easi": [34, 54, 249], "easili": [54, 257], "eb": 187, "eberlein": [32, 262], "ebn0": [189, 234, 235, 237, 238, 239, 240, 241, 242], "echo": 253, "edit": 249, "eeei": 262, "effect": [20, 57, 63, 125, 166, 168, 178, 182, 202, 206, 208, 218, 237, 250, 255, 257, 259, 261, 262], "effici": [57, 149, 166, 257, 262], "effort": [248, 250], "either": [2, 15, 32, 34, 35, 63, 116, 159, 189, 191, 196, 247, 249, 250], "electr": 262, "electromagnet": [16, 33, 37, 41, 43, 62, 63, 166, 178, 211, 247, 248, 255, 261], "electron": [250, 262], "element": [5, 37, 38, 57, 65, 82, 87, 91, 117, 136, 138, 144, 145, 149, 168, 169, 170, 172, 177, 211, 218, 233, 238, 240, 241, 243, 254, 255, 256, 257, 259], "elementtyp": [96, 117, 136, 137, 144, 145, 149, 233, 238, 240, 241, 243, 255, 256, 257, 259], "elemtromagnet": 16, "elev": [4, 5, 37], "elib": [202, 206, 262], "ell": [25, 27, 33, 34], "elsevi": [68, 72, 73, 75, 76, 78, 262], "embarassingli": 257, "embodi": 250, "emerg": [38, 43, 64, 166, 213, 216], "emerging_direct": 33, "emerging_sign": [43, 213, 216], "emiss": [41, 80, 91, 211], "emit": [1, 3, 4, 16, 37, 62, 94, 96, 107, 150, 211, 219, 233, 234, 237, 240, 241, 242, 243, 247, 253], "emmiss": 41, "employ": 250, "empti": [37, 56, 63, 137, 157, 171, 172, 218, 253, 257], "empty_lik": 257, "en": [194, 250], "enabl": [9, 12, 13, 14, 15, 16, 20, 22, 32, 33, 34, 41, 44, 48, 53, 57, 62, 63, 65, 68, 70, 72, 73, 75, 76, 78, 83, 84, 86, 87, 88, 89, 91, 123, 131, 134, 146, 149, 156, 160, 166, 197, 198, 199, 205, 211, 212, 213, 215, 218, 219, 233, 242, 243, 248, 249, 250, 257, 262], "enable_syndrome_check": 72, "encod": [2, 4, 5, 60, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 107, 109, 110, 111, 112, 113, 114, 115, 117, 120, 121, 129, 136, 144, 145, 162, 234, 235, 240, 241, 242, 258, 259, 261], "encode_r": 121, "encode_stream": [2, 60], "encode_symbol": [117, 120, 121, 259], "encoded_bit": [69, 70, 71, 74, 77, 108, 109, 111], "encoded_symbol": [111, 259], "encoder_manag": [107, 112, 113, 114, 115, 258], "encodermanag": [70, 107, 113, 115], "encount": 37, "encourag": [57, 250], "end": [31, 37, 63, 91, 131, 166, 178, 189, 194, 211, 249, 250, 253, 258], "endpoint": [185, 186], "energi": [9, 16, 18, 20, 29, 31, 32, 34, 58, 63, 123, 129, 131, 141, 161, 165, 187, 188, 189, 191, 234, 235, 237, 238, 239, 240, 241, 242, 261], "enforc": [232, 250], "engin": [191, 211, 248, 249, 251, 262], "ensur": [63, 91, 250], "enter": [236, 250], "entir": 250, "entiti": [166, 211, 247, 250], "entri": [0, 7, 53, 57, 63, 70, 126, 130, 148], "enum": [10, 11, 38, 40, 54, 56, 137, 138, 200, 201, 229], "enumer": [54, 253, 256], "env": [249, 251], "envelop": 252, "enviro": 95, "environ": [1, 5, 7, 15, 53, 57, 65, 162, 166, 232, 236, 247, 249, 251, 254, 256, 257], "environment": 15, "envnam": [7, 249, 251], "eploy": 262, "equal": [10, 35, 36, 37, 41, 63, 69, 70, 71, 74, 77, 95, 97, 103, 105, 106, 108, 109, 112, 113, 114, 120, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 141, 144, 145, 149, 153, 156, 161, 198, 213, 216, 218, 220, 226, 233, 235, 238, 240, 241, 243, 247, 255, 256, 261], "equalize_channel": [124, 127], "equalize_symbol": 123, "equalized_symbol": [108, 109, 247, 252, 256], "equat": [3, 4, 9, 10, 16, 18, 20, 25, 27, 29, 31, 32, 33, 34, 56, 69, 70, 71, 74, 77, 96, 202, 205, 229, 253, 258], "equidistantli": 170, "equip": [5, 254, 263], "equival": [15, 34, 63, 126, 130, 229, 249, 250, 261], "equl": 252, "equz": 148, "eras": 53, "erdal": [73, 262], "erik": [57, 262], "eriksson": [210, 262], "error": [0, 15, 40, 68, 69, 71, 72, 73, 75, 76, 78, 83, 97, 99, 101, 106, 107, 109, 111, 112, 113, 114, 115, 126, 150, 158, 187, 188, 194, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 252, 255, 258, 262], "error_cod": 258, "errorevalu": [102, 103, 105], "errro": 160, "esenti": [251, 256], "esn0": 189, "especi": [251, 252], "essenc": 255, "essenti": [15, 57, 122, 250, 255, 259], "establish": [65, 233, 234, 243], "estim": [3, 4, 16, 48, 57, 82, 83, 86, 95, 96, 97, 100, 106, 112, 113, 114, 123, 126, 128, 129, 131, 132, 133, 134, 135, 136, 144, 145, 146, 149, 151, 157, 160, 161, 162, 165, 166, 197, 198, 199, 217, 233, 239, 240, 241, 243, 247, 248, 253, 254, 256, 257, 259, 260, 262], "estimate_channel": [123, 125], "estimate_delai": 83, "estimate_gain": [197, 198, 199], "estimate_noise_pow": 86, "et": [23, 25, 37, 57, 102, 103, 105, 126, 157, 194, 210, 248], "etsi": [9, 10, 11, 12, 13, 14, 23, 30, 77, 262], "etsi18": 262, "etsi_t": [77, 262], "etsi_tr": [9, 10, 11, 12, 13, 14, 23, 30, 262], "eucap": [32, 262], "euclidean": 19, "eurasip": [126, 262], "european": [32, 202, 206, 262], "evalaut": 5, "evalu": [5, 10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 34, 52, 57, 84, 92, 97, 102, 103, 104, 105, 106, 129, 132, 133, 134, 135, 150, 159, 160, 161, 166, 170, 196, 205, 218, 220, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 252, 254, 255, 256, 259, 260, 262, 263], "evaluateddrop": 52, "evaluation_result": 57, "evaluationplot": 92, "evaluationresult": [57, 158, 159, 257], "evaluationtempl": [57, 102, 103, 104, 105, 106, 157], "evaluator_index": [84, 92], "even": [63, 74, 120, 166, 196, 247, 250], "evenli": 231, "event": 250, "ever": 250, "everi": [16, 37, 54, 65, 98, 136, 144, 145, 149, 161, 166, 170], "everyon": 250, "evluat": [33, 35], "evm": 104, "evmartifact": 104, "evmevalu": 104, "evolut": [32, 262], "evolv": 255, "ex": 251, "exact": 250, "exactli": [70, 77, 166, 223], "exampl": [2, 5, 7, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 33, 34, 35, 36, 63, 99, 102, 103, 104, 105, 106, 116, 120, 150, 157, 159, 160, 161, 166, 167, 168, 170, 232, 233, 234, 235, 237, 238, 240, 243, 247, 248, 250, 251, 253, 255, 263], "except": [30, 53, 57, 250], "exchang": [16, 69, 77, 102, 103, 104, 105, 106, 166, 211, 220, 233, 243, 255, 262], "excit": 15, "exclud": 250, "exclus": [2, 113, 115, 250], "excus": 250, "execut": [6, 7, 15, 32, 39, 57, 59, 62, 70, 150, 159, 162, 166, 170, 211, 218, 232, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "executionmod": 251, "exemplari": 93, "exepct": [103, 105, 106], "exept": 40, "exercis": [250, 259], "exist": [15, 33, 34, 35, 36, 54, 57, 59, 62, 66, 84, 88, 89, 90, 211, 219, 232, 247, 249, 251], "exp": [34, 132, 133, 134, 135, 166, 254, 255], "expand": [166, 263], "expect": [9, 10, 11, 12, 13, 14, 18, 20, 29, 31, 32, 34, 41, 48, 51, 54, 57, 58, 64, 70, 82, 86, 87, 95, 96, 98, 113, 115, 123, 158, 162, 179, 183, 189, 190, 191, 211, 250, 252, 254, 255, 259, 260], "expected_energy_scal": [9, 18, 20, 29, 31, 32, 34], "expected_pow": [58, 211], "expected_st": [9, 10, 11, 12, 13, 14, 256], "expens": [38, 122], "experi": [9, 10, 12, 13, 14, 17, 20, 21, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 53], "experiment": 248, "explain": 261, "explicitli": [166, 250], "exploit": 170, "explot": [139, 142], "exponenti": 25, "expos": [15, 117, 118, 119, 120, 167], "express": [5, 15, 250], "expressli": 250, "exst": 59, "extend": [5, 25, 112, 113, 114, 115, 168, 178, 218, 249, 250, 254, 262], "extens": [54, 116, 170, 232, 249, 250, 259], "extent": [15, 189, 250], "extern": 249, "extra": 39, "extract": [41, 57, 60, 99, 102, 103, 104, 105, 106, 142, 152, 156, 157, 159, 160, 218, 247, 249, 257], "ey": [63, 92, 253], "eyeplot": 92, "f": [2, 3, 4, 9, 16, 23, 32, 37, 63, 76, 94, 95, 96, 105, 106, 126, 161, 162, 165, 166, 202, 210, 250, 256, 257, 258, 261, 262], "f_": [2, 3, 4, 15, 16, 20, 21, 22, 34, 37, 94, 95, 161, 162, 165], "facil": 250, "facilit": 250, "fact": [2, 5, 178, 195], "factor": [3, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 115, 123, 131, 133, 134, 135, 182, 189, 206, 207, 234, 235, 238, 252], "factori": [5, 8, 9, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 58, 60, 63, 65, 94, 95, 96, 98, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 162, 167, 172, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226], "factory_typ": 10, "factorytyp": 10, "fade": [15, 20, 23, 24, 26, 30, 234, 242, 262], "fail": [54, 250], "failur": 250, "fair": 250, "fall": [15, 249], "fals": [5, 33, 34, 35, 53, 54, 57, 62, 63, 65, 84, 96, 157, 159, 160, 185, 186, 197, 198, 199, 205, 211, 218, 219, 233, 235, 238, 240, 241, 243, 248, 253, 254, 257, 258, 260], "false_alarm_prob": 159, "famili": 250, "far": [3, 4, 33, 37, 131, 170, 253], "fashion": [69, 118, 250], "fast": [16, 68, 72, 73, 75, 76, 78, 257, 262], "fat": 57, "favor": [250, 260], "fdel": 57, "featur": [0, 3, 4, 9, 20, 21, 22, 25, 31, 33, 35, 54, 62, 102, 103, 104, 105, 106, 117, 118, 119, 120, 136, 144, 145, 149, 157, 159, 160, 161, 162, 167, 168, 211, 220, 221, 222, 223, 224, 225, 232, 247, 248, 250, 251, 253, 257, 258, 261], "fec": [68, 72, 73, 75, 76, 78, 108, 110, 111, 263], "fed": 254, "fee": 250, "feed": [38, 52, 64, 168, 202, 203, 204, 205, 206, 207, 254], "feedback": 57, "fer": 105, "fetch": [19, 252], "fetch_scalar": 19, "fettwei": 262, "few": [15, 256], "fft": [38, 117, 161], "fft_norm": 117, "ffu": 240, "fget": 57, "field": [3, 4, 32, 33, 37, 75, 150, 170, 178, 253, 262], "fig": 231, "fig_ax": 196, "figur": [9, 29, 37, 57, 63, 66, 85, 122, 131, 155, 170, 196, 201, 202, 205, 228, 257], "figurebas": [9, 57, 63, 66, 83], "file": [7, 40, 54, 57, 62, 84, 86, 98, 159, 166, 218, 232, 236, 247, 248, 249, 250, 251, 256, 260, 263], "file_loc": 84, "filenam": 54, "filesystem": [54, 256], "filter": [63, 83, 86, 93, 130, 131, 132, 133, 134, 135, 185, 238, 252], "filter_calibr": 83, "filter_length": [131, 133, 135], "filter_ord": 63, "filteredsinglecarrierwaveform": [131, 132, 133, 134, 135], "final": [15, 52, 57, 113, 115, 125, 159, 166, 194, 211, 247, 250, 256, 257], "final_pos": 167, "find": 250, "finish": [234, 235, 237, 238, 239, 240, 241, 242, 257], "finit": [75, 262], "first": [2, 3, 4, 5, 15, 19, 21, 30, 34, 57, 62, 63, 80, 84, 87, 91, 122, 126, 130, 131, 148, 159, 161, 165, 194, 195, 211, 219, 224, 225, 232, 238, 242, 243, 250, 252, 256, 258, 260], "first_impact": 57, "first_target": 33, "fit": [32, 250], "five": 30, "fix": [15, 16, 33, 91, 166, 187, 188, 190, 211, 222, 224, 247, 249, 250], "fixedcrosssect": 33, "flag": [15, 34, 38, 44, 53, 54, 62, 63, 86, 91, 123, 129, 156, 205, 211, 212, 215, 249], "flake8": 232, "flat": 257, "flatten": [63, 261], "fledg": 211, "flexibl": [57, 145], "flicker": 210, "flight": [34, 95, 254, 255], "flip": [258, 259], "float": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41, 43, 48, 51, 52, 56, 57, 58, 60, 62, 63, 64, 65, 69, 70, 73, 80, 82, 83, 86, 87, 91, 94, 95, 96, 104, 105, 106, 107, 109, 111, 113, 115, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 144, 146, 148, 149, 151, 153, 155, 156, 159, 160, 161, 162, 165, 167, 170, 175, 177, 179, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 207, 210, 211, 213, 216, 217, 218, 224, 226, 229, 230, 253, 255, 257, 261], "float64": [102, 103, 211], "floatingerror": [51, 179, 183, 184], "floor": [10, 86, 189, 210, 260], "flow": [247, 250], "flowchart": 57, "fluctuat": 208, "fly": 83, "fmcw": [33, 35, 97, 123, 128, 129, 131, 150, 157, 159, 160, 165, 166, 253, 260], "fmcwwaveform": 132, "focu": [1, 2, 3, 4, 5, 126, 253, 254], "focus": [1, 2, 3, 4, 5, 253, 254], "focus_angl": [4, 5], "focus_dimens": 254, "focus_point": 2, "folder": [7, 54], "follow": [5, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 33, 35, 36, 54, 63, 96, 97, 102, 103, 104, 105, 106, 113, 115, 116, 120, 123, 125, 130, 131, 150, 162, 166, 167, 194, 197, 201, 202, 210, 235, 236, 237, 247, 249, 250, 257, 258, 259, 260, 262], "follow_link": 54, "follw": 218, "forbid": 250, "forc": [233, 238, 241, 243, 250, 255], "force_remov": 65, "form": [57, 63, 70, 192, 247, 250, 261], "format": [38, 54, 57, 122, 159, 240, 250], "formul": 248, "formula": [16, 20], "forward": [65, 67, 68, 72, 73, 75, 76, 78, 97, 107, 109, 111, 112, 113, 114, 115, 247, 258, 262], "forwards_transform": 65, "fouc": 5, "found": [23, 232, 247, 250], "foundat": 250, "four": [120, 122, 162, 220, 247, 256, 257, 259, 261], "fourier": [38, 116], "frac": [3, 5, 9, 15, 16, 20, 21, 22, 25, 34, 37, 57, 69, 70, 71, 74, 96, 102, 104, 106, 120, 161, 162, 165, 203, 206, 207, 210, 253, 258], "fraction": 121, "frame": [2, 37, 41, 62, 63, 65, 69, 70, 86, 87, 94, 95, 97, 99, 101, 106, 107, 108, 110, 113, 115, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 161, 162, 165, 170, 196, 211, 212, 213, 215, 216, 220, 221, 222, 224, 225, 226, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 252, 255, 256, 257, 259, 260, 261], "frame_delai": 123, "frame_dur": [58, 94, 95, 106, 107, 123, 129, 161, 162, 165, 170, 196], "frame_error": 106, "frame_gener": 107, "frameel": 233, "frameerrorartifact": 105, "frameerrorevalu": 105, "framegener": 107, "framesect": 141, "framework": [97, 166, 218, 248, 253, 262], "free": [20, 21, 22, 34, 126, 229, 250], "freedom": 250, "freeli": [211, 247], "freq_differ": [129, 234, 242], "freqeuenc": 145, "frequci": 63, "frequenc": [2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 23, 27, 29, 30, 31, 34, 37, 38, 41, 43, 48, 51, 63, 64, 80, 83, 86, 87, 91, 92, 94, 95, 96, 120, 123, 129, 131, 132, 134, 138, 141, 144, 145, 146, 147, 148, 149, 151, 161, 162, 165, 166, 168, 169, 170, 173, 178, 182, 185, 186, 192, 202, 205, 207, 208, 210, 211, 213, 216, 220, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 247, 253, 254, 256, 260, 262], "frequency_select": 38, "frequeni": 181, "frequent": 166, "freuenci": 208, "frii": 20, "from": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 43, 44, 45, 48, 51, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 69, 70, 83, 86, 87, 88, 89, 91, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 123, 125, 126, 129, 131, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 170, 172, 178, 179, 182, 183, 184, 189, 194, 195, 205, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 229, 232, 239, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "from_artifact": 57, "from_cartesian": 65, "from_deviceoutput": 213, "from_fil": 54, "from_fold": 54, "from_hdf": [8, 10, 11, 12, 13, 14, 21, 22, 28, 31, 32, 33, 35, 45, 54, 159, 216, 217, 255, 260], "from_interleav": 63, "from_ndarrai": 63, "from_output": 45, "from_paramet": 54, "from_path": 54, "from_processeddeviceinput": 44, "from_processedsimulateddeviceinput": 215, "from_quaternion": 65, "from_rpi": [65, 211], "from_simulateddeviceoutput": 216, "from_spher": 65, "from_str": 54, "from_stream": 54, "from_transl": [5, 10, 11, 12, 13, 14, 22, 33, 36, 65, 167, 168, 170, 254, 256], "from_tupl": 56, "from_yaml": [60, 142, 218], "fromscenario": 159, "fromspher": 153, "front": [7, 91, 166, 178, 189, 194, 211, 260], "frontend": [170, 181, 185, 211], "frontendend": 182, "fset": 57, "fsf": 250, "fsk": [97, 123, 128, 236], "ft": 2, "fulfil": 250, "full": [37, 52, 54, 91, 138, 141, 168, 169, 173, 174, 175, 176, 182, 211, 218, 247, 250, 251, 254, 256, 258, 260], "fulli": [27, 63, 113, 115, 166, 168, 202, 204, 232, 254], "function": [2, 9, 15, 16, 34, 39, 48, 51, 53, 55, 57, 59, 62, 66, 79, 93, 113, 115, 150, 167, 210, 229, 249, 250, 251, 252, 256, 258, 261], "fundament": [187, 255], "funtion": 257, "further": [37, 73, 77, 81, 90, 91, 107, 112, 113, 114, 115, 118, 120, 194, 195, 206, 207, 243, 247, 250, 254, 256], "furthermor": 254, "futur": [166, 178, 182, 250], "g": [27, 63, 72, 75, 120, 262], "g_": [25, 27], "g_save_path": 72, "gain": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 91, 168, 195, 196, 202, 204, 205, 219, 234, 237, 239, 242, 254, 255, 256, 257, 259, 260], "gaincontrolbas": [197, 198, 199], "gaincontroltyp": [197, 200], "gal": [68, 72, 73, 75, 76, 78, 262], "gal63": 262, "gallag": [72, 262], "ganesan": [120, 262], "gap": 63, "gaussian": [19, 87, 189, 192, 193, 211, 261], "gener": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 72, 77, 79, 81, 84, 85, 86, 87, 89, 92, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 189, 191, 192, 196, 205, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 232, 233, 234, 242, 243, 247, 250, 252, 253, 254, 255, 256, 257, 261, 262], "generate_bit": 98, "generate_output": [41, 62, 211, 219], "generate_result": [57, 100, 157, 158, 159, 160, 257], "generate_sequ": 77, "generateresult": 159, "geometr": [37, 65, 262], "geometri": [15, 231], "geq": 206, "gernat": 77, "get": [3, 4, 5, 23, 57, 59, 60, 63, 99, 117, 118, 119, 120, 142, 196, 218, 234, 235, 242, 248, 250, 257, 259], "get_cross_sect": 33, "get_monitor": 231, "get_pow": [187, 188, 189, 190, 191], "getitem": 63, "getstream": 63, "getter": 57, "gfdm": 262, "gg": 37, "ghrayeb": [5, 262], "ghz": [9, 10, 11, 12, 13, 14, 30, 33, 35, 77, 150, 161, 166, 238, 260, 262], "girish": 120, "git": 249, "github": [247, 248, 249, 250, 251], "give": [57, 236, 247, 250], "given": [8, 16, 18, 19, 20, 21, 22, 26, 31, 33, 34, 36, 57, 63, 65, 84, 86, 87, 118, 119, 150, 157, 159, 167, 188, 197, 210, 211, 220, 225, 227, 229, 234, 236, 250, 253, 255, 257, 258], "glavieux": [78, 262], "glazunov": [23, 262], "global": [2, 15, 18, 33, 34, 37, 57, 61, 64, 65, 87, 88, 166, 167, 211, 219, 235, 240, 255, 260, 262], "global_characterist": 37, "global_direct": 37, "global_orient": 65, "global_pos": 37, "global_posit": 65, "globecom": 262, "glocom": 262, "gnu": [248, 250], "goal": 250, "gold": 77, "goldberg": 262, "good": [25, 129, 130], "googl": 263, "govern": 250, "gpl": 250, "gpp": 262, "gpu": 166, "grant": 250, "graph": [39, 76, 78, 122, 166, 247], "graphic": 159, "grasp": 257, "grati": 250, "greater": [21, 41, 57, 63, 80, 91, 123, 129, 130, 131, 141, 167, 211, 213, 216, 219], "greatest": [197, 250], "grid": [57, 84, 100, 102, 103, 104, 105, 106, 136, 138, 139, 141, 142, 144, 145, 149, 157, 158, 159, 160, 166, 218, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 254, 257], "grid_configur": 57, "grid_resourc": [96, 117, 136, 141, 144, 145, 146, 149, 238, 240, 241, 243, 255, 256, 257, 259], "grid_sect": 57, "grid_structur": [96, 117, 136, 141, 144, 145, 146, 149, 238, 240, 241, 243, 255, 256, 257, 259], "griddimens": [57, 84, 100, 157, 158, 159, 160, 257], "gridel": [96, 117, 136, 137, 138, 144, 145, 149, 255, 256, 257, 259], "gridresourc": [96, 117, 136, 138, 141, 144, 145, 146, 149, 255, 256, 257, 259], "gridsect": [57, 139, 140, 141, 142, 143, 144, 146, 147, 149], "gridvisu": 141, "ground": [158, 160], "ground_truth": [34, 160], "group": [8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 27, 28, 31, 32, 33, 35, 41, 44, 45, 68, 216, 217, 255, 262], "gs01": 262, "guarante": 250, "guard": [48, 51, 58, 95, 96, 113, 115, 123, 129, 130, 131, 134, 141, 161, 162, 233, 238, 240, 241, 243], "guard_interv": [129, 131, 134, 234, 235, 237, 238, 239, 242], "guard_ratio": [129, 130], "guardsect": 140, "h": [3, 4, 5, 7, 9, 15, 16, 18, 20, 21, 22, 25, 29, 31, 32, 34, 37, 57, 72, 125, 126, 185, 231, 253, 262], "h0": 159, "h0_campaign": 159, "h0_measur": [159, 260], "h0_oper": 159, "h0_scenario": 159, "h0_valu": 159, "h1": 159, "h1_campaign": 159, "h1_measur": [159, 260], "h1_oper": 159, "h1_scenario": 159, "h1_valu": 159, "h5": [247, 256, 260], "h5py": [8, 9, 16, 21, 22, 27, 31, 32, 33, 35, 159, 255], "h_": 25, "h_c": 10, "h_source_path": 72, "ha": [5, 8, 16, 25, 37, 38, 57, 113, 115, 120, 131, 136, 166, 169, 170, 173, 178, 182, 185, 189, 202, 208, 211, 218, 234, 235, 237, 238, 239, 240, 241, 242, 250, 251, 253, 254, 257, 258, 259], "had": 250, "half": [5, 37, 150, 254], "half_wavelength": 253, "hall": [9, 10], "hand": [41, 166], "handl": [16, 23, 26, 27, 33, 48, 53, 57, 59, 60, 62, 70, 81, 86, 90, 115, 122, 123, 124, 125, 126, 131, 142, 159, 179, 183, 194, 211, 213, 218, 225], "handler": 53, "hani": [126, 262], "happen": 15, "hard": [86, 98, 123, 129, 131, 141, 261], "hardawar": [79, 252], "hardwar": [0, 84, 86, 87, 92, 125, 126, 166, 189, 202, 211, 218, 236, 242, 248, 249, 252, 254, 257, 260, 261], "hardware_loop": [85, 247, 252, 260], "hardware_scenario": 247, "hardwareloop": [84, 85, 92, 233, 243, 247, 260], "hardwareloopdeviceplot": 92, "hardwareloopevaluatorplot": 92, "hardwareloopplot": [84, 85, 92], "hardwareloopsampl": 85, "hartmann": [68, 72, 73, 75, 76, 78, 262], "hat": [3, 4, 16, 253], "have": [0, 16, 54, 57, 118, 119, 125, 148, 151, 159, 162, 196, 197, 208, 211, 234, 235, 247, 249, 250, 252, 254, 260, 261], "hdf": [8, 9, 16, 21, 22, 27, 31, 32, 33, 35, 41, 255], "hdf5": [8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 28, 31, 32, 33, 35, 41, 45, 54, 62, 216, 217, 256], "hdfserializ": [19, 34, 38, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 63, 94, 108, 109, 110, 111, 122, 151, 212, 213, 215, 216, 217, 226, 255], "he": [68, 72, 73, 75, 76, 78, 262], "head": [57, 167, 218], "hearten": 250, "heddergott": [23, 262], "height": [10, 231], "help": [7, 248], "helper": [54, 167], "henc": 106, "henrik": [23, 262], "herbert": [210, 262], "here": [57, 63, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "hereaft": 250, "herm": [6, 32, 34, 54, 56, 68, 72, 73, 75, 76, 78, 102, 103, 104, 105, 106, 125, 126, 150, 189, 225, 232, 236, 243, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261], "hermann": 262, "hermes_quadriga": 249, "hermes_simul": 7, "hermespi": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 84, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 232, 236, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "hermspi": 236, "heterogen": [247, 248], "hh": 10, "high": [3, 77, 149, 185, 186, 248, 260, 262], "higher": [63, 252, 254], "highest": 225, "highli": 248, "highlight": [259, 261], "higlight": 255, "hilbert": 252, "hilli": 23, "hint": [32, 232, 259], "hire": [63, 132, 133, 134, 135, 161, 201, 202], "hit": 36, "hocquenghem": 68, "hoel": [57, 262], "hold": [57, 116], "holder": 250, "hook": [8, 9, 11, 12, 13, 14, 16, 17, 28, 31, 32, 33, 34, 39, 48, 51, 84, 257], "hookabl": [41, 55, 211], "hope": 250, "horizont": 37, "horizontal_phase_respons": 37, "host": [57, 91, 250, 251, 252], "hour": 254, "household": 250, "how": [5, 10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 33, 35, 36, 102, 103, 104, 105, 106, 113, 115, 116, 120, 129, 131, 132, 133, 134, 135, 167, 231, 247, 248, 250, 252, 254, 260], "howev": [15, 25, 56, 57, 91, 166, 220, 225, 232, 238, 247, 250, 255], "hpa": [202, 206, 262], "html": [232, 243, 250], "http": [4, 9, 10, 11, 12, 13, 14, 23, 30, 68, 72, 73, 75, 76, 77, 78, 194, 202, 206, 231, 243, 250, 262], "human": 260, "hybrid": [168, 254], "hybrid_arrai": [168, 254], "hybrid_port": 254, "hypothesi": [33, 34, 159], "hz": [4, 5, 18, 27, 29, 34, 37, 41, 43, 63, 64, 80, 83, 86, 87, 91, 94, 95, 96, 107, 123, 129, 131, 132, 133, 134, 135, 144, 146, 149, 151, 161, 162, 165, 211, 213, 216, 226, 229, 230, 233, 234, 238, 240, 241, 242, 243, 261], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 48, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 102, 103, 104, 105, 106, 112, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "icassp": 262, "icc": [78, 262], "idea": 250, "ideal": [5, 15, 27, 37, 38, 82, 87, 88, 123, 125, 131, 166, 168, 169, 181, 184, 194, 202, 208, 209, 211, 219, 237, 240, 241, 252, 254, 255, 257], "idealantenna": [37, 174], "idealchannel": [31, 166, 247], "idealchannelr": 31, "idealchannelsampl": 31, "ident": [15, 21, 27, 57, 64, 77, 84, 99, 180, 204, 220, 242, 247, 254, 256, 260], "identifi": [57, 62, 64, 80, 159, 249, 250], "idl": 82, "ido": [73, 262], "iee99": 262, "ieee": [3, 5, 16, 23, 25, 32, 37, 73, 76, 77, 78, 96, 120, 147, 148, 194, 202, 207, 210, 248, 262], "ieeestd": [77, 262], "ifft": [185, 186], "ifftshift": [185, 186], "ignor": [63, 70, 120, 123, 126, 129, 131, 141, 211, 233, 240, 243], "ii": [23, 262], "iii": 262, "illumin": [5, 33, 35, 157, 159, 160, 161, 254], "illustr": 159, "imag": [1, 16, 66, 96, 151, 253, 262], "imagevisu": 66, "imaginari": [185, 192, 196, 197], "imbal": [166, 194, 237], "imed": 180, "imens": 84, "iming": 170, "immut": [18, 19, 29, 37, 41, 64, 80, 87, 91, 211, 255], "impact": [20, 57, 124, 220], "impair": [166, 194, 260], "imped": 178, "impedancecoupl": 180, "imping": [5, 25, 33, 37, 41, 42, 44, 47, 62, 86, 88, 89, 122, 211, 212, 215, 219, 247, 253, 254, 260], "impinging_direct": 33, "impinging_sign": [41, 42, 44, 47, 62, 86, 87, 88, 89, 170, 211, 212, 215, 219, 252], "implement": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 25, 27, 30, 31, 33, 34, 35, 36, 53, 54, 57, 63, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 129, 130, 131, 132, 133, 134, 135, 136, 149, 150, 157, 158, 159, 160, 166, 169, 170, 178, 179, 182, 183, 184, 185, 186, 189, 194, 196, 202, 205, 206, 207, 208, 209, 211, 220, 225, 229, 232, 247, 248, 249, 250, 251, 262, 263], "impli": [77, 250], "implicit": 83, "import": [15, 16, 53, 150, 157, 159, 160, 161, 231, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "import_modul": 251, "importantli": [97, 126], "importlib": 251, "impos": 250, "imposs": [57, 159, 160], "improperli": 211, "improv": [194, 249, 250, 262], "impuls": [9, 20, 21, 22, 31, 32, 34, 38, 83, 169, 170, 173, 185, 252], "impulse_respons": [38, 255], "inabl": 250, "inaccur": 250, "inc": 250, "incident": 250, "includ": [9, 34, 63, 66, 141, 166, 182, 196, 219, 232, 247, 249, 250, 256], "inclus": 250, "incom": [113, 189, 259], "incompat": 41, "incorpor": 250, "increas": [57, 63, 120, 254], "indemnif": 250, "independ": [31, 57, 70, 181, 192, 202, 207, 250, 262], "indepent": 189, "indepentedli": 196, "index": [2, 34, 37, 53, 57, 59, 60, 62, 74, 84, 92, 218, 231, 232, 249], "indexerror": 37, "indic": [3, 4, 5, 7, 8, 21, 25, 37, 48, 51, 57, 60, 63, 64, 65, 72, 80, 86, 87, 91, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 126, 129, 130, 131, 148, 151, 153, 157, 159, 160, 161, 162, 165, 166, 189, 193, 211, 213, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 252, 255, 257, 261], "individu": [9, 27, 29, 34, 37, 57, 63, 66, 88, 94, 108, 110, 113, 118, 119, 138, 146, 149, 150, 161, 166, 168, 211, 219, 225, 233, 240, 241, 243, 247, 250, 254], "indiviu": 162, "indoor": [9, 25, 256, 262], "indoor_factori": 10, "indoor_offic": 11, "indoorfactori": 10, "indoorfactoryr": 10, "indooroffic": [11, 256], "indoorofficer": 11, "industri": [75, 250, 262], "inf": [21, 27, 33, 35, 68, 187, 188, 205, 218, 234, 242, 262], "infeas": [3, 4, 5, 60, 117, 118, 119, 120], "infer": [44, 51, 57, 62, 215, 239], "infin": 262, "infinit": [87, 196, 211], "info": [53, 218], "inform": [9, 10, 11, 12, 13, 14, 18, 20, 23, 29, 31, 32, 34, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 60, 62, 64, 66, 73, 76, 77, 84, 86, 87, 88, 89, 92, 94, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 122, 123, 125, 126, 129, 132, 133, 134, 135, 142, 150, 162, 163, 164, 205, 210, 211, 212, 213, 215, 216, 217, 218, 219, 226, 232, 239, 240, 247, 250, 252, 255, 256, 257, 259, 260, 261, 262], "infring": 250, "infti": [15, 27, 33], "ing": 255, "inher": 82, "inherit": [2, 54, 70, 98, 99, 158, 167, 179, 183, 205, 247, 253, 255, 258, 259], "init": 63, "init_sequ": 77, "initi": [5, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 30, 31, 33, 35, 36, 37, 38, 41, 44, 45, 48, 51, 54, 56, 57, 61, 62, 63, 64, 65, 77, 81, 82, 83, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 107, 112, 113, 114, 115, 116, 120, 123, 129, 130, 131, 132, 133, 134, 135, 136, 144, 145, 146, 149, 150, 162, 166, 168, 185, 189, 194, 203, 204, 206, 207, 208, 209, 211, 213, 215, 218, 219, 234, 247, 250, 251, 252, 253, 254, 256, 258, 260, 261], "initial_pos": 167, "initialis": 5, "initializ": [189, 192], "initil": [63, 64], "input": [2, 3, 4, 5, 15, 41, 44, 52, 60, 62, 69, 70, 71, 73, 74, 77, 84, 86, 87, 88, 89, 109, 111, 117, 118, 119, 120, 121, 194, 195, 196, 197, 198, 199, 204, 211, 215, 219, 229, 230, 252, 253, 258, 259, 262], "input_callback": 41, "input_sampl": 196, "input_sign": [161, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207], "insert": 232, "insid": 9, "insight": 257, "inspect": [211, 252, 258, 260, 261], "instal": [7, 32, 232, 236, 243, 247, 250, 251, 261], "instanc": [8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 44, 53, 55, 57, 60, 63, 70, 82, 83, 98, 99, 108, 109, 110, 111, 116, 117, 118, 119, 120, 131, 133, 135, 142, 166, 178, 182, 184, 185, 186, 189, 191, 211, 218, 219, 220, 221, 222, 223, 224, 225, 247, 251], "instanti": [15, 55, 168, 261], "instantiant": 261, "instead": [15, 25, 37, 38, 56, 63, 64, 116, 126, 166, 168, 172, 211, 236, 247, 251, 254], "institut": 250, "instruct": [5, 116, 129, 132, 133, 134, 135, 236, 247, 254, 263], "int": [2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 27, 29, 30, 31, 32, 34, 37, 38, 41, 42, 43, 44, 45, 47, 48, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 155, 159, 160, 161, 162, 177, 189, 192, 196, 208, 209, 211, 213, 216, 218, 222, 225, 226, 230, 231, 253, 255, 258, 259, 261], "int16": 63, "int32": [68, 72, 73, 75, 78], "int64": 129, "int8": 76, "int_": 15, "intact": 250, "integ": [9, 18, 20, 29, 31, 32, 34, 61, 63, 70, 224, 226, 261], "integr": [32, 232, 247, 248, 251], "integration_test": 232, "intend": [5, 211, 232, 247, 249, 250, 254], "intent": 250, "intenum": 62, "inter": [131, 133, 135], "interact": [15, 40, 53, 56, 57, 218, 250, 257], "interc": [37, 69, 74], "interchang": 250, "interchirp": 235, "interconnect": [62, 166, 211, 219, 240, 241, 247, 257], "interdepend": [0, 39], "intereset": 226, "interest": [1, 2, 3, 4, 37, 57, 162, 248, 250, 251, 253], "interf": [220, 225, 250], "interfac": [0, 2, 6, 15, 20, 32, 54, 107, 145, 166, 183, 236, 247, 248, 249, 250, 251, 254, 257, 258, 259], "interfer": [9, 18, 20, 29, 31, 32, 33, 34, 63, 86, 131, 133, 135, 220, 235, 236, 239, 240, 241, 248, 254], "interfernc": [33, 234], "interleav": [63, 67, 123, 129, 131, 141], "interleave_block": 69, "interleaved_sampl": 63, "intern": [16, 38, 41, 56, 62, 63, 77, 78, 85, 86, 88, 89, 123, 129, 131, 144, 146, 205, 219, 221, 222, 223, 224, 225, 252, 256, 257, 262], "internet": [91, 166], "interpol": [9, 15, 16, 18, 20, 29, 31, 32, 34, 219, 230, 255, 262], "interpolation_mod": [9, 16, 18, 20, 29, 31, 32, 34, 219, 255], "interpolationmod": [9, 15, 16, 18, 20, 29, 31, 32, 34, 219, 255], "interpret": [7, 33, 86, 126, 249, 250], "intersymbol": 63, "interv": [5, 21, 24, 48, 51, 57, 58, 63, 95, 96, 113, 115, 123, 126, 129, 130, 131, 134, 141, 161, 162, 218, 220, 221, 225, 227, 254], "intial": 247, "intim": 250, "introduc": [5, 31, 36, 69, 70, 71, 77, 126, 166, 189, 194, 221, 222, 224, 225, 232, 247, 255], "introduct": [247, 254], "inv": 253, "invalid": [2, 24, 37, 38, 57, 65, 185, 250], "invari": [9, 15, 19, 192, 202], "invers": [1, 3, 70, 117, 123, 132, 253, 259], "invert": [65, 261], "investig": [5, 15, 20, 57, 84, 102, 103, 104, 105, 106, 157, 159, 160, 247, 248, 254, 257, 258], "investigated_object": 57, "invoc": 15, "invok": 16, "involv": [9, 41, 86, 87, 211], "ip": [90, 91, 243], "iq_imbal": 194, "ir": [118, 262], "irrevoc": 250, "is_bas": 65, "is_regist": 57, "isi": 131, "iso": [36, 166], "isol": [87, 166, 170, 178, 185, 194, 211, 239, 260, 262], "isolation_model": 170, "isometr": 36, "isotrop": [5, 168, 169, 240, 241], "israel": 262, "issu": 248, "istrop": [87, 211, 254], "item": 250, "iter": [38, 57, 72, 78, 80, 82, 84, 88, 122, 166, 217, 218, 219, 247], "iteration_prior": 84, "iterationprior": 84, "itertool": 254, "its": [2, 3, 4, 5, 8, 9, 15, 16, 21, 22, 25, 27, 31, 32, 33, 34, 35, 37, 41, 44, 54, 55, 57, 64, 65, 70, 77, 87, 89, 132, 150, 162, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 189, 192, 208, 211, 213, 215, 219, 239, 247, 248, 249, 250, 253, 254, 259, 261], "itself": [65, 178, 250], "j": [3, 5, 25, 34, 37, 68, 72, 73, 75, 76, 78, 207, 262], "jaeckel": [32, 37, 262], "jan": [248, 262], "jbtj12": 262, "jca": [0, 95, 96, 211, 236, 247], "jcasrecept": 94, "jcastransmiss": 94, "jelinek": [76, 262], "jitter": 196, "join": 260, "joint": [15, 93, 94, 95, 96, 211, 239, 247, 262], "journal": [57, 75, 120, 126, 262], "jrbt14": 262, "jrproc": [118, 262], "jstor": [4, 262], "jump": 259, "jungnickel": [37, 262], "jupyt": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "jussi": [194, 262], "just": [15, 54, 178, 182, 247, 256], "j\u00e9go": [68, 72, 73, 75, 76, 78, 262], "k": [8, 9, 27, 37, 63, 68, 69, 70, 72, 73, 74, 75, 76, 78, 120, 123, 129, 131, 141, 258, 262], "k0": [210, 237], "k2": [210, 237], "k3": [210, 237], "k_": [25, 27, 70], "k_0": 210, "k_2": 210, "k_3": 210, "k_n": [69, 70, 71, 74, 77], "kah54": 262, "kahn": [118, 262], "kai": [25, 32, 37, 262], "kari": [194, 262], "karlsson": [25, 262], "kawrg": [20, 22], "kbp": 234, "kc76": [130, 262], "keep": 250, "keepdim": [257, 258], "kei": [63, 99, 129, 187, 188, 250, 261], "kennedi": [126, 262], "kernel": [15, 16, 250, 261], "keyboard": 84, "keysview": 54, "keyword": [9, 12, 13, 14, 33], "khanzadi": [210, 262], "khz": [80, 146, 149, 252], "kiayani": [194, 262], "kind": [250, 256], "kindli": 232, "kinemat": 65, "kinetmat": 65, "kkp": 262, "klau": [23, 262], "knapp": 262, "know": 250, "knowingli": 250, "knowledg": [236, 250], "known": [4, 16, 77, 125, 130, 151, 253], "kon": [57, 262], "korpi": [194, 262], "kosunen": [194, 262], "kotel": 16, "kronauer": [248, 262], "kuylenstierna": [210, 262], "kwa": 262, "kwarg": [8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 27, 30, 32, 33, 34, 35, 57, 58, 59, 62, 63, 66, 80, 81, 84, 86, 87, 88, 90, 91, 112, 113, 114, 115, 123, 129, 130, 131, 132, 133, 134, 135, 141, 144, 146, 149, 155, 185, 203, 204, 206, 207, 219, 253, 255, 257], "l": [9, 25, 27, 34, 57, 70, 76, 83, 103, 105, 106, 123, 129, 131, 141, 185, 233, 235, 239, 243, 262], "l_n": [69, 70, 71, 74, 77], "label": [57, 102, 103, 104, 105, 106, 157, 159, 160, 196], "lack": 247, "lambda": [3, 5, 161, 165], "lan": [77, 262], "land": [32, 262], "languag": 250, "languang": 251, "laptop": 166, "lar": [32, 37, 262], "larg": [9, 10, 11, 12, 13, 14, 255], "larger": [131, 138, 231, 250], "largescalest": 9, "last": [16, 57, 70, 122, 126, 195, 205, 262], "last_impact": 57, "latenc": 149, "later": [250, 256], "latest": 249, "launch": [6, 7, 57, 218, 232, 233, 236, 243, 247, 254], "lauri": [194, 262], "law": [210, 250, 262], "lawsuit": 250, "layer": [41, 52, 55, 58, 62, 64, 77, 86, 87, 88, 89, 97, 114, 166, 211, 218, 219, 225, 234, 235, 237, 238, 239, 240, 241, 242, 247, 254, 255, 262], "lbrace": [2, 3, 4, 15, 16, 31, 69, 74, 102, 103, 105, 106, 202, 206, 207], "lceil": 70, "ldot": [102, 103, 104, 105, 106], "ldpc": [72, 240, 241, 262], "ldpccode": 72, "le": [68, 72, 73, 75, 76, 78, 262], "lead": [15, 63, 74, 125, 178, 247, 250], "leak": [87, 88, 170, 183, 184, 186, 211, 212, 213, 215, 216, 219], "leakag": [34, 79, 86, 87, 88, 170, 182, 183, 184, 186, 211, 212, 219, 239, 260], "leakage_calibr": 86, "leakage_frequency_respons": [185, 186], "leakage_impulse_respons": [185, 186], "leakage_respons": [83, 185], "leakagecalibrationbas": [83, 86], "leakg": 185, "leaking_sign": [87, 88, 170, 211, 212, 213, 215, 216, 219], "leanoard": [118, 262], "least": [233, 240, 243, 250, 252], "leastsquaresestim": 83, "leat": 83, "leav": 33, "left": [3, 5, 15, 16, 18, 25, 27, 31, 34, 37, 57, 69, 70, 74, 94, 95, 102, 103, 104, 105, 106, 161, 162, 165, 206], "legal": 250, "legend": 63, "len": 63, "length": [27, 38, 63, 69, 70, 71, 74, 77, 86, 103, 104, 105, 106, 123, 129, 131, 133, 135, 138, 161, 204, 219, 240], "leq": [5, 57, 126], "leroux": [68, 72, 73, 75, 76, 78, 262], "less": [16, 31, 37, 63, 69, 129, 138, 194, 196, 254], "leszek": [32, 262], "let": [3, 4, 5, 15, 16, 18, 69, 74, 80, 250, 253, 254, 256, 257, 258, 259, 260, 261], "level": [8, 15, 57, 67, 87, 88, 120, 126, 136, 144, 145, 149, 187, 188, 189, 190, 191, 196, 197, 210, 211, 219, 220, 225, 232, 240, 241, 248, 250, 255, 261, 262], "lf": 249, "lfloor": 16, "li": 21, "liabil": 250, "liabl": 250, "librari": [91, 247, 250, 257], "licens": 248, "license": 250, "licensor": 250, "lieg": [202, 206, 262], "like": [63, 72, 161, 247, 250, 251, 257], "likewis": 250, "limit": [57, 78, 131, 166, 182, 189, 240, 250, 254, 260, 262], "lin": [56, 151], "lin2db": 229, "linalg": 253, "line": [6, 8, 10, 11, 12, 13, 14, 15, 23, 25, 27, 29, 34, 63, 66, 126, 151, 162, 167, 236, 247, 249, 250, 254, 256, 260], "line_of_sight": 9, "line_width": 63, "linear": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 54, 56, 57, 76, 131, 151, 156, 166, 167, 168, 169, 186, 191, 194, 197, 198, 199, 205, 229, 230, 235, 253, 254, 258, 262], "linearantenna": [37, 175], "linearli": 37, "lineartrajectori": 167, "lines_arrai": 257, "linewidth": 63, "link": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 30, 31, 33, 34, 36, 37, 38, 54, 61, 65, 70, 77, 87, 88, 97, 99, 102, 103, 104, 105, 106, 112, 118, 119, 120, 126, 129, 132, 133, 134, 135, 136, 144, 145, 149, 166, 211, 215, 217, 219, 220, 221, 222, 223, 224, 225, 233, 234, 243, 247, 248, 250, 252, 256, 257, 262, 263], "link_a": 220, "link_b": 220, "linked_fram": 65, "linkstat": [8, 31, 255], "linspac": [185, 186], "linux": [7, 249], "list": [7, 9, 16, 37, 41, 42, 43, 44, 45, 47, 52, 54, 56, 57, 62, 63, 70, 73, 80, 84, 87, 88, 89, 94, 108, 110, 126, 130, 138, 143, 148, 155, 202, 208, 211, 212, 213, 216, 219, 220, 225, 232, 249, 250, 257, 262, 263], "liter": [2, 37, 63, 92, 151], "literatur": [94, 95, 161, 162, 165], "litig": 250, "litsyn": 262, "littl": 261, "ll": [254, 257, 260], "llr": 131, "lna": 166, "lo": [9, 10, 11, 12, 13, 14, 34, 256], "load": [3, 36, 54, 86, 251, 255], "load_calibr": 86, "load_scen": 36, "lobe": [5, 254], "local": [2, 37, 65, 87, 211, 232, 250, 254], "local_characterist": 37, "locat": [5, 19, 22, 34, 35, 37, 57, 62, 64, 72, 84, 122, 159, 232, 239, 249, 254, 255, 256, 260, 261], "log": [57, 151, 234, 235, 237, 238, 239, 240, 241, 242], "log2": [234, 261], "logarithm": [16, 39, 151], "logarithmicsequ": 56, "logic": 253, "lokal": 252, "long": [57, 77, 102, 103, 104, 105, 106, 157, 159, 160, 250], "longer": [55, 104, 131, 212], "look": [65, 161, 166, 167, 251, 254], "lookat": [65, 167], "lookat_dis": 167, "lookat_en": 167, "lookup": 62, "loook": 65, "loop": [0, 92, 125, 252, 257, 260], "lora": 236, "los_angl": [23, 27, 29, 30], "los_angles_vari": 28, "los_doppl": [28, 29], "los_doppler_frequ": [23, 27, 30], "los_gain": [28, 29], "los_phas": 29, "los_phases_vari": 28, "los_real": [10, 11, 12, 13, 14], "lose": [53, 228], "loss": [17, 20, 21, 22, 27, 28, 29, 31, 34, 35, 191, 229, 250, 259], "lossless": 31, "losstat": [10, 11, 256], "lot": 247, "low": [67, 149, 166, 194, 258, 260, 262], "lower": [10, 57, 166], "lowpass": 86, "lowpass_bandwidth": 86, "lowpass_filt": 86, "lshift": 57, "lsst": [9, 12, 13, 14], "lte": 238, "lvert": [37, 102, 104, 126], "l\u00e9onardon": [68, 72, 73, 75, 76, 78, 262], "m": [2, 4, 9, 10, 15, 16, 18, 20, 25, 29, 31, 32, 33, 34, 35, 37, 41, 57, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 78, 83, 95, 96, 120, 147, 148, 150, 151, 153, 155, 161, 162, 165, 177, 185, 202, 207, 210, 229, 230, 232, 234, 239, 242, 249, 253, 260, 261, 262], "m_": [15, 16, 18, 37, 57], "m_n": 70, "ma": 1, "mac": [77, 262], "machin": [57, 218, 250], "macrocel": [9, 23, 262], "made": [157, 248, 250], "magnitud": [2, 3, 4, 5, 37, 97, 99, 101, 254], "mah": 262, "mahmoud": [194, 262], "mai": [0, 2, 25, 34, 38, 57, 60, 62, 63, 66, 70, 75, 82, 84, 87, 102, 103, 104, 105, 106, 117, 118, 119, 121, 122, 125, 136, 144, 145, 149, 166, 167, 169, 170, 173, 178, 197, 204, 205, 211, 220, 232, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263], "mail": 250, "main": [5, 52, 54, 228, 250, 254], "maintain": [232, 248, 250], "major": [250, 258], "make": [7, 57, 166, 243, 248, 249, 250], "make_target": 33, "man": [77, 262], "manag": [53, 54, 70, 81, 89, 90, 114, 218, 219, 247], "mandatori": [107, 162], "mani": [15, 250], "manipul": [57, 116], "manner": 250, "manual": [84, 168, 232, 233, 243, 249], "manual_trigg": [84, 233, 243], "map": [32, 54, 57, 96, 98, 115, 117, 123, 129, 131, 141, 142, 147, 150, 161, 162, 165, 234, 235, 240, 241, 242, 247, 259, 261], "mapped_symbol": 261, "mappingnod": [23, 142], "march": 250, "marcum": 229, "marcum_q": 229, "mark": 250, "markerlin": 257, "marko": [194, 262], "martin": [23, 262], "mask": [63, 77, 138, 141, 250], "mat": 166, "match": [2, 19, 31, 41, 48, 57, 60, 62, 63, 70, 86, 87, 88, 89, 93, 122, 151, 170, 179, 180, 183, 184, 219], "matched_filt": 95, "matchedfilterjca": [95, 239], "matching_imped": 180, "materi": 250, "math": 228, "mathbb": [2, 3, 4, 9, 15, 16, 18, 20, 27, 29, 31, 32, 34, 37, 57, 103, 104, 105, 106, 151, 202, 203, 205, 206, 207, 253], "mathbf": [2, 3, 4, 5, 9, 15, 16, 18, 20, 21, 22, 25, 27, 29, 31, 32, 34, 37, 69, 74, 102, 103, 104, 105, 106, 125, 126, 185, 253, 258], "mathcal": [2, 3, 4, 21], "mathemat": [75, 262], "mathod": 249, "mathrm": [2, 3, 4, 9, 10, 15, 16, 18, 20, 21, 22, 25, 29, 31, 32, 33, 34, 37, 57, 70, 71, 74, 91, 94, 95, 96, 102, 103, 104, 105, 106, 126, 146, 149, 150, 151, 161, 162, 165, 166, 202, 203, 205, 206, 207, 210, 221, 252, 253, 260], "mathscr": 16, "mathsf": [3, 4, 16, 27, 31, 34, 102, 103, 104, 105, 106, 253], "mathwork": 251, "matlab": [32, 57, 248, 249, 256], "matolotlib": 66, "matplotlib": [37, 53, 57, 66, 122, 131, 196, 205, 231, 252, 253, 255, 256, 257, 259, 260, 261], "matric": [15, 25, 63], "matrici": 63, "matrix": [2, 3, 4, 5, 16, 21, 26, 29, 31, 34, 37, 38, 63, 65, 72, 83, 122, 151, 161, 165, 167, 178, 180, 185, 186, 194, 217, 218, 219, 230, 253], "matth": 262, "max": [21, 57, 96, 126, 150, 154, 161, 162, 165], "max_": 5, "max_amplitud": [197, 200], "max_delai": [9, 27, 82], "max_dur": 41, "max_frame_dur": [41, 224], "max_num_clust": [9, 10, 11, 12, 13, 14], "max_num_rai": [9, 10, 11, 12, 13, 14], "max_num_sampl": 57, "max_num_tap": [9, 18, 20, 29, 31, 32, 34, 255], "max_rang": [95, 96, 150, 155, 160, 161, 162, 165, 239], "max_receive_delai": [86, 87, 233, 252], "max_relative_doppl": [96, 161, 165], "max_sampling_r": [80, 86, 87, 91], "max_timestamp": 167, "max_trajectory_timestamp": 167, "maxdetector": [96, 152, 160], "maxim": [4, 5, 35, 80, 86, 87, 91, 95, 116, 126, 155, 221, 239], "maximum": [5, 9, 10, 11, 12, 13, 14, 18, 20, 27, 29, 31, 32, 34, 41, 57, 62, 82, 86, 91, 95, 96, 118, 120, 146, 149, 150, 151, 152, 161, 162, 165, 167, 197, 203, 235, 262], "maximumratiocombin": 118, "maxium": 21, "mbp": [235, 238], "mc": 166, "mcnamara": [25, 262], "mean": [8, 10, 15, 17, 18, 19, 24, 25, 28, 30, 31, 33, 36, 37, 57, 83, 97, 99, 101, 104, 131, 133, 135, 150, 158, 172, 181, 185, 192, 198, 220, 229, 240, 241, 247, 248, 250, 254, 257, 258, 260], "mean_pow": 257, "meant": 136, "measur": [62, 84, 159, 188, 191, 210, 247, 250, 256, 260, 262], "mechan": 248, "medium": [77, 234, 250, 262], "meet": 250, "mehrpouyan": [126, 262], "mei02": 262, "meijer": [16, 262], "memori": [63, 64, 166, 240], "memoryless": [73, 202, 262], "mention": 261, "menu": 250, "merchant": 250, "mere": 250, "merg": [178, 182, 250], "mesh": 66, "messag": [57, 262], "met": 250, "meter": [10, 21, 27, 35, 161, 162, 165], "meth": [62, 89], "method": [2, 3, 4, 5, 8, 15, 16, 17, 18, 21, 22, 31, 33, 35, 36, 38, 48, 51, 53, 54, 55, 57, 64, 70, 73, 85, 108, 109, 110, 111, 114, 115, 122, 131, 144, 145, 150, 157, 158, 162, 163, 164, 165, 166, 189, 211, 218, 229, 247, 249, 250, 253, 254, 255, 257, 259, 261, 262], "methodologi": [23, 262], "metric": [97, 100, 160, 218], "mhz": [91, 166, 235, 238, 256], "microcel": 9, "microwav": [194, 262], "mid": 237, "mid_ris": [195, 196, 201, 237], "mid_tread": [196, 201], "might": [15, 70, 178, 182, 225, 230, 240, 254, 259], "mike": 262, "mikko": [194, 262], "mimo": [1, 2, 25, 32, 60, 109, 113, 115, 116, 120, 122, 240, 241, 254, 257, 261, 262], "min": [21, 57, 126, 203], "min_num_iter": 72, "min_num_sampl": [57, 234, 235, 237, 238, 239, 240, 241, 242], "min_pow": [156, 239], "minim": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 33, 35, 36, 76, 102, 103, 104, 105, 106, 123, 129, 131, 132, 134, 144, 146, 156, 157, 159, 160, 161, 232, 247, 248, 251, 262], "minimum": [3, 57, 72, 83, 113, 115, 126, 129, 130, 187, 234, 235, 237, 238, 239, 240, 241, 242, 253], "mininum": 21, "minmal": 156, "mismatch": 178, "misrepresent": 250, "miss": 260, "mix": [4, 5, 11, 43, 45, 48, 51, 63, 87, 94, 95, 96, 161, 162, 211], "mixed_sign": [43, 45, 247, 256, 260], "mixer": 194, "mixingoper": [48, 51, 58, 94, 95, 96, 162], "mmse": [83, 235], "mmseestim": 83, "mo": 57, "mobil": [23, 32, 149, 248, 262], "mock": [58, 66, 71, 260], "mod": [69, 74], "mode": [7, 26, 37, 38, 53, 57, 59, 62, 63, 88, 89, 125, 159, 169, 173, 174, 175, 176, 218, 219, 250], "model": [0, 2, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 52, 57, 62, 63, 70, 80, 83, 87, 88, 91, 92, 112, 113, 115, 123, 126, 131, 136, 141, 144, 145, 149, 150, 161, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 234, 235, 236, 238, 239, 240, 241, 242, 247, 249, 250, 254, 255, 257, 259, 261, 262], "model_propagation_loss": [5, 20, 21, 22, 254], "model_typ": [8, 23, 30, 239, 240, 241], "modem": [15, 62, 70, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 187, 188, 211, 233, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 255, 256, 257, 258, 259, 261], "modem_alpha": [99, 102, 103, 104, 105, 106, 235, 237, 238, 240, 241, 242], "modem_beta": [99, 102, 103, 104, 105, 106, 238, 242], "modern": [16, 262], "modif": [247, 250], "modifi": [60, 65, 117, 118, 119, 121, 170, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "modul": [0, 1, 6, 7, 8, 9, 11, 15, 16, 23, 25, 30, 36, 37, 38, 39, 40, 54, 56, 57, 58, 62, 66, 67, 70, 77, 79, 93, 94, 115, 116, 117, 123, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 161, 166, 168, 170, 200, 201, 208, 211, 228, 229, 231, 232, 233, 234, 235, 238, 240, 241, 242, 243, 247, 250, 251, 252, 253, 255, 258, 259, 261, 262], "modulation_ord": [112, 113, 114, 115, 118, 119, 120, 123, 129, 131, 132, 133, 134, 135, 141, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 252, 258, 261], "molisch": [23, 262], "monitor": 231, "mono": 34, "monostat": [162, 182, 260], "mont": [57, 166, 211, 218, 219, 234, 235, 237, 238, 239, 240, 241, 242, 247, 248, 254, 255, 257, 259, 260, 262], "monte_carlo": [100, 102, 103, 104, 105, 106, 186, 187, 188, 189, 190, 191, 218], "montecarlo": [57, 217, 218], "montecarloactor": 57, "montecarloevalu": 57, "montecarloresult": [57, 166, 218, 257], "montecarlosampl": 57, "more": [23, 25, 34, 35, 57, 65, 120, 126, 129, 132, 133, 134, 135, 139, 142, 150, 166, 169, 173, 194, 196, 211, 231, 247, 250, 252, 257], "moreov": 250, "most": [38, 66, 69, 74, 77, 87, 97, 125, 126, 129, 130, 166, 192, 232, 249, 250, 255, 258, 260, 263], "mother": [61, 208, 209], "mother_nod": [61, 208, 209], "motion": 167, "moulat": 115, "move": [34, 65, 167, 255], "moveabl": [33, 87, 167, 211], "movebl": 33, "movement": 167, "mu": [161, 235], "muhammad": [194, 262], "multi": [2, 3, 4, 5, 15, 32, 60, 63, 162, 248, 262], "multicarri": 136, "multicor": [166, 257], "multidimension": 57, "multipath": [15, 23, 24, 30, 34, 126, 257], "multipathfad": [234, 242], "multipathfading5gtdl": 30, "multipathfadingchannel": [23, 24, 25, 27, 28, 30], "multipathfadingcost256": 23, "multipathfadingr": [27, 28, 29], "multipathfadingrealizaiton": 25, "multipathfadingsampl": [25, 27, 28, 29], "multipl": [0, 25, 33, 34, 54, 56, 57, 61, 62, 65, 70, 115, 116, 118, 119, 120, 136, 142, 144, 145, 162, 166, 168, 211, 221, 222, 223, 224, 225, 247, 254, 255, 257, 260, 261, 262], "multiplex": [144, 145, 146, 240, 241], "multipli": [97, 99, 101], "multitargetradarchannel": [33, 34], "multitargetradarchannelr": 33, "multitud": 247, "munich": 36, "must": [2, 15, 36, 54, 57, 63, 77, 84, 118, 119, 120, 123, 151, 158, 160, 166, 196, 197, 220, 225, 232, 250, 253, 259], "mutabl": [54, 64], "mutual": [87, 166, 170, 179, 180, 181, 182, 211], "mvdr": [3, 253], "mxn": [63, 230], "mxt": 63, "mxt_i": 63, "mypi": 232, "n": [2, 3, 4, 5, 9, 20, 21, 22, 25, 27, 63, 70, 71, 77, 83, 96, 120, 123, 129, 131, 141, 166, 185, 230, 240, 242, 249, 253, 256, 258], "n0": [161, 187, 188, 189, 211, 256, 260], "n_": [9, 15, 16, 18, 20, 29, 31, 32, 34], "n_0": 190, "n_in": 38, "n_out": 38, "n_rx": 38, "n_tx": 38, "name": [8, 11, 15, 16, 20, 23, 30, 34, 37, 38, 40, 53, 54, 56, 57, 62, 84, 99, 125, 137, 138, 200, 201, 220, 229, 247, 250, 251, 259, 261], "namespac": [0, 54, 247], "nasir": [126, 262], "nativ": [37, 84, 248, 249, 252], "natur": [15, 136, 250], "ncmf18": 262, "ncol": 66, "ndarrai": [2, 3, 4, 5, 8, 9, 18, 19, 26, 27, 29, 32, 34, 35, 37, 38, 56, 57, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 85, 86, 87, 98, 100, 104, 106, 108, 109, 110, 111, 122, 123, 126, 129, 130, 131, 138, 139, 140, 141, 142, 143, 148, 151, 153, 155, 157, 158, 159, 160, 161, 165, 167, 180, 185, 186, 194, 196, 203, 204, 205, 206, 207, 211, 229, 230, 253, 257, 258, 261], "ndim": 63, "ndindex": [170, 257], "ndm": 262, "nearest": [9, 16, 18, 20, 29, 31, 32, 34, 219, 224, 226, 255], "necessari": [70, 240, 250], "necessarili": 230, "need": [63, 166, 189, 247, 249, 250, 256, 257], "neg": [3, 4, 5, 8, 21, 41, 57, 60, 80, 83, 86, 91, 117, 118, 119, 120, 123, 189, 190, 191, 196, 210, 211, 230], "neighbour": 129, "neither": [15, 31, 211, 250], "network": [5, 20, 32, 126, 180, 211, 250, 262], "never": 57, "new": [5, 7, 8, 9, 15, 16, 21, 22, 31, 32, 33, 35, 36, 37, 38, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 70, 77, 81, 84, 88, 89, 90, 98, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 142, 155, 157, 159, 160, 161, 166, 167, 168, 172, 178, 182, 184, 185, 186, 189, 195, 196, 202, 205, 208, 211, 218, 219, 220, 221, 222, 223, 224, 225, 232, 236, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261], "new_devic": [5, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 27, 30, 33, 35, 36, 59, 62, 81, 88, 90, 102, 103, 104, 105, 106, 112, 113, 114, 115, 117, 118, 119, 120, 136, 144, 145, 149, 150, 157, 159, 160, 161, 166, 167, 168, 170, 178, 182, 184, 185, 186, 189, 195, 202, 208, 211, 219, 220, 221, 222, 223, 224, 225, 247, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261], "new_dimens": [10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 33, 35, 57, 84, 102, 103, 104, 105, 106, 157, 160, 166, 170, 247, 253, 254, 255, 257, 258, 259, 260, 261], "newaxi": [253, 261], "newest": 249, "newli": [9, 16, 33, 37, 53, 57, 60, 63, 66, 84, 88, 155, 172, 218, 219, 249, 253, 255, 257, 258, 259, 261], "next": [70, 77, 250, 259], "nikov": 16, "nimr": 262, "nlo": [9, 10, 11, 12, 13, 14, 25, 262], "nlos_angl": 29, "nlos_angles_vari": 28, "nlos_doppl": [28, 29], "nlos_gain": [28, 29], "nlos_phas": 29, "nlos_phases_vari": 28, "nlos_real": [10, 11, 12, 13, 14], "no_antenna": 194, "no_sampl": 194, "noantennacalibr": 86, "node": [23, 32, 57, 60, 61, 98, 142, 208, 209, 218], "nodelaycalibr": 86, "nois": [9, 18, 20, 29, 31, 32, 34, 35, 41, 63, 83, 86, 87, 88, 120, 159, 166, 187, 188, 190, 191, 192, 193, 194, 195, 196, 211, 212, 214, 215, 219, 234, 235, 237, 238, 239, 240, 241, 242, 247, 258, 260, 261, 262], "noise_level": [10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 33, 35, 87, 88, 102, 103, 104, 105, 106, 160, 161, 166, 189, 211, 219, 234, 235, 237, 238, 239, 240, 241, 242, 247, 253, 254, 255, 256, 258, 259, 260, 261], "noise_model": [87, 88, 189, 211, 219], "noise_pow": [63, 83, 86, 87], "noise_r": [212, 214, 215], "noiselevel": [87, 88, 187, 188, 189, 190, 191, 211, 219], "noisemodel": [87, 88, 189, 192, 211, 219], "noiser": [189, 193, 212, 214, 215], "noleakagecalibr": 86, "noll": [248, 262], "non": [9, 25, 27, 29, 34, 38, 57, 63, 123, 125, 126, 157, 166, 208, 235, 237, 250, 262], "noncommerci": 250, "none": [2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 48, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 107, 108, 110, 112, 113, 114, 115, 122, 123, 124, 125, 126, 127, 129, 131, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 155, 159, 160, 161, 162, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 186, 189, 191, 192, 194, 196, 197, 200, 201, 205, 208, 209, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 231, 253, 255, 257], "nonlinear": [194, 202, 206, 207, 262], "nophasenois": 209, "nor": [15, 31, 211, 250], "norm": [65, 117], "normal": [9, 12, 13, 14, 19, 36, 65, 151, 156, 157, 185, 205, 211, 250, 261], "normalize_pow": 151, "normalize_quaternion": 65, "norman": [25, 262], "notabl": 260, "notat": [15, 194], "note": [15, 25, 34, 36, 38, 55, 56, 63, 66, 86, 106, 113, 115, 118, 119, 120, 122, 178, 182, 196, 197, 211, 220, 224, 247, 249, 251, 252], "notebook": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "notfii": 41, "noth": [31, 250], "notic": 250, "notifi": [41, 48, 51, 55, 62, 86, 87, 88, 89, 170, 211, 219, 250], "notimplementederror": 63, "notin": 15, "notwithstand": 250, "novel": [25, 262], "novemb": [202, 207, 250, 262], "now": [5, 15, 166, 231, 236, 247, 252, 253, 254, 255, 256, 257, 258, 260, 261], "np": [5, 10, 11, 12, 13, 14, 19, 22, 27, 33, 35, 36, 38, 57, 63, 65, 69, 70, 71, 74, 77, 80, 86, 98, 120, 122, 123, 129, 131, 132, 133, 134, 135, 138, 141, 153, 166, 167, 168, 170, 185, 186, 194, 203, 204, 205, 206, 207, 211, 221, 222, 223, 224, 225, 229, 230, 253, 254, 255, 256, 257, 258, 259, 261], "nrow": 66, "nrt": 189, "null": [1, 33, 34, 137, 159, 233, 240, 262], "null_hypothesi": 34, "nullsteeringbeamform": 5, "num": 131, "num_actor": [57, 166, 218, 240], "num_antenna": [37, 41, 43, 213, 216], "num_appended_zero": 91, "num_artifact": [52, 57], "num_bin": 38, "num_bit": 98, "num_block": [120, 122], "num_chirp": [161, 260], "num_clust": 9, "num_code_bit": 70, "num_data_bit": 70, "num_data_chirp": [129, 234, 242], "num_data_symbol": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 123, 129, 131, 132, 133, 134, 135, 141, 235, 237, 238, 239, 247, 252, 258, 261], "num_delay_tap": 38, "num_devic": [62, 225], "num_device_recept": 52, "num_device_transmiss": 52, "num_digital_receive_port": [41, 64], "num_digital_transmit_port": [41, 64, 211], "num_drop": [59, 62, 233, 243, 247, 254, 256, 260], "num_element_typ": 138, "num_emerging_sign": 43, "num_error": 160, "num_evalu": [57, 84], "num_fram": [108, 110], "num_frequency_bin": 38, "num_guard_sampl": 131, "num_impinging_sign": 42, "num_input_stream": [3, 4, 5, 60, 117, 118, 119, 120, 253, 259], "num_iter": [72, 78, 82], "num_leaking_sign": 213, "num_offset_sampl": [222, 226], "num_oper": 62, "num_operator_input": 47, "num_operator_recept": 44, "num_operator_transmiss": 45, "num_output_stream": [2, 60, 117, 118, 119, 120, 121, 259], "num_path": 73, "num_pilot_chirp": 129, "num_point": 155, "num_port": 37, "num_postamble_symbol": [131, 134], "num_preamble_symbol": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 131, 132, 133, 134, 135, 235, 237, 238, 239, 247, 252, 258], "num_prepended_zero": 91, "num_prepeneded_zero": 91, "num_prob": 83, "num_quantization_bit": [195, 196, 237, 260], "num_quantization_level": 196, "num_rai": 9, "num_recalled_drop": 256, "num_receiv": 62, "num_receive_antenna": [18, 37, 41, 211, 253, 255], "num_receive_antenna_port": [41, 91], "num_receive_focus_angl": 253, "num_receive_focus_point": [2, 3, 4, 5, 253], "num_receive_input_stream": 253, "num_receive_input_symbol": [117, 118, 119, 120, 121, 259], "num_receive_output_stream": [2, 3, 4, 5, 60, 117, 118, 119, 120, 253, 259], "num_receive_output_symbol": [117, 118, 119, 120, 121, 259], "num_receive_port": [37, 41], "num_receive_stream": 38, "num_refer": [138, 139, 142, 143], "num_repetit": [139, 140, 142, 143, 233, 238, 240, 241, 243], "num_resolvable_path": 27, "num_sampl": [9, 18, 20, 21, 29, 31, 32, 33, 34, 35, 38, 57, 58, 63, 86, 102, 103, 104, 105, 106, 126, 130, 139, 140, 142, 143, 148, 160, 185, 218, 234, 235, 237, 238, 239, 240, 241, 242, 253, 255, 258, 261], "num_sample_point": 57, "num_samples_in": 230, "num_samples_out": 230, "num_scalar": 19, "num_sinusoid": [19, 27, 30], "num_stream": [63, 122, 126, 130, 148], "num_subcarri": [96, 117, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 233, 238, 240, 241, 243], "num_symbol": [38, 122, 123, 138, 139, 142, 143], "num_threshold": 159, "num_transmit_antenna": [18, 37, 41, 211, 255], "num_transmit_antenna_port": [41, 91], "num_transmit_focus_point": [2, 4, 5], "num_transmit_input_stream": 60, "num_transmit_input_symbol": [117, 120, 121, 259], "num_transmit_output_stream": 2, "num_transmit_output_symbol": [117, 120, 121, 259], "num_transmit_port": [37, 41], "num_transmit_stream": [38, 122], "num_transmitt": 62, "num_wavelet_sampl": 83, "num_word": [139, 142, 143], "numbernumer": [57, 166, 251, 262], "numerologi": 238, "numpi": [2, 3, 4, 5, 19, 26, 27, 29, 32, 34, 37, 38, 44, 47, 56, 57, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 86, 87, 98, 100, 104, 106, 108, 109, 110, 111, 117, 122, 123, 126, 129, 130, 131, 139, 140, 141, 142, 143, 148, 151, 153, 157, 158, 159, 160, 161, 165, 167, 180, 185, 186, 194, 196, 203, 204, 205, 206, 207, 211, 212, 229, 253, 254, 255, 256, 257, 258, 259, 261], "nyquist": 235, "o": [7, 68, 72, 73, 75, 76, 78, 243, 260, 262], "o2i": [12, 13, 14], "o2i_r": [12, 13, 14], "o2ist": [10, 11, 12, 13, 14], "object": [9, 15, 18, 19, 23, 33, 34, 37, 38, 44, 45, 54, 55, 57, 58, 60, 61, 63, 64, 65, 66, 77, 84, 87, 100, 102, 103, 104, 105, 106, 122, 142, 153, 154, 157, 158, 159, 160, 162, 165, 167, 189, 205, 211, 213, 214, 215, 218, 221, 222, 223, 224, 225, 235, 239, 247, 250, 251, 254, 255, 257, 261], "oblig": 250, "observ": [18, 57, 125, 257, 261], "obtain": [57, 189, 248], "obvisouli": 247, "occasion": 250, "occupi": 138, "occur": [36, 57, 59, 63, 250], "occurr": 71, "ocdm": [97, 123, 128, 136], "ocdmwaveform": 144, "oct2pi": 249, "octav": [32, 249], "octob": [68, 72, 73, 75, 76, 78, 262], "oeprat": 239, "ofdm": [93, 97, 117, 123, 128, 136, 138, 139, 140, 141, 142, 143, 147, 148, 149, 202, 206, 233, 236, 243, 255, 256, 257, 259, 262], "ofdm_radar": 96, "ofdmidealchannelestim": 255, "ofdmradar": 96, "ofdmsynchron": 148, "ofdmwaveform": [96, 117, 145, 146, 147, 149, 255, 256, 257, 259], "off": [63, 131, 133, 135, 205, 238, 254], "off_focus_drop": 254, "off_target_focu": 254, "offer": [20, 79, 97, 247, 250, 256, 257], "offic": [9, 256], "office_typ": [11, 256], "officetyp": [11, 256], "offici": [248, 249, 250, 251, 263], "offlin": 260, "offset": [9, 19, 63, 65, 77, 125, 126, 129, 139, 140, 141, 142, 143, 148, 194, 220, 221, 225, 226, 227, 231, 234, 242], "old": 63, "older": 250, "omega": 27, "omega_": [25, 27], "omit": 249, "ommit": 15, "on_focus_drop": 254, "on_target_focu": 254, "onc": [36, 55, 57, 166, 196, 218, 220, 226, 257], "one": [5, 15, 16, 35, 37, 38, 41, 57, 59, 63, 69, 74, 98, 126, 129, 130, 131, 133, 135, 136, 138, 141, 144, 145, 149, 156, 161, 166, 168, 169, 170, 173, 178, 189, 194, 196, 202, 206, 208, 211, 212, 213, 216, 218, 233, 238, 240, 241, 243, 247, 249, 250, 257, 261], "ones": [31, 120, 211, 254, 255], "onli": [16, 25, 33, 34, 35, 37, 48, 51, 54, 55, 58, 63, 64, 66, 70, 71, 77, 83, 87, 91, 95, 96, 107, 113, 115, 120, 122, 123, 125, 126, 129, 131, 136, 141, 144, 145, 149, 156, 159, 162, 189, 195, 196, 199, 211, 218, 219, 220, 247, 250, 251, 252, 253, 254, 255, 257, 259, 260], "onlin": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "onto": [5, 33, 37, 41, 42, 44, 47, 62, 63, 86, 88, 89, 122, 123, 129, 131, 136, 141, 144, 145, 149, 170, 211, 212, 215, 219, 253, 260], "open": [11, 232, 248, 249, 250, 256, 262], "opensourc": 250, "oper": [2, 15, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 67, 69, 70, 71, 74, 77, 80, 86, 87, 91, 93, 95, 96, 112, 113, 114, 115, 117, 118, 119, 121, 122, 125, 150, 158, 160, 162, 169, 173, 174, 175, 176, 181, 189, 198, 211, 212, 213, 214, 215, 216, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263], "operationresult": [46, 49, 50, 94, 108, 109, 110, 111], "operator_input": [41, 44, 47, 52, 62, 212, 215], "operator_recept": [44, 96, 215, 247, 252, 256], "operator_separ": [44, 87, 211, 212, 213, 215, 242], "operator_transmiss": [41, 45, 211, 216], "operator_transmit_port": 211, "operatornam": 16, "operatorrecept": 44, "opportun": 250, "optim": [5, 57, 76, 118, 126, 211, 257, 261, 262], "optimum": 262, "option": [2, 3, 4, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 45, 48, 51, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 205, 206, 208, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 250], "order": [1, 7, 15, 34, 56, 57, 61, 63, 64, 69, 70, 71, 77, 123, 129, 131, 132, 133, 134, 135, 139, 141, 142, 166, 195, 210, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 247, 249, 250, 254, 257, 260, 261, 263], "org": [4, 9, 10, 11, 12, 13, 14, 23, 30, 68, 72, 73, 75, 76, 77, 78, 194, 243, 250, 262], "organ": 250, "orient": [15, 18, 22, 37, 65, 87, 166, 167, 169, 170, 171, 173, 174, 175, 176, 211, 247], "origin": [16, 41, 63, 64, 77, 87, 96, 104, 153, 197, 198, 199, 211, 250], "ortho": 117, "orthogon": [5, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "orthogonalleastsquareschannelestim": [136, 144, 145, 149, 256], "orthogonalwaveform": [136, 140, 141, 143, 144, 146, 149], "oscial": 208, "oscil": [166, 194, 208, 209, 262], "oscillatorphasenois": [210, 237], "osical": 208, "ot": 2, "otf": [97, 123, 128, 136, 262], "otfswaveform": 149, "other": [5, 22, 57, 65, 69, 70, 71, 74, 77, 125, 166, 167, 178, 181, 205, 220, 225, 233, 234, 238, 240, 241, 242, 243, 247, 250, 256, 257], "otherwis": [2, 3, 4, 5, 31, 41, 63, 87, 211, 250], "otion": 162, "ottersten": [25, 262], "our": [250, 253, 254, 255, 257, 258, 259, 260, 261], "out": [57, 63, 97, 208, 247, 250], "outer": 254, "outlin": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 33, 35, 36, 102, 103, 104, 105, 106, 252, 253, 258, 260], "outofprocess": 251, "output": [2, 3, 4, 5, 7, 15, 19, 32, 41, 44, 45, 46, 48, 51, 53, 55, 56, 57, 60, 62, 69, 70, 71, 74, 77, 102, 103, 104, 105, 106, 109, 111, 117, 118, 119, 120, 121, 131, 157, 158, 159, 160, 196, 211, 216, 218, 219, 230, 242, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "output_callback": 41, "output_dir": 7, "outsid": [9, 15, 211, 250], "over": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 38, 41, 44, 45, 47, 49, 50, 51, 57, 62, 63, 69, 75, 79, 80, 84, 86, 87, 88, 89, 94, 98, 100, 107, 108, 109, 110, 111, 114, 120, 125, 126, 136, 144, 145, 149, 150, 157, 158, 160, 163, 164, 166, 167, 168, 169, 170, 173, 183, 184, 191, 194, 211, 212, 215, 216, 218, 219, 221, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 254, 255, 256, 257, 259, 260, 261, 262], "overal": [25, 34, 136, 144, 145, 149, 161, 166], "overflow": 63, "overlap": [63, 131, 220, 235], "overlin": [20, 21, 22, 34], "oversampl": [123, 131, 134, 252], "oversampling_factor": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 96, 112, 113, 114, 115, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 235, 237, 239, 247, 252, 258, 261], "oversight": 247, "overview": [23, 126, 247, 262], "overwrit": [62, 84, 256, 260], "overwrite_result": 53, "overwritten": 205, "own": [8, 20, 21, 22, 25, 31, 33, 35, 87, 204, 236, 247, 248, 250], "owt": [139, 140, 142, 147], "oxygen": [9, 12, 13, 14], "oxygen_absorpt": [9, 12, 13, 14], "p": [3, 4, 22, 25, 34, 57, 77, 78, 120, 253, 262], "p_": 206, "p_a": 5, "p_t": 5, "pa": 166, "packag": [0, 1, 97, 247, 249, 250, 252], "packbit": 261, "pad": [31, 38, 70, 91, 102, 103, 105, 106, 138], "pair": [9, 185], "panahi": [210, 262], "paper": [210, 250, 262], "paragraph": 250, "parallel": [60, 166, 218, 247, 257], "paramet": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 254, 255, 259, 260], "parameter": [9, 25, 30, 159, 166, 218, 260], "parametr": 23, "paramt": 57, "paramter": 16, "parent": 91, "pariti": [67, 262], "pars": 54, "part": [0, 16, 23, 48, 51, 58, 95, 96, 113, 115, 123, 129, 131, 139, 141, 162, 185, 192, 196, 197, 249, 250, 254, 262], "parti": [248, 250], "partial": 220, "particip": 217, "particular": 250, "particularli": 149, "partit": [103, 105, 106, 126], "partitionin": 113, "partner": 220, "pass": [9, 10, 11, 12, 13, 14, 23, 33, 37, 48, 51, 55, 57, 60, 63, 64, 91, 142, 166, 172, 185, 186, 189, 218, 232, 247, 262], "password": 250, "patch": [37, 82, 168, 169, 247, 252], "patchantenna": [37, 176], "patent": 250, "path": [7, 9, 25, 27, 29, 30, 32, 34, 53, 54, 57, 62, 66, 73, 86, 98, 126, 131, 236, 249, 251, 260], "path_delai": 32, "path_gain": 32, "path_real": 29, "pathcollect": 66, "pathreal": 29, "pattern": [5, 36, 143, 166, 169, 178, 233, 238, 240, 241, 243, 254, 255, 257, 259], "paus": [234, 238, 242], "payload": [146, 149], "payment": 250, "pcl": 160, "pdf": [9, 10, 11, 12, 13, 14, 23, 30, 63, 77, 132, 133, 134, 135, 161, 201, 202, 262], "pdst": 86, "pdt": [84, 89], "peak": [83, 129, 130, 156], "peak_detect": 156, "peak_promin": [129, 130], "pedersen": [23, 262], "peer": [250, 262], "pep8": 232, "per": [9, 10, 11, 12, 13, 14, 18, 20, 29, 31, 32, 34, 57, 58, 68, 69, 71, 73, 74, 75, 76, 78, 83, 106, 107, 117, 118, 119, 121, 122, 123, 129, 131, 136, 141, 144, 145, 146, 149, 161, 162, 187, 188, 218, 226, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 253, 254, 255], "perceiv": [9, 34, 35, 126], "perfect": [16, 87, 178, 182, 211, 247, 260], "perfectcoupl": [181, 211], "perfectisol": 184, "perfectli": 223, "perform": [5, 15, 38, 57, 97, 99, 100, 101, 102, 103, 104, 105, 106, 113, 115, 123, 157, 158, 159, 160, 166, 170, 182, 189, 210, 211, 218, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 253, 254, 255, 257, 259, 260, 262], "performance_tim": 57, "periodogram": [4, 262], "peripher": 79, "perman": 250, "permiss": 250, "permit": [62, 250], "perpetu": 250, "person": 250, "perspect": [178, 182], "pertin": 250, "petr": 120, "pgt": 130, "phase": [8, 19, 23, 25, 27, 29, 31, 34, 37, 131, 166, 169, 173, 174, 175, 176, 194, 204, 205, 207, 237, 255, 262], "phase_alpha": 207, "phase_beta": 207, "phase_nois": [194, 202, 208, 209, 210, 237], "phase_offset": [194, 237], "phase_shift": 255, "phase_shift_vari": 255, "phase_vari": 33, "phasenois": [194, 208, 209, 210], "phaseshiftchannel": 255, "phaseshiftchannelr": 255, "phaseshiftchannelsampl": 255, "phenomenon": 182, "phi": [3, 4, 5, 9, 37, 207, 210, 253], "phi_": [9, 25, 34], "phi_0": 210, "phi_1": 5, "phi_2": 210, "phi_3": 210, "phi_l": 5, "phy": [77, 262], "phyical": 81, "physic": [15, 16, 34, 37, 41, 60, 64, 77, 79, 80, 82, 83, 84, 91, 92, 97, 166, 178, 182, 211, 218, 219, 225, 234, 235, 237, 238, 239, 240, 241, 242, 247, 250, 254, 255, 260, 262], "physical_devic": [82, 83], "physicaldevic": [80, 82, 83, 86, 87, 89, 91, 92, 247], "physicaldevicedummi": [87, 88, 247], "physicaldevicedummyst": 87, "physicaldevicest": [80, 91], "physicalradartarget": 33, "physicalscenario": [81, 88, 89, 90, 247], "physicalscenariodummi": [88, 247, 260], "physicalscenariotyp": 84, "pi": [5, 20, 21, 22, 25, 34, 37, 132, 133, 134, 135, 166, 211, 253, 254, 255], "pick": [113, 123, 129, 131, 139, 140, 141, 142, 143, 182, 261], "pick_sampl": [139, 140, 142, 143], "pick_symbol": 139, "pickl": 57, "piec": [63, 250], "pignoli": [68, 72, 73, 75, 76, 78, 262], "pii": [68, 72, 73, 75, 76, 78, 262], "pilot": [123, 129, 130, 131, 132, 133, 134, 135, 136, 141, 144, 145, 146, 148, 149, 238], "pilot_el": [142, 147], "pilot_r": [10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 131, 134, 235, 237, 238, 239, 252], "pilot_sect": [136, 141, 144, 145, 146, 149], "pilot_sequ": [141, 144, 146, 149], "pilot_sign": [123, 129, 131, 141], "pilot_symbol": 123, "pilot_symbol_sequ": [123, 131, 132, 133, 134, 135], "pilotcommunicationwaveform": [123, 129, 131, 132, 133, 134, 135, 141, 144, 146, 149], "pilotcorrel": 130, "pilotsect": [136, 141, 142, 144, 145, 146, 147, 149], "pilotsymbolsequ": [123, 131, 134, 141, 144, 146, 149], "ping": [161, 162, 165], "pip": [232, 243, 249, 261], "pipelin": [15, 39, 55, 57, 64, 67, 68, 72, 73, 75, 76, 78, 84, 97, 116, 125, 162, 218, 232, 247, 248, 261], "pitch": 65, "pixel": 231, "place": [115, 123, 129, 131, 136, 139, 140, 141, 142, 143, 144, 145, 149, 250, 254, 261], "place_sampl": [139, 140, 142, 143], "place_symbol": [139, 142], "placed_symbol": [123, 129, 131, 141], "plain": 70, "plan": 249, "planar": [37, 254], "plane": [63, 122, 254, 261], "platform": 247, "playback": 62, "playback_channel": [80, 233], "playback_devic": [80, 233], "pleas": [9, 32, 150, 236, 247, 248, 249, 251], "ploariz": 37, "plot": [7, 9, 10, 11, 12, 13, 14, 21, 23, 24, 27, 30, 33, 35, 37, 38, 57, 63, 66, 79, 83, 84, 92, 99, 100, 102, 103, 104, 105, 106, 122, 131, 150, 151, 155, 157, 159, 160, 166, 167, 186, 187, 188, 190, 191, 196, 205, 218, 220, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "plot_angl": [9, 151], "plot_characterist": 205, "plot_constel": [122, 247, 252, 256, 261], "plot_filt": 131, "plot_filter_correl": 131, "plot_gain": 37, "plot_grid": 141, "plot_inform": [84, 260], "plot_pattern": [5, 170, 253, 254], "plot_polar": 37, "plot_power_delai": [9, 29], "plot_quant": 196, "plot_rai": 9, "plot_rang": [96, 150, 151], "plot_range_veloc": [96, 150, 151], "plot_result": [218, 234, 235, 237, 238, 239, 240, 241, 242], "plot_scal": [57, 234, 235, 237, 238, 239, 240, 241, 242], "plot_surfac": [57, 100, 102, 103, 104, 105, 106, 160, 235], "plot_topologi": [37, 254], "plotvisu": [57, 63, 66, 92, 104, 106, 159, 257], "plt": [5, 37, 66, 122, 167, 196, 252, 253, 255, 256, 257, 259, 260, 261], "plu": [9, 18, 20, 29, 31, 32, 34, 197, 250], "plug": [247, 255], "plugin": 32, "pmatrix": 37, "pn": 166, "png": [63, 132, 133, 134, 135, 161, 201, 202], "po": 65, "point": [0, 1, 2, 3, 4, 5, 7, 8, 15, 18, 21, 25, 31, 35, 37, 53, 57, 59, 62, 63, 64, 65, 84, 91, 113, 115, 150, 152, 154, 156, 157, 159, 160, 162, 163, 167, 196, 202, 205, 210, 235, 236, 240, 248, 249, 250, 251, 254, 255], "point_index": 57, "pointdetect": [153, 155], "pointer": 250, "polar": [8, 9, 34, 36, 37, 67, 168, 262], "polarimetr": [166, 169, 170], "polarization_transform": 9, "polarsccod": 73, "polarsclcod": 73, "poly_a": [76, 78], "poly_b": [76, 78], "polynomi": [75, 76, 78, 262], "pop_precod": [60, 259], "popul": 168, "popular": 251, "porperti": 189, "port": [37, 41, 48, 51, 64, 90, 91, 94, 95, 96, 112, 113, 114, 115, 162, 168, 170, 172, 211, 243, 254], "portion": [250, 252], "pose": [5, 10, 11, 12, 13, 14, 22, 36, 37, 41, 64, 65, 87, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 211, 254], "posit": [15, 18, 19, 22, 33, 34, 35, 36, 37, 64, 65, 69, 77, 83, 87, 153, 157, 160, 166, 167, 169, 170, 171, 173, 174, 175, 176, 196, 211, 218, 247, 254, 255], "position_a": 19, "position_b": 19, "possess": 250, "possibl": [38, 63, 122, 247, 250, 251], "post": [55, 84, 136, 144, 145, 149, 235], "post_drop_hook": 84, "postambl": [131, 134], "postion": 211, "postiv": 26, "postprocess": [10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36], "potenti": 57, "power": [1, 2, 3, 4, 5, 9, 10, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 48, 51, 56, 58, 63, 68, 75, 83, 86, 87, 92, 94, 95, 96, 113, 115, 120, 123, 129, 131, 141, 150, 151, 153, 156, 161, 162, 165, 166, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 202, 210, 211, 229, 234, 235, 237, 238, 239, 240, 241, 242, 250, 253, 254, 257, 260, 261, 262], "power_amplifi": [194, 202, 203, 204, 205, 206, 207, 232, 235, 237], "power_estim": 257, "power_profil": [27, 28, 29, 234, 242], "poweramplifi": [194, 202, 203, 204, 205, 206, 207], "powerartifact": 257, "powerestim": 257, "powerevalu": 257, "powerevaluationresult": 257, "practic": [102, 103, 104, 105, 106, 166, 250, 261], "pre": [84, 130, 249], "pre_drop_hook": 84, "preambl": [130, 131, 132, 133, 134, 135, 238, 250], "preced": [146, 149], "precis": [65, 250, 252], "precod": [1, 2, 5, 39, 97, 109, 112, 113, 114, 115, 117, 118, 119, 120, 123, 129, 149, 238, 241, 247, 263], "precodertyp": 60, "precodingtyp": 60, "predecessor": 250, "predict": [83, 260], "predict_leakag": 83, "prefer": [38, 94, 95, 151, 162, 250], "prefix": [138, 139, 142], "prefix_ratio": [117, 138, 233, 238, 240, 241, 243], "prefix_typ": [138, 238, 240, 241], "prefixtyp": [96, 136, 138, 144, 145, 149, 238, 240, 241], "preliminari": 249, "prematur": [57, 72, 159, 160, 234, 235, 237, 238, 239, 240, 241, 242], "prepar": 85, "prepare_plot": 85, "prepend": 91, "preprocessor": 232, "present": [231, 250, 260], "preserv": [56, 63, 203, 250], "preset": [9, 10, 11, 12, 13, 14], "prevent": [77, 130, 250], "previou": [36, 57, 62, 63, 250], "price": 250, "prieto": [32, 262], "primari": [7, 126, 189], "primarili": [58, 97, 115, 219, 250], "print": [40, 53, 56, 57, 166, 254, 258, 261], "prior": [232, 250], "prioriti": 84, "privat": [57, 250], "pro": 254, "proagat": [9, 16, 18, 20, 29, 31, 32, 34], "probabl": [57, 150, 158, 159, 160, 161, 239, 248, 253, 257], "probe": [1, 2, 3, 4, 5, 83, 162, 254], "probe_focus_point": [2, 253], "problem": [126, 182, 250], "probong": 5, "proc": [3, 262], "proce": 53, "procedur": 250, "proceed": [3, 16, 78, 118, 262], "process": [0, 1, 2, 5, 16, 17, 19, 41, 42, 44, 46, 48, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 69, 70, 86, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 141, 144, 145, 146, 149, 150, 152, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 189, 192, 194, 195, 202, 211, 214, 215, 218, 219, 235, 241, 247, 248, 253, 256, 257, 258, 259, 261, 262], "process_from_r": 211, "process_input": [41, 62, 86, 87, 88, 89, 211, 219], "processeddeviceinput": [41, 44, 47, 62, 86, 212, 215], "processedsimulateddeviceinput": [87, 211, 212, 215, 219], "processedsimulateddevicerecept": 217, "procur": 250, "produc": [36, 70, 250], "product": [250, 254], "profil": [9, 92, 96, 150, 151], "program": [0, 57, 247, 250, 257, 259], "programm": [250, 257], "progress_log_interv": 57, "prohibit": 250, "project": [5, 57, 68, 72, 73, 75, 76, 78, 122, 232, 247, 248, 250], "promin": [83, 129, 130, 250], "propag": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 96, 124, 125, 126, 131, 150, 161, 162, 165, 166, 191, 205, 217, 218, 219, 220, 229, 247, 250, 254, 255, 256, 258, 260, 262], "propagated_sampl": 34, "propagation_delai": 34, "propagation_respons": 34, "propagt": 27, "proper": [91, 252], "properli": [63, 247, 249, 251, 256, 261], "properti": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 146, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 235, 240, 247, 250, 253, 255, 257, 258, 259, 261], "propgat": [5, 34, 166], "propgram": [97, 145], "propos": 25, "prose": 259, "protect": 250, "protoc": 106, "protocol": [91, 248, 250], "prototyp": [2, 205, 253], "prove": 250, "provid": [0, 1, 2, 5, 9, 15, 16, 25, 36, 39, 41, 54, 55, 56, 57, 61, 63, 66, 67, 70, 79, 86, 87, 91, 93, 97, 120, 122, 131, 149, 150, 159, 166, 167, 183, 211, 218, 230, 232, 236, 247, 249, 250, 251, 254, 255, 262, 263], "provis": 250, "provision": 250, "proxi": 250, "psd": 210, "pseud": [189, 192], "pseudo": [16, 31, 41, 48, 51, 61, 62, 77, 81, 87, 89, 94, 95, 96, 98, 107, 113, 142, 146, 147, 149, 162, 208, 209, 211, 218, 261], "pseudorandomgener": 77, "psi_": 5, "psi_1": 5, "psi_k": 5, "psk": [131, 240, 261], "psk_qam_map": 131, "pskqammap": [131, 141], "public": [96, 250], "publicli": 250, "publish": [248, 250, 262], "pull": [248, 249], "puls": [131, 161, 238, 252], "pulse_rep_interv": [161, 260], "pure": [15, 25], "purpos": [247, 250, 254, 256, 258, 259], "pursuant": 250, "pwoer": 204, "py": [232, 251], "pybind11_object": [68, 72, 73, 75, 76, 78], "pyenv": 251, "pymont": 39, "pypi": 232, "pyplot": [122, 252, 253, 255, 256, 257, 259, 260, 261], "python": [7, 32, 68, 72, 73, 75, 76, 78, 166, 232, 236, 247, 248, 249, 251], "q": [37, 71, 166, 194, 229, 237], "q_m": 229, "qam": [131, 236, 238], "qpsk": 235, "qt": 231, "qt5agg": 231, "quad": [2, 5, 16, 66, 96, 126, 210], "quadmesh": 66, "quadmeshvisu": 66, "quadrant": 254, "quadratur": 166, "quadriga": [15, 262], "quadriga_interfac": 32, "quadriga_src": 249, "quadrigachannel": 32, "quadrigachannelr": 32, "quadrigachannelsampl": 32, "quadrigainterfac": 32, "qualifi": 250, "qualiti": 250, "qualnam": [8, 11, 16, 23, 30, 37, 38, 40, 54, 56, 62, 137, 138, 200, 201, 229], "quantiti": 197, "quantiz": [166, 195, 196, 197, 198, 199, 237, 260], "quantizationtyp": 196, "quantized_sign": 199, "quantizer_typ": [195, 196, 237], "quantizertyp": [195, 196, 201, 237], "quasi": 32, "quaternion": 65, "queri": [33, 34, 37, 41, 51, 62, 80, 86, 89, 91, 115, 162, 219, 221, 222, 223, 224, 225, 231, 252, 253], "query_devic": 252, "question": [57, 219, 231, 248], "queue": 77, "queue_length": 92, "quickli": 247, "quiet": 261, "quit": 240, "qzanit": 199, "r": [3, 15, 27, 32, 37, 57, 68, 69, 70, 72, 73, 75, 76, 77, 78, 96, 151, 161, 165, 203, 205, 206, 207, 240, 253, 258, 262], "r_": [71, 161, 162, 165], "r_1": 5, "r_k": 5, "r_n": [69, 70, 74], "ra": [57, 262], "radar": [15, 33, 35, 92, 93, 94, 95, 150, 152, 153, 156, 157, 159, 160, 161, 166, 182, 211, 239, 247, 253, 260, 262], "radar_channel": [96, 158, 159, 160, 239, 253, 260], "radar_cross_sect": [35, 157, 239, 253, 260], "radarbas": [94, 95, 96, 162], "radarchannel": 239, "radarchannelbas": [33, 34, 35, 158, 159, 160], "radarchannelr": [33, 34, 35], "radarchannelsampl": 34, "radarcrosssectionmodel": 33, "radarcub": [151, 152, 154, 156, 157, 159, 162, 163], "radardetector": [150, 152, 154, 156, 157, 162], "radarevalu": [158, 159, 160], "radarinterferencepath": 34, "radarpath": 34, "radarpointcloud": [152, 154, 155, 156, 162, 163], "radarrangeplot": 92, "radarrecept": [94, 162, 163], "radartarget": 33, "radartargetpath": 34, "radartransmiss": [94, 162, 164], "radarwaveform": [150, 161, 162, 165], "radat": 255, "radial": [161, 165], "radian": [2, 3, 4, 5, 9, 27, 34, 35, 37, 65, 151, 153, 175, 194], "radiat": [5, 166, 169, 170, 178, 254, 255], "radio": [16, 23, 31, 32, 48, 51, 63, 79, 87, 94, 95, 96, 162, 166, 168, 169, 178, 181, 185, 186, 202, 205, 211, 237, 243, 248, 254, 257, 260], "radr": 33, "rai": [8, 9, 10, 11, 12, 13, 14, 36, 57, 68, 166, 218, 257, 262], "rais": [2, 3, 8, 10, 16, 21, 23, 24, 27, 30, 33, 35, 37, 38, 41, 48, 51, 53, 54, 57, 59, 60, 62, 63, 65, 66, 69, 70, 71, 74, 77, 80, 83, 84, 85, 86, 87, 88, 89, 91, 95, 97, 120, 122, 123, 126, 128, 129, 130, 131, 132, 134, 138, 141, 142, 148, 151, 153, 155, 156, 158, 159, 160, 161, 169, 170, 172, 173, 179, 183, 184, 185, 189, 190, 191, 194, 196, 198, 204, 205, 206, 207, 210, 211, 212, 213, 216, 218, 219, 226, 229, 247, 252, 257], "raisedcosin": 133, "raisedcosinewaveform": 133, "ralf": [23, 262], "ramp": 129, "ran": [9, 10, 11, 12, 13, 14, 30, 243, 262], "randint": 258, "random": [10, 11, 12, 13, 14, 15, 16, 17, 19, 25, 31, 33, 36, 39, 41, 48, 51, 57, 62, 71, 77, 81, 87, 89, 94, 95, 96, 98, 107, 113, 142, 146, 147, 149, 162, 166, 189, 192, 208, 209, 211, 214, 218, 219, 220, 222, 223, 224, 225, 227, 255, 258, 261], "random_nod": [8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 35, 41, 58, 61, 62, 94, 95, 96, 98, 107, 162, 189, 192, 193, 208, 209, 210, 219, 221, 222, 223, 224, 225], "random_r": 28, "randombitssourc": [98, 112, 114, 115], "randomdelaychannel": [20, 21], "randomdelaychannelr": [20, 21], "randomli": [9, 10, 11, 12, 13, 14, 112, 114, 115], "randomnod": [8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 35, 41, 48, 51, 58, 61, 62, 70, 71, 94, 95, 96, 98, 107, 162, 189, 192, 208, 209, 210, 219, 221, 222, 223, 224, 225], "randomr": [61, 189, 193], "randomtrigg": [211, 221], "rang": [35, 63, 91, 92, 95, 96, 150, 151, 153, 155, 161, 162, 165, 168, 195, 197, 198, 199, 239, 247, 254, 256], "range_bin": [151, 165], "range_resolut": [95, 96, 161, 165], "rank": 3, "rap91": 262, "rapp": [202, 235, 237, 262], "rapppoweramplifi": 206, "raschkowski": [32, 262], "rat": 248, "rate": [9, 15, 16, 18, 20, 29, 31, 32, 34, 41, 43, 58, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 80, 83, 86, 87, 91, 94, 95, 97, 99, 101, 107, 120, 121, 123, 129, 131, 132, 133, 134, 135, 141, 144, 146, 161, 162, 165, 187, 188, 211, 213, 216, 220, 224, 226, 230, 234, 235, 237, 238, 239, 240, 241, 247, 248, 252, 255, 258, 261, 262], "rather": [99, 168, 211, 255], "ratio": [9, 18, 20, 29, 31, 32, 34, 41, 87, 116, 129, 130, 138, 166, 187, 188, 189, 191, 197, 211, 229, 234, 235, 237, 238, 239, 240, 241, 242, 247, 258, 262], "ratio_combin": 118, "raviv": [76, 262], "raw": [57, 122, 123, 129, 131, 141, 151, 159, 163, 259, 261], "ray_address": [57, 218], "rayleigh": [8, 25, 234, 242, 262], "rayleigh_factor": 8, "raytrac": [34, 249], "rbrace": [2, 3, 4, 15, 16, 31, 69, 74, 102, 103, 105, 106, 202, 206, 207], "rc": [35, 157], "rceil": 70, "rcrt": 34, "rcst": 34, "re": [53, 57, 63, 161, 162, 165, 257, 259], "reach": 57, "read": [54, 250], "readabl": [57, 250], "readili": 250, "real": [5, 66, 79, 86, 126, 151, 185, 192, 196, 197, 247, 252, 257, 260], "realis": [5, 254], "realist": [16, 37, 126, 166], "realiz": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 57, 61, 87, 88, 150, 189, 192, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 247, 255, 257], "realize_channel": 219, "realize_interfer": 34, "realize_recept": 211, "realize_trigg": 219, "realtiv": [161, 165], "realzat": [8, 21, 22, 31, 33, 35], "reason": [159, 211, 247, 249, 250, 255, 260], "recal": [8, 9, 16, 21, 22, 27, 31, 32, 33, 35, 41, 44, 45, 54, 60, 142, 216, 217, 218, 256], "recall_r": [8, 9, 16, 21, 22, 27, 31, 32, 33, 35, 255], "recall_recept": 41, "recall_transmiss": 41, "recalled_drop": 256, "recalled_scenario": 256, "recangular": 134, "receipt": 250, "receiv": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 49, 52, 58, 60, 62, 64, 69, 70, 71, 74, 77, 80, 82, 83, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 148, 150, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 189, 191, 194, 195, 211, 212, 213, 215, 216, 217, 218, 219, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263], "receive_antenna": 37, "receive_beamform": [162, 253], "receive_cod": 41, "receive_correl": 180, "receive_devic": [62, 88, 89, 219], "receive_focu": [2, 3, 4, 5], "receive_imped": 180, "receive_oper": [41, 62, 86, 88, 219], "receive_port": 37, "receive_signal_cod": [112, 113, 114], "receive_st": 64, "receive_stream": 38, "receive_stream_cod": 113, "receive_symbol_cod": [112, 113, 114, 116, 118, 119, 120, 240, 259], "receive_topologi": 37, "receive_transmiss": 87, "receivebeamform": [2, 3, 4, 5, 162, 253], "receivecod": 60, "received_sign": 83, "received_stream": 38, "received_symbol": [104, 261], "receivedconstellationplot": [92, 247], "receivedecod": [5, 60, 117, 118, 119, 120, 121], "receivedecodertyp": 60, "receivepowerevalu": [5, 166, 254], "receiveprecod": 60, "receiveprecodingtyp": 60, "receiver_antenna": 18, "receiver_index": 218, "receiver_pos": 18, "receiver_st": [18, 29, 34, 255], "receiver_veloc": 18, "receiveroperatingcharacterist": [33, 35, 159, 161, 253, 260], "receiverslot": 41, "receivesignalcod": [41, 60, 113], "receivest": [2, 60, 64], "receivestreamcod": 113, "receivestreamdecod": [2, 5, 60], "receivesymbolcod": [113, 116, 121, 240], "receivesymboldecod": [116, 117, 118, 119, 120, 121, 259], "receiving_devic": [114, 158, 159, 160, 234, 239], "receiving_modem": [100, 102, 103, 104, 105, 106, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243], "receiving_radar": [158, 159, 160, 239], "receivingmodem": [5, 92, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114], "receivingmodembas": [94, 95, 96, 112, 113, 114], "recent": [38, 66, 87, 125, 263], "recepept": 60, "recept": [1, 2, 15, 16, 18, 41, 48, 52, 58, 60, 62, 64, 69, 70, 71, 74, 77, 80, 86, 87, 88, 89, 91, 94, 95, 96, 107, 112, 113, 114, 116, 117, 118, 119, 121, 123, 125, 129, 132, 133, 134, 135, 136, 144, 145, 149, 150, 157, 162, 166, 169, 170, 173, 179, 194, 211, 214, 217, 218, 219, 247, 252, 254, 257, 259], "receptiontyp": 48, "recipi": 250, "reciproc": [9, 15, 38, 166, 247], "reciprocal_sampl": 17, "recogn": [54, 250], "recommend": [16, 249], "reconfigur": 57, "record": [62, 63, 84, 159, 247, 254, 263], "record_channel": [80, 233], "record_devic": [80, 233], "record_drop": 84, "recorded_drop": 256, "recov": 38, "recoveri": 247, "rectangl": [132, 134], "rectangular": [97, 123, 128, 131, 239], "rectangularwaveform": 134, "recurs": [54, 70, 76, 249], "recveived_sign": 83, "redistribut": 250, "reduc": [5, 57], "reduct": 63, "redund": [67, 69, 74, 77, 234, 235, 242], "reed": [67, 262], "reedsolomoncod": 75, "refer": [1, 2, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 23, 32, 37, 48, 57, 63, 64, 65, 69, 70, 71, 73, 74, 77, 81, 84, 90, 96, 107, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 162, 170, 178, 182, 187, 188, 189, 191, 205, 206, 208, 210, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 250, 255, 256], "referenc": [48, 237, 238, 239, 240, 254], "reference_symbol": [139, 142], "references_per_fram": 141, "refererd": 4, "refin": 195, "reflect": [33, 34, 35, 150, 253], "reflection_phas": 34, "reflector": [33, 34, 35], "refor": 37, "refrain": 250, "refresh": 40, "regard": 250, "regardless": 250, "regener": 250, "region": 63, "regist": [41, 51, 54, 55, 57, 62, 65, 70, 77, 84, 86, 87, 88, 89, 90, 159, 211, 219, 249], "registerd": [65, 214], "registered_class": 54, "registered_tag": 54, "registereddimens": 57, "registr": 62, "regress": 232, "regular": [210, 262], "reinstat": 250, "reiver": [150, 158], "rel": [3, 4, 22, 34, 57, 63, 65, 84, 96, 130, 131, 133, 134, 135, 156, 161, 165, 169, 187, 188, 253], "relat": [22, 65, 69, 70], "relationship": [186, 229, 250], "relative_bandwidth": [131, 133, 134, 135], "relative_doppler_bin": [161, 165], "relative_doppler_resolut": [96, 161, 162, 165], "relative_veloc": 34, "releas": [9, 10, 11, 12, 13, 14, 23, 30, 77, 178, 182, 249, 250, 262], "relev": [122, 166, 250], "reli": [125, 250, 259], "relicens": 250, "remain": [34, 249, 250], "remind": 254, "remot": [57, 91, 250], "remov": [16, 34, 37, 48, 51, 55, 57, 60, 65, 83, 123, 129, 131, 141, 172, 225, 250, 254, 257, 260], "remove_antenna": 37, "remove_devic": 225, "remove_dimens": [57, 254], "remove_hook": 55, "remove_leakag": 83, "remove_link": 65, "remove_port": [37, 172], "remove_sample_hook": 16, "render": [5, 63, 232, 247, 250, 253, 257], "repair": 250, "repeat": [37, 74, 115, 138, 139, 140, 141, 143, 144, 234, 235, 242, 258, 261], "repeat_pilot_sequ": [141, 144, 146, 149], "repeat_pilot_symbol_sequ": [123, 131, 134], "repeat_symbol_sequ": 123, "repeatedli": 218, "repetit": [63, 67, 117, 123, 131, 134, 136, 137, 138, 139, 142, 144, 145, 149, 161, 233, 234, 235, 238, 240, 241, 242, 243, 256, 258], "repetitioncod": 258, "repetitionencod": [74, 112, 113, 114, 115], "replac": [84, 117, 136, 170, 178, 182, 189, 202, 208, 220, 225, 247, 249, 251, 255], "replai": [62, 84, 159, 247, 256], "replayscenario": 62, "repo": 249, "report": [55, 57, 70, 232, 248], "repositori": [7, 232, 249, 250, 251, 263], "repres": [2, 3, 4, 5, 9, 15, 16, 17, 18, 20, 26, 27, 29, 31, 32, 33, 34, 37, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 77, 80, 86, 98, 100, 102, 103, 104, 105, 106, 112, 113, 114, 115, 122, 142, 151, 155, 157, 158, 159, 160, 162, 166, 167, 189, 193, 202, 218, 219, 233, 238, 240, 241, 243, 247, 250, 254, 255, 257, 258, 259, 261], "represent": [23, 37, 38, 41, 56, 57, 60, 65, 66, 84, 102, 103, 104, 105, 106, 112, 113, 115, 142, 151, 157, 159, 160, 166, 190, 195, 196, 211, 218, 234, 240, 241, 242, 261], "representererror": 54, "represnt": 62, "reproduc": 61, "request": [38, 62, 70, 219, 248], "requir": [2, 3, 4, 5, 8, 9, 15, 18, 20, 21, 22, 29, 31, 32, 33, 34, 35, 36, 42, 53, 55, 57, 60, 63, 69, 70, 77, 79, 82, 84, 98, 107, 115, 116, 117, 118, 119, 120, 121, 123, 129, 131, 132, 134, 136, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 161, 162, 165, 166, 183, 184, 187, 188, 195, 197, 198, 199, 202, 208, 211, 231, 232, 233, 243, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 262], "required_num_data_bit": 70, "rerout": 63, "resambl": 63, "resampl": [15, 16, 41, 63, 211, 228], "rescal": [197, 198, 199], "rescale_quant": [197, 198, 199], "research": [126, 248, 262], "reserv": 57, "reset": 77, "reshap": [258, 261], "resolut": [3, 37, 95, 96, 161, 162, 165, 196, 262], "resolv": [57, 84, 162, 218, 232, 250, 262], "resort": [85, 92], "resourc": [57, 136, 137, 139, 141, 142, 143, 144, 145, 146, 149, 166, 233, 238, 240, 241, 243], "resource_mask": [139, 141, 142, 143], "respect": [2, 3, 4, 5, 9, 10, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 37, 38, 41, 54, 55, 57, 62, 64, 65, 69, 70, 71, 74, 77, 86, 102, 103, 104, 105, 106, 112, 114, 115, 122, 125, 126, 148, 151, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 187, 188, 189, 203, 207, 211, 220, 232, 234, 235, 237, 238, 239, 240, 241, 242, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259], "respond": 37, "respons": [3, 4, 9, 20, 21, 22, 25, 29, 31, 32, 34, 37, 38, 83, 169, 170, 173, 185, 196, 201, 250, 252, 253], "rest": [87, 211], "restart": 261, "restrict": 250, "result": [2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 52, 53, 54, 55, 57, 59, 62, 63, 65, 66, 69, 70, 84, 87, 88, 89, 100, 102, 103, 104, 105, 106, 113, 115, 117, 118, 119, 120, 121, 123, 126, 129, 131, 132, 141, 152, 154, 156, 157, 158, 159, 160, 161, 162, 166, 179, 196, 205, 211, 217, 218, 219, 220, 226, 232, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261], "results_dir": [53, 218, 247, 260], "retain": 250, "returm": [53, 57, 218], "return": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 172, 173, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 250, 253, 255, 257, 258, 259, 261], "reve": 15, "reveiv": [157, 159, 160, 161], "revers": [70, 259], "revert": 77, "review": [250, 262], "revis": 250, "reza": [210, 262], "rf": [4, 5, 41, 80, 87, 91, 166, 168, 170, 171, 181, 182, 183, 184, 186, 194, 211, 234, 235, 237, 240, 241, 242, 247, 260, 262], "rf_chain": [87, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 235, 237, 260], "rf_chain_modifi": 170, "rf_signal": 170, "rfchain": [87, 168, 170, 171, 194, 211, 235, 237], "rfloor": 16, "rice": [9, 25, 27], "rice_factor": [9, 27, 234, 242], "ricean": 9, "rich": 57, "rician": [25, 262], "right": [3, 5, 15, 16, 18, 25, 27, 31, 34, 37, 57, 69, 70, 74, 94, 95, 102, 103, 104, 105, 106, 161, 162, 165, 206, 250, 257, 259], "riser": 237, "risk": 250, "rm": [104, 197, 240], "rms_amplitud": [197, 200], "rms_delai": [8, 24, 30, 240, 241], "rms_valu": 229, "rmse": 160, "rng": [19, 77, 221, 222, 223, 224, 225, 255, 261], "robert": [72, 262], "roberto": 251, "robust": [3, 139, 142, 147, 148, 262], "roc": [33, 35, 159, 239, 260], "rocartifact": 159, "rocevalu": 159, "rocevaluationresult": 159, "rock": 80, "rodnei": [126, 262], "roh83": 262, "rohl": 262, "roll": [65, 131, 133, 135, 238], "roll_off": [5, 118, 119, 120, 131, 133, 135, 238, 247], "rolledoffsinglecarrierwaveform": [131, 133, 135], "rom": [34, 250], "root": [0, 8, 24, 30, 37, 61, 97, 99, 101, 104, 123, 128, 131, 133, 150, 158, 208, 209, 229, 232, 240, 241, 247, 252], "rootmeansquareartifact": 160, "rootmeansquareerror": 160, "rootmeansquareerrorresult": 160, "rootmeansquareevalu": 160, "rootraisedcosin": [15, 135, 235, 237, 238, 247], "rootraisedcosinewaveform": [5, 15, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 135, 247, 252, 258], "rosa": [25, 262], "rotat": [37, 65, 262], "rotate_direct": 65, "rotation_quaternion": 65, "rotation_rpi": 65, "rough": 247, "roughli": [255, 260], "round": [9, 15, 18, 20, 29, 31, 32, 34, 63, 224, 226, 261], "rountin": 247, "router": 166, "routin": [1, 7, 9, 12, 13, 14, 16, 21, 22, 28, 29, 31, 53, 54, 57, 66, 69, 70, 71, 74, 77, 79, 86, 98, 112, 113, 114, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 144, 145, 148, 149, 150, 162, 165, 205, 211, 220, 228, 232, 241, 247, 251, 252, 253, 255, 256, 257, 259, 261], "row": 231, "royalti": 250, "rpy": 65, "rrcwaveform": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 36], "rrt": 162, "rs60": 262, "rsc": 67, "rsccode": 76, "rt": 36, "rtt": 162, "rtype": [162, 197], "rule": 250, "run": [5, 7, 10, 11, 12, 13, 14, 15, 21, 23, 24, 27, 30, 33, 35, 52, 53, 57, 59, 62, 84, 90, 102, 103, 104, 105, 106, 156, 157, 159, 160, 161, 166, 218, 232, 236, 247, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263], "runner": 57, "runtim": [40, 53, 57, 84, 85, 125, 170, 186, 187, 188, 190, 191, 194, 211, 218, 247, 249, 254, 256, 257, 261], "runtime_env": 57, "runtimeerror": [41, 59, 60, 62, 63, 65, 66, 70, 85, 88, 89, 120, 123, 126, 130, 148, 151, 219, 257], "rural": [9, 23], "rural_macrocel": 12, "ruralmacrocel": 12, "ruralmacrocellsr": 12, "rvert": 37, "rvert_": 126, "rvert_2": [37, 102, 104], "rx": [9, 15, 16, 18, 20, 29, 31, 32, 34, 37, 102, 103, 104, 105, 106, 118, 119, 120, 166, 247], "rx_devic": [114, 118, 119, 120, 136, 144, 145, 149, 247, 256, 257], "rx_gain": [91, 243], "rx_modem": 113, "rx_preocod": 116, "rxmodem": [113, 239], "rxpwr": 254, "ryyn\u00e4nen": [194, 262], "s13638": [126, 262], "s2352711019300457": [68, 72, 73, 75, 76, 78, 262], "s_": [16, 104, 202, 203, 205, 206, 207, 210], "safeconstructor": [60, 142, 218], "saferepresent": [23, 60, 142, 218], "safest": 250, "sai": 250, "said": [116, 247, 253], "sake": [166, 261], "sal81": 262, "sale": 250, "saleh": [202, 262], "salehpoweramplifi": 207, "salman": [126, 262], "same": [15, 36, 37, 57, 63, 120, 168, 170, 178, 182, 194, 196, 220, 221, 222, 223, 224, 225, 238, 247, 250, 253, 254], "sampl": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 41, 43, 48, 51, 57, 58, 63, 64, 80, 83, 84, 85, 86, 87, 89, 91, 94, 95, 107, 113, 123, 126, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 146, 148, 151, 160, 161, 162, 165, 166, 167, 170, 185, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 211, 213, 216, 218, 219, 220, 224, 225, 226, 227, 230, 234, 235, 237, 238, 239, 240, 241, 242, 247, 253, 254, 255, 257, 261], "sample_covari": [26, 253], "sample_cross_sect": 33, "sample_grid": 57, "sample_hook": [8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 28, 31, 32, 33, 34, 35, 255], "sample_index": 57, "sample_offset": [139, 140, 142, 143], "sample_orient": 167, "sample_point": [57, 84], "sample_trajectori": 33, "sample_transl": 167, "sample_veloc": 167, "samplegrid": 57, "sampleoffsettrigg": 222, "samplepoint": [57, 254], "samples_in_chirp": 129, "samples_in_fram": 261, "samples_matrix": 63, "samples_per_fram": [107, 123, 129, 131, 141, 146, 261], "samplin": [80, 86, 87, 91], "sampling_r": [5, 41, 43, 58, 63, 64, 80, 83, 87, 91, 94, 95, 107, 123, 129, 131, 144, 146, 161, 162, 165, 211, 213, 216, 226, 230, 254, 261], "sampling_rate_new": 63, "sampling_rate_old": 63, "sat": [202, 203, 205, 206, 207, 262], "satellit": [32, 149, 262], "satisfi": 250, "satur": [202, 203, 205, 206, 207], "saturation_amplitud": 205, "save": [7, 53, 57, 62, 86, 166, 236, 260], "save_calibr": 86, "save_to_matlab": [57, 166], "savefil": [62, 72, 84, 159], "sc": [132, 133, 134, 135, 235, 237, 238, 239], "sc97": 262, "scalar": [19, 21, 56, 57, 92, 159, 160, 182, 186, 187, 188, 189, 190, 191], "scalar_result": [57, 160], "scalar_sampl": 19, "scalardimens": [57, 186, 187, 188, 189, 190, 191], "scalarevaluationresult": [57, 100, 157, 160], "scale": [9, 10, 11, 12, 13, 14, 18, 20, 29, 31, 32, 34, 56, 57, 63, 91, 96, 151, 166, 191, 197, 199, 229, 254, 255], "scale_quantized_sign": 199, "scale_transmiss": 91, "scatter": [9, 15, 33, 34, 37, 66, 260], "scattervisu": [9, 66, 92, 122, 155, 157, 160], "sccorrelationsynchron": [21, 22], "scenario": [5, 7, 10, 11, 12, 13, 16, 30, 39, 41, 52, 54, 57, 59, 79, 84, 87, 90, 118, 119, 120, 123, 129, 131, 132, 134, 136, 144, 145, 146, 149, 150, 157, 159, 160, 161, 167, 211, 217, 218, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 253, 254, 255, 256, 257, 258, 260], "scenariomod": 62, "scenariotyp": [59, 62], "scene": 36, "schedul": [57, 249, 262], "schema": 120, "scheme": [53, 69, 70, 71, 74, 129, 132, 133, 134, 135, 149, 258, 259], "schmidl": [145, 233, 243, 262], "schmidlcox": [148, 233, 243], "schmidlcoxpilot": [147, 233, 243], "schmidlcoxpilotsect": [147, 148], "schmidlcoxsynchron": 148, "school": 250, "schwerin": [57, 262], "scienc": [68, 72, 73, 75, 76, 78, 191, 262], "sciencedirect": [68, 72, 73, 75, 76, 78, 262], "scientif": [57, 262], "scipi": [253, 254], "scleastsquareschannelestim": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 36], "scope": 250, "scrambl": 67, "scrambler": 77, "scrambler3gpp": 77, "scrambler80211a": 77, "scrambler_3gpp": 77, "scrambler_80211a": 77, "scratch": 249, "screen": 231, "screen_geometri": 231, "screen_rect": 231, "screeninfo": 231, "script": [7, 32, 232, 249, 250, 251], "sczeroforcingchannelequ": [10, 11, 12, 13, 14, 21, 22, 23, 24, 27, 30, 36], "sdr": 125, "seamlessli": 247, "search": [59, 84, 130, 156, 249], "second": [2, 3, 4, 5, 9, 15, 16, 18, 19, 20, 21, 24, 27, 29, 30, 33, 34, 41, 57, 62, 63, 82, 83, 86, 87, 94, 95, 106, 107, 109, 111, 122, 123, 125, 129, 131, 132, 134, 140, 151, 161, 162, 165, 167, 170, 196, 202, 206, 211, 218, 219, 224, 226, 230, 234, 238, 240, 241, 242, 260, 262], "second_target": 33, "secondari": 250, "secondarili": 250, "section": [0, 5, 33, 34, 35, 54, 57, 69, 70, 77, 126, 129, 130, 131, 136, 138, 141, 144, 145, 146, 147, 148, 149, 150, 218, 232, 234, 235, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 252, 255, 257, 259, 260, 263], "section_block_s": 57, "section_coord": 257, "see": [33, 34, 63, 77, 117, 206, 207, 232, 243, 250], "seed": [5, 10, 11, 16, 31, 35, 36, 41, 48, 51, 61, 62, 77, 81, 87, 88, 89, 94, 95, 96, 98, 107, 112, 113, 114, 115, 162, 189, 192, 208, 209, 210, 211, 218, 247, 252, 254, 256], "segment": [103, 105, 106], "select": [38, 48, 51, 57, 63, 64, 80, 83, 91, 94, 95, 96, 99, 112, 113, 114, 115, 120, 138, 162, 166, 182, 211, 247, 251, 254, 258, 262], "selected_digital_receive_port": 64, "selected_digital_transmit_port": 64, "selected_receive_port": [48, 91, 94, 95, 96, 112, 113, 114, 162], "selected_transmit_port": [51, 91, 94, 95, 96, 112, 114, 115, 162], "selectiveleakag": [185, 186], "selectiveleakagecalibr": 83, "selet": 182, "self": [0, 63, 65, 68, 72, 73, 75, 76, 78, 234, 239, 240, 241, 253, 255, 257, 258, 259, 261], "sell": 250, "semi": 248, "semiconductor": 250, "send": 205, "sens": [0, 1, 34, 93, 94, 95, 96, 158, 161, 162, 165, 166, 189, 211, 218, 225, 239, 247, 248, 255, 260], "sensor": [3, 4, 5, 21, 22, 34, 35, 37, 195, 253, 262], "sent": 257, "separ": [44, 99, 166, 196, 197, 211, 212, 213, 215, 235, 236, 250], "sequenc": [2, 3, 4, 5, 27, 29, 34, 37, 41, 42, 43, 44, 45, 47, 48, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 77, 80, 81, 86, 87, 88, 89, 91, 94, 95, 96, 98, 100, 104, 112, 113, 114, 115, 116, 122, 123, 129, 130, 131, 132, 133, 134, 135, 141, 142, 144, 146, 147, 149, 157, 158, 159, 160, 161, 162, 171, 172, 177, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 261], "sequenti": [63, 70, 166, 233, 243, 247, 249], "seri": [16, 122, 259], "serial": [4, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 26, 27, 28, 31, 32, 33, 35, 37, 39, 41, 45, 60, 62, 69, 70, 71, 74, 77, 84, 90, 91, 105, 106, 112, 113, 114, 127, 129, 130, 132, 133, 134, 135, 142, 147, 148, 152, 174, 176, 196, 197, 198, 203, 206, 209, 216, 217, 218, 255], "serializ": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 37, 40, 41, 54, 57, 58, 60, 65, 69, 70, 71, 74, 77, 80, 82, 83, 84, 87, 88, 90, 91, 95, 96, 98, 102, 103, 105, 106, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 156, 157, 159, 161, 162, 167, 172, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 218, 221, 222, 223, 224], "serializableenum": [8, 16, 23, 30, 37, 40, 54, 137, 138, 200, 201], "serializabletyp": 54, "serialize_st": [62, 84], "serialized_attribut": [62, 211], "sert": 57, "serv": [250, 251], "server": [15, 90, 232, 250], "servic": 250, "session": 62, "set": [8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 25, 28, 31, 32, 33, 34, 37, 38, 53, 54, 57, 61, 62, 63, 65, 85, 88, 115, 146, 149, 166, 167, 168, 178, 182, 184, 185, 186, 189, 195, 198, 202, 208, 211, 218, 219, 220, 221, 222, 223, 224, 225, 233, 235, 237, 238, 239, 240, 241, 243, 247, 249, 251, 252, 255, 260, 261], "set_bas": 65, "set_channel": [5, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 27, 30, 33, 35, 36, 136, 144, 145, 149, 150, 157, 159, 160, 161, 166, 218, 219, 247, 253, 254, 255, 256, 260], "set_figure_geometri": 231, "set_sampl": 63, "set_stat": 38, "set_xlabel": 257, "set_ydata": 257, "set_ylabel": 257, "settabl": 57, "setter": 57, "setup": [32, 79, 247, 252], "setx": 249, "sever": [15, 25, 36, 39, 40, 62, 63, 115, 125, 236, 251, 253, 254, 256, 261], "sf": 234, "sh": 10, "shall": [48, 250], "shannon": [16, 78, 262], "shape": [19, 63, 66, 131, 132, 133, 134, 135, 194, 253, 257], "share": [89, 219, 220, 225, 250], "sharon": 262, "shell": 40, "shift": [23, 25, 27, 29, 30, 31, 34, 96, 129, 151, 161, 165, 169, 173, 174, 175, 176, 189, 230, 255, 261], "shifted_signal_block": 255, "ship": 247, "shoot": 58, "short": [41, 57, 102, 103, 104, 105, 106, 157, 159, 160, 250], "shortcut": 189, "shorter": [102, 103, 104, 105, 106, 141, 144], "shortest": 126, "shorthand": [16, 41, 57, 64, 166, 168, 189, 211], "should": [2, 7, 10, 16, 20, 21, 22, 33, 34, 36, 37, 38, 48, 51, 54, 55, 57, 58, 62, 63, 66, 70, 82, 86, 95, 96, 99, 113, 115, 117, 120, 122, 129, 132, 133, 134, 135, 162, 167, 189, 193, 196, 205, 219, 220, 230, 232, 250, 251, 255, 260], "show": [5, 66, 113, 115, 120, 166, 167, 252, 253, 254, 255, 256, 257, 259, 260, 261], "showcas": 254, "shown": 231, "shuch": [48, 51, 58, 95, 96, 113, 115, 162], "siam": [57, 262], "side": [126, 130, 148, 194, 248], "siganl": 86, "sight": [9, 23, 25, 27, 29, 34, 126, 254, 256], "sigma_": [33, 34], "sign": [61, 250], "signal": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 59, 60, 62, 64, 67, 80, 83, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 123, 125, 126, 129, 130, 131, 139, 140, 141, 142, 143, 144, 146, 148, 150, 161, 162, 163, 164, 165, 166, 169, 170, 173, 174, 175, 176, 179, 183, 184, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262], "signal_model": 63, "signalblock": [31, 63], "signalplot": 92, "signalreceiv": [58, 166, 211, 254], "signaltransmitt": [58, 166, 211], "signific": 250, "significantli": [57, 254], "silent": [40, 48, 51, 58, 95, 96, 113, 115, 162, 253, 254, 255, 257, 258, 259, 260, 261], "silenttransmitt": 58, "sim": 21, "similar": [234, 250], "similarli": [112, 114, 211], "simo": [118, 119], "simpl": [20, 57, 120, 166, 189, 211, 247, 262], "simplex": [129, 132, 133, 134, 135, 136, 144, 145, 149, 234, 247, 256, 257], "simplexlink": [10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 97, 107, 114, 118, 119, 120, 136, 144, 145, 149, 220, 234, 247, 256, 257], "simpli": [247, 254, 257], "simplic": [166, 261], "simplif": 70, "simplifi": 186, "simplist": 211, "simul": [0, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 39, 40, 52, 53, 54, 57, 59, 64, 65, 84, 87, 88, 97, 100, 102, 103, 104, 105, 106, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 129, 130, 131, 132, 134, 136, 144, 145, 146, 148, 149, 150, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "simulatan": [15, 239], "simulated_devic": [211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 260], "simulated_input_callback": 211, "simulated_output_callback": 211, "simulatedantenna": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "simulatedantennaarrai": [87, 168, 170, 171, 172, 177, 211], "simulatedantennaport": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 254], "simulatedcustomarrai": [168, 170, 172, 254], "simulateddevic": [15, 16, 30, 87, 88, 96, 158, 160, 168, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 195, 202, 208, 211, 218, 219, 225, 234, 235, 237, 238, 239, 240, 241, 242, 247], "simulateddeviceoutput": [87, 211, 213, 216, 219], "simulateddevicer": 211, "simulateddevicereceiver": [211, 212, 214, 215], "simulateddevicerecept": [87, 88, 211, 215, 217, 219], "simulateddevicest": [18, 87, 88, 211, 219], "simulateddevicetransmiss": [87, 211, 216, 217, 219], "simulateddipol": 173, "simulateddrop": [217, 219, 222, 223, 224, 225, 226, 247], "simulatedidealantenna": [5, 118, 119, 120, 168, 170, 174, 211, 240, 241, 253, 254], "simulatedlinearantenna": 175, "simulatedpatchantenna": [168, 176], "simulateduniformarrai": [5, 118, 119, 120, 168, 170, 177, 211, 240, 241, 253], "simulaten": [112, 219, 257], "simulation_modul": 251, "simulationscenario": [16, 88, 218, 219, 247, 256], "simultan": [62, 94, 112, 194, 247, 250, 262], "sin": [37, 254], "sinc": [15, 16, 34, 38, 56, 63, 166, 168, 196, 249, 253, 258, 259, 261], "singl": [2, 3, 4, 5, 15, 25, 33, 34, 36, 37, 38, 54, 57, 62, 63, 69, 70, 71, 74, 77, 87, 94, 95, 96, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 129, 132, 133, 134, 135, 141, 150, 153, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 173, 174, 175, 176, 181, 202, 211, 217, 218, 220, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "single_carri": [15, 119], "singlecarri": [119, 240, 241], "singlecarriercorrelationsynchron": [5, 112, 113, 114, 132, 133, 134, 135, 252], "singlecarrieridealchannelestim": [118, 119, 120], "singlecarrierleastsquareschannelestim": [5, 15, 112, 113, 114, 132, 133, 134, 135, 247, 252], "singlecarrierzeroforcingchannelequ": [5, 15, 112, 113, 114, 132, 133, 134, 135, 247, 252], "singletargetradarchannel": [34, 35, 96, 150, 157, 159, 160, 161, 253, 260], "singletargetradarchannelr": 35, "singleton": 36, "singnal": 211, "singular": [123, 129, 131, 141], "sinr": [9, 18, 20, 29, 31, 32, 34], "sinusoid": [19, 25, 27, 30, 254, 262], "sionna": [36, 249], "sionna_rt_channel": 36, "sionnart": 15, "sionnartchannel": 36, "sionnartchannelr": 36, "sionnartchannelsampl": 36, "siso": [233, 243, 252], "site": 55, "situat": 262, "size": [19, 57, 69, 70, 71, 74, 77, 109, 111, 120, 139, 140, 142, 143, 211, 234, 235, 242, 258], "skip": 261, "sky": [65, 167], "sl": 10, "slant": [37, 175], "slg04": 262, "slice": [38, 63], "slope": [132, 161], "slot": [120, 121, 211, 240, 261], "sm": 240, "small": [3, 4, 10, 11, 12, 13, 14, 253], "smaller": [3, 10, 16, 27, 30, 33, 35, 37, 41, 57, 59, 62, 63, 70, 71, 74, 86, 95, 129, 130, 131, 132, 134, 141, 153, 155, 156, 161, 198, 205, 206, 207, 213, 216, 218, 224, 226, 230], "smartphon": 166, "smooth": [206, 235], "smoothness_factor": [206, 235], "snippet": [5, 15, 113, 115, 150, 168, 170, 178, 182, 189, 202, 208, 211, 220, 225, 247], "snr": [9, 10, 11, 12, 13, 14, 18, 20, 21, 23, 24, 27, 29, 30, 31, 32, 34, 41, 87, 118, 120, 160, 166, 188, 189, 211, 234, 235, 237, 238, 239, 240, 241, 242, 247, 254, 255, 259, 260, 262], "snr_dimens": 254, "so": [3, 4, 16, 25, 36, 37, 64, 120, 125, 136, 144, 145, 149, 156, 162, 168, 203, 219, 230, 247, 250, 251, 252, 253, 258, 259], "societi": [75, 262], "soft": 77, "softwar": [32, 79, 243, 247, 248, 250, 257, 260], "softwarex": [68, 72, 73, 75, 76, 78, 262], "softx": [68, 72, 73, 75, 76, 78, 262], "sold": 250, "sole": [247, 250], "solomon": [67, 262], "solut": [5, 250], "some": [2, 9, 63, 189, 232, 247, 249, 250, 259], "someth": 251, "sometim": [166, 182], "somewher": [122, 254], "sort": [57, 62, 63, 126, 130, 148, 196], "sound": [79, 81, 202, 206, 252, 262], "soundcard": 233, "sounddevic": 252, "sourc": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 248, 250, 251, 253, 262], "space": [5, 8, 15, 16, 18, 19, 20, 21, 22, 27, 31, 33, 34, 37, 54, 63, 65, 87, 92, 116, 126, 146, 149, 166, 168, 170, 177, 211, 229, 233, 234, 240, 241, 243, 254, 255, 262], "space_time_block_cod": 120, "span": [5, 130], "sparcifi": 63, "spare": 250, "spars": [15, 38, 63, 122, 152, 154, 155, 156], "sparsearrai": [38, 122], "sparsesign": 63, "sparsif": 63, "sparsifi": 63, "spatial": [1, 3, 9, 10, 11, 12, 13, 14, 15, 20, 25, 29, 33, 37, 65, 126, 211, 238, 239, 240, 241, 247, 248, 253, 254, 262], "spatial_respons": 29, "spatialdelaychannel": [5, 20, 22, 254], "spatialdelaychannelr": [20, 22], "spawn": 57, "spcifi": 219, "speak": 250, "speaker": 252, "special": [63, 250], "specic": 115, "specif": [15, 16, 34, 35, 41, 45, 55, 57, 64, 67, 77, 79, 88, 97, 126, 136, 138, 144, 145, 149, 166, 182, 189, 194, 216, 219, 230, 239, 247, 248, 250, 251, 252, 259, 261, 262], "specifi": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 36, 37, 45, 48, 51, 53, 57, 62, 63, 64, 66, 83, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 112, 113, 114, 115, 123, 129, 132, 133, 134, 135, 136, 142, 144, 145, 146, 149, 151, 161, 162, 166, 170, 171, 172, 179, 182, 183, 184, 185, 186, 189, 194, 195, 197, 205, 211, 216, 218, 219, 220, 221, 222, 223, 224, 225, 231, 240, 241, 249, 250, 253, 254, 256, 259], "specificisol": [186, 211, 260], "specifii": [5, 247, 254], "spectra": [4, 262], "spectral": [87, 149, 187, 188, 210, 211, 262], "spectrum": [3, 262], "specular": 25, "speech": 262, "speed": [77, 234, 262], "speed_of_light": [5, 253, 254], "spheric": [2, 3, 4, 33, 35, 37, 65, 153, 253, 254], "spherical_angl": 2, "spherical_phase_respons": [37, 253], "sphericalfocu": [2, 254], "sphinx": 232, "spike": 220, "spillag": 182, "spillov": 182, "spiral": 254, "spiral_arrai": 254, "spiral_port": 254, "spirit": 250, "split": [2, 39, 70], "spread": [8, 9, 25, 126, 208, 234, 240], "spring": [25, 96, 262], "sqrt": [5, 9, 25, 37, 104], "squar": [8, 24, 26, 30, 83, 97, 99, 101, 104, 150, 158, 210, 229, 230, 233, 240, 241, 243], "squarer": [118, 262], "squenc": 217, "squre": 160, "stabl": [4, 262], "stackoverflow": 231, "stadiu": [194, 262], "stage": [55, 57, 64, 109, 117, 125, 195, 205, 218, 259], "stage_argu": 57, "stage_executor": 57, "stage_identifi": 57, "staircas": 196, "stamp": 64, "stand": [57, 211], "standard": [9, 23, 25, 30, 54, 57, 70, 77, 234, 250, 262], "standardcorrel": 234, "start": [8, 11, 16, 23, 25, 30, 37, 38, 40, 54, 56, 62, 63, 87, 125, 129, 137, 138, 139, 140, 142, 143, 167, 200, 201, 210, 211, 212, 213, 215, 216, 221, 222, 223, 224, 226, 229, 236, 248, 250, 251, 256, 260], "state": [2, 8, 9, 10, 11, 12, 13, 14, 18, 20, 26, 29, 30, 31, 32, 34, 36, 37, 39, 41, 48, 51, 52, 54, 57, 60, 62, 77, 80, 84, 86, 87, 88, 89, 91, 102, 103, 104, 105, 106, 118, 119, 120, 122, 124, 125, 126, 127, 157, 159, 160, 170, 211, 219, 240, 250, 252, 255, 256, 259], "state_format": 38, "state_inform": 38, "state_r": [9, 10, 11, 12, 13, 14], "stated_symbol": 124, "statedsymbol": [113, 117, 118, 119, 120, 121, 122, 123, 125, 129, 131, 141, 259, 261], "statement": [150, 232, 249, 250], "static": [9, 21, 22, 28, 31, 32, 33, 34, 35, 38, 53, 57, 58, 63, 64, 82, 83, 87, 141, 159, 167, 211, 220, 225, 227, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "staticconsistentr": 19, "staticconsistentsampl": 19, "staticmethod": 255, "staticoper": 58, "statictrajectori": [33, 167, 211, 256], "statictrigg": [87, 211, 223], "station": [5, 166, 239, 254], "statist": [15, 23, 25, 26, 27, 28, 29, 30, 126, 189, 262], "statu": [57, 62, 250], "stbc": 120, "std": [19, 77, 262], "steer": [1, 2, 3, 4, 253, 254, 262], "steinbauer": [23, 262], "stem": [66, 195, 257], "stemcontain": 66, "stemvisu": [9, 66, 257], "step": [55, 57, 60, 67, 69, 70, 71, 77, 115, 116, 118, 119, 123, 125, 129, 132, 133, 134, 135, 162, 166, 178, 182, 189, 196, 202, 247, 249, 250, 253, 258, 261, 263], "stephan": [32, 37, 262], "steven": [126, 262], "still": [196, 220], "stochast": [15, 27], "stoica": [120, 262], "stop": [53, 57, 62, 63, 72, 129, 159, 160, 234, 235, 237, 238, 239, 240, 241, 242, 256, 262], "storag": 250, "store": [53, 57, 62, 63, 84, 86, 159, 256, 257], "str": [2, 4, 7, 9, 11, 12, 13, 14, 26, 37, 53, 54, 57, 60, 62, 63, 66, 69, 70, 71, 72, 74, 77, 84, 85, 86, 90, 91, 92, 98, 102, 103, 104, 105, 106, 112, 113, 114, 117, 122, 127, 129, 130, 132, 133, 134, 135, 142, 147, 148, 151, 152, 155, 157, 159, 160, 174, 176, 186, 187, 188, 190, 191, 196, 197, 198, 203, 205, 206, 209, 218, 257], "straight": 167, "straightforward": 99, "straightfoward": 255, "stream": [1, 2, 3, 4, 5, 15, 38, 41, 48, 54, 60, 63, 64, 70, 80, 83, 86, 97, 98, 99, 101, 102, 103, 105, 106, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 131, 136, 141, 142, 161, 165, 169, 170, 173, 179, 183, 184, 185, 242, 253, 256, 257, 259, 261], "stream_indic": 63, "streambitssourc": 98, "streamlin": 66, "streams_kei": 63, "street": [9, 13, 14], "stretch": [63, 131, 161], "strictli": [83, 247], "string": [9, 54, 57, 63, 66, 84, 102, 103, 104, 105, 106, 122, 155, 157, 159, 160], "strip": 34, "strongli": 15, "structur": [52, 54, 68, 72, 73, 75, 76, 78, 141, 144, 225, 233, 247, 253, 257], "stub": [86, 255], "student": 248, "studio": 249, "sturm": [96, 262], "style": [7, 53, 57, 236, 247, 248], "style_context": 53, "sub": [0, 39, 54, 57, 69, 84, 138, 228, 238], "subcarri": [136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 233, 238, 240, 241, 243], "subcarrier_spac": [96, 145, 146, 149, 233, 238, 240, 241, 243], "subclass": 63, "subcluster_indic": 9, "subdirectori": 53, "subdivid": 250, "subject": [5, 250], "sublicens": 250, "sublist": 212, "submit": 247, "submodul": [249, 262], "subpackag": 0, "subprogram": 250, "subroutin": [2, 3, 4, 8, 21, 22, 31, 33, 35, 162, 165, 205, 211, 253, 256], "subsect": [247, 250], "subsequ": 70, "subset": 37, "subseuent": 115, "subspac": 5, "substack": 15, "substanti": [5, 250], "subsymbol": [233, 240, 243], "success": [72, 73, 157], "sue": 250, "suffic": 250, "suffici": [57, 70], "suffix": [139, 142], "suggest": [57, 96, 98, 220], "suit": [149, 236, 247], "sum": [4, 9, 25, 34, 56, 123, 129, 131, 141, 160, 254, 257, 262], "sum_": [15, 16, 18, 25, 34, 57, 123, 129, 131, 141], "summari": [15, 250, 254], "summed_pow": 257, "superimpos": [63, 166], "superposit": [63, 210], "supplement": 250, "suppli": 57, "support": [2, 6, 23, 30, 84, 97, 106, 116, 120, 123, 129, 170, 196, 218, 228, 229, 249, 250, 251], "suppress": [146, 149], "sure": [7, 243, 249, 250], "surfac": [10, 57, 100, 102, 103, 104, 105, 106, 160, 168], "surrend": 250, "survei": [126, 262], "surviv": 250, "sustain": 250, "sweep": [10, 11, 12, 13, 14, 21, 23, 24, 27, 30, 57, 84, 157, 160, 161, 166, 218, 234, 235, 237, 238, 239, 240, 241, 242, 254, 255, 257, 259, 260], "swept": [57, 161], "switch": 254, "sy": 261, "symbol": [38, 63, 69, 75, 76, 96, 97, 99, 101, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 188, 189, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 255, 256, 257, 259, 261, 262], "symbol_cutoff": 63, "symbol_dur": [63, 107, 123, 129, 131, 141, 261], "symbol_energi": [123, 129, 131, 141, 261], "symbol_index_estim": 261, "symbol_indic": 261, "symbol_pow": 261, "symbol_precod": [117, 118, 119, 120, 121], "symbol_precoding_support": [123, 129], "symbol_r": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 102, 103, 104, 105, 106, 112, 113, 114, 115, 118, 119, 120, 131, 132, 133, 134, 135, 235, 237, 238, 239, 247, 252, 258], "symbol_sequ": 123, "symbol_typ": [123, 129], "symbolcod": 241, "symbolflipp": 259, "symbolprecod": [115, 116, 117, 118, 119, 120], "symbols_candid": 261, "symbols_per_fram": [141, 261], "symbolsect": [96, 117, 136, 143, 144, 145, 149, 255, 256, 257, 259], "symmetr": [73, 196, 262], "synchron": [5, 20, 21, 22, 89, 97, 109, 111, 112, 113, 114, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 141, 144, 145, 147, 149, 211, 221, 222, 223, 224, 225, 226, 233, 243, 247, 252, 261, 262], "synchronizatio": 211, "syndrom": 72, "synonym": 16, "synthet": 36, "syrj\u00e4l\u00e4": [194, 262], "system": [0, 2, 3, 4, 6, 7, 15, 23, 37, 39, 41, 54, 57, 59, 62, 64, 77, 79, 81, 84, 96, 97, 98, 100, 113, 115, 126, 153, 159, 166, 182, 187, 188, 189, 192, 194, 202, 206, 210, 231, 233, 236, 237, 238, 247, 249, 250, 251, 252, 254, 255, 257, 260, 262], "systemat": 76, "sytem": 65, "szw09": 262, "t": [2, 3, 4, 5, 7, 9, 15, 16, 20, 21, 22, 25, 27, 31, 34, 37, 62, 63, 68, 72, 73, 75, 76, 78, 102, 103, 104, 105, 106, 122, 126, 147, 148, 151, 166, 202, 203, 205, 206, 207, 234, 253, 254, 259, 262], "t_": [94, 95, 106, 126, 161, 162, 165, 221], "t_i": 63, "tabl": [10, 57, 178, 182, 186, 187, 188, 189, 190, 191], "tackl": 0, "tae": 262, "tag": [4, 11, 12, 13, 14, 26, 37, 54, 60, 69, 70, 71, 74, 77, 84, 90, 91, 105, 106, 112, 113, 114, 127, 129, 130, 132, 133, 134, 135, 142, 147, 148, 152, 174, 176, 196, 197, 198, 203, 206, 209], "tag_registri": 54, "tajan": [68, 72, 73, 75, 76, 78, 262], "take": [119, 250, 258], "taken": [63, 194, 249], "tal": [73, 262], "tandem": 15, "tangibl": 250, "tap": [9, 15, 18, 20, 24, 25, 27, 29, 31, 32, 34, 37, 38, 234, 247, 262], "tap_interv": 24, "target": [34, 37, 65, 96, 150, 157, 159, 160, 161, 167, 239, 247, 248, 253, 254, 260, 262], "target_azimuth": 35, "target_azimuth_vari": 35, "target_cross_sect": 35, "target_exist": [35, 260], "target_phase_vari": 35, "target_rang": [35, 239, 253, 260], "target_range_vari": 35, "target_veloc": 35, "target_velocity_vari": 35, "target_zenith": 35, "target_zenith_vari": 35, "task": 57, "tassp": 262, "tau": [9, 15, 16, 18, 20, 21, 22, 25, 27, 29, 31, 32, 34, 126], "tau_": [15, 21, 25, 27, 34], "tau_0": 15, "tcom": [202, 207, 262], "tcsi": [210, 262], "tdd": 240, "tdl": [25, 136, 144, 145, 149, 239, 240, 241, 247], "tdltype": [30, 136, 144, 145, 149, 239, 240, 241], "technic": 77, "techniqu": [120, 194, 262], "technolog": 250, "technologi": [25, 96, 262], "telecommun": [23, 77, 262], "televis": 169, "tell": 250, "templat": 57, "tempon": [57, 262], "tempor": 63, "tend": 126, "tensor": [38, 122, 151], "tensorflow": 249, "term": [69, 97, 131, 166, 189, 250], "termin": [7, 239, 249, 250, 254, 255], "terminal_oper": 239, "terrain": 23, "test": [7, 33, 34, 64, 87, 88, 159, 247], "test_instal": 232, "testb": [79, 247, 248, 260], "text": [2, 5, 15, 16, 18, 21, 22, 25, 31, 34, 54, 57, 96, 102, 103, 104, 105, 106, 126, 203, 205, 206, 210, 236], "textiobas": 54, "tfrac": [94, 95, 161, 162, 165, 247, 255], "tghe": 126, "th": [25, 34, 37, 57, 70, 136, 144, 145, 149], "than": [3, 10, 16, 21, 27, 30, 33, 35, 37, 41, 57, 59, 62, 63, 69, 70, 71, 74, 80, 86, 91, 120, 130, 131, 132, 138, 141, 144, 155, 161, 167, 169, 173, 194, 196, 205, 206, 207, 211, 212, 213, 216, 218, 219, 226, 230, 231, 250, 254], "thank": 251, "thei": [2, 6, 17, 20, 25, 34, 55, 56, 63, 64, 65, 71, 97, 98, 112, 114, 117, 118, 119, 120, 123, 131, 161, 162, 166, 169, 170, 217, 219, 225, 247, 250, 251, 252, 255, 257, 261], "them": [63, 70, 71, 86, 107, 113, 162, 170, 250, 258, 263], "themselv": 211, "theoret": [37, 123, 129, 131, 141], "theori": [73, 76, 120, 194, 262], "therefor": [9, 15, 31, 37, 56, 57, 69, 70, 71, 77, 118, 119, 120, 126, 178, 182, 247, 249, 250, 253], "therfor": [9, 18, 20, 29, 31, 32, 34, 184, 205], "thermal": 189, "thershold": 57, "theta": [3, 4, 9, 37, 253], "theta_": [9, 25, 27], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 77, 85, 86, 87, 91, 94, 96, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 196, 197, 198, 205, 208, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "thiel": [32, 37, 262], "thing": [166, 250], "think": 257, "third": [2, 3, 4, 122, 250], "thitimajshima": [78, 262], "thoma": [23, 96, 210, 262], "those": [162, 249, 250, 253], "though": [162, 166, 247, 250], "thought": 34, "thread": 166, "three": [2, 3, 4, 5, 18, 65, 120, 122, 151, 153, 158, 166, 185, 210, 247, 250, 253, 254, 259], "threshold": [57, 129, 130, 150, 154, 159, 239, 262], "thresholddetector": [150, 156, 157], "thrid": 248, "throug": 166, "through": [16, 166, 219, 250], "throughout": 40, "throughput": [97, 99, 101, 234, 248, 257], "throughputartifact": 106, "throughputevalu": [106, 234], "througput": 106, "thu": [5, 36, 63, 120, 166, 250], "tick": 57, "tick_format": 57, "tild": [69, 74, 253], "tile": [228, 258], "tile_figur": 231, "tile_offset": 231, "time": [2, 3, 4, 8, 9, 15, 16, 18, 20, 25, 27, 29, 31, 32, 33, 34, 37, 38, 51, 52, 57, 63, 64, 65, 66, 74, 82, 83, 87, 88, 92, 95, 107, 109, 111, 115, 116, 122, 123, 126, 129, 130, 131, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 162, 167, 185, 192, 202, 211, 212, 213, 215, 216, 217, 219, 220, 225, 226, 227, 233, 234, 235, 238, 240, 241, 242, 243, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 261, 262], "timeoffsettrigg": 224, "timestamp": [16, 33, 38, 52, 63, 64, 87, 109, 111, 167, 211, 217], "tit": [73, 76, 262], "titl": [0, 5, 9, 57, 63, 66, 85, 92, 98, 102, 103, 104, 105, 106, 122, 150, 151, 155, 157, 158, 159, 160, 170, 186, 187, 188, 190, 191, 205, 220, 231, 235, 247, 249, 252, 253, 254, 256, 257, 259, 260], "tk": 231, "tkagg": 231, "tl": 250, "tmtt": [194, 262], "to_arrai": [57, 159, 257], "to_dens": 63, "to_fil": 54, "to_fold": 54, "to_frequency_select": 38, "to_hdf": [8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 28, 31, 32, 33, 35, 54, 255], "to_impulse_respons": 38, "to_interleav": 63, "to_local_coordin": 65, "to_scalar": [57, 159, 160, 257], "to_spher": 65, "to_str": 54, "to_stream": 54, "to_yaml": [23, 60, 142, 218], "tobia": [248, 262], "tol": 57, "toler": [57, 70, 234, 235, 237, 238, 239, 240, 241, 242], "tolist": [33, 35, 56], "tonnelli": [68, 72, 73, 75, 76, 78, 262], "tool": [0, 32, 131, 232, 249, 250, 251, 257], "toolbox": [68, 72, 73, 75, 76, 78, 262], "topic": 166, "toplogi": 254, "topologi": [5, 37, 41, 247, 254], "total": [5, 9, 10, 168, 247], "toward": [1, 2, 3, 4, 9, 22, 37, 65, 162, 232, 247, 253, 254], "tr": [10, 30, 262], "tr_125943v130000p": [23, 262], "tr_138901v170000p": [9, 10, 11, 12, 13, 14, 30, 262], "trace": 36, "track": 167, "trade": 250, "trademark": 250, "trajectori": [33, 87, 211, 256], "trajectorysampl": [33, 167], "tranform": 37, "transact": [5, 23, 25, 32, 37, 73, 76, 120, 147, 148, 194, 202, 207, 210, 250, 262], "transfer": [68, 72, 73, 75, 76, 78, 250], "transform": [5, 9, 10, 11, 12, 13, 14, 15, 18, 22, 33, 36, 37, 38, 41, 62, 64, 65, 87, 116, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 211, 219, 230, 252, 254, 256], "transform_direct": 65, "transform_posit": 65, "transformablebas": [62, 65, 219], "transformablelink": [41, 62, 65, 219], "translat": [64, 65, 141, 167], "transmisison": 41, "transmiss": [1, 2, 5, 15, 20, 38, 41, 43, 48, 51, 52, 58, 60, 62, 64, 69, 70, 71, 74, 77, 80, 82, 86, 87, 89, 91, 94, 95, 96, 107, 112, 113, 114, 115, 116, 117, 121, 123, 125, 126, 129, 132, 133, 134, 135, 136, 144, 145, 149, 150, 162, 166, 169, 170, 173, 179, 194, 211, 213, 217, 218, 219, 234, 238, 242, 247, 248, 250, 252, 259, 261], "transmissiontyp": 51, "transmissison": 219, "transmit": [2, 4, 5, 15, 16, 18, 20, 25, 26, 29, 31, 34, 35, 36, 37, 38, 41, 43, 44, 45, 50, 51, 52, 58, 60, 62, 63, 64, 69, 70, 71, 74, 77, 79, 80, 82, 83, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 122, 123, 125, 126, 129, 131, 132, 133, 134, 135, 136, 141, 144, 145, 149, 150, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 194, 195, 205, 211, 212, 213, 215, 216, 217, 218, 219, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262], "transmit_antenna": 37, "transmit_cod": [5, 41, 253], "transmit_correl": 180, "transmit_devic": [62, 219], "transmit_focu": [2, 4, 5, 254], "transmit_imped": 180, "transmit_oper": [41, 62], "transmit_port": [37, 254], "transmit_signal_cod": [112, 114, 115], "transmit_st": 64, "transmit_stream": 38, "transmit_symbol_cod": [112, 114, 115, 116, 117, 120, 259], "transmit_topologi": 37, "transmitbeamform": [2, 4, 5, 162], "transmitcod": 60, "transmitencod": [5, 60, 117, 120, 121], "transmitencodertyp": 60, "transmitprecod": 60, "transmitprecodingtyp": 60, "transmitsignalcod": [41, 60, 115], "transmitst": [2, 60, 64], "transmitstreamcod": 115, "transmitstreamencod": [2, 5, 60], "transmitsymbolcod": [115, 116, 121], "transmitsymbolencod": [116, 117, 120, 121, 259], "transmitt": [10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 41, 45, 48, 58, 62, 77, 86, 94, 95, 96, 102, 103, 104, 105, 106, 112, 114, 115, 124, 126, 162, 166, 178, 182, 191, 194, 211, 216, 218, 219, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 254, 255], "transmitted_sign": [83, 166], "transmitted_symbol": 104, "transmitter_antenna": 18, "transmitter_index": 218, "transmitter_pos": 18, "transmitter_st": [18, 29, 34, 255], "transmitter_veloc": 18, "transmitterslot": 41, "transmittgin": 111, "transmitting_devic": [114, 158, 159, 160, 234, 239], "transmitting_modem": [100, 102, 103, 104, 105, 106, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243], "transmittingmodem": [5, 98, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115], "transmittingmodembas": [94, 95, 96, 112, 114, 115], "travel": [126, 229], "treat": [57, 250], "treati": 250, "tree": [23, 60, 142, 218], "trelli": [76, 78], "trial": [32, 262], "triangleq": 5, "trigger": [32, 55, 59, 80, 84, 86, 87, 88, 89, 91, 162, 211, 212, 213, 215, 216, 219, 220, 227, 233, 243, 247, 252], "trigger_delai": 226, "trigger_direct": [86, 87, 89], "trigger_model": [87, 211, 220, 221, 222, 223, 224, 225], "trigger_model_a": [220, 221, 222, 223, 224, 225], "trigger_model_b": [220, 221, 222, 223, 224, 225], "trigger_r": [87, 88, 211, 212, 213, 215, 216, 219], "triggermodel": [87, 211, 220, 221, 222, 223, 224, 225, 226], "triggerr": [87, 88, 211, 212, 213, 215, 216, 219, 221, 222, 223, 224, 225, 226], "troubl": 58, "true": [9, 12, 13, 14, 16, 20, 22, 33, 34, 35, 41, 48, 51, 53, 54, 57, 62, 63, 65, 68, 70, 72, 73, 75, 76, 78, 83, 84, 86, 87, 88, 89, 91, 100, 102, 103, 104, 105, 106, 123, 131, 141, 144, 146, 149, 156, 157, 159, 160, 161, 185, 186, 211, 218, 219, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 256, 260], "truncat": [70, 104], "truth": [158, 160], "ts_138211v150200p": [77, 262], "tsg": [9, 10, 11, 12, 13, 14, 30, 262], "tsp": [5, 262], "tudi": [9, 10, 11, 12, 13, 14, 30, 262], "tupl": [9, 19, 21, 29, 34, 35, 37, 56, 57, 63, 66, 83, 84, 85, 155, 170, 219, 231], "turbo": [67, 262], "turbocod": 78, "turn": [65, 98, 166, 252], "tutori": [150, 247, 248, 259, 260, 261], "tv15": 262, "twc": [23, 25, 262], "two": [2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 33, 34, 36, 37, 38, 57, 62, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 114, 118, 119, 120, 122, 123, 129, 136, 139, 142, 144, 145, 149, 159, 160, 161, 166, 167, 170, 178, 181, 182, 186, 207, 211, 219, 220, 221, 222, 223, 224, 225, 242, 247, 249, 250, 252, 254, 256, 257, 259, 260], "twt": [202, 207, 262], "tx": [9, 15, 16, 18, 20, 29, 31, 32, 34, 37, 102, 103, 104, 105, 106, 120, 166, 247, 254], "tx_devic": [114, 118, 119, 120, 136, 144, 145, 149, 247, 256, 257], "tx_gain": [91, 243], "tx_modem": 115, "tx_precod": 116, "txn": 63, "type": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 172, 173, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 238, 239, 240, 241, 243, 247, 255, 257], "typevar": [2, 9, 16, 17, 18, 20, 34, 37, 41, 44, 48, 51, 52, 54, 55, 57, 59, 60, 62, 66, 89, 123, 189], "typic": [131, 166, 247, 250, 260], "u": [5, 21, 256, 258], "ue": 5, "ue1": 5, "ue2": 5, "ue_receiver_1": 5, "ue_receiver_2": 5, "ue_receiver_3": 5, "uhd": [79, 81, 90, 91, 243, 249], "uint8": 261, "uma": 13, "umi": 14, "umt": [23, 262], "unabl": [62, 249], "unassign": [146, 149], "unavail": 66, "unbias": 86, "uncod": [234, 235, 238], "uncorrel": [19, 27, 33, 192], "under": [86, 159, 161, 166, 232, 248, 249, 250], "underli": [16, 51, 57, 159, 160], "underset": 126, "underyl": 252, "undesir": 178, "unequ": [31, 37], "unexpect": [151, 178], "unflatten": 63, "unidirect": [97, 114], "unifi": 247, "uniform": [19, 21, 37, 123, 131, 134, 166, 168, 169, 170, 196, 240, 241, 253, 254, 255], "uniform_arrai": [5, 168, 170, 254], "uniformarrai": [37, 177], "uniformli": [5, 15, 19, 21, 37, 63, 168, 170, 221, 262], "unintend": 5, "union": [41, 42, 53, 54, 56, 57, 62, 80, 86, 88, 122, 159, 213, 218, 219], "uniqu": [53, 62, 64, 123, 136, 144, 145, 149, 166, 219, 225, 226, 247], "unit": [37, 65, 94, 95, 106, 123, 129, 131, 141, 151, 161, 162, 165, 167, 198, 261], "unit_test": 232, "unitless": [123, 129, 131, 141], "unittest": 232, "univers": [23, 79, 243, 262], "unknown": [57, 66, 86, 155], "unless": [15, 250], "unlimit": 250, "unmap": [113, 123, 125, 129, 131, 141, 259, 261], "unmatchableexcept": 57, "unmodifi": 250, "unmodul": [161, 235], "unnecessari": 250, "unpack": 250, "unpackbit": 261, "unregist": 54, "until": 250, "up": [53, 57, 65, 77, 113, 115, 167, 182, 247, 248, 252, 254, 260], "updat": [16, 37, 65, 66, 85, 86, 247, 250], "update_plot": 85, "update_visu": 66, "upgrad": 232, "upper": 57, "upward": 65, "urban": [9, 23, 254], "urban_macrocel": 13, "urban_microcel": 14, "urbanmacrocel": 13, "urbanmacrocellsr": 13, "urbanmicrocel": 14, "urbanmicrocellsr": 14, "url": [4, 9, 10, 11, 12, 13, 14, 23, 30, 68, 72, 73, 75, 76, 77, 78, 202, 206, 262], "us": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 30, 31, 34, 36, 40, 41, 48, 51, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 77, 81, 83, 84, 86, 87, 89, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 113, 120, 123, 125, 129, 131, 132, 134, 136, 139, 141, 142, 144, 146, 149, 150, 155, 157, 159, 160, 161, 162, 166, 168, 169, 170, 187, 188, 189, 191, 192, 194, 208, 209, 217, 218, 221, 222, 223, 224, 225, 229, 231, 232, 238, 239, 240, 247, 249, 250, 251, 253, 256, 257, 258, 260, 261, 263], "usag": [5, 36, 63], "user": [5, 25, 34, 84, 125, 204, 211, 218, 233, 236, 243, 247, 248, 249, 250, 251, 254, 257, 259, 260], "user_equipment_devic": 254, "user_equipment_device_1": 5, "user_equipment_device_2": 5, "user_equipment_device_3": 5, "user_equipment_receiv": 254, "usernam": 251, "usrp": [79, 236, 247, 249], "usrpantenna": 91, "usrpdevic": [90, 91], "usrpsystem": [90, 243], "usual": [7, 57, 69, 71, 77, 152, 154, 156, 166, 195, 205, 247], "util": [36, 249], "v": [34, 36, 37, 68, 72, 73, 75, 76, 78, 162, 254, 262], "v17": 10, "v6": 262, "v_": [34, 161, 165], "vacuum": 229, "val": 229, "valid": [23, 60, 63, 65, 142, 218, 250, 252], "valkama": [194, 262], "valu": [2, 4, 5, 8, 9, 10, 11, 16, 21, 23, 27, 30, 37, 38, 40, 41, 54, 56, 57, 60, 62, 63, 64, 91, 102, 103, 104, 105, 106, 122, 123, 129, 130, 131, 134, 137, 138, 141, 151, 156, 157, 159, 166, 167, 196, 197, 200, 201, 202, 203, 210, 218, 229, 247, 252, 261], "value_db": 56, "value_typ": 56, "valueerorr": 161, "valueerror": [2, 3, 8, 10, 16, 21, 23, 24, 27, 30, 33, 35, 37, 38, 41, 48, 53, 54, 57, 59, 60, 62, 63, 65, 69, 70, 71, 74, 77, 80, 83, 84, 86, 87, 88, 89, 91, 95, 120, 122, 129, 130, 131, 132, 134, 138, 141, 142, 151, 153, 155, 156, 158, 159, 160, 161, 169, 170, 172, 173, 179, 183, 184, 185, 189, 190, 191, 194, 196, 198, 204, 205, 206, 207, 210, 211, 212, 213, 216, 218, 219, 226, 229], "valuerror": 8, "valuesview": 54, "valuetyp": [56, 57], "vardi": [73, 262], "vari": [57, 166, 254], "variabl": [9, 16, 19, 33, 66, 249, 261], "varianc": [3, 86, 185, 253], "variant": 25, "variou": [228, 232], "varphi_3": 210, "vat": [66, 205, 257], "vdot": 31, "vector": [2, 5, 7, 16, 19, 33, 34, 35, 37, 44, 47, 57, 63, 65, 69, 70, 71, 74, 77, 80, 97, 98, 99, 101, 123, 126, 129, 130, 131, 139, 140, 141, 142, 143, 148, 151, 153, 161, 165, 167, 203, 204, 205, 206, 207, 212, 229, 253], "vehicular": [25, 96, 262], "veloc": [15, 18, 34, 35, 64, 86, 87, 96, 150, 151, 153, 162, 167, 211, 240], "velocity_bin": 151, "velocity_resolut": 162, "veloctii": 167, "venv": [7, 249], "verbatim": 250, "verbos": [53, 218], "veri": [16, 257, 258], "versa": 195, "version": [9, 10, 11, 12, 13, 14, 23, 30, 57, 77, 194, 249, 250, 251, 262, 263], "versu": 159, "vertic": [36, 37], "vetec": [96, 262], "via": [7, 32, 38, 54, 91, 95, 218, 232, 247, 248, 249, 251, 256, 263], "vice": 195, "vicin": 239, "view": [2, 150, 232, 248, 250, 254], "viewport": 65, "vill": [194, 262], "violat": [232, 250], "virtual": [7, 10, 32, 34, 57, 166, 234, 240, 241, 242, 249, 251, 262], "virtualradartarget": 33, "visibl": [33, 250, 252], "visit": [4, 248, 262], "visual": [9, 15, 37, 38, 39, 57, 63, 79, 84, 85, 96, 99, 141, 150, 151, 155, 159, 167, 170, 201, 202, 219, 220, 234, 235, 237, 238, 239, 240, 241, 242, 247, 249, 252, 254, 256, 257, 258, 260], "visualis": 5, "visualiz": [9, 57, 63, 66, 102, 103, 104, 105, 106, 122, 155], "visualizableattribut": [9, 63, 66, 122], "visualize_far_field_pattern": 170, "visualizu": [66, 150], "vit67": 262, "vital": 126, "viterbi": 262, "vlt": 66, "void": 250, "vol": [25, 78, 262], "volker": [37, 262], "volt": [198, 205], "voltag": [197, 198, 199], "volum": [10, 25, 32, 78, 96, 178, 250, 252, 262], "von": [57, 262], "vote": 258, "vt": [57, 66, 85, 92], "vtc": [25, 96, 262], "w": [3, 4, 5, 65, 161, 165, 231, 253, 254, 257], "w_": 5, "w_1": 5, "w_k": 5, "wa": [7, 8, 9, 16, 21, 22, 27, 31, 32, 33, 35, 36, 41, 48, 52, 55, 57, 63, 109, 111, 157, 163, 167, 191, 211, 212, 217, 226, 236, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "waform": [131, 134], "wahe": [194, 262], "wai": [16, 20, 59, 60, 61, 63, 168, 249, 250], "wait": 82, "waiv": 250, "waiver": 250, "wall": 10, "want": [247, 250], "warn": [63, 82, 252], "warranti": 250, "watt": [41, 48, 51, 58, 95, 96, 113, 115, 162, 187, 188, 189, 190, 191, 192], "wave": [16, 25, 33, 34, 37, 139, 140, 142, 143, 147, 211, 229, 255], "waveform": [5, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 27, 30, 36, 37, 46, 49, 50, 69, 79, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 157, 159, 160, 161, 162, 163, 164, 166, 186, 189, 211, 220, 226, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 252, 253, 255, 256, 257, 258, 259, 260, 263], "waveform_chirp_fsk": 129, "waveform_configur": [102, 103, 104, 105, 106], "waveform_correlation_synchron": [129, 130], "waveform_single_carri": [131, 132, 133, 134, 135], "waveformtyp": [124, 125, 126], "wavelength": [5, 15, 37, 41, 168, 211, 254], "wavenumb": [3, 262], "wavform": [113, 115, 141, 235], "we": [150, 162, 166, 220, 234, 235, 237, 238, 239, 240, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "web": [232, 250], "websit": 232, "weight": [3, 4, 5, 34, 38, 169, 173, 174, 175, 176, 253], "welcom": 248, "well": [1, 15, 34, 52, 67, 70, 79, 97, 117, 118, 119, 121, 125, 129, 132, 133, 134, 135, 149, 158, 170, 217, 232, 239, 250, 255, 260], "were": [122, 142, 250], "werner": [96, 262], "wh": [161, 165], "what": [15, 250, 256, 257], "whatev": 250, "wheel": 249, "when": [5, 9, 10, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 56, 57, 63, 72, 108, 109, 110, 111, 125, 126, 162, 165, 166, 168, 170, 189, 225, 247, 249, 250, 252, 253, 254, 261], "whenev": [37, 38], "where": [3, 4, 5, 21, 33, 34, 37, 57, 62, 63, 70, 83, 87, 151, 161, 165, 185, 206, 207, 210, 211, 221, 230, 250, 253, 254], "wherea": 5, "whether": [57, 87, 91, 157, 250, 254], "which": [8, 9, 15, 16, 19, 21, 22, 27, 31, 32, 33, 34, 35, 38, 41, 43, 48, 52, 53, 54, 57, 61, 62, 63, 65, 66, 69, 70, 80, 82, 83, 84, 86, 87, 91, 92, 93, 98, 99, 103, 105, 106, 109, 111, 123, 129, 130, 131, 134, 136, 142, 144, 145, 146, 147, 149, 158, 166, 167, 168, 179, 183, 187, 188, 189, 191, 193, 196, 197, 205, 208, 209, 210, 211, 212, 215, 217, 218, 219, 226, 230, 232, 234, 235, 237, 238, 239, 240, 241, 242, 247, 250, 253, 254, 255, 256, 258, 259, 260], "while": [2, 5, 34, 51, 70, 94, 189, 247, 251, 257, 259], "white": [87, 189, 192, 193, 210, 211, 261], "whittak": 16, "who": [249, 250], "whole": [57, 63, 70, 100, 157, 158, 160, 196, 247, 250], "whom": 250, "whose": [57, 99, 100, 157, 158, 160, 250], "why": 257, "wich": 211, "wide": [160, 250], "wideband": [25, 262], "widehat": 125, "widespread": 250, "width": 63, "wiesbeck": [96, 262], "wifi": 166, "wiki": 194, "wikipedia": 194, "wil": 197, "wille": 170, "window": [7, 249, 250], "wipo": 250, "wireless": [0, 5, 15, 16, 17, 18, 23, 25, 38, 39, 77, 107, 112, 113, 115, 120, 124, 125, 126, 127, 189, 194, 217, 218, 219, 220, 236, 247, 248, 255, 257, 262], "wise": [69, 74], "wish": 250, "within": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 52, 54, 55, 56, 57, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 86, 87, 88, 92, 102, 103, 104, 105, 106, 113, 115, 116, 120, 122, 123, 125, 126, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 155, 157, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 181, 182, 185, 202, 209, 211, 217, 218, 219, 220, 225, 226, 227, 232, 234, 235, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261], "without": [38, 86, 130, 166, 184, 211, 236, 247, 250, 256], "won": [15, 166], "word": [57, 69, 70, 71, 74, 77, 139, 141, 142, 143, 205, 233, 234, 238, 240, 241, 242, 243, 247, 259], "words_per_fram": 141, "work": [7, 63, 247, 250, 253, 254, 263], "worker": [57, 257], "workflow": [251, 255, 257], "workload": [57, 257], "workspac": 256, "world": [5, 247, 260], "worldwid": 250, "would": [36, 157, 159, 160, 161, 250, 258], "wrap": [18, 57], "wrapper": [2, 37, 48, 51, 68, 72, 73, 75, 76, 78, 107, 172, 211], "write": [53, 57, 63, 218, 250], "written": [34, 232, 250], "wrong": 69, "www": [4, 9, 10, 11, 12, 13, 14, 23, 30, 68, 72, 73, 75, 76, 77, 78, 250, 262], "x": [2, 3, 4, 15, 16, 18, 37, 38, 57, 63, 65, 69, 74, 123, 126, 129, 130, 131, 138, 139, 141, 142, 148, 168, 170, 177, 194, 196, 205, 206, 229, 231, 233, 238, 240, 241, 243, 254], "x_": [69, 74], "x_1": [69, 74], "x_2": [69, 74], "x_m": [57, 102, 103, 104, 105, 106, 157, 159, 160], "xiao": [25, 262], "xpr_phase": 8, "xzb06": 262, "y": [2, 15, 16, 18, 37, 65, 69, 74, 168, 170, 177, 231, 253, 254], "y_": [69, 74], "y_1": [69, 74], "y_2": [69, 74], "y_axis_limit": 92, "y_k": [69, 74], "yahong": [25, 262], "yaml": [4, 11, 12, 13, 14, 23, 26, 37, 54, 60, 69, 70, 71, 74, 77, 84, 90, 91, 105, 106, 112, 113, 114, 127, 129, 130, 132, 133, 134, 135, 142, 147, 148, 152, 174, 176, 196, 197, 198, 203, 206, 209, 218, 236, 247, 248], "yaml_tag": [4, 11, 12, 13, 14, 26, 37, 60, 62, 69, 70, 71, 74, 77, 81, 84, 90, 91, 105, 106, 112, 113, 114, 127, 129, 130, 132, 133, 134, 135, 142, 147, 148, 152, 174, 176, 196, 197, 198, 203, 206, 209, 219], "yaw": 65, "ybo": 262, "ye": [97, 123, 128], "year": [126, 250, 262], "yet": 16, "yield": 235, "yml": [7, 54], "you": [7, 63, 243, 249, 250, 252, 257, 263], "your": [7, 232, 236, 247, 248, 249, 250, 251], "yourself": [250, 263], "yu": [25, 262], "z": [37, 65, 177, 254], "zar10": 262, "zarrifi": [5, 262], "zeeshan": [194, 262], "zenith": [2, 3, 4, 9, 35, 37, 65, 151, 153, 253], "zenith_arrival_spread": 9, "zenith_departure_spread": 9, "zenith_of_arriv": 9, "zenith_of_departur": 9, "zero": [3, 9, 10, 12, 13, 14, 15, 16, 27, 30, 31, 33, 35, 36, 37, 38, 41, 51, 57, 62, 63, 70, 71, 80, 82, 83, 86, 87, 91, 95, 102, 103, 105, 106, 129, 130, 131, 132, 133, 134, 135, 138, 144, 146, 149, 151, 153, 155, 156, 161, 185, 186, 192, 194, 196, 198, 205, 207, 211, 213, 216, 218, 219, 226, 229, 233, 237, 238, 241, 243, 255], "zeroforcingchannelequ": [127, 136, 144, 145, 149, 255, 256], "zeropad": 138, "zeros_lik": [27, 257], "zeta": [16, 37], "zf": [127, 233, 235, 238, 239, 240, 241, 243, 255], "zheng": [25, 262], "zip": 249, "zirath": [210, 262], "zoa": 9, "zod": 9, "zwick": [23, 96, 262], "\u00e5": [57, 262], "\u00fa": [57, 262]}, "titles": ["HermesPy API", "Beamforming", "Beamformer", "Capon Beamformer", "Conventional Beamformer", "Null Steering Beamformer", "Entry Points", "Hermes Command Line Interface", "Static CDL", "3GPP Cluster Delay Line Models", "Indoor Factory", "Indoor Office", "Rural Macrocells", "Urban Macrocells", "Urban Microcells", "Channel Modeling", "Channel", "Channel Realization", "Channel Sample", "Spatial Consistency", "Delay Channels", "Random Delay Channel", "Spatial Delay Channel", "Cost 259", "Exponential", "Multipath Fading", "Antenna Correlation", "Multipath Fading Channel", "Multipath Fading Realization", "Multipath Fading Sample", "5G TDL", "Ideal Channel", "Quadriga", "Multi Target", "Radar Channels", "Single Target", "SionnaRT Channel", "Antenna Descriptions", "Channel State Information", "Core", "General Definitions", "Device Model", "Device Input", "Device Output", "Device Reception", "Device Transmission", "Operation Result", "Processed Device Input", "Receiver", "Reception", "Transmission", "Transmitter", "Drop", "Executable", "Serialization Factory", "Hooks", "Logarithmics", "PyMonte", "Extra Operators", "Pipeline", "Precoding", "Random Graph", "Wireless Scenario", "Signal", "State", "Coordinate System", "Visualization", "Error Correction", "BCH Coding", "Interleaving", "Coding Pipeline", "Cyclic Redundancy Checks", "Low Differential Parity Checks", "Polar Coding", "Repetition Coding", "Reed-Solomon Coding", "RSC Coding", "Scrambling", "Turbo Coding", "Hardware Loop", "Audio Device", "Audio Scenario", "Delay Calibration", "Leakage Calibration", "Hardaware Loop", "Hardware Loop Plot", "Physical Device", "Physical Device Dummy", "Physical Scenario Dummy", "Physical Scenario", "USRP System", "USRP Device", "Visualizers", "JCAS", "Duplex JCAS Operator", "Matched Filtering", "OFDM Radar", "Communication", "Bit Sources", "Evaluators", "Communication Evaluator", "&lt;no title&gt;", "Bit Error Rate", "Block Error Rate", "Error Vector Magnitude", "Frame Error Rate", "Throughput", "Base Modem", "Reception", "Reception Frame", "Transmission", "Transmission Frame", "Duplex Modem", "Receiving Modem", "Simplex Link", "Transmitting Modem", "Communication Precoding", "Discrete Fourier Transform", "Maximal Ratio Combining", "Single Carrier Decoding", "Space-Time Block Codes", "Symbol Precoding", "Symbols", "Waveforms", "Channel Equalization", "Channel Estimation", "Synchronization", "Zero-Forcing", "&lt;no title&gt;", "C-FSK", "Correlation", "Single Carrier", "FMCW", "Raised Cosine", "Rectangular", "Root Raised Cosine", "Orthogonal", "Grid Element", "Resource", "Section", "Guard Section", "Waveform", "Pilot Section", "Symbol Section", "OCDM", "OFDM", "OFDM Waveform", "Schmidl Cox Pilot", "Schmidl Cox Synchronization", "OTFS", "Sensing", "Radar Cube", "Max", "Point Detection", "Radar Detector", "Radar Point Cloud", "Threshold", "Detection Probability Evaluator", "Radar Evaluator", "Reiver Operating Characteristic", "Root Mean Square Error", "FMCW", "Radar", "Radar Reception", "Radar Transmission", "Radar Waveform", "Simulation", "Animation", "Antennas", "Antenna", "Antenna Arrays", "Antenna Port", "Custom Array", "Dipole", "Ideal Isotropic", "Linear", "Patch", "Uniform Array", "Mutual Coupling", "Coupling", "Impedance Coupling", "Perfect Coupling", "Isolation", "Isolation", "Perfect Isolation", "Selective Leakage", "Specific Isolation", "EBN0", "ESN0", "Noise", "N0", "SNR", "AWGN Model", "AWGN Realization", "Radio-Frequency Chain", "A/D Conversion", "Analog Digital Converter", "Automatic Gain Control", "Constant Gain", "Gain Control Base", "Gain Control Type", "Quantizer Type", "Amplification", "Clipping Power Amplifier", "Custom Power Amplifier", "Power Amplifier", "Rapp Power Amplifier", "Saleh Power Amplifier", "Phase Noise", "No Phase Noise", "Oscillator Phase Noise", "Devices", "Processed Input", "Device Output", "Receive Realization", "Device Reception", "Device Transmission", "Simulated Drop", "Simulation", "Simulation Scenario", "Synchronization", "Random Trigger", "Sample Offset Trigger", "Static Trigger", "Time Offset Trigger", "Trigger Model", "Trigger Realization", "&lt;no title&gt;", "Tools", "Math Tools", "Resampling Routines", "Tile Figures", "For Developers", "Audio Hardware Binding", "Chirp FSK LORA", "Chirp QAM", "Configuration Examples", "Hardware Modeling", "OFDM Interference", "JCAS", "OFDM 5G", "OFDM Single Carrier", "Operator Separation", "USRP Hardware Driver", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Getting Started", "HermesPy", "Installation", "License", "Matlab", "Using Audio Equipment", "Implementing Beamformers", "Using Beamformers", "Implementing Channels", "Recording Datasets", "Implementing Evaluators", "Implementing FEC codings", "Implementing Precodings", "Receiver Operating Characteristics", "Implementing Communication Waveforms", "References", "Tutorials"], "titleterms": {"259": 23, "3gpp": 9, "5g": [30, 240], "A": 195, "For": 232, "No": 209, "amplif": 202, "amplifi": [203, 204, 205, 206, 207], "analog": 196, "anim": 167, "antenna": [26, 37, 168, 169, 170, 171], "api": 0, "architectur": 247, "argument": 7, "arrai": [170, 172, 177], "audio": [80, 81, 233, 252], "automat": 197, "awgn": [192, 193], "base": [107, 199], "bch": 68, "beamform": [1, 2, 3, 4, 5, 253, 254], "bind": 233, "bit": [98, 102], "block": [103, 120], "c": 129, "calibr": [82, 83], "capon": 3, "carrier": [119, 131, 241], "cdl": 8, "chain": 194, "channel": [15, 16, 17, 18, 20, 21, 22, 27, 31, 34, 36, 38, 124, 125, 255], "characterist": [159, 260], "check": [71, 72, 232], "chirp": [234, 235], "cli": 7, "clip": 203, "cloud": 155, "cluster": 9, "code": [68, 70, 73, 74, 75, 76, 78, 120, 232, 258], "combin": 118, "command": 7, "commun": [97, 100, 116, 261], "configur": 236, "consist": 19, "constant": 198, "control": [197, 199, 200], "convent": 4, "convers": 195, "convert": 196, "coordin": 65, "core": 39, "correct": 67, "correl": [26, 130], "cosin": [133, 135], "cost": 23, "coupl": [178, 179, 180, 181], "cox": [147, 148], "cube": 151, "custom": [172, 204], "cyclic": 71, "d": 195, "dataset": 256, "decod": 119, "definit": 40, "delai": [9, 20, 21, 22, 82], "descript": 37, "detect": [153, 157], "detector": 154, "develop": 232, "devic": [41, 42, 43, 44, 45, 47, 80, 86, 87, 91, 211, 213, 215, 216], "differenti": 72, "digit": 196, "dipol": 173, "discret": 117, "document": 232, "driver": 243, "drop": [52, 217], "dummi": [87, 88], "duplex": [94, 112], "ebn0": 187, "element": 137, "entri": 6, "equal": 124, "equip": 252, "error": [67, 102, 103, 104, 105, 160], "esn0": 188, "estim": 125, "evalu": [99, 100, 157, 158, 257], "exampl": 236, "execut": 53, "exponenti": 24, "extra": 58, "factori": [10, 54], "fade": [25, 27, 28, 29], "featur": 249, "fec": 258, "figur": 231, "filter": 95, "fmcw": [132, 161], "forc": 127, "fourier": 117, "frame": [105, 109, 111], "frequenc": 194, "from": 249, "fsk": [129, 234], "gain": [197, 198, 199, 200], "gener": 40, "get": 247, "graph": 61, "grid": 137, "guard": 140, "hardawar": 84, "hardwar": [79, 85, 233, 237, 243, 247], "herm": 7, "hermespi": [0, 247, 248], "hook": 55, "ideal": [31, 174], "imped": 180, "implement": [253, 255, 257, 258, 259, 261], "indoor": [10, 11], "inform": 38, "input": [42, 47, 212], "instal": 249, "interfac": 7, "interfer": 238, "interleav": 69, "isol": [182, 183, 184, 186], "isotrop": 174, "jca": [93, 94, 239], "leakag": [83, 185], "licens": 250, "line": [7, 9], "linear": 175, "link": 114, "logarithm": 56, "loop": [79, 84, 85, 247], "lora": 234, "low": 72, "macrocel": [12, 13], "magnitud": 104, "match": 95, "math": 229, "matlab": 251, "max": 152, "maxim": 118, "mean": 160, "microcel": 14, "model": [9, 15, 41, 192, 225, 237], "modem": [107, 112, 113, 115], "multi": 33, "multipath": [25, 27, 28, 29], "mutual": 178, "n0": 190, "nois": [189, 208, 209, 210], "null": 5, "ocdm": 144, "ofdm": [96, 145, 146, 238, 240, 241], "offic": 11, "offset": [222, 224], "oper": [46, 58, 94, 159, 242, 260], "option": [7, 249], "orthogon": 136, "oscil": 210, "otf": 149, "output": [43, 213], "pariti": 72, "patch": 176, "perfect": [181, 184], "phase": [208, 209, 210], "physic": [86, 87, 88, 89], "pilot": [142, 147], "pipelin": [59, 70], "plot": 85, "point": [6, 153, 155], "polar": 73, "port": 171, "power": [203, 204, 205, 206, 207], "precod": [60, 116, 121, 259], "probabl": 157, "process": [47, 212], "properti": [132, 133, 134, 135], "puls": [132, 133, 134, 135], "pymont": 57, "pypi": 249, "qam": 235, "quadriga": [32, 249], "quantiz": 201, "radar": [34, 96, 151, 154, 155, 158, 162, 163, 164, 165], "radio": 194, "rais": [133, 135], "random": [21, 61, 221], "rapp": 206, "rate": [102, 103, 105], "ratio": 118, "realiz": [17, 28, 193, 214, 226], "receiv": [48, 113, 214, 260], "recept": [44, 49, 108, 109, 163, 215], "record": 256, "rectangular": 134, "redund": 71, "reed": 75, "refer": 262, "reiver": 159, "repetit": 74, "resampl": 230, "resourc": 138, "result": 46, "root": [135, 160], "routin": 230, "rsc": 76, "rural": 12, "saleh": 207, "sampl": [18, 29, 222], "scenario": [62, 81, 88, 89, 219], "schmidl": [147, 148], "scrambl": 77, "section": [139, 140, 142, 143], "select": 185, "sens": 150, "separ": 242, "serial": 54, "signal": 63, "simplex": 114, "simul": [166, 217, 218, 219, 247], "singl": [35, 119, 131, 241], "sionnart": 36, "snr": 191, "solomon": 75, "sourc": [98, 249], "space": 120, "spatial": [19, 22], "specif": 186, "squar": 160, "start": 247, "state": [38, 64], "static": [8, 223], "steer": 5, "style": 232, "symbol": [121, 122, 143], "synchron": [126, 148, 220], "system": [65, 90], "target": [33, 35], "tdl": 30, "test": 232, "threshold": 156, "throughput": 106, "tile": 231, "time": [120, 224], "tool": [228, 229], "trajectori": 167, "transform": 117, "transmiss": [45, 50, 110, 111, 164, 216], "transmit": 115, "transmitt": 51, "trigger": [221, 222, 223, 224, 225, 226], "turbo": 78, "tutori": 263, "type": [167, 200, 201, 232], "uniform": 177, "unit": 232, "urban": [13, 14], "us": [252, 254], "usrp": [90, 91, 243], "vector": 104, "visual": [66, 92], "waveform": [123, 141, 146, 165, 261], "wireless": 62, "zero": 127}})