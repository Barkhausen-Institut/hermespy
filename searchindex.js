Search.setIndex({"alltitles": {"3GPP Cluster Delay Line Models": [[8, "gpp-cluster-delay-line-models"]], "5G TDL": [[29, "g-tdl"]], "A/D Conversion": [[196, "a-d-conversion"]], "AWGN Model": [[193, "awgn-model"]], "AWGN Realization": [[194, "awgn-realization"]], "Amplification": [[203, "amplification"]], "Analog Digital Converter": [[197, "analog-digital-converter"]], "Animation": [[168, "animation"]], "Antenna": [[170, "antenna"]], "Antenna Arrays": [[171, "antenna-arrays"]], "Antenna Configuration": [[36, "antenna-configuration"]], "Antenna Correlation": [[25, "antenna-correlation"]], "Antenna Descriptions": [[36, "module-hermespy.core.antennas"]], "Antenna Port": [[172, "antenna-port"]], "Antennas": [[169, "antennas"]], "Audio Device": [[76, "audio-device"]], "Audio Hardware Binding": [[234, "audio-hardware-binding"]], "Audio Scenario": [[77, "audio-scenario"]], "Automatic Gain Control": [[198, "automatic-gain-control"]], "BCH Coding": [[64, "bch-coding"]], "Base Modem": [[103, "base-modem"]], "Beamformer": [[2, "beamformer"]], "Beamforming": [[1, "beamforming"]], "Bit Error Rate": [[98, "bit-error-rate"]], "Bit Sources": [[94, "bit-sources"]], "Block Error Rate": [[99, "block-error-rate"]], "C-FSK": [[127, "c-fsk"]], "CLI Argument Options": [[6, "id1"]], "Capon Beamformer": [[3, "capon-beamformer"]], "Channel": [[15, "channel"]], "Channel Equalization": [[122, "channel-equalization"]], "Channel Estimation": [[123, "channel-estimation"]], "Channel Modeling": [[14, "channel-modeling"]], "Channel Realization": [[16, "channel-realization"]], "Channel Sample": [[17, "channel-sample"]], "Channel State Information": [[37, "channel-state-information"]], "Chirp FSK LORA": [[235, "chirp-fsk-lora"]], "Chirp QAM": [[236, "chirp-qam"]], "Clipping Power Amplifier": [[204, "clipping-power-amplifier"]], "Coding Pipeline": [[66, "coding-pipeline"]], "Coding Style": [[233, "coding-style"]], "Communication": [[93, "communication"]], "Communication Evaluator": [[96, "communication-evaluator"]], "Communication Precoding": [[112, "communication-precoding"]], "Configuration Examples": [[237, "configuration-examples"]], "Constant Gain": [[199, "constant-gain"]], "Conventional Beamformer": [[4, "conventional-beamformer"]], "Coordinate System Transformations": [[61, "coordinate-system-transformations"]], "Core": [[35, "core"]], "Correlation": [[128, "correlation"]], "Cost 259": [[22, "cost-259"]], "Coupling": [[180, "coupling"]], "Custom Array": [[173, "custom-array"]], "Custom Power Amplifier": [[205, "custom-power-amplifier"]], "Cyclic Redundancy Checks": [[67, "cyclic-redundancy-checks"]], "Delay Calibration": [[78, "delay-calibration"]], "Delay Channels": [[19, "delay-channels"]], "Detection Probability Evaluator": [[158, "detection-probability-evaluator"]], "Device": [[39, "device"]], "Device Input": [[40, "device-input"]], "Device Output": [[41, "device-output"], [214, "device-output"]], "Device Reception": [[42, "device-reception"], [216, "device-reception"]], "Device Transmission": [[43, "device-transmission"], [217, "device-transmission"]], "Devices": [[212, "devices"]], "Dipole": [[174, "dipole"]], "Discrete Fourier Transform": [[113, "discrete-fourier-transform"]], "Documentation": [[233, "documentation"]], "Drop": [[50, "drop"]], "Duplex JCAS Operator": [[90, "duplex-jcas-operator"]], "Duplex Modem": [[108, "duplex-modem"]], "Duplex Operation": [[51, "duplex-operation"]], "EBN0": [[188, "ebn0"]], "ESN0": [[189, "esn0"]], "Entry Points": [[5, "entry-points"]], "Error Correction": [[63, "error-correction"]], "Error Vector Magnitude": [[100, "error-vector-magnitude"]], "Evaluators": [[95, "evaluators"]], "Executable": [[52, "executable"]], "Exponential": [[23, "exponential"]], "Extra Operators": [[56, "extra-operators"]], "FMCW": [[130, "fmcw"], [162, "fmcw"]], "For Developers": [[233, "for-developers"]], "Frame Error Rate": [[101, "frame-error-rate"]], "Gain Control Base": [[200, "gain-control-base"]], "Gain Control Type": [[201, "gain-control-type"]], "General Definitions": [[38, "general-definitions"]], "Getting Started": [[248, "getting-started"]], "Grid Element": [[135, "grid-element"]], "Guard Section": [[138, "guard-section"]], "Hardaware Loop": [[80, "hardaware-loop"]], "Hardware Loop": [[75, "hardware-loop"], [248, "hardware-loop"]], "Hardware Loop Plot": [[81, "hardware-loop-plot"]], "Hardware Modeling": [[238, "hardware-modeling"]], "Hermes Command Line Interface": [[6, "hermes-command-line-interface"]], "HermesPy": [[249, "hermespy"]], "HermesPy API": [[0, "hermespy-api"]], "HermesPy Architecture": [[248, "hermespy-architecture"]], "Ideal Channel": [[30, "ideal-channel"]], "Ideal Isotropic": [[175, "ideal-isotropic"]], "Impedance Coupling": [[181, "impedance-coupling"]], "Implementing Beamformers": [[254, "Implementing-Beamformers"]], "Implementing Channels": [[256, "Implementing-Channels"]], "Implementing Communication Waveforms": [[262, "Implementing-Communication-Waveforms"]], "Implementing Evaluators": [[258, "Implementing-Evaluators"]], "Implementing FEC codings": [[259, "Implementing-FEC-codings"]], "Implementing Precodings": [[260, "Implementing-Precodings"]], "Indoor Factory": [[9, "indoor-factory"]], "Indoor Office": [[10, "indoor-office"]], "Install Quadriga": [[250, "install-quadriga"]], "Install from PyPi": [[250, "install-from-pypi"]], "Install from Source": [[250, "install-from-source"]], "Installation": [[250, "installation"]], "Installation Routine": [[250, "installation-routine"]], "Interleaving": [[65, "interleaving"]], "Isolation": [[183, "isolation"], [184, "isolation"]], "JCAS": [[89, "jcas"], [240, "jcas"]], "Leakage Calibration": [[79, "leakage-calibration"]], "License": [[251, "license"]], "Linear": [[176, "linear"]], "Logarithmics": [[54, "logarithmics"]], "Low Differential Parity Checks": [[68, "low-differential-parity-checks"]], "Matched Filtering": [[91, "matched-filtering"]], "Math Tools": [[230, "math-tools"]], "Matlab": [[252, "matlab"]], "Max": [[153, "max"]], "Maximal Ratio Combining": [[114, "maximal-ratio-combining"]], "Module Content:": [[148, null]], "Multi Target": [[32, "multi-target"]], "Multipath Fading": [[24, "multipath-fading"]], "Multipath Fading Channel": [[26, "multipath-fading-channel"]], "Multipath Fading Realization": [[27, "multipath-fading-realization"]], "Multipath Fading Sample": [[28, "multipath-fading-sample"]], "Mutual Coupling": [[179, "mutual-coupling"]], "N0": [[191, "n0"]], "No Phase Noise": [[210, "no-phase-noise"]], "Noise": [[190, "noise"]], "OCDM": [[142, "ocdm"]], "OFDM": [[143, "ofdm"]], "OFDM 5G": [[241, "ofdm-5g"]], "OFDM Interference": [[239, "ofdm-interference"]], "OFDM Radar": [[92, "ofdm-radar"]], "OFDM Single Carrier": [[242, "ofdm-single-carrier"]], "OFDM Waveform": [[144, "ofdm-waveform"]], "OTFS": [[147, "otfs"]], "Operation Result": [[44, "operation-result"]], "Operator Separation": [[243, "operator-separation"]], "Optional Features": [[250, "id2"]], "Orthogonal": [[134, "orthogonal"]], "Oscillator Phase Noise": [[211, "oscillator-phase-noise"]], "Patch": [[177, "patch"]], "Perfect Coupling": [[182, "perfect-coupling"]], "Perfect Isolation": [[185, "perfect-isolation"]], "Phase Noise": [[209, "phase-noise"]], "Physical Device": [[82, "physical-device"]], "Physical Device Dummy": [[83, "physical-device-dummy"]], "Physical Scenario": [[85, "physical-scenario"]], "Physical Scenario Dummy": [[84, "physical-scenario-dummy"]], "Pilot Section": [[140, "pilot-section"]], "Pipeline": [[57, "pipeline"]], "Point Detection": [[154, "point-detection"]], "Polar Coding": [[69, "polar-coding"]], "Power Amplifier": [[206, "power-amplifier"]], "Precoding": [[148, "precoding"]], "Precoding Configuration": [[149, "precoding-configuration"]], "Processed Device Input": [[45, "processed-device-input"]], "Processed Input": [[213, "processed-input"]], "Pulse Properties": [[130, "id1"], [131, "id1"], [132, "id1"], [133, "id1"]], "PyMonte": [[55, "pymonte"]], "Quadriga": [[31, "quadriga"]], "Quantizer Type": [[202, "quantizer-type"]], "RSC Coding": [[72, "rsc-coding"]], "Radar": [[163, "radar"]], "Radar Channels": [[33, "radar-channels"]], "Radar Cube": [[152, "radar-cube"]], "Radar Detector": [[155, "radar-detector"]], "Radar Evaluator": [[159, "radar-evaluator"]], "Radar Point Cloud": [[156, "radar-point-cloud"]], "Radar Reception": [[164, "radar-reception"]], "Radar Transmission": [[165, "radar-transmission"]], "Radar Waveform": [[166, "radar-waveform"]], "Radio-Frequency Chain": [[195, "radio-frequency-chain"]], "Raised Cosine": [[131, "raised-cosine"]], "Random Delay Channel": [[20, "random-delay-channel"]], "Random Graph": [[58, "random-graph"]], "Random Trigger": [[222, "random-trigger"]], "Rapp Power Amplifier": [[207, "rapp-power-amplifier"]], "Receive Realization": [[215, "receive-realization"]], "Receiver": [[46, "receiver"]], "Receiver Operating Characteristics": [[261, "Receiver-Operating-Characteristics"]], "Receiving Modem": [[109, "receiving-modem"]], "Reception": [[47, "reception"], [104, "reception"]], "Reception Frame": [[105, "reception-frame"]], "Recording Datasets": [[257, "Recording-Datasets"]], "Rectangular": [[132, "rectangular"]], "Reed-Solomon Coding": [[71, "reed-solomon-coding"]], "References": [[263, "references"]], "Reiver Operating Characteristic": [[160, "reiver-operating-characteristic"]], "Repetition Coding": [[70, "repetition-coding"]], "Resampling Routines": [[231, "resampling-routines"]], "Resource": [[136, "resource"]], "Root Mean Square Error": [[161, "root-mean-square-error"]], "Root Raised Cosine": [[133, "root-raised-cosine"]], "Rural Macrocells": [[11, "rural-macrocells"]], "SNR": [[192, "snr"]], "Saleh Power Amplifier": [[208, "saleh-power-amplifier"]], "Sample Offset Trigger": [[223, "sample-offset-trigger"]], "Schmidl Cox Pilot": [[145, "schmidl-cox-pilot"]], "Schmidl Cox Synchronization": [[146, "schmidl-cox-synchronization"]], "Scrambling": [[73, "scrambling"]], "Section": [[137, "section"]], "Selective Leakage": [[186, "selective-leakage"]], "Sensing": [[151, "sensing"]], "Serialization Factory": [[53, "serialization-factory"]], "Signal": [[60, "signal"]], "Simplex Link": [[110, "simplex-link"]], "Simulated Drop": [[218, "simulated-drop"]], "Simulation": [[167, "simulation"], [219, "simulation"]], "Simulation Scenario": [[220, "simulation-scenario"]], "Simulations": [[248, "simulations"]], "Single Carrier": [[129, "single-carrier"]], "Single Carrier Decoding": [[115, "single-carrier-decoding"]], "Single Target": [[34, "single-target"]], "Space-Time Block Codes": [[116, "space-time-block-codes"]], "Spatial Consistency": [[18, "spatial-consistency"]], "Spatial Delay Channel": [[21, "spatial-delay-channel"]], "Spatial Multiplexing": [[117, "spatial-multiplexing"]], "Specific Isolation": [[187, "specific-isolation"]], "Static CDL": [[7, "static-cdl"]], "Static Trigger": [[224, "static-trigger"]], "Stream Precoding": [[150, "stream-precoding"]], "Symbol Precoder": [[118, "symbol-precoder"]], "Symbol Precoding": [[119, "symbol-precoding"]], "Symbol Section": [[141, "symbol-section"]], "Symbols": [[120, "symbols"]], "Synchronization": [[124, "synchronization"], [221, "synchronization"]], "Threshold": [[157, "threshold"]], "Throughput": [[102, "throughput"]], "Tile Figures": [[232, "tile-figures"]], "Time Offset Trigger": [[225, "time-offset-trigger"]], "Tools": [[229, "tools"]], "Trajectory Types": [[168, "id1"]], "Transmission": [[48, "transmission"], [106, "transmission"]], "Transmission Frame": [[107, "transmission-frame"]], "Transmitter": [[49, "transmitter"]], "Transmitting Modem": [[111, "transmitting-modem"]], "Trigger Model": [[226, "trigger-model"]], "Trigger Realization": [[227, "trigger-realization"]], "Turbo Coding": [[74, "turbo-coding"]], "Tutorials": [[264, "tutorials"]], "Type Checking": [[233, "type-checking"]], "USRP Device": [[87, "usrp-device"]], "USRP Hardware Driver": [[244, "usrp-hardware-driver"]], "USRP System": [[86, "usrp-system"]], "Uniform Array": [[178, "uniform-array"]], "Unit Testing": [[233, "unit-testing"]], "Urban Macrocells": [[12, "urban-macrocells"]], "Urban Microcells": [[13, "urban-microcells"]], "Using Audio Equipment": [[253, "Using-Audio-Equipment"]], "Using Beamformers": [[255, "Using-Beamformers"]], "Visualization": [[62, "visualization"]], "Visualizers": [[88, "visualizers"]], "Waveform": [[139, "waveform"]], "Waveforms": [[121, "waveforms"]], "Wireless Scenario": [[59, "wireless-scenario"]], "Zero-Forcing": [[125, "zero-forcing"]]}, "docnames": ["api/api", "api/beamforming", "api/beamforming.beamformer", "api/beamforming.capon", "api/beamforming.conventional", "api/bin", "api/bin.hermes", "api/channel/cdl/cdl", "api/channel/cdl/cluster_delay_lines", "api/channel/cdl/indoor_factory", "api/channel/cdl/indoor_office", "api/channel/cdl/rural_macrocells", "api/channel/cdl/urban_macrocells", "api/channel/cdl/urban_microcells", "api/channel/channel", "api/channel/channel.Channel", "api/channel/channel.ChannelRealization", "api/channel/channel.ChannelSample", "api/channel/consistent", "api/channel/delay/delay", "api/channel/delay/random", "api/channel/delay/spatial", "api/channel/fading/cost259", "api/channel/fading/exponential", "api/channel/fading/fading", "api/channel/fading/fading.AntennaCorrelation", "api/channel/fading/fading.MultipathFadingChannel", "api/channel/fading/fading.MultipathFadingRealization", "api/channel/fading/fading.MultipathFadingSample", "api/channel/fading/tdl", "api/channel/ideal", "api/channel/quadriga", "api/channel/radar/multi", "api/channel/radar/radar", "api/channel/radar/single", "api/core", "api/core.antennas", "api/core.channel_state_information", "api/core.definitions", "api/core.device.Device", "api/core.device.DeviceInput", "api/core.device.DeviceOutput", "api/core.device.DeviceReception", "api/core.device.DeviceTransmission", "api/core.device.OperationResult", "api/core.device.ProcessedDeviceInput", "api/core.device.Receiver", "api/core.device.Reception", "api/core.device.Transmission", "api/core.device.Transmitter", "api/core.drop.Drop", "api/core.duplex", "api/core.executable", "api/core.factory", "api/core.logarithmic", "api/core.monte_carlo", "api/core.operators", "api/core.pipeline", "api/core.random_node", "api/core.scenario", "api/core.signal_model.Signal", "api/core.transformation", "api/core.visualize", "api/fec", "api/fec.bch", "api/fec.block_interleaver", "api/fec.coding", "api/fec.crc", "api/fec.ldpc", "api/fec.polar", "api/fec.repetition", "api/fec.rs", "api/fec.rsc", "api/fec.scrambler", "api/fec.turbo", "api/hardware_loop", "api/hardware_loop.audio.device.AudioDevice", "api/hardware_loop.audio.scenario.AudioScenario", "api/hardware_loop.calibration.delay", "api/hardware_loop.calibration.leakage", "api/hardware_loop.hardware_loop.HardwareLoop", "api/hardware_loop.hardware_loop.HardwareLoopPlot", "api/hardware_loop.physical_device.PhysicalDevice", "api/hardware_loop.physical_device_dummy.PhysicalDeviceDummy", "api/hardware_loop.physical_device_dummy.PhysicalScenarioDummy", "api/hardware_loop.scenario.PhysicalScenario", "api/hardware_loop.uhd.system.UsrpSystem", "api/hardware_loop.uhd.usrp.UsrpDevice", "api/hardware_loop.visualizers", "api/jcas", "api/jcas.jcas", "api/jcas.matched_filtering", "api/jcas.ofdm_radar", "api/modem", "api/modem.bits_source", "api/modem.evaluators", "api/modem.evaluators.CommunicationEvaluator", "api/modem.evaluators._table", "api/modem.evaluators.ber", "api/modem.evaluators.bler", "api/modem.evaluators.evm", "api/modem.evaluators.fer", "api/modem.evaluators.throughput", "api/modem.modem.BaseModem", "api/modem.modem.CommunicationReception", "api/modem.modem.CommunicationReceptionFrame", "api/modem.modem.CommunicationTransmission", "api/modem.modem.CommunicationTransmissionFrame", "api/modem.modem.DuplexModem", "api/modem.modem.ReceivingModem", "api/modem.modem.SimplexLink", "api/modem.modem.TransmittingModem", "api/modem.precoding", "api/modem.precoding.dft", "api/modem.precoding.ratio_combining", "api/modem.precoding.single_carrier", "api/modem.precoding.space_time_block_coding", "api/modem.precoding.spatial_multiplexing", "api/modem.precoding.symbol_precoding.SymbolPrecoder", "api/modem.precoding.symbol_precoding.SymbolPrecoding", "api/modem.symbols", "api/modem.waveform", "api/modem.waveform.ChannelEqualization", "api/modem.waveform.ChannelEstimation", "api/modem.waveform.Synchronization", "api/modem.waveform.ZeroForcingChannelEqualization", "api/modem.waveform._table", "api/modem.waveform.chirp_fsk", "api/modem.waveform.correlation_synchronization", "api/modem.waveform.single_carrier", "api/modem.waveform.single_carrier.FMCW", "api/modem.waveform.single_carrier.RaisedCosine", "api/modem.waveform.single_carrier.Rectangular", "api/modem.waveform.single_carrier.RootRaisedCosine", "api/modem.waveforms.orthogonal", "api/modem.waveforms.orthogonal.GridElement", "api/modem.waveforms.orthogonal.GridResource", "api/modem.waveforms.orthogonal.GridSection", "api/modem.waveforms.orthogonal.GuardSection", "api/modem.waveforms.orthogonal.OrthogonalWaveform", "api/modem.waveforms.orthogonal.PilotSection", "api/modem.waveforms.orthogonal.SymbolSection", "api/modem.waveforms.orthogonal.ocdm", "api/modem.waveforms.orthogonal.ofdm", "api/modem.waveforms.orthogonal.ofdm.OFDMWaveform", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization", "api/modem.waveforms.orthogonal.otfs", "api/precoding", "api/precoding.precoding", "api/precoding.stream_precoding", "api/radar", "api/radar.cube.RadarCube", "api/radar.detection.MaxDetector", "api/radar.detection.PointDetection", "api/radar.detection.RadarDetector", "api/radar.detection.RadarPointCloud", "api/radar.detection.ThresholdDetector", "api/radar.evaluators.DetectionProbEvaluator", "api/radar.evaluators.RadarEvaluator", "api/radar.evaluators.ReceiverOperatingCharacteristic", "api/radar.evaluators.RootMeanSquareError", "api/radar.fmcw", "api/radar.radar.Radar", "api/radar.radar.RadarReception", "api/radar.radar.RadarTransmission", "api/radar.radar.RadarWaveform", "api/simulation", "api/simulation.animation", "api/simulation.antennas", "api/simulation.antennas.SimulatedAntenna", "api/simulation.antennas.SimulatedAntennaArray", "api/simulation.antennas.SimulatedAntennaPort", "api/simulation.antennas.SimulatedCustomArray", "api/simulation.antennas.SimulatedDipole", "api/simulation.antennas.SimulatedIdealAntenna", "api/simulation.antennas.SimulatedLinearAntenna", "api/simulation.antennas.SimulatedPatchAntenna", "api/simulation.antennas.SimulatedUniformArray", "api/simulation.coupling", "api/simulation.coupling.coupling", "api/simulation.coupling.impedance", "api/simulation.coupling.perfect", "api/simulation.isolation", "api/simulation.isolation.isolation", "api/simulation.isolation.perfect", "api/simulation.isolation.selective", "api/simulation.isolation.specific", "api/simulation.modem.noise.EBN0", "api/simulation.modem.noise.ESN0", "api/simulation.noise", "api/simulation.noise.level.N0", "api/simulation.noise.level.SNR", "api/simulation.noise.model.AWGN", "api/simulation.noise.model.AWGNRealization", "api/simulation.rf_chain", "api/simulation.rf_chain.adc", "api/simulation.rf_chain.adc.AnalogDigitalConverter", "api/simulation.rf_chain.adc.AutomaticGainControl", "api/simulation.rf_chain.adc.Gain", "api/simulation.rf_chain.adc.GainControlBase", "api/simulation.rf_chain.adc.GainControlType", "api/simulation.rf_chain.adc.QuantizerType", "api/simulation.rf_chain.amplifier", "api/simulation.rf_chain.amplifier.ClippingPowerAmplifier", "api/simulation.rf_chain.amplifier.CustomPowerAmplifier", "api/simulation.rf_chain.amplifier.PowerAmplifier", "api/simulation.rf_chain.amplifier.RappPowerAmplifier", "api/simulation.rf_chain.amplifier.SalehPowerAmplifier", "api/simulation.rf_chain.phase_noise", "api/simulation.rf_chain.phase_noise.NoPhaseNoise", "api/simulation.rf_chain.phase_noise.OscillatorPhaseNoise", "api/simulation.simulated_device", "api/simulation.simulated_device.ProcessedSimulatedDeviceInput", "api/simulation.simulated_device.SimulatedDeviceOutput", "api/simulation.simulated_device.SimulatedDeviceReceiveRealization", "api/simulation.simulated_device.SimulatedDeviceReception", "api/simulation.simulated_device.SimulatedDeviceTransmission", "api/simulation.simulation.SimulatedDrop", "api/simulation.simulation.Simulation", "api/simulation.simulation.SimulationScenario", "api/simulation.synchronization", "api/simulation.synchronization.RandomTrigger", "api/simulation.synchronization.SampleOffsetTrigger", "api/simulation.synchronization.StaticTrigger", "api/simulation.synchronization.TimeOffsetTrigger", "api/simulation.synchronization.TriggerModel", "api/simulation.synchronization.TriggerRealization", "api/simulation.synchronization._table", "api/tools", "api/tools.math", "api/tools.resampling", "api/tools.tile", "developer_hints", "examples/audio", "examples/chirp_fsk_lora", "examples/chirp_qam", "examples/examples", "examples/hardware_model", "examples/interference_ofdm_single_carrier", "examples/jcas", "examples/ofdm_5g", "examples/ofdm_single_carrier", "examples/operator_separation", "examples/uhd", "flowcharts/device_rf_interaction", "flowcharts/simulated_physical_layer", "flowcharts/simulation_parallel_monte_carlo", "getting_started", "index", "installation", "license", "matlab", "notebooks/audio", "notebooks/beamforming_implementation", "notebooks/beamforming_usage", "notebooks/channel", "notebooks/datasets", "notebooks/evaluator", "notebooks/fec_coding", "notebooks/precoding", "notebooks/roc", "notebooks/waveform", "references", "tutorials"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api/api.rst", "api/beamforming.rst", "api/beamforming.beamformer.rst", "api/beamforming.capon.rst", "api/beamforming.conventional.rst", "api/bin.rst", "api/bin.hermes.rst", "api/channel/cdl/cdl.rst", "api/channel/cdl/cluster_delay_lines.rst", "api/channel/cdl/indoor_factory.rst", "api/channel/cdl/indoor_office.rst", "api/channel/cdl/rural_macrocells.rst", "api/channel/cdl/urban_macrocells.rst", "api/channel/cdl/urban_microcells.rst", "api/channel/channel.rst", "api/channel/channel.Channel.rst", "api/channel/channel.ChannelRealization.rst", "api/channel/channel.ChannelSample.rst", "api/channel/consistent.rst", "api/channel/delay/delay.rst", "api/channel/delay/random.rst", "api/channel/delay/spatial.rst", "api/channel/fading/cost259.rst", "api/channel/fading/exponential.rst", "api/channel/fading/fading.rst", "api/channel/fading/fading.AntennaCorrelation.rst", "api/channel/fading/fading.MultipathFadingChannel.rst", "api/channel/fading/fading.MultipathFadingRealization.rst", "api/channel/fading/fading.MultipathFadingSample.rst", "api/channel/fading/tdl.rst", "api/channel/ideal.rst", "api/channel/quadriga.rst", "api/channel/radar/multi.rst", "api/channel/radar/radar.rst", "api/channel/radar/single.rst", "api/core.rst", "api/core.antennas.rst", "api/core.channel_state_information.rst", "api/core.definitions.rst", "api/core.device.Device.rst", "api/core.device.DeviceInput.rst", "api/core.device.DeviceOutput.rst", "api/core.device.DeviceReception.rst", "api/core.device.DeviceTransmission.rst", "api/core.device.OperationResult.rst", "api/core.device.ProcessedDeviceInput.rst", "api/core.device.Receiver.rst", "api/core.device.Reception.rst", "api/core.device.Transmission.rst", "api/core.device.Transmitter.rst", "api/core.drop.Drop.rst", "api/core.duplex.rst", "api/core.executable.rst", "api/core.factory.rst", "api/core.logarithmic.rst", "api/core.monte_carlo.rst", "api/core.operators.rst", "api/core.pipeline.rst", "api/core.random_node.rst", "api/core.scenario.rst", "api/core.signal_model.Signal.rst", "api/core.transformation.rst", "api/core.visualize.rst", "api/fec.rst", "api/fec.bch.rst", "api/fec.block_interleaver.rst", "api/fec.coding.rst", "api/fec.crc.rst", "api/fec.ldpc.rst", "api/fec.polar.rst", "api/fec.repetition.rst", "api/fec.rs.rst", "api/fec.rsc.rst", "api/fec.scrambler.rst", "api/fec.turbo.rst", "api/hardware_loop.rst", "api/hardware_loop.audio.device.AudioDevice.rst", "api/hardware_loop.audio.scenario.AudioScenario.rst", "api/hardware_loop.calibration.delay.rst", "api/hardware_loop.calibration.leakage.rst", "api/hardware_loop.hardware_loop.HardwareLoop.rst", "api/hardware_loop.hardware_loop.HardwareLoopPlot.rst", "api/hardware_loop.physical_device.PhysicalDevice.rst", "api/hardware_loop.physical_device_dummy.PhysicalDeviceDummy.rst", "api/hardware_loop.physical_device_dummy.PhysicalScenarioDummy.rst", "api/hardware_loop.scenario.PhysicalScenario.rst", "api/hardware_loop.uhd.system.UsrpSystem.rst", "api/hardware_loop.uhd.usrp.UsrpDevice.rst", "api/hardware_loop.visualizers.rst", "api/jcas.rst", "api/jcas.jcas.rst", "api/jcas.matched_filtering.rst", "api/jcas.ofdm_radar.rst", "api/modem.rst", "api/modem.bits_source.rst", "api/modem.evaluators.rst", "api/modem.evaluators.CommunicationEvaluator.rst", "api/modem.evaluators._table.rst", "api/modem.evaluators.ber.rst", "api/modem.evaluators.bler.rst", "api/modem.evaluators.evm.rst", "api/modem.evaluators.fer.rst", "api/modem.evaluators.throughput.rst", "api/modem.modem.BaseModem.rst", "api/modem.modem.CommunicationReception.rst", "api/modem.modem.CommunicationReceptionFrame.rst", "api/modem.modem.CommunicationTransmission.rst", "api/modem.modem.CommunicationTransmissionFrame.rst", "api/modem.modem.DuplexModem.rst", "api/modem.modem.ReceivingModem.rst", "api/modem.modem.SimplexLink.rst", "api/modem.modem.TransmittingModem.rst", "api/modem.precoding.rst", "api/modem.precoding.dft.rst", "api/modem.precoding.ratio_combining.rst", "api/modem.precoding.single_carrier.rst", "api/modem.precoding.space_time_block_coding.rst", "api/modem.precoding.spatial_multiplexing.rst", "api/modem.precoding.symbol_precoding.SymbolPrecoder.rst", "api/modem.precoding.symbol_precoding.SymbolPrecoding.rst", "api/modem.symbols.rst", "api/modem.waveform.rst", "api/modem.waveform.ChannelEqualization.rst", "api/modem.waveform.ChannelEstimation.rst", "api/modem.waveform.Synchronization.rst", "api/modem.waveform.ZeroForcingChannelEqualization.rst", "api/modem.waveform._table.rst", "api/modem.waveform.chirp_fsk.rst", "api/modem.waveform.correlation_synchronization.rst", "api/modem.waveform.single_carrier.rst", "api/modem.waveform.single_carrier.FMCW.rst", "api/modem.waveform.single_carrier.RaisedCosine.rst", "api/modem.waveform.single_carrier.Rectangular.rst", "api/modem.waveform.single_carrier.RootRaisedCosine.rst", "api/modem.waveforms.orthogonal.rst", "api/modem.waveforms.orthogonal.GridElement.rst", "api/modem.waveforms.orthogonal.GridResource.rst", "api/modem.waveforms.orthogonal.GridSection.rst", "api/modem.waveforms.orthogonal.GuardSection.rst", "api/modem.waveforms.orthogonal.OrthogonalWaveform.rst", "api/modem.waveforms.orthogonal.PilotSection.rst", "api/modem.waveforms.orthogonal.SymbolSection.rst", "api/modem.waveforms.orthogonal.ocdm.rst", "api/modem.waveforms.orthogonal.ofdm.rst", "api/modem.waveforms.orthogonal.ofdm.OFDMWaveform.rst", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection.rst", "api/modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.rst", "api/modem.waveforms.orthogonal.otfs.rst", "api/precoding.rst", "api/precoding.precoding.rst", "api/precoding.stream_precoding.rst", "api/radar.rst", "api/radar.cube.RadarCube.rst", "api/radar.detection.MaxDetector.rst", "api/radar.detection.PointDetection.rst", "api/radar.detection.RadarDetector.rst", "api/radar.detection.RadarPointCloud.rst", "api/radar.detection.ThresholdDetector.rst", "api/radar.evaluators.DetectionProbEvaluator.rst", "api/radar.evaluators.RadarEvaluator.rst", "api/radar.evaluators.ReceiverOperatingCharacteristic.rst", "api/radar.evaluators.RootMeanSquareError.rst", "api/radar.fmcw.rst", "api/radar.radar.Radar.rst", "api/radar.radar.RadarReception.rst", "api/radar.radar.RadarTransmission.rst", "api/radar.radar.RadarWaveform.rst", "api/simulation.rst", "api/simulation.animation.rst", "api/simulation.antennas.rst", "api/simulation.antennas.SimulatedAntenna.rst", "api/simulation.antennas.SimulatedAntennaArray.rst", "api/simulation.antennas.SimulatedAntennaPort.rst", "api/simulation.antennas.SimulatedCustomArray.rst", "api/simulation.antennas.SimulatedDipole.rst", "api/simulation.antennas.SimulatedIdealAntenna.rst", "api/simulation.antennas.SimulatedLinearAntenna.rst", "api/simulation.antennas.SimulatedPatchAntenna.rst", "api/simulation.antennas.SimulatedUniformArray.rst", "api/simulation.coupling.rst", "api/simulation.coupling.coupling.rst", "api/simulation.coupling.impedance.rst", "api/simulation.coupling.perfect.rst", "api/simulation.isolation.rst", "api/simulation.isolation.isolation.rst", "api/simulation.isolation.perfect.rst", "api/simulation.isolation.selective.rst", "api/simulation.isolation.specific.rst", "api/simulation.modem.noise.EBN0.rst", "api/simulation.modem.noise.ESN0.rst", "api/simulation.noise.rst", "api/simulation.noise.level.N0.rst", "api/simulation.noise.level.SNR.rst", "api/simulation.noise.model.AWGN.rst", "api/simulation.noise.model.AWGNRealization.rst", "api/simulation.rf_chain.rst", "api/simulation.rf_chain.adc.rst", "api/simulation.rf_chain.adc.AnalogDigitalConverter.rst", "api/simulation.rf_chain.adc.AutomaticGainControl.rst", "api/simulation.rf_chain.adc.Gain.rst", "api/simulation.rf_chain.adc.GainControlBase.rst", "api/simulation.rf_chain.adc.GainControlType.rst", "api/simulation.rf_chain.adc.QuantizerType.rst", "api/simulation.rf_chain.amplifier.rst", "api/simulation.rf_chain.amplifier.ClippingPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.CustomPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.PowerAmplifier.rst", "api/simulation.rf_chain.amplifier.RappPowerAmplifier.rst", "api/simulation.rf_chain.amplifier.SalehPowerAmplifier.rst", "api/simulation.rf_chain.phase_noise.rst", "api/simulation.rf_chain.phase_noise.NoPhaseNoise.rst", "api/simulation.rf_chain.phase_noise.OscillatorPhaseNoise.rst", "api/simulation.simulated_device.rst", "api/simulation.simulated_device.ProcessedSimulatedDeviceInput.rst", "api/simulation.simulated_device.SimulatedDeviceOutput.rst", "api/simulation.simulated_device.SimulatedDeviceReceiveRealization.rst", "api/simulation.simulated_device.SimulatedDeviceReception.rst", "api/simulation.simulated_device.SimulatedDeviceTransmission.rst", "api/simulation.simulation.SimulatedDrop.rst", "api/simulation.simulation.Simulation.rst", "api/simulation.simulation.SimulationScenario.rst", "api/simulation.synchronization.rst", "api/simulation.synchronization.RandomTrigger.rst", "api/simulation.synchronization.SampleOffsetTrigger.rst", "api/simulation.synchronization.StaticTrigger.rst", "api/simulation.synchronization.TimeOffsetTrigger.rst", "api/simulation.synchronization.TriggerModel.rst", "api/simulation.synchronization.TriggerRealization.rst", "api/simulation.synchronization._table.rst", "api/tools.rst", "api/tools.math.rst", "api/tools.resampling.rst", "api/tools.tile.rst", "developer_hints.rst", "examples/audio.rst", "examples/chirp_fsk_lora.rst", "examples/chirp_qam.rst", "examples/examples.rst", "examples/hardware_model.rst", "examples/interference_ofdm_single_carrier.rst", "examples/jcas.rst", "examples/ofdm_5g.rst", "examples/ofdm_single_carrier.rst", "examples/operator_separation.rst", "examples/uhd.rst", "flowcharts/device_rf_interaction.rst", "flowcharts/simulated_physical_layer.rst", "flowcharts/simulation_parallel_monte_carlo.rst", "getting_started.rst", "index.rst", "installation.rst", "license.rst", "matlab.rst", "notebooks/audio.ipynb", "notebooks/beamforming_implementation.ipynb", "notebooks/beamforming_usage.ipynb", "notebooks/channel.ipynb", "notebooks/datasets.ipynb", "notebooks/evaluator.ipynb", "notebooks/fec_coding.ipynb", "notebooks/precoding.ipynb", "notebooks/roc.ipynb", "notebooks/waveform.ipynb", "references.rst", "tutorials.rst"], "indexentries": {"__modem (precoding attribute)": [[149, "hermespy.precoding.precoding.Precoding.__modem", false]], "__num_delay_taps (channelstateinformation attribute)": [[37, "hermespy.core.channel.ChannelStateInformation.__num_delay_taps", false]], "__num_frequency_bins (channelstateinformation attribute)": [[37, "hermespy.core.channel.ChannelStateInformation.__num_frequency_bins", false]], "__precoders (precoding attribute)": [[149, "hermespy.precoding.precoding.Precoding.__precoders", false]], "__state (channelstateinformation attribute)": [[37, "hermespy.core.channel.ChannelStateInformation.__state", false]], "__state_format (channelstateinformation attribute)": [[37, "hermespy.core.channel.ChannelStateInformation.__state_format", false]], "_anglevisualization (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization", false]], "_constellationplot (class in hermespy.modem.symbols)": [[120, "hermespy.modem.symbols._ConstellationPlot", false]], "_decode() (caponbeamformer method)": [[3, "hermespy.beamforming.capon.CaponBeamformer._decode", false]], "_decode() (conventionalbeamformer method)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer._decode", false]], "_decode() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer._decode", false]], "_encode() (conventionalbeamformer method)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer._encode", false]], "_powerdelayvisualization (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization", false]], "_propagate() (idealchannelsample method)": [[30, "hermespy.channel.ideal.IdealChannelSample._propagate", false]], "_realize() (cdl method)": [[7, "hermespy.channel.cdl.cdl.CDL._realize", false]], "_realize() (idealchannel method)": [[30, "hermespy.channel.ideal.IdealChannel._realize", false]], "_realize() (multitargetradarchannel method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel._realize", false]], "_realize() (randomdelaychannel method)": [[20, "hermespy.channel.delay.random.RandomDelayChannel._realize", false]], "_realize() (singletargetradarchannel method)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel._realize", false]], "_realize() (spatialdelaychannel method)": [[21, "hermespy.channel.delay.spatial.SpatialDelayChannel._realize", false]], "_receive() (receivingmodembase method)": [[109, "hermespy.modem.modem.ReceivingModemBase._receive", false]], "_sample() (cdlrealization method)": [[7, "hermespy.channel.cdl.cdl.CDLRealization._sample", false]], "_sample() (idealchannelrealization method)": [[30, "hermespy.channel.ideal.IdealChannelRealization._sample", false]], "_transmit() (transmittingmodembase method)": [[111, "hermespy.modem.modem.TransmittingModemBase._transmit", false]], "a (cdltype attribute)": [[7, "hermespy.channel.cdl.CDLType.A", false]], "a (tdltype attribute)": [[29, "hermespy.channel.fading.tdl.TDLType.A", false]], "aat (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AAT", false]], "abbreviation (biterrorevaluator property)": [[98, "hermespy.modem.evaluators.BitErrorEvaluator.abbreviation", false]], "abbreviation (blockerrorevaluator property)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluator.abbreviation", false]], "abbreviation (constellationevm property)": [[100, "hermespy.modem.evaluators.ConstellationEVM.abbreviation", false]], "abbreviation (detectionprobevaluator property)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator.abbreviation", false]], "abbreviation (evaluator property)": [[55, "hermespy.core.monte_carlo.Evaluator.abbreviation", false]], "abbreviation (evmevaluation property)": [[100, "hermespy.modem.evaluators.EVMEvaluation.abbreviation", false]], "abbreviation (frameerrorevaluator property)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluator.abbreviation", false]], "abbreviation (receiveroperatingcharacteristic property)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.abbreviation", false]], "abbreviation (rootmeansquareerror property)": [[161, "hermespy.radar.evaluators.RootMeanSquareError.abbreviation", false]], "abbreviation (throughputevaluator property)": [[102, "hermespy.modem.evaluators.ThroughputEvaluator.abbreviation", false]], "actorrunresult (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.ActorRunResult", false]], "adaptive_sampling (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.adaptive_sampling", false]], "adc (rfchain property)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.adc", false]], "adc_sampling_rate (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.adc_sampling_rate", false]], "add_antenna() (antennaport method)": [[36, "hermespy.core.antennas.AntennaPort.add_antenna", false]], "add_antenna() (customantennaarray method)": [[36, "hermespy.core.antennas.CustomAntennaArray.add_antenna", false]], "add_antenna() (simulatedcustomarray method)": [[173, "hermespy.simulation.antennas.SimulatedCustomArray.add_antenna", false]], "add_device() (physicalscenario method)": [[85, "hermespy.hardware_loop.scenario.PhysicalScenario.add_device", false]], "add_device() (physicalscenariodummy method)": [[84, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.add_device", false]], "add_device() (pipeline method)": [[57, "hermespy.core.pipeline.Pipeline.add_device", false]], "add_device() (scenario method)": [[59, "hermespy.core.scenario.Scenario.add_device", false]], "add_device() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.add_device", false]], "add_device() (triggermodel method)": [[226, "hermespy.simulation.simulated_device.TriggerModel.add_device", false]], "add_device() (usrpsystem method)": [[86, "hermespy.hardware_loop.uhd.system.UsrpSystem.add_device", false]], "add_dimension() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_dimension", false]], "add_dimension() (montecarlo method)": [[55, "hermespy.core.monte_carlo.MonteCarlo.add_dimension", false]], "add_encoder() (encodermanager method)": [[66, "hermespy.fec.coding.EncoderManager.add_encoder", false]], "add_evaluator() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_evaluator", false]], "add_evaluator() (montecarlo method)": [[55, "hermespy.core.monte_carlo.MonteCarlo.add_evaluator", false]], "add_iq_imbalance() (rfchain method)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.add_iq_imbalance", false]], "add_link() (transformablelink method)": [[61, "hermespy.core.transformation.TransformableLink.add_link", false]], "add_noise() (noisemodel method)": [[190, "hermespy.simulation.noise.model.NoiseModel.add_noise", false]], "add_noise() (nophasenoise method)": [[210, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise.add_noise", false]], "add_noise() (oscillatorphasenoise method)": [[211, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.add_noise", false]], "add_noise() (phasenoise method)": [[209, "hermespy.simulation.rf_chain.phase_noise.PhaseNoise.add_noise", false]], "add_plot() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.add_plot", false]], "add_point() (radarpointcloud method)": [[156, "hermespy.radar.detection.RadarPointCloud.add_point", false]], "add_port() (customantennaarray method)": [[36, "hermespy.core.antennas.CustomAntennaArray.add_port", false]], "add_port() (simulatedcustomarray method)": [[173, "hermespy.simulation.antennas.SimulatedCustomArray.add_port", false]], "add_propagation() (radarpath method)": [[33, "hermespy.channel.radar.radar.RadarPath.add_propagation", false]], "add_sample_hook() (channel method)": [[15, "hermespy.channel.channel.Channel.add_sample_hook", false]], "add_samples() (gridsection method)": [[55, "hermespy.core.monte_carlo.GridSection.add_samples", false]], "add_state() (radarpath method)": [[33, "hermespy.channel.radar.radar.RadarPath.add_state", false]], "add_target() (multitargetradarchannel method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.add_target", false]], "add_to() (awgnrealization method)": [[194, "hermespy.simulation.noise.model.AWGNRealization.add_to", false]], "add_to() (noiserealization method)": [[190, "hermespy.simulation.noise.model.NoiseRealization.add_to", false]], "add_variable() (consistentgenerator method)": [[18, "hermespy.channel.consistent.ConsistentGenerator.add_variable", false]], "adjust_power (poweramplifier attribute)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.adjust_power", false]], "adjust_signal() (gaincontrolbase method)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.adjust_signal", false]], "agc_type (automaticgaincontrol property)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.agc_type", false]], "alamouti (class in hermespy.modem.precoding.space_time_block_coding)": [[116, "hermespy.modem.precoding.space_time_block_coding.Alamouti", false]], "all (verbosity attribute)": [[52, "hermespy.core.executable.Verbosity.ALL", false]], "allow_padding (encodermanager attribute)": [[66, "hermespy.fec.coding.EncoderManager.allow_padding", false]], "allow_truncating (encodermanager attribute)": [[66, "hermespy.fec.coding.EncoderManager.allow_truncating", false]], "amplitude (dbconversiontype attribute)": [[230, "hermespy.tools.math.DbConversionType.AMPLITUDE", false]], "amplitude_alpha (salehpoweramplifier property)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.amplitude_alpha", false]], "amplitude_beta (salehpoweramplifier property)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.amplitude_beta", false]], "amplitude_imbalance (rfchain property)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.amplitude_imbalance", false]], "amplitude_path_loss() (in module hermespy.tools.math)": [[230, "hermespy.tools.math.amplitude_path_loss", false]], "analog_digital_conversion() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.analog_digital_conversion", false]], "analogdigitalconverter (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter", false]], "angle_bins (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.angle_bins", false]], "angles (sphericalfocus property)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.angles", false]], "antenna (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.Antenna", false]], "antenna_correlation (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.antenna_correlation", false]], "antenna_state() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.antenna_state", false]], "antennaarray (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AntennaArray", false]], "antennaarraybase (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AntennaArrayBase", false]], "antennaarraystate (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AntennaArrayState", false]], "antennacorrelation (class in hermespy.channel.fading.fading)": [[25, "hermespy.channel.fading.fading.AntennaCorrelation", false]], "antennamode (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AntennaMode", false]], "antennaport (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AntennaPort", false]], "antennas (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.antennas", false]], "antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.antennas", false]], "antennas (antennaarraystate property)": [[36, "hermespy.core.antennas.AntennaArrayState.antennas", false]], "antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.antennas", false]], "antennas (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.antennas", false]], "antennas (device property)": [[39, "hermespy.core.device.Device.antennas", false]], "antennas (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.antennas", false]], "antennas (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.antennas", false]], "antennas (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.antennas", false]], "antennas_updated() (antennaport method)": [[36, "hermespy.core.antennas.AntennaPort.antennas_updated", false]], "append_samples() (signal method)": [[60, "hermespy.core.signal_model.Signal.append_samples", false]], "append_stream() (symbols method)": [[120, "hermespy.modem.symbols.Symbols.append_stream", false]], "append_streams() (signal method)": [[60, "hermespy.core.signal_model.Signal.append_streams", false]], "append_symbols() (symbols method)": [[120, "hermespy.modem.symbols.Symbols.append_symbols", false]], "apt (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.APT", false]], "array (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.array", false]], "artifact (artifacttemplate property)": [[55, "hermespy.core.monte_carlo.ArtifactTemplate.artifact", false]], "artifact (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.Artifact", false]], "artifact() (biterrorevaluation method)": [[98, "hermespy.modem.evaluators.BitErrorEvaluation.artifact", false]], "artifact() (blockerrorevaluation method)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluation.artifact", false]], "artifact() (detectionprobabilityevaluation method)": [[158, "hermespy.radar.evaluators.DetectionProbabilityEvaluation.artifact", false]], "artifact() (evaluation method)": [[55, "hermespy.core.monte_carlo.Evaluation.artifact", false]], "artifact() (evmevaluation method)": [[100, "hermespy.modem.evaluators.EVMEvaluation.artifact", false]], "artifact() (frameerrorevaluation method)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluation.artifact", false]], "artifact() (rocevaluation method)": [[160, "hermespy.radar.evaluators.RocEvaluation.artifact", false]], "artifact() (rootmeansquareevaluation method)": [[161, "hermespy.radar.evaluators.RootMeanSquareEvaluation.artifact", false]], "artifact() (throughputevaluation method)": [[102, "hermespy.modem.evaluators.ThroughputEvaluation.artifact", false]], "artifact_scalars (montecarlosample property)": [[55, "hermespy.core.monte_carlo.MonteCarloSample.artifact_scalars", false]], "artifactplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.ArtifactPlot", false]], "artifacts (montecarlosample property)": [[55, "hermespy.core.monte_carlo.MonteCarloSample.artifacts", false]], "artifacttemplate (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.ArtifactTemplate", false]], "at (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.AT", false]], "attached (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.attached", false]], "attenuate (radarchannelbase property)": [[33, "hermespy.channel.radar.radar.RadarChannelBase.attenuate", false]], "attenuate (radarpath property)": [[33, "hermespy.channel.radar.radar.RadarPath.attenuate", false]], "audiodevice (class in hermespy.hardware_loop.audio.device)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice", false]], "audioscenario (class in hermespy.hardware_loop.audio.scenario)": [[77, "hermespy.hardware_loop.audio.scenario.AudioScenario", false]], "automaticgaincontrol (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl", false]], "awgn (class in hermespy.simulation.noise.model)": [[193, "hermespy.simulation.noise.model.AWGN", false]], "awgnrealization (class in hermespy.simulation.noise.model)": [[194, "hermespy.simulation.noise.model.AWGNRealization", false]], "axes (visualization property)": [[62, "hermespy.core.visualize.Visualization.axes", false]], "azimuth_arrival_spread (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_arrival_spread", false]], "azimuth_departure_spread (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_departure_spread", false]], "azimuth_of_arrival (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_of_arrival", false]], "azimuth_of_departure (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.azimuth_of_departure", false]], "b (cdltype attribute)": [[7, "hermespy.channel.cdl.CDLType.B", false]], "b (tdltype attribute)": [[29, "hermespy.channel.fading.tdl.TDLType.B", false]], "backoff (automaticgaincontrol property)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.backoff", false]], "backwards_transformation (transformable property)": [[61, "hermespy.core.transformation.Transformable.backwards_transformation", false]], "bandwidth (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.bandwidth", false]], "bandwidth (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bandwidth", false]], "bandwidth (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.bandwidth", false]], "bandwidth (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.bandwidth", false]], "bandwidth (fmcwwaveform property)": [[130, "hermespy.modem.waveform_single_carrier.FMCWWaveform.bandwidth", false]], "bandwidth (ocdmwaveform property)": [[142, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform.bandwidth", false]], "bandwidth (ofdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.bandwidth", false]], "bandwidth (rectangularwaveform property)": [[132, "hermespy.modem.waveform_single_carrier.RectangularWaveform.bandwidth", false]], "bandwidth (rolledoffsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.bandwidth", false]], "base_port (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.base_port", false]], "baseband_signal (processedsimulateddeviceinput property)": [[213, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.baseband_signal", false]], "basemodem (class in hermespy.modem.modem)": [[103, "hermespy.modem.modem.BaseModem", false]], "bchcoding (class in hermespy.fec.aff3ct.bch)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding", false]], "beamfocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.BeamFocus", false]], "beamformer (beamfocus property)": [[2, "hermespy.beamforming.beamformer.BeamFocus.beamformer", false]], "beamformerbase (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.BeamformerBase", false]], "bit_block_size (bchcoding property)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.bit_block_size", false]], "bit_block_size (blockinterleaver property)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.bit_block_size", false]], "bit_block_size (cyclicredundancycheck property)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.bit_block_size", false]], "bit_block_size (encoder property)": [[66, "hermespy.fec.coding.Encoder.bit_block_size", false]], "bit_block_size (encodermanager property)": [[66, "hermespy.fec.coding.EncoderManager.bit_block_size", false]], "bit_block_size (ldpccoding property)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.bit_block_size", false]], "bit_block_size (polarsccoding property)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding.bit_block_size", false]], "bit_block_size (polarsclcoding property)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding.bit_block_size", false]], "bit_block_size (reedsolomoncoding property)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.bit_block_size", false]], "bit_block_size (repetitionencoder property)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.bit_block_size", false]], "bit_block_size (rsccoding property)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding.bit_block_size", false]], "bit_block_size (scrambler3gpp property)": [[73, "hermespy.fec.scrambler.Scrambler3GPP.bit_block_size", false]], "bit_block_size (scrambler80211a property)": [[73, "hermespy.fec.scrambler.Scrambler80211a.bit_block_size", false]], "bit_block_size (turbocoding property)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.bit_block_size", false]], "bit_energy (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bit_energy", false]], "bit_energy (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.bit_energy", false]], "bit_energy (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.bit_energy", false]], "bit_energy (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.bit_energy", false]], "biterrorartifact (class in hermespy.modem.evaluators)": [[98, "hermespy.modem.evaluators.BitErrorArtifact", false]], "biterrorevaluation (class in hermespy.modem.evaluators)": [[98, "hermespy.modem.evaluators.BitErrorEvaluation", false]], "biterrorevaluator (class in hermespy.modem.evaluators)": [[98, "hermespy.modem.evaluators.BitErrorEvaluator", false]], "bits (communicationreception property)": [[104, "hermespy.modem.modem.CommunicationReception.bits", false]], "bits (communicationtransmission property)": [[106, "hermespy.modem.modem.CommunicationTransmission.bits", false]], "bits (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.bits", false]], "bits_per_frame() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.bits_per_frame", false]], "bits_per_symbol (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.bits_per_symbol", false]], "bits_per_symbol (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.bits_per_symbol", false]], "bits_source (transmittingmodembase property)": [[111, "hermespy.modem.modem.TransmittingModemBase.bits_source", false]], "bitssource (class in hermespy.modem.bits_source)": [[94, "hermespy.modem.bits_source.BitsSource", false]], "block_size (blockinterleaver property)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.block_size", false]], "blockerrorartifact (class in hermespy.modem.evaluators)": [[99, "hermespy.modem.evaluators.BlockErrorArtifact", false]], "blockerrorevaluation (class in hermespy.modem.evaluators)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluation", false]], "blockerrorevaluator (class in hermespy.modem.evaluators)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluator", false]], "blockinterleaver (class in hermespy.fec.block_interleaver)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver", false]], "boolean() (consistentgenerator method)": [[18, "hermespy.channel.consistent.ConsistentGenerator.boolean", false]], "c (cdltype attribute)": [[7, "hermespy.channel.cdl.CDLType.C", false]], "c (tdltype attribute)": [[29, "hermespy.channel.fading.tdl.TDLType.C", false]], "cache_reception() (receiver method)": [[46, "hermespy.core.device.Receiver.cache_reception", false]], "cache_transmission() (device method)": [[39, "hermespy.core.device.Device.cache_transmission", false]], "cache_transmission() (transmitter method)": [[49, "hermespy.core.device.Transmitter.cache_transmission", false]], "campaign (scenario property)": [[59, "hermespy.core.scenario.Scenario.campaign", false]], "caponbeamformer (class in hermespy.beamforming.capon)": [[3, "hermespy.beamforming.capon.CaponBeamformer", false]], "carrier_frequency (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.carrier_frequency", false]], "carrier_frequency (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.carrier_frequency", false]], "carrier_frequency (device property)": [[39, "hermespy.core.device.Device.carrier_frequency", false]], "carrier_frequency (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.carrier_frequency", false]], "carrier_frequency (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.carrier_frequency", false]], "carrier_frequency (signal property)": [[60, "hermespy.core.signal_model.Signal.carrier_frequency", false]], "carrier_frequency (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.carrier_frequency", false]], "carrier_frequency (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.carrier_frequency", false]], "cartesian_array_response() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.cartesian_array_response", false]], "cartesian_phase_response() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.cartesian_phase_response", false]], "catch_exceptions (montecarlo attribute)": [[55, "hermespy.core.monte_carlo.MonteCarlo.catch_exceptions", false]], "catch_exceptions (montecarloactor attribute)": [[55, "hermespy.core.monte_carlo.MonteCarloActor.catch_exceptions", false]], "cdl (class in hermespy.channel.cdl.cdl)": [[7, "hermespy.channel.cdl.cdl.CDL", false]], "cdlrealization (class in hermespy.channel.cdl.cdl)": [[7, "hermespy.channel.cdl.cdl.CDLRealization", false]], "cdlrt (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.CDLRT", false]], "cdltype (class in hermespy.channel.cdl)": [[7, "hermespy.channel.cdl.CDLType", false]], "channel (antennacorrelation property)": [[25, "hermespy.channel.fading.fading.AntennaCorrelation.channel", false]], "channel (class in hermespy.channel.channel)": [[15, "hermespy.channel.channel.Channel", false]], "channel() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.channel", false]], "channel_equalization (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.channel_equalization", false]], "channel_estimation (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.channel_estimation", false]], "channel_realizations (simulateddrop property)": [[218, "hermespy.simulation.drop.SimulatedDrop.channel_realizations", false]], "channelequalization (class in hermespy.modem.waveform)": [[122, "hermespy.modem.waveform.ChannelEqualization", false]], "channelestimation (class in hermespy.modem.waveform)": [[123, "hermespy.modem.waveform.ChannelEstimation", false]], "channelrealization (class in hermespy.channel.channel)": [[16, "hermespy.channel.channel.ChannelRealization", false]], "channels (simulationscenario property)": [[220, "hermespy.simulation.simulation.SimulationScenario.channels", false]], "channelsample (class in hermespy.channel.channel)": [[17, "hermespy.channel.channel.ChannelSample", false]], "channelsamplehook (class in hermespy.channel.channel)": [[15, "hermespy.channel.channel.ChannelSampleHook", false]], "channelstateinformation (class in hermespy.core.channel)": [[37, "hermespy.core.channel.ChannelStateInformation", false]], "characteristics() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.characteristics", false]], "check_block_size (cyclicredundancycheck property)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.check_block_size", false]], "chirp_bandwidth (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirp_bandwidth", false]], "chirp_duration (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirp_duration", false]], "chirp_duration (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.chirp_duration", false]], "chirp_duration (fmcwwaveform property)": [[130, "hermespy.modem.waveform_single_carrier.FMCWWaveform.chirp_duration", false]], "chirp_slope (fmcwwaveform property)": [[130, "hermespy.modem.waveform_single_carrier.FMCWWaveform.chirp_slope", false]], "chirpfskcorrelationsynchronization (class in hermespy.modem.waveform_chirp_fsk)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization", false]], "chirpfsksynchronization (class in hermespy.modem.waveform_chirp_fsk)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKSynchronization", false]], "chirpfskwaveform (class in hermespy.modem.waveform_chirp_fsk)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform", false]], "chirps_in_frame (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.chirps_in_frame", false]], "clean (factory property)": [[53, "hermespy.core.factory.Factory.clean", false]], "clippingpoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[204, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier", false]], "cloud (radarreception property)": [[164, "hermespy.radar.radar.RadarReception.cloud", false]], "cluster_delay_spread (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_delay_spread", false]], "cluster_delays (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_delays", false]], "cluster_powers (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.cluster_powers", false]], "clusterdelaylinebase (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase", false]], "clusterdelaylinerealization (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization", false]], "clusterdelaylinesample (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample", false]], "clutter_density (factorytype property)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.clutter_density", false]], "clutter_height (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.clutter_height", false]], "clutter_size (factorytype property)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.clutter_size", false]], "code_block_size (bchcoding property)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.code_block_size", false]], "code_block_size (blockinterleaver property)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.code_block_size", false]], "code_block_size (cyclicredundancycheck property)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.code_block_size", false]], "code_block_size (encoder property)": [[66, "hermespy.fec.coding.Encoder.code_block_size", false]], "code_block_size (encodermanager property)": [[66, "hermespy.fec.coding.EncoderManager.code_block_size", false]], "code_block_size (ldpccoding property)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.code_block_size", false]], "code_block_size (polarsccoding property)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding.code_block_size", false]], "code_block_size (polarsclcoding property)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding.code_block_size", false]], "code_block_size (reedsolomoncoding property)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.code_block_size", false]], "code_block_size (repetitionencoder property)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.code_block_size", false]], "code_block_size (rsccoding property)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding.code_block_size", false]], "code_block_size (scrambler3gpp property)": [[73, "hermespy.fec.scrambler.Scrambler3GPP.code_block_size", false]], "code_block_size (scrambler80211a property)": [[73, "hermespy.fec.scrambler.Scrambler80211a.code_block_size", false]], "code_block_size (turbocoding property)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.code_block_size", false]], "communicationevaluator (class in hermespy.modem.evaluators)": [[96, "hermespy.modem.evaluators.CommunicationEvaluator", false]], "communicationreception (class in hermespy.modem.modem)": [[104, "hermespy.modem.modem.CommunicationReception", false]], "communicationreceptionframe (class in hermespy.modem.modem)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame", false]], "communicationtransmission (class in hermespy.modem.modem)": [[106, "hermespy.modem.modem.CommunicationTransmission", false]], "communicationtransmissionframe (class in hermespy.modem.modem)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame", false]], "communicationwaveform (class in hermespy.modem.waveform)": [[121, "hermespy.modem.waveform.CommunicationWaveform", false]], "compute_num_offset_samples() (triggerrealization method)": [[227, "hermespy.simulation.simulated_device.TriggerRealization.compute_num_offset_samples", false]], "concatenate() (channelstateinformation static method)": [[37, "hermespy.core.channel.ChannelStateInformation.concatenate", false]], "confidence (evaluator property)": [[55, "hermespy.core.monte_carlo.Evaluator.confidence", false]], "confidence_status() (gridsection method)": [[55, "hermespy.core.monte_carlo.GridSection.confidence_status", false]], "confidences (gridsection property)": [[55, "hermespy.core.monte_carlo.GridSection.confidences", false]], "configurablepilotwaveform (class in hermespy.modem.waveform)": [[121, "hermespy.modem.waveform.ConfigurablePilotWaveform", false]], "configure_point() (griddimension method)": [[55, "hermespy.core.monte_carlo.GridDimension.configure_point", false]], "considered_objects (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.considered_objects", false]], "consistentboolean (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentBoolean", false]], "consistentgaussian (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentGaussian", false]], "consistentgenerator (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentGenerator", false]], "consistentrealization (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentRealization", false]], "consistentsample (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentSample", false]], "consistentuniform (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentUniform", false]], "consistentvariable (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.ConsistentVariable", false]], "console (executable property)": [[52, "hermespy.core.executable.Executable.console", false]], "console (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.console", false]], "console (simulation property)": [[219, "hermespy.simulation.simulation.Simulation.console", false]], "console_mode (executable property)": [[52, "hermespy.core.executable.Executable.console_mode", false]], "console_mode (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.console_mode", false]], "console_mode (simulation property)": [[219, "hermespy.simulation.simulation.Simulation.console_mode", false]], "consolemode (class in hermespy.core.definitions)": [[38, "hermespy.core.definitions.ConsoleMode", false]], "constellationevm (class in hermespy.modem.evaluators)": [[100, "hermespy.modem.evaluators.ConstellationEVM", false]], "container (stemvisualization property)": [[62, "hermespy.core.visualize.StemVisualization.container", false]], "conventionalbeamformer (class in hermespy.beamforming.conventional)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer", false]], "conversion (logarithmic property)": [[54, "hermespy.core.logarithmic.Logarithmic.conversion", false]], "conversion (logarithmicsequence property)": [[54, "hermespy.core.logarithmic.LogarithmicSequence.conversion", false]], "convert() (analogdigitalconverter method)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.convert", false]], "coordinatefocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus", false]], "coordinates (coordinatefocus property)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.coordinates", false]], "coordinates (gridsection property)": [[55, "hermespy.core.monte_carlo.GridSection.coordinates", false]], "copy() (antenna method)": [[36, "hermespy.core.antennas.Antenna.copy", false]], "copy() (beamfocus method)": [[2, "hermespy.beamforming.beamformer.BeamFocus.copy", false]], "copy() (coordinatefocus method)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.copy", false]], "copy() (devicefocus method)": [[2, "hermespy.beamforming.beamformer.DeviceFocus.copy", false]], "copy() (dipole method)": [[36, "hermespy.core.antennas.Dipole.copy", false]], "copy() (idealantenna method)": [[36, "hermespy.core.antennas.IdealAntenna.copy", false]], "copy() (linearantenna method)": [[36, "hermespy.core.antennas.LinearAntenna.copy", false]], "copy() (patchantenna method)": [[36, "hermespy.core.antennas.PatchAntenna.copy", false]], "copy() (signal method)": [[60, "hermespy.core.signal_model.Signal.copy", false]], "copy() (sphericalfocus method)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.copy", false]], "copy() (statedsymbols method)": [[120, "hermespy.modem.symbols.StatedSymbols.copy", false]], "copy() (symbols method)": [[120, "hermespy.modem.symbols.Symbols.copy", false]], "correction_power (bchcoding property)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.correction_power", false]], "correction_power (reedsolomoncoding property)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.correction_power", false]], "correlation_distance (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.correlation_distance", false]], "correlationsynchronization (class in hermespy.modem.waveform_correlation_synchronization)": [[128, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization", false]], "cost259 (class in hermespy.channel.fading.cost259)": [[22, "hermespy.channel.fading.cost259.Cost259", false]], "cost259type (class in hermespy.channel.fading.cost259)": [[22, "hermespy.channel.fading.cost259.Cost259Type", false]], "count_antennas() (antennaarray method)": [[36, "hermespy.core.antennas.AntennaArray.count_antennas", false]], "count_receive_antennas() (antennaarray method)": [[36, "hermespy.core.antennas.AntennaArray.count_receive_antennas", false]], "count_transmit_antennas() (antennaarray method)": [[36, "hermespy.core.antennas.AntennaArray.count_transmit_antennas", false]], "coupling (class in hermespy.simulation.coupling.coupling)": [[180, "hermespy.simulation.coupling.coupling.Coupling", false]], "coupling (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.coupling", false]], "covariance (customantennacorrelation property)": [[25, "hermespy.channel.fading.fading.CustomAntennaCorrelation.covariance", false]], "cpus_per_actor (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.cpus_per_actor", false]], "create() (signal static method)": [[60, "hermespy.core.signal_model.Signal.Create", false]], "create_figure() (_anglevisualization method)": [[8, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization.create_figure", false]], "create_figure() (radarpointcloud method)": [[156, "hermespy.radar.detection.RadarPointCloud.create_figure", false]], "create_figure() (scalarevaluationresult method)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult.create_figure", false]], "create_figure() (visualizable method)": [[62, "hermespy.core.visualize.Visualizable.create_figure", false]], "cross_section (fixedcrosssection property)": [[32, "hermespy.channel.radar.multi.FixedCrossSection.cross_section", false]], "cross_section (physicalradartarget property)": [[32, "hermespy.channel.radar.multi.PhysicalRadarTarget.cross_section", false]], "cross_section (radartargetpath property)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.cross_section", false]], "cross_section (virtualradartarget property)": [[32, "hermespy.channel.radar.multi.VirtualRadarTarget.cross_section", false]], "crt (class in hermespy.channel.channel)": [[16, "hermespy.channel.channel.CRT", false]], "cst (class in hermespy.channel.channel)": [[17, "hermespy.channel.channel.CST", false]], "cube (radarreception property)": [[164, "hermespy.radar.radar.RadarReception.cube", false]], "cube_h0 (rocevaluation property)": [[160, "hermespy.radar.evaluators.RocEvaluation.cube_h0", false]], "cube_h1 (rocevaluation property)": [[160, "hermespy.radar.evaluators.RocEvaluation.cube_h1", false]], "cummulation (rootmeansquareartifact property)": [[161, "hermespy.radar.evaluators.RootMeanSquareArtifact.cummulation", false]], "customantennaarray (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.CustomAntennaArray", false]], "customantennacorrelation (class in hermespy.channel.fading.fading)": [[25, "hermespy.channel.fading.fading.CustomAntennaCorrelation", false]], "custompoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[205, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier", false]], "cwt (class in hermespy.modem.waveform)": [[121, "hermespy.modem.waveform.CWT", false]], "cyclic (prefixtype attribute)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.CYCLIC", false]], "cyclicredundancycheck (class in hermespy.fec.cyclic_redundancy_check)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck", false]], "d (cdltype attribute)": [[7, "hermespy.channel.cdl.CDLType.D", false]], "d (tdltype attribute)": [[29, "hermespy.channel.fading.tdl.TDLType.D", false]], "data (elementtype attribute)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.DATA", false]], "data (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.data", false]], "data_rate() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.data_rate", false]], "db (valuetype attribute)": [[54, "hermespy.core.logarithmic.ValueType.DB", false]], "db() (in module hermespy.core.logarithmic)": [[54, "hermespy.core.logarithmic.dB", false]], "db2lin() (in module hermespy.tools.math)": [[230, "hermespy.tools.math.db2lin", false]], "dbconversiontype (class in hermespy.tools.math)": [[230, "hermespy.tools.math.DbConversionType", false]], "dc_suppression (ofdmwaveform attribute)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.dc_suppression", false]], "dcrt (class in hermespy.channel.delay.delay)": [[19, "hermespy.channel.delay.delay.DCRT", false]], "debug (executable property)": [[52, "hermespy.core.executable.Executable.debug", false]], "decode() (alamouti method)": [[116, "hermespy.modem.precoding.space_time_block_coding.Alamouti.decode", false]], "decode() (bchcoding method)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.decode", false]], "decode() (blockinterleaver method)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.decode", false]], "decode() (cyclicredundancycheck method)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.decode", false]], "decode() (dft method)": [[113, "hermespy.modem.precoding.dft.DFT.decode", false]], "decode() (encoder method)": [[66, "hermespy.fec.coding.Encoder.decode", false]], "decode() (encodermanager method)": [[66, "hermespy.fec.coding.EncoderManager.decode", false]], "decode() (ganesan method)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan.decode", false]], "decode() (ldpccoding method)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.decode", false]], "decode() (maximumratiocombining method)": [[114, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.decode", false]], "decode() (polarsccoding method)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding.decode", false]], "decode() (polarsclcoding method)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding.decode", false]], "decode() (receivestreamcoding method)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamCoding.decode", false]], "decode() (reedsolomoncoding method)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.decode", false]], "decode() (repetitionencoder method)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.decode", false]], "decode() (rsccoding method)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding.decode", false]], "decode() (scrambler3gpp method)": [[73, "hermespy.fec.scrambler.Scrambler3GPP.decode", false]], "decode() (scrambler80211a method)": [[73, "hermespy.fec.scrambler.Scrambler80211a.decode", false]], "decode() (singlecarrier method)": [[115, "hermespy.modem.precoding.single_carrier.SingleCarrier.decode", false]], "decode() (spatialmultiplexing method)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing.decode", false]], "decode() (symbolprecoder method)": [[118, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoder.decode", false]], "decode() (symbolprecoding method)": [[119, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoding.decode", false]], "decode() (turbocoding method)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.decode", false]], "decode_streams() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.decode_streams", false]], "decode_streams() (receivestreamdecoder method)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder.decode_streams", false]], "decoded_bits (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_bits", false]], "decoded_signal (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_signal", false]], "decoded_symbols (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.decoded_symbols", false]], "decorrelation_distance (cdl property)": [[7, "hermespy.channel.cdl.cdl.CDL.decorrelation_distance", false]], "decorrelation_distance (multitargetradarchannel property)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.decorrelation_distance", false]], "decorrelation_distance (randomdelaychannel property)": [[20, "hermespy.channel.delay.random.RandomDelayChannel.decorrelation_distance", false]], "decorrelation_distance (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.decorrelation_distance", false]], "default (scenariomode attribute)": [[59, "hermespy.core.scenario.ScenarioMode.DEFAULT", false]], "default_results_dir() (executable static method)": [[52, "hermespy.core.executable.Executable.default_results_dir", false]], "delay (delaycalibration property)": [[78, "hermespy.hardware_loop.calibration.delay.DelayCalibration.delay", false]], "delay (delaychannelsample property)": [[19, "hermespy.channel.delay.delay.DelayChannelSample.delay", false]], "delay (randomdelaychannel property)": [[20, "hermespy.channel.delay.random.RandomDelayChannel.delay", false]], "delay (randomdelaychannelrealization property)": [[20, "hermespy.channel.delay.random.RandomDelayChannelRealization.delay", false]], "delay (selectiveleakagecalibration property)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.delay", false]], "delay (signal attribute)": [[60, "hermespy.core.signal_model.Signal.delay", false]], "delay_calibration (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.delay_calibration", false]], "delay_normalization (clusterdelaylinebase property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.delay_normalization", false]], "delay_offset (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.delay_offset", false]], "delay_profile (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.delay_profile", false]], "delay_resampling_matrix() (in module hermespy.tools.resampling)": [[231, "hermespy.tools.resampling.delay_resampling_matrix", false]], "delaycalibration (class in hermespy.hardware_loop.calibration.delay)": [[78, "hermespy.hardware_loop.calibration.delay.DelayCalibration", false]], "delaychannelbase (class in hermespy.channel.delay.delay)": [[19, "hermespy.channel.delay.delay.DelayChannelBase", false]], "delaychannelrealization (class in hermespy.channel.delay.delay)": [[19, "hermespy.channel.delay.delay.DelayChannelRealization", false]], "delaychannelsample (class in hermespy.channel.delay.delay)": [[19, "hermespy.channel.delay.delay.DelayChannelSample", false]], "delays (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.delays", false]], "deleter() (registereddimension method)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.deleter", false]], "demodulate() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.demodulate", false]], "demodulate() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.demodulate", false]], "demodulate() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.demodulate", false]], "demodulate() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.demodulate", false]], "dense_state() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.dense_state", false]], "dense_states() (statedsymbols method)": [[120, "hermespy.modem.symbols.StatedSymbols.dense_states", false]], "detect() (maxdetector method)": [[153, "hermespy.radar.detection.MaxDetector.detect", false]], "detect() (radardetector method)": [[155, "hermespy.radar.detection.RadarDetector.detect", false]], "detect() (thresholddetector method)": [[157, "hermespy.radar.detection.ThresholdDetector.detect", false]], "detectionprobabilityevaluation (class in hermespy.radar.evaluators)": [[158, "hermespy.radar.evaluators.DetectionProbabilityEvaluation", false]], "detectionprobartifact (class in hermespy.radar.evaluators)": [[158, "hermespy.radar.evaluators.DetectionProbArtifact", false]], "detectionprobevaluator (class in hermespy.radar.evaluators)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator", false]], "detector (radarbase property)": [[163, "hermespy.radar.radar.RadarBase.detector", false]], "device (class in hermespy.core.device)": [[39, "hermespy.core.device.Device", false]], "device (coupling property)": [[180, "hermespy.simulation.coupling.coupling.Coupling.device", false]], "device (devicefocus property)": [[2, "hermespy.beamforming.beamformer.DeviceFocus.device", false]], "device (duplexmodem property)": [[108, "hermespy.modem.modem.DuplexModem.device", false]], "device (duplexoperator property)": [[51, "hermespy.core.duplex.DuplexOperator.device", false]], "device (hardwareloopdeviceplot property)": [[88, "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot.device", false]], "device (isolation property)": [[184, "hermespy.simulation.isolation.isolation.Isolation.device", false]], "device (receiver property)": [[46, "hermespy.core.device.Receiver.device", false]], "device (receivingmodem property)": [[109, "hermespy.modem.modem.ReceivingModem.device", false]], "device (transmitter property)": [[49, "hermespy.core.device.Transmitter.device", false]], "device (transmittingmodem property)": [[111, "hermespy.modem.modem.TransmittingModem.device", false]], "device_channels() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.device_channels", false]], "device_index() (pipeline method)": [[57, "hermespy.core.pipeline.Pipeline.device_index", false]], "device_index() (scenario method)": [[59, "hermespy.core.scenario.Scenario.device_index", false]], "device_receptions (drop property)": [[50, "hermespy.core.drop.Drop.device_receptions", false]], "device_registered() (scenario method)": [[59, "hermespy.core.scenario.Scenario.device_registered", false]], "device_transmissions (drop property)": [[50, "hermespy.core.drop.Drop.device_transmissions", false]], "devicefocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.DeviceFocus", false]], "deviceinput (class in hermespy.core.device)": [[40, "hermespy.core.device.DeviceInput", false]], "deviceoutput (class in hermespy.core.device)": [[41, "hermespy.core.device.DeviceOutput", false]], "devicereception (class in hermespy.core.device)": [[42, "hermespy.core.device.DeviceReception", false]], "devicereceptionplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.DeviceReceptionPlot", false]], "devices (scenario property)": [[59, "hermespy.core.scenario.Scenario.devices", false]], "devices (triggermodel property)": [[226, "hermespy.simulation.simulated_device.TriggerModel.devices", false]], "devicetransmission (class in hermespy.core.device)": [[43, "hermespy.core.device.DeviceTransmission", false]], "devicetransmissionplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.DeviceTransmissionPlot", false]], "dft (class in hermespy.modem.precoding.dft)": [[113, "hermespy.modem.precoding.dft.DFT", false]], "dh (factorytype attribute)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.DH", false]], "dimension (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.dimension", false]], "dimensions (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.dimensions", false]], "dimensions (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.dimensions", false]], "dipole (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.Dipole", false]], "direction (class in hermespy.core.transformation)": [[61, "hermespy.core.transformation.Direction", false]], "dl (factorytype attribute)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.DL", false]], "doppler_bins (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.doppler_bins", false]], "doppler_frequency (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.doppler_frequency", false]], "drop (class in hermespy.core.drop)": [[50, "hermespy.core.drop.Drop", false]], "drop() (scenario method)": [[59, "hermespy.core.scenario.Scenario.drop", false]], "drop_duration (scenario property)": [[59, "hermespy.core.scenario.Scenario.drop_duration", false]], "drop_interval (simulation property)": [[219, "hermespy.simulation.simulation.Simulation.drop_interval", false]], "dualconsistentrealization (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.DualConsistentRealization", false]], "dualconsistentsample (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.DualConsistentSample", false]], "dump_results (simulation attribute)": [[219, "hermespy.simulation.simulation.Simulation.dump_results", false]], "duplex (antennamode attribute)": [[36, "hermespy.core.antennas.AntennaMode.DUPLEX", false]], "duplexjcasoperator (class in hermespy.jcas.jcas)": [[90, "hermespy.jcas.jcas.DuplexJCASOperator", false]], "duplexmodem (class in hermespy.modem.modem)": [[108, "hermespy.modem.modem.DuplexModem", false]], "duplexoperator (class in hermespy.core.duplex)": [[51, "hermespy.core.duplex.DuplexOperator", false]], "duration (guardsection property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.duration", false]], "duration (signal property)": [[60, "hermespy.core.signal_model.Signal.duration", false]], "e (cdltype attribute)": [[7, "hermespy.channel.cdl.CDLType.E", false]], "e (tdltype attribute)": [[29, "hermespy.channel.fading.tdl.TDLType.E", false]], "ebn0 (class in hermespy.simulation.modem.noise)": [[188, "hermespy.simulation.modem.noise.EBN0", false]], "elements (gridresource attribute)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.elements", false]], "elementtype (class in hermespy.modem.waveforms.orthogonal.waveform)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.ElementType", false]], "emerging_signals (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.emerging_signals", false]], "emerging_signals (simulateddeviceoutput property)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.emerging_signals", false]], "empty() (signal static method)": [[60, "hermespy.core.signal_model.Signal.Empty", false]], "enabled (bchcoding attribute)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.enabled", false]], "enabled (encoder property)": [[66, "hermespy.fec.coding.Encoder.enabled", false]], "enabled (ldpccoding attribute)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.enabled", false]], "enabled (polarsccoding attribute)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding.enabled", false]], "enabled (polarsclcoding attribute)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding.enabled", false]], "enabled (reedsolomoncoding attribute)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.enabled", false]], "enabled (rsccoding attribute)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding.enabled", false]], "enabled (turbocoding attribute)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.enabled", false]], "encode() (alamouti method)": [[116, "hermespy.modem.precoding.space_time_block_coding.Alamouti.encode", false]], "encode() (bchcoding method)": [[64, "hermespy.fec.aff3ct.bch.BCHCoding.encode", false]], "encode() (blockinterleaver method)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.encode", false]], "encode() (cyclicredundancycheck method)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.encode", false]], "encode() (dft method)": [[113, "hermespy.modem.precoding.dft.DFT.encode", false]], "encode() (encoder method)": [[66, "hermespy.fec.coding.Encoder.encode", false]], "encode() (encodermanager method)": [[66, "hermespy.fec.coding.EncoderManager.encode", false]], "encode() (ganesan method)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan.encode", false]], "encode() (ldpccoding method)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.encode", false]], "encode() (maximumratiocombining method)": [[114, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.encode", false]], "encode() (polarsccoding method)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding.encode", false]], "encode() (polarsclcoding method)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding.encode", false]], "encode() (reedsolomoncoding method)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding.encode", false]], "encode() (repetitionencoder method)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.encode", false]], "encode() (rsccoding method)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding.encode", false]], "encode() (scrambler3gpp method)": [[73, "hermespy.fec.scrambler.Scrambler3GPP.encode", false]], "encode() (scrambler80211a method)": [[73, "hermespy.fec.scrambler.Scrambler80211a.encode", false]], "encode() (singlecarrier method)": [[115, "hermespy.modem.precoding.single_carrier.SingleCarrier.encode", false]], "encode() (spatialmultiplexing method)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing.encode", false]], "encode() (symbolprecoder method)": [[118, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoder.encode", false]], "encode() (symbolprecoding method)": [[119, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoding.encode", false]], "encode() (transmitstreamcoding method)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamCoding.encode", false]], "encode() (turbocoding method)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.encode", false]], "encode_streams() (transmitbeamformer method)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.encode_streams", false]], "encode_streams() (transmitstreamencoder method)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder.encode_streams", false]], "encoded_bits (communicationreception property)": [[104, "hermespy.modem.modem.CommunicationReception.encoded_bits", false]], "encoded_bits (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.encoded_bits", false]], "encoded_bits (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.encoded_bits", false]], "encoded_symbols (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.encoded_symbols", false]], "encoder (class in hermespy.fec.coding)": [[66, "hermespy.fec.coding.Encoder", false]], "encoder_manager (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.encoder_manager", false]], "encodermanager (class in hermespy.fec.coding)": [[66, "hermespy.fec.coding.EncoderManager", false]], "encoders (encodermanager property)": [[66, "hermespy.fec.coding.EncoderManager.encoders", false]], "energy (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.energy", false]], "energy (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.energy", false]], "energy (signal property)": [[60, "hermespy.core.signal_model.Signal.energy", false]], "energy (signalreceiver property)": [[56, "hermespy.core.operators.SignalReceiver.energy", false]], "equalize_channel() (channelequalization method)": [[122, "hermespy.modem.waveform.ChannelEqualization.equalize_channel", false]], "equalize_channel() (zeroforcingchannelequalization method)": [[125, "hermespy.modem.waveform.ZeroForcingChannelEqualization.equalize_channel", false]], "equalize_symbols() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.equalize_symbols", false]], "equalized_symbols (communicationreception property)": [[104, "hermespy.modem.modem.CommunicationReception.equalized_symbols", false]], "equalized_symbols (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.equalized_symbols", false]], "error (verbosity attribute)": [[52, "hermespy.core.executable.Verbosity.ERROR", false]], "esn0 (class in hermespy.simulation.modem.noise)": [[189, "hermespy.simulation.modem.noise.ESN0", false]], "estimate() (delaycalibration static method)": [[78, "hermespy.hardware_loop.calibration.delay.DelayCalibration.Estimate", false]], "estimate() (fmcw method)": [[162, "hermespy.radar.fmcw.FMCW.estimate", false]], "estimate() (radarwaveform method)": [[166, "hermespy.radar.radar.RadarWaveform.estimate", false]], "estimate_channel() (channelestimation method)": [[123, "hermespy.modem.waveform.ChannelEstimation.estimate_channel", false]], "estimate_channel() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.estimate_channel", false]], "estimate_delay() (selectiveleakagecalibration method)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.estimate_delay", false]], "estimate_gain() (automaticgaincontrol method)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.estimate_gain", false]], "estimate_gain() (gain method)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.estimate_gain", false]], "estimate_gain() (gaincontrolbase method)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.estimate_gain", false]], "estimate_noise_power() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.estimate_noise_power", false]], "evaluate() (biterrorevaluator method)": [[98, "hermespy.modem.evaluators.BitErrorEvaluator.evaluate", false]], "evaluate() (blockerrorevaluator method)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluator.evaluate", false]], "evaluate() (constellationevm method)": [[100, "hermespy.modem.evaluators.ConstellationEVM.evaluate", false]], "evaluate() (detectionprobevaluator method)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator.evaluate", false]], "evaluate() (evaluator method)": [[55, "hermespy.core.monte_carlo.Evaluator.evaluate", false]], "evaluate() (frameerrorevaluator method)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluator.evaluate", false]], "evaluate() (receiveroperatingcharacteristic method)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.evaluate", false]], "evaluate() (rootmeansquareerror method)": [[161, "hermespy.radar.evaluators.RootMeanSquareError.evaluate", false]], "evaluate() (throughputevaluator method)": [[102, "hermespy.modem.evaluators.ThroughputEvaluator.evaluate", false]], "evaluation (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.Evaluation", false]], "evaluation (evaluationtemplate property)": [[55, "hermespy.core.monte_carlo.EvaluationTemplate.evaluation", false]], "evaluation_results (montecarloresult property)": [[55, "hermespy.core.monte_carlo.MonteCarloResult.evaluation_results", false]], "evaluationplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.EvaluationPlot", false]], "evaluationresult (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.EvaluationResult", false]], "evaluationtemplate (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.EvaluationTemplate", false]], "evaluator (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.Evaluator", false]], "evaluator (evaluationresult property)": [[55, "hermespy.core.monte_carlo.EvaluationResult.evaluator", false]], "evaluator (hardwareloopevaluatorplot property)": [[88, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot.evaluator", false]], "evaluator_index (hardwareloopevaluatorplot property)": [[88, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot.evaluator_index", false]], "evaluator_index() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.evaluator_index", false]], "evaluators (hardwareloop property)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.evaluators", false]], "evaluators (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.evaluators", false]], "evmartifact (class in hermespy.modem.evaluators)": [[100, "hermespy.modem.evaluators.EVMArtifact", false]], "evmevaluation (class in hermespy.modem.evaluators)": [[100, "hermespy.modem.evaluators.EVMEvaluation", false]], "executable (class in hermespy.core.executable)": [[52, "hermespy.core.executable.Executable", false]], "execute() (executable method)": [[52, "hermespy.core.executable.Executable.execute", false]], "expected_energy_scale (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.expected_energy_scale", false]], "expected_energy_scale (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.expected_energy_scale", false]], "expected_energy_scale (delaychannelsample property)": [[19, "hermespy.channel.delay.delay.DelayChannelSample.expected_energy_scale", false]], "expected_energy_scale (idealchannelsample property)": [[30, "hermespy.channel.ideal.IdealChannelSample.expected_energy_scale", false]], "expected_energy_scale (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.expected_energy_scale", false]], "expected_energy_scale (quadrigachannelsample property)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.expected_energy_scale", false]], "expected_energy_scale (radarchannelsample property)": [[33, "hermespy.channel.radar.radar.RadarChannelSample.expected_energy_scale", false]], "expected_state (clusterdelaylinebase property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.expected_state", false]], "expected_state (clusterdelaylinerealization property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization.expected_state", false]], "exponential (class in hermespy.channel.fading.exponential)": [[23, "hermespy.channel.fading.exponential.Exponential", false]], "extensions (factory attribute)": [[53, "hermespy.core.factory.Factory.extensions", false]], "eye (signal property)": [[60, "hermespy.core.signal_model.Signal.eye", false]], "eyeplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.EyePlot", false]], "factory (class in hermespy.core.factory)": [[53, "hermespy.core.factory.Factory", false]], "factory_type (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.factory_type", false]], "factorytype (class in hermespy.channel.cdl.indoor_factory)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType", false]], "fetch_scalars() (consistentsample method)": [[18, "hermespy.channel.consistent.ConsistentSample.fetch_scalars", false]], "fetch_scalars() (dualconsistentsample method)": [[18, "hermespy.channel.consistent.DualConsistentSample.fetch_scalars", false]], "fetch_scalars() (staticconsistentsample method)": [[18, "hermespy.channel.consistent.StaticConsistentSample.fetch_scalars", false]], "figure (visualization property)": [[62, "hermespy.core.visualize.Visualization.figure", false]], "filter_length (rolledoffsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.filter_length", false]], "filter_order (signal attribute)": [[60, "hermespy.core.signal_model.Signal.filter_order", false]], "filteredsinglecarrierwaveform (class in hermespy.modem.waveform_single_carrier)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform", false]], "first_impact (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.first_impact", false]], "first_impact (registereddimension property)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.first_impact", false]], "fixedcrosssection (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.FixedCrossSection", false]], "fmcw (class in hermespy.radar.fmcw)": [[162, "hermespy.radar.fmcw.FMCW", false]], "fmcwwaveform (class in hermespy.modem.waveform_single_carrier)": [[130, "hermespy.modem.waveform_single_carrier.FMCWWaveform", false]], "forwards_transformation (transformable property)": [[61, "hermespy.core.transformation.Transformable.forwards_transformation", false]], "forwards_transformation (transformablebase property)": [[61, "hermespy.core.transformation.TransformableBase.forwards_transformation", false]], "forwards_transformation (transformablelink property)": [[61, "hermespy.core.transformation.TransformableLink.forwards_transformation", false]], "frame_duration (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.frame_duration", false]], "frame_duration (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.frame_duration", false]], "frame_duration (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.frame_duration", false]], "frame_duration (duplexjcasoperator property)": [[90, "hermespy.jcas.jcas.DuplexJCASOperator.frame_duration", false]], "frame_duration (duplexoperator property)": [[51, "hermespy.core.duplex.DuplexOperator.frame_duration", false]], "frame_duration (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.frame_duration", false]], "frame_duration (matchedfilterjcas property)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas.frame_duration", false]], "frame_duration (radar property)": [[163, "hermespy.radar.radar.Radar.frame_duration", false]], "frame_duration (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.frame_duration", false]], "frame_duration (staticoperator property)": [[56, "hermespy.core.operators.StaticOperator.frame_duration", false]], "frameerrorartifact (class in hermespy.modem.evaluators)": [[101, "hermespy.modem.evaluators.FrameErrorArtifact", false]], "frameerrorevaluation (class in hermespy.modem.evaluators)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluation", false]], "frameerrorevaluator (class in hermespy.modem.evaluators)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluator", false]], "frames (communicationreception attribute)": [[104, "hermespy.modem.modem.CommunicationReception.frames", false]], "frames (communicationtransmission attribute)": [[106, "hermespy.modem.modem.CommunicationTransmission.frames", false]], "freq_difference (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.freq_difference", false]], "frequencies (dualconsistentrealization property)": [[18, "hermespy.channel.consistent.DualConsistentRealization.frequencies", false]], "frequencies (signal property)": [[60, "hermespy.core.signal_model.Signal.frequencies", false]], "from_artifacts() (scalarevaluationresult class method)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult.From_Artifacts", false]], "from_cartesian() (direction class method)": [[61, "hermespy.core.transformation.Direction.From_Cartesian", false]], "from_deviceoutput() (simulateddeviceoutput class method)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.From_DeviceOutput", false]], "from_file() (factory method)": [[53, "hermespy.core.factory.Factory.from_file", false]], "from_folder() (factory method)": [[53, "hermespy.core.factory.Factory.from_folder", false]], "from_hdf() (cdlrealization static method)": [[7, "hermespy.channel.cdl.cdl.CDLRealization.From_HDF", false]], "from_hdf() (idealchannelrealization static method)": [[30, "hermespy.channel.ideal.IdealChannelRealization.From_HDF", false]], "from_hdf() (indoorfactoryrealization class method)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization.From_HDF", false]], "from_hdf() (indoorofficerealization class method)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization.From_HDF", false]], "from_hdf() (multipathfadingrealization static method)": [[27, "hermespy.channel.fading.fading.MultipathFadingRealization.From_HDF", false]], "from_hdf() (multitargetradarchannelrealization static method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization.From_HDF", false]], "from_hdf() (quadrigachannelrealization static method)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization.From_HDF", false]], "from_hdf() (randomdelaychannelrealization static method)": [[20, "hermespy.channel.delay.random.RandomDelayChannelRealization.From_HDF", false]], "from_hdf() (receiveroperatingcharacteristic class method)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.From_HDF", false]], "from_hdf() (ruralmacrocellsrealization class method)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization.From_HDF", false]], "from_hdf() (singletargetradarchannelrealization static method)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization.From_HDF", false]], "from_hdf() (spatialdelaychannelrealization static method)": [[21, "hermespy.channel.delay.spatial.SpatialDelayChannelRealization.From_HDF", false]], "from_hdf() (urbanmacrocellsrealization class method)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization.From_HDF", false]], "from_hdf() (urbanmicrocellsrealization class method)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization.From_HDF", false]], "from_interleaved() (signal class method)": [[60, "hermespy.core.signal_model.Signal.from_interleaved", false]], "from_ndarray() (signal method)": [[60, "hermespy.core.signal_model.Signal.from_ndarray", false]], "from_output() (devicetransmission class method)": [[43, "hermespy.core.device.DeviceTransmission.From_Output", false]], "from_parameters() (serializableenum class method)": [[53, "hermespy.core.factory.SerializableEnum.from_parameters", false]], "from_path() (factory method)": [[53, "hermespy.core.factory.Factory.from_path", false]], "from_processeddeviceinput() (devicereception class method)": [[42, "hermespy.core.device.DeviceReception.From_ProcessedDeviceInput", false]], "from_processedsimulateddeviceinput() (simulateddevicereception class method)": [[216, "hermespy.simulation.simulated_device.SimulatedDeviceReception.From_ProcessedSimulatedDeviceInput", false]], "from_quaternion() (transformation class method)": [[61, "hermespy.core.transformation.Transformation.From_Quaternion", false]], "from_rpy() (transformation class method)": [[61, "hermespy.core.transformation.Transformation.From_RPY", false]], "from_scenarios() (receiveroperatingcharacteristic class method)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.From_Scenarios", false]], "from_scenarios() (receiveroperatingcharacteristic method)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.from_scenarios", false]], "from_simulateddeviceoutput() (simulateddevicetransmission class method)": [[217, "hermespy.simulation.simulated_device.SimulatedDeviceTransmission.From_SimulatedDeviceOutput", false]], "from_spherical() (direction class method)": [[61, "hermespy.core.transformation.Direction.From_Spherical", false]], "from_str() (factory method)": [[53, "hermespy.core.factory.Factory.from_str", false]], "from_stream() (factory method)": [[53, "hermespy.core.factory.Factory.from_stream", false]], "from_translation() (transformation class method)": [[61, "hermespy.core.transformation.Transformation.From_Translation", false]], "from_tuple() (logarithmic class method)": [[54, "hermespy.core.logarithmic.Logarithmic.From_Tuple", false]], "from_yaml() (pilotsection class method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.from_yaml", false]], "from_yaml() (precoding class method)": [[149, "hermespy.precoding.precoding.Precoding.from_yaml", false]], "from_yaml() (simulation class method)": [[219, "hermespy.simulation.simulation.Simulation.from_yaml", false]], "fromspherical() (pointdetection class method)": [[154, "hermespy.radar.detection.PointDetection.FromSpherical", false]], "ft (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.FT", false]], "gain (analogdigitalconverter attribute)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.gain", false]], "gain (channel property)": [[15, "hermespy.channel.channel.Channel.gain", false]], "gain (channelrealization property)": [[16, "hermespy.channel.channel.ChannelRealization.gain", false]], "gain (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.Gain", false]], "gain (custompoweramplifier property)": [[205, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.gain", false]], "gain (delaychannelsample property)": [[19, "hermespy.channel.delay.delay.DelayChannelSample.gain", false]], "gain (gain property)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.gain", false]], "gain (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.gain", false]], "gain (radarchannelsample property)": [[33, "hermespy.channel.radar.radar.RadarChannelSample.gain", false]], "gaincontrolbase (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase", false]], "gaincontroltype (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType", false]], "ganesan (class in hermespy.modem.precoding.space_time_block_coding)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan", false]], "gaussian() (consistentgenerator method)": [[18, "hermespy.channel.consistent.ConsistentGenerator.gaussian", false]], "generate() (pilotsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.generate", false]], "generate() (pseudorandomgenerator method)": [[73, "hermespy.fec.scrambler.PseudoRandomGenerator.generate", false]], "generate_bits() (bitssource method)": [[94, "hermespy.modem.bits_source.BitsSource.generate_bits", false]], "generate_bits() (randombitssource method)": [[94, "hermespy.modem.bits_source.RandomBitsSource.generate_bits", false]], "generate_bits() (streambitssource method)": [[94, "hermespy.modem.bits_source.StreamBitsSource.generate_bits", false]], "generate_output() (device method)": [[39, "hermespy.core.device.Device.generate_output", false]], "generate_output() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.generate_output", false]], "generate_outputs() (scenario method)": [[59, "hermespy.core.scenario.Scenario.generate_outputs", false]], "generate_outputs() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.generate_outputs", false]], "generate_result() (communicationevaluator method)": [[96, "hermespy.modem.evaluators.CommunicationEvaluator.generate_result", false]], "generate_result() (detectionprobevaluator method)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator.generate_result", false]], "generate_result() (evaluator method)": [[55, "hermespy.core.monte_carlo.Evaluator.generate_result", false]], "generate_result() (radarevaluator method)": [[159, "hermespy.radar.evaluators.RadarEvaluator.generate_result", false]], "generate_result() (receiveroperatingcharacteristic method)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.generate_result", false]], "generate_result() (rootmeansquareerror method)": [[161, "hermespy.radar.evaluators.RootMeanSquareError.generate_result", false]], "generate_sequence() (pseudorandomgenerator method)": [[73, "hermespy.fec.scrambler.PseudoRandomGenerator.generate_sequence", false]], "generator() (randomrealization method)": [[58, "hermespy.core.random_node.RandomRealization.generator", false]], "get_cross_section() (fixedcrosssection method)": [[32, "hermespy.channel.radar.multi.FixedCrossSection.get_cross_section", false]], "get_cross_section() (radarcrosssectionmodel method)": [[32, "hermespy.channel.radar.multi.RadarCrossSectionModel.get_cross_section", false]], "get_monitors() (in module hermespy.tools.tile)": [[232, "hermespy.tools.tile.get_monitors", false]], "get_power() (ebn0 method)": [[188, "hermespy.simulation.modem.noise.EBN0.get_power", false]], "get_power() (esn0 method)": [[189, "hermespy.simulation.modem.noise.ESN0.get_power", false]], "get_power() (n0 method)": [[191, "hermespy.simulation.noise.level.N0.get_power", false]], "get_power() (noiselevel method)": [[190, "hermespy.simulation.noise.level.NoiseLevel.get_power", false]], "get_power() (snr method)": [[192, "hermespy.simulation.noise.level.SNR.get_power", false]], "getter() (registereddimension method)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.getter", false]], "global_characteristics() (antenna method)": [[36, "hermespy.core.antennas.Antenna.global_characteristics", false]], "global_orientation (transformable property)": [[61, "hermespy.core.transformation.Transformable.global_orientation", false]], "global_position (transformable property)": [[61, "hermespy.core.transformation.Transformable.global_position", false]], "grid (evaluationresult property)": [[55, "hermespy.core.monte_carlo.EvaluationResult.grid", false]], "grid_resources (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.grid_resources", false]], "grid_section (montecarlosample property)": [[55, "hermespy.core.monte_carlo.MonteCarloSample.grid_section", false]], "grid_structure (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.grid_structure", false]], "griddimension (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.GridDimension", false]], "gridelement (class in hermespy.modem.waveforms.orthogonal.waveform)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.GridElement", false]], "gridresource (class in hermespy.modem.waveforms.orthogonal.waveform)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource", false]], "gridsection (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.GridSection", false]], "gridsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection", false]], "ground_truth (radarinterferencepath property)": [[33, "hermespy.channel.radar.radar.RadarInterferencePath.ground_truth", false]], "ground_truth (radarpath property)": [[33, "hermespy.channel.radar.radar.RadarPath.ground_truth", false]], "ground_truth (radartargetpath property)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.ground_truth", false]], "guard_interval (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.guard_interval", false]], "guard_interval (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.guard_interval", false]], "guard_ratio (correlationsynchronization property)": [[128, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.guard_ratio", false]], "guardsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection", false]], "h0_value (rocartifact property)": [[160, "hermespy.radar.evaluators.RocArtifact.h0_value", false]], "h1_value (rocartifact property)": [[160, "hermespy.radar.evaluators.RocArtifact.h1_value", false]], "hardware_loop (hardwareloopplot property)": [[81, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.hardware_loop", false]], "hardwareloop (class in hermespy.hardware_loop.hardware_loop)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop", false]], "hardwareloopdeviceplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot", false]], "hardwareloopevaluatorplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot", false]], "hardwareloopplot (class in hermespy.hardware_loop.hardware_loop)": [[81, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot", false]], "hdfserializable (class in hermespy.core.factory)": [[53, "hermespy.core.factory.HDFSerializable", false]], "hdfserializabletype (class in hermespy.core.factory)": [[53, "hermespy.core.factory.HDFSerializableType", false]], "hermes_simulation() (in module hermespy.bin.hermes)": [[6, "hermespy.bin.hermes.hermes_simulation", false]], "hermespy.beamforming.beamformer": [[2, "module-hermespy.beamforming.beamformer", false]], "hermespy.beamforming.capon": [[3, "module-hermespy.beamforming.capon", false]], "hermespy.beamforming.conventional": [[4, "module-hermespy.beamforming.conventional", false]], "hermespy.bin.hermes": [[6, "module-hermespy.bin.hermes", false]], "hermespy.core.antennas": [[36, "module-hermespy.core.antennas", false]], "hermespy.core.definitions": [[38, "module-hermespy.core.definitions", false]], "hermespy.core.duplex": [[51, "module-hermespy.core.duplex", false]], "hermespy.core.executable": [[52, "module-hermespy.core.executable", false]], "hermespy.core.factory": [[53, "module-hermespy.core.factory", false]], "hermespy.core.logarithmic": [[54, "module-hermespy.core.logarithmic", false]], "hermespy.core.monte_carlo": [[55, "module-hermespy.core.monte_carlo", false]], "hermespy.core.operators": [[56, "module-hermespy.core.operators", false]], "hermespy.core.pipeline": [[57, "module-hermespy.core.pipeline", false]], "hermespy.core.random_node": [[58, "module-hermespy.core.random_node", false]], "hermespy.core.scenario": [[59, "module-hermespy.core.scenario", false]], "hermespy.core.transformation": [[61, "module-hermespy.core.transformation", false]], "hermespy.core.visualize": [[62, "module-hermespy.core.visualize", false]], "hermespy.fec.aff3ct.bch": [[64, "module-hermespy.fec.aff3ct.bch", false]], "hermespy.fec.aff3ct.ldpc": [[68, "module-hermespy.fec.aff3ct.ldpc", false]], "hermespy.fec.aff3ct.polar": [[69, "module-hermespy.fec.aff3ct.polar", false]], "hermespy.fec.aff3ct.rs": [[71, "module-hermespy.fec.aff3ct.rs", false]], "hermespy.fec.aff3ct.rsc": [[72, "module-hermespy.fec.aff3ct.rsc", false]], "hermespy.fec.aff3ct.turbo": [[74, "module-hermespy.fec.aff3ct.turbo", false]], "hermespy.fec.block_interleaver": [[65, "module-hermespy.fec.block_interleaver", false]], "hermespy.fec.coding": [[66, "module-hermespy.fec.coding", false]], "hermespy.fec.cyclic_redundancy_check": [[67, "module-hermespy.fec.cyclic_redundancy_check", false]], "hermespy.fec.repetition_encoder": [[70, "module-hermespy.fec.repetition_encoder", false]], "hermespy.fec.scrambler": [[73, "module-hermespy.fec.scrambler", false]], "hermespy.hardware_loop.calibration.delay": [[78, "module-hermespy.hardware_loop.calibration.delay", false]], "hermespy.hardware_loop.calibration.leakage": [[79, "module-hermespy.hardware_loop.calibration.leakage", false]], "hermespy.hardware_loop.visualizers": [[88, "module-hermespy.hardware_loop.visualizers", false]], "hermespy.precoding.precoding": [[149, "module-hermespy.precoding.precoding", false]], "hermespy.precoding.stream_precoding": [[150, "module-hermespy.precoding.stream_precoding", false]], "hermespy.tools.math": [[230, "module-hermespy.tools.math", false]], "hermespy.tools.resampling": [[231, "module-hermespy.tools.resampling", false]], "hermespy.tools.tile": [[232, "module-hermespy.tools.tile", false]], "hh (factorytype attribute)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.HH", false]], "hilly (cost259type attribute)": [[22, "hermespy.channel.fading.cost259.Cost259Type.HILLY", false]], "horizontal_phase_response() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.horizontal_phase_response", false]], "ideal() (channelstateinformation static method)": [[37, "hermespy.core.channel.ChannelStateInformation.Ideal", false]], "idealantenna (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.IdealAntenna", false]], "idealchannel (class in hermespy.channel.ideal)": [[30, "hermespy.channel.ideal.IdealChannel", false]], "idealchannelrealization (class in hermespy.channel.ideal)": [[30, "hermespy.channel.ideal.IdealChannelRealization", false]], "idealchannelsample (class in hermespy.channel.ideal)": [[30, "hermespy.channel.ideal.IdealChannelSample", false]], "image (imagevisualization property)": [[62, "hermespy.core.visualize.ImageVisualization.image", false]], "imagevisualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.ImageVisualization", false]], "impedancecoupling (class in hermespy.simulation.coupling.impedance)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling", false]], "impinging_signals (deviceinput property)": [[40, "hermespy.core.device.DeviceInput.impinging_signals", false]], "indoorfactory (class in hermespy.channel.cdl.indoor_factory)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory", false]], "indoorfactoryrealization (class in hermespy.channel.cdl.indoor_factory)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization", false]], "indooroffice (class in hermespy.channel.cdl.indoor_office)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOffice", false]], "indoorofficerealization (class in hermespy.channel.cdl.indoor_office)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization", false]], "info (verbosity attribute)": [[52, "hermespy.core.executable.Verbosity.INFO", false]], "input (custompoweramplifier property)": [[205, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.input", false]], "input (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.input", false]], "interactive (consolemode attribute)": [[38, "hermespy.core.definitions.ConsoleMode.INTERACTIVE", false]], "interfernce (multitargetradarchannel attribute)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.interfernce", false]], "interleave_blocks (blockinterleaver property)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.interleave_blocks", false]], "interpolationmode (class in hermespy.channel.channel)": [[15, "hermespy.channel.channel.InterpolationMode", false]], "invert() (transformation method)": [[61, "hermespy.core.transformation.Transformation.invert", false]], "investigated_object (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.investigated_object", false]], "ip (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.ip", false]], "is_base (transformable property)": [[61, "hermespy.core.transformation.Transformable.is_base", false]], "is_registered() (registereddimension class method)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.is_registered", false]], "isolation (class in hermespy.simulation.isolation.isolation)": [[184, "hermespy.simulation.isolation.isolation.Isolation", false]], "isolation (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.isolation", false]], "isolation (specificisolation property)": [[187, "hermespy.simulation.isolation.specific.SpecificIsolation.isolation", false]], "iteration_priority (hardwareloop property)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.iteration_priority", false]], "jcasreception (class in hermespy.jcas.jcas)": [[90, "hermespy.jcas.jcas.JCASReception", false]], "jcastransmission (class in hermespy.jcas.jcas)": [[90, "hermespy.jcas.jcas.JCASTransmission", false]], "k0 (oscillatorphasenoise property)": [[211, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K0", false]], "k2 (oscillatorphasenoise property)": [[211, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K2", false]], "k3 (oscillatorphasenoise property)": [[211, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise.K3", false]], "kwargs (signal property)": [[60, "hermespy.core.signal_model.Signal.kwargs", false]], "largescalestate (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState", false]], "last_impact (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.last_impact", false]], "last_impact (registereddimension property)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.last_impact", false]], "ldpccoding (class in hermespy.fec.aff3ct.ldpc)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding", false]], "leak() (isolation method)": [[184, "hermespy.simulation.isolation.isolation.Isolation.leak", false]], "leak() (perfectisolation method)": [[185, "hermespy.simulation.isolation.perfect.PerfectIsolation.leak", false]], "leakage_calibration (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.leakage_calibration", false]], "leakage_response (selectiveleakage property)": [[186, "hermespy.simulation.isolation.selective.SelectiveLeakage.leakage_response", false]], "leakage_response (selectiveleakagecalibration property)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.leakage_response", false]], "leaking_signal (processedsimulateddeviceinput property)": [[213, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.leaking_signal", false]], "leastsquaresestimate() (selectiveleakagecalibration static method)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.LeastSquaresEstimate", false]], "level (n0 property)": [[191, "hermespy.simulation.noise.level.N0.level", false]], "level (noiselevel property)": [[190, "hermespy.simulation.noise.level.NoiseLevel.level", false]], "level (snr property)": [[192, "hermespy.simulation.noise.level.SNR.level", false]], "lin (valuetype attribute)": [[54, "hermespy.core.logarithmic.ValueType.LIN", false]], "lin2db() (in module hermespy.tools.math)": [[230, "hermespy.tools.math.lin2db", false]], "line_of_sight (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.line_of_sight", false]], "line_of_sight (largescalestate property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState.line_of_sight", false]], "linear (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.linear", false]], "linear (consolemode attribute)": [[38, "hermespy.core.definitions.ConsoleMode.LINEAR", false]], "linearantenna (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.LinearAntenna", false]], "lineartrajectory (class in hermespy.simulation.animation)": [[168, "hermespy.simulation.animation.LinearTrajectory", false]], "lines (plotvisualization property)": [[62, "hermespy.core.visualize.PlotVisualization.lines", false]], "linked_frames (transformablelink property)": [[61, "hermespy.core.transformation.TransformableLink.linked_frames", false]], "load_calibration() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.load_calibration", false]], "loading (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.loading", false]], "local_characteristics() (antenna method)": [[36, "hermespy.core.antennas.Antenna.local_characteristics", false]], "local_characteristics() (dipole method)": [[36, "hermespy.core.antennas.Dipole.local_characteristics", false]], "local_characteristics() (idealantenna method)": [[36, "hermespy.core.antennas.IdealAntenna.local_characteristics", false]], "local_characteristics() (linearantenna method)": [[36, "hermespy.core.antennas.LinearAntenna.local_characteristics", false]], "local_characteristics() (patchantenna method)": [[36, "hermespy.core.antennas.PatchAntenna.local_characteristics", false]], "logarithmic (class in hermespy.core.logarithmic)": [[54, "hermespy.core.logarithmic.Logarithmic", false]], "logarithmicsequence (class in hermespy.core.logarithmic)": [[54, "hermespy.core.logarithmic.LogarithmicSequence", false]], "los_angle (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.los_angle", false]], "los_angles (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.los_angles", false]], "los_doppler (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.los_doppler", false]], "los_doppler_frequency (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.los_doppler_frequency", false]], "los_gains (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.los_gains", false]], "los_phases (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.los_phases", false]], "lowpass_bandwidth (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.lowpass_bandwidth", false]], "lowpass_filter (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.lowpass_filter", false]], "lsst (class in hermespy.channel.cdl.cluster_delay_lines)": [[8, "hermespy.channel.cdl.cluster_delay_lines.LSST", false]], "make_target() (multitargetradarchannel method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.make_target", false]], "manager (encoder property)": [[66, "hermespy.fec.coding.Encoder.manager", false]], "manual_triggering (hardwareloop attribute)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.manual_triggering", false]], "map() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.map", false]], "map() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.map", false]], "map() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.map", false]], "map() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.map", false]], "mapping (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.mapping", false]], "marcum_q() (in module hermespy.tools.math)": [[230, "hermespy.tools.math.marcum_q", false]], "mask (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.mask", false]], "matchedfilterjcas (class in hermespy.jcas.matched_filtering)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas", false]], "matching_impedance (impedancecoupling property)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.matching_impedance", false]], "max_amplitude (gaincontroltype attribute)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.MAX_AMPLITUDE", false]], "max_delay (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.max_delay", false]], "max_delay (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.max_delay", false]], "max_frame_duration (device property)": [[39, "hermespy.core.device.Device.max_frame_duration", false]], "max_num_clusters (clusterdelaylinebase property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.max_num_clusters", false]], "max_num_clusters (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.max_num_clusters", false]], "max_num_clusters (indooroffice property)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOffice.max_num_clusters", false]], "max_num_clusters (ruralmacrocells property)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.max_num_clusters", false]], "max_num_clusters (urbanmacrocells property)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.max_num_clusters", false]], "max_num_clusters (urbanmicrocells property)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.max_num_clusters", false]], "max_num_rays (clusterdelaylinebase property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.max_num_rays", false]], "max_num_rays (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.max_num_rays", false]], "max_num_rays (indooroffice property)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOffice.max_num_rays", false]], "max_num_rays (ruralmacrocells property)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.max_num_rays", false]], "max_num_rays (urbanmacrocells property)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.max_num_rays", false]], "max_num_rays (urbanmicrocells property)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.max_num_rays", false]], "max_num_samples (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.max_num_samples", false]], "max_range (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.max_range", false]], "max_range (matchedfilterjcas property)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas.max_range", false]], "max_range (ofdmradar property)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar.max_range", false]], "max_range (radar property)": [[163, "hermespy.radar.radar.Radar.max_range", false]], "max_range (radarpointcloud property)": [[156, "hermespy.radar.detection.RadarPointCloud.max_range", false]], "max_range (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.max_range", false]], "max_receive_delay (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.max_receive_delay", false]], "max_relative_doppler (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.max_relative_doppler", false]], "max_relative_doppler (ofdmradar property)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar.max_relative_doppler", false]], "max_relative_doppler (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.max_relative_doppler", false]], "max_sampling_rate (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.max_sampling_rate", false]], "max_sampling_rate (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.max_sampling_rate", false]], "max_sampling_rate (physicaldevicedummy property)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.max_sampling_rate", false]], "max_sampling_rate (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.max_sampling_rate", false]], "max_timestamp (lineartrajectory property)": [[168, "hermespy.simulation.animation.LinearTrajectory.max_timestamp", false]], "max_timestamp (statictrajectory property)": [[168, "hermespy.simulation.animation.StaticTrajectory.max_timestamp", false]], "max_timestamp (trajectory property)": [[168, "hermespy.simulation.animation.Trajectory.max_timestamp", false]], "max_trajectory_timestamp (moveable property)": [[168, "hermespy.simulation.animation.Moveable.max_trajectory_timestamp", false]], "maxdetector (class in hermespy.radar.detection)": [[153, "hermespy.radar.detection.MaxDetector", false]], "maximumratiocombining (class in hermespy.modem.precoding.ratio_combining)": [[114, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining", false]], "mesh (quadmeshvisualization property)": [[62, "hermespy.core.visualize.QuadMeshVisualization.mesh", false]], "message (actorrunresult attribute)": [[55, "hermespy.core.monte_carlo.ActorRunResult.message", false]], "mid_riser (quantizertype attribute)": [[202, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType.MID_RISER", false]], "mid_tread (quantizertype attribute)": [[202, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType.MID_TREAD", false]], "min_num_samples (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.min_num_samples", false]], "min_power (thresholddetector property)": [[157, "hermespy.radar.detection.ThresholdDetector.min_power", false]], "mixed (officetype attribute)": [[10, "hermespy.channel.cdl.indoor_office.OfficeType.MIXED", false]], "mixed_signal (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.mixed_signal", false]], "mmseestimate() (selectiveleakagecalibration static method)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.MMSEEstimate", false]], "mode (antenna property)": [[36, "hermespy.core.antennas.Antenna.mode", false]], "mode (scenario property)": [[59, "hermespy.core.scenario.Scenario.mode", false]], "model() (clippingpoweramplifier method)": [[204, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier.model", false]], "model() (custompoweramplifier method)": [[205, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.model", false]], "model() (poweramplifier method)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.model", false]], "model() (rapppoweramplifier method)": [[207, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.model", false]], "model() (salehpoweramplifier method)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.model", false]], "model_propagation_loss (delaychannelbase property)": [[19, "hermespy.channel.delay.delay.DelayChannelBase.model_propagation_loss", false]], "model_propagation_loss (delaychannelrealization property)": [[19, "hermespy.channel.delay.delay.DelayChannelRealization.model_propagation_loss", false]], "model_propagation_loss (delaychannelsample property)": [[19, "hermespy.channel.delay.delay.DelayChannelSample.model_propagation_loss", false]], "model_type (cdl property)": [[7, "hermespy.channel.cdl.cdl.CDL.model_type", false]], "model_type (cost259 property)": [[22, "hermespy.channel.fading.cost259.Cost259.model_type", false]], "model_type (tdl property)": [[29, "hermespy.channel.fading.tdl.TDL.model_type", false]], "modem (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.modem", false]], "modem (encodermanager property)": [[66, "hermespy.fec.coding.EncoderManager.modem", false]], "modem (precoding property)": [[149, "hermespy.precoding.precoding.Precoding.modem", false]], "modulate() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.modulate", false]], "modulate() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.modulate", false]], "modulate() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.modulate", false]], "modulate() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.modulate", false]], "modulation_order (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.modulation_order", false]], "modulation_order (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.modulation_order", false]], "modulation_order (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.modulation_order", false]], "modulation_order (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.modulation_order", false]], "module": [[2, "module-hermespy.beamforming.beamformer", false], [3, "module-hermespy.beamforming.capon", false], [4, "module-hermespy.beamforming.conventional", false], [6, "module-hermespy.bin.hermes", false], [36, "module-hermespy.core.antennas", false], [38, "module-hermespy.core.definitions", false], [51, "module-hermespy.core.duplex", false], [52, "module-hermespy.core.executable", false], [53, "module-hermespy.core.factory", false], [54, "module-hermespy.core.logarithmic", false], [55, "module-hermespy.core.monte_carlo", false], [56, "module-hermespy.core.operators", false], [57, "module-hermespy.core.pipeline", false], [58, "module-hermespy.core.random_node", false], [59, "module-hermespy.core.scenario", false], [61, "module-hermespy.core.transformation", false], [62, "module-hermespy.core.visualize", false], [64, "module-hermespy.fec.aff3ct.bch", false], [65, "module-hermespy.fec.block_interleaver", false], [66, "module-hermespy.fec.coding", false], [67, "module-hermespy.fec.cyclic_redundancy_check", false], [68, "module-hermespy.fec.aff3ct.ldpc", false], [69, "module-hermespy.fec.aff3ct.polar", false], [70, "module-hermespy.fec.repetition_encoder", false], [71, "module-hermespy.fec.aff3ct.rs", false], [72, "module-hermespy.fec.aff3ct.rsc", false], [73, "module-hermespy.fec.scrambler", false], [74, "module-hermespy.fec.aff3ct.turbo", false], [78, "module-hermespy.hardware_loop.calibration.delay", false], [79, "module-hermespy.hardware_loop.calibration.leakage", false], [88, "module-hermespy.hardware_loop.visualizers", false], [149, "module-hermespy.precoding.precoding", false], [150, "module-hermespy.precoding.stream_precoding", false], [230, "module-hermespy.tools.math", false], [231, "module-hermespy.tools.resampling", false], [232, "module-hermespy.tools.tile", false]], "montecarlo (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.MonteCarlo", false]], "montecarloactor (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.MonteCarloActor", false]], "montecarloresult (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.MonteCarloResult", false]], "montecarlosample (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.MonteCarloSample", false]], "moveable (class in hermespy.simulation.animation)": [[168, "hermespy.simulation.animation.Moveable", false]], "moveable (physicalradartarget property)": [[32, "hermespy.channel.radar.multi.PhysicalRadarTarget.moveable", false]], "multipathfadingchannel (class in hermespy.channel.fading.fading)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel", false]], "multipathfadingrealization (class in hermespy.channel.fading.fading)": [[27, "hermespy.channel.fading.fading.MultipathFadingRealization", false]], "multipathfadingsample (class in hermespy.channel.fading.fading)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample", false]], "multitargetradarchannel (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel", false]], "multitargetradarchannelrealization (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization", false]], "n0 (class in hermespy.simulation.noise.level)": [[191, "hermespy.simulation.noise.level.N0", false]], "nearest (interpolationmode attribute)": [[15, "hermespy.channel.channel.InterpolationMode.NEAREST", false]], "new_device() (audioscenario method)": [[77, "hermespy.hardware_loop.audio.scenario.AudioScenario.new_device", false]], "new_device() (physicalscenariodummy method)": [[84, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.new_device", false]], "new_device() (pipeline method)": [[57, "hermespy.core.pipeline.Pipeline.new_device", false]], "new_device() (scenario method)": [[59, "hermespy.core.scenario.Scenario.new_device", false]], "new_device() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.new_device", false]], "new_device() (usrpsystem method)": [[86, "hermespy.hardware_loop.uhd.system.UsrpSystem.new_device", false]], "new_dimension() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.new_dimension", false]], "new_dimension() (montecarlo method)": [[55, "hermespy.core.monte_carlo.MonteCarlo.new_dimension", false]], "nlos_angles (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_angles", false]], "nlos_doppler (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_doppler", false]], "nlos_gains (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_gains", false]], "nlos_phases (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.nlos_phases", false]], "no() (transformation class method)": [[61, "hermespy.core.transformation.Transformation.No", false]], "noise (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.noise", false]], "noise_level (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.noise_level", false]], "noise_level (simulationscenario property)": [[220, "hermespy.simulation.simulation.SimulationScenario.noise_level", false]], "noise_model (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.noise_model", false]], "noise_model (simulationscenario property)": [[220, "hermespy.simulation.simulation.SimulationScenario.noise_model", false]], "noise_power (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.noise_power", false]], "noise_power (signal property)": [[60, "hermespy.core.signal_model.Signal.noise_power", false]], "noise_realization (simulateddevicereceiverealization property)": [[215, "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization.noise_realization", false]], "noiselevel (class in hermespy.simulation.noise.level)": [[190, "hermespy.simulation.noise.level.NoiseLevel", false]], "noisemodel (class in hermespy.simulation.noise.model)": [[190, "hermespy.simulation.noise.model.NoiseModel", false]], "noiserealization (class in hermespy.simulation.noise.model)": [[190, "hermespy.simulation.noise.model.NoiseRealization", false]], "none (gaincontroltype attribute)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.NONE", false]], "none (prefixtype attribute)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.NONE", false]], "none (verbosity attribute)": [[52, "hermespy.core.executable.Verbosity.NONE", false]], "nophasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[210, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise", false]], "normal() (selectiveleakage class method)": [[186, "hermespy.simulation.isolation.selective.SelectiveLeakage.Normal", false]], "normalize (thresholddetector property)": [[157, "hermespy.radar.detection.ThresholdDetector.normalize", false]], "normalize_power() (radarcube method)": [[152, "hermespy.radar.cube.RadarCube.normalize_power", false]], "nrt (class in hermespy.simulation.noise.model)": [[190, "hermespy.simulation.noise.model.NRT", false]], "null (elementtype attribute)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.NULL", false]], "null_hypothesis() (radarchannelsample method)": [[33, "hermespy.channel.radar.radar.RadarChannelSample.null_hypothesis", false]], "num_actors (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.num_actors", false]], "num_antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.num_antennas", false]], "num_antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.num_antennas", false]], "num_antennas (device property)": [[39, "hermespy.core.device.Device.num_antennas", false]], "num_antennas (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.num_antennas", false]], "num_antennas (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.num_antennas", false]], "num_appended_zeros (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_appended_zeros", false]], "num_artifacts (montecarlosample property)": [[55, "hermespy.core.monte_carlo.MonteCarloSample.num_artifacts", false]], "num_blocks (symbols property)": [[120, "hermespy.modem.symbols.Symbols.num_blocks", false]], "num_chirps (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.num_chirps", false]], "num_clusters (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.num_clusters", false]], "num_data_bits_per_frame (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.num_data_bits_per_frame", false]], "num_data_chirps (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_data_chirps", false]], "num_data_symbols (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_data_symbols", false]], "num_data_symbols (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.num_data_symbols", false]], "num_data_symbols (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_data_symbols", false]], "num_data_symbols (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.num_data_symbols", false]], "num_delay_taps (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.num_delay_taps", false]], "num_device_receptions (drop property)": [[50, "hermespy.core.drop.Drop.num_device_receptions", false]], "num_device_transmissions (drop property)": [[50, "hermespy.core.drop.Drop.num_device_transmissions", false]], "num_devices (scenario property)": [[59, "hermespy.core.scenario.Scenario.num_devices", false]], "num_devices (triggermodel property)": [[226, "hermespy.simulation.simulated_device.TriggerModel.num_devices", false]], "num_drops (pipeline property)": [[57, "hermespy.core.pipeline.Pipeline.num_drops", false]], "num_drops (scenario property)": [[59, "hermespy.core.scenario.Scenario.num_drops", false]], "num_emerging_signals (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.num_emerging_signals", false]], "num_encoded_blocks() (symbolprecoding method)": [[119, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoding.num_encoded_blocks", false]], "num_errors (rootmeansquareartifact property)": [[161, "hermespy.radar.evaluators.RootMeanSquareArtifact.num_errors", false]], "num_evaluators (hardwareloop property)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.num_evaluators", false]], "num_frames (communicationreception property)": [[104, "hermespy.modem.modem.CommunicationReception.num_frames", false]], "num_frames (communicationtransmission property)": [[106, "hermespy.modem.modem.CommunicationTransmission.num_frames", false]], "num_guard_samples (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_guard_samples", false]], "num_impinging_signals (deviceinput property)": [[40, "hermespy.core.device.DeviceInput.num_impinging_signals", false]], "num_input_streams (alamouti property)": [[116, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_input_streams", false]], "num_input_streams (dft property)": [[113, "hermespy.modem.precoding.dft.DFT.num_input_streams", false]], "num_input_streams (ganesan property)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_input_streams", false]], "num_input_streams (maximumratiocombining property)": [[114, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.num_input_streams", false]], "num_input_streams (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.num_input_streams", false]], "num_input_streams (precoding property)": [[149, "hermespy.precoding.precoding.Precoding.num_input_streams", false]], "num_input_streams (receivestreamdecoder property)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder.num_input_streams", false]], "num_input_streams (singlecarrier property)": [[115, "hermespy.modem.precoding.single_carrier.SingleCarrier.num_input_streams", false]], "num_input_streams (spatialmultiplexing property)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing.num_input_streams", false]], "num_input_streams (transmitstreamencoder property)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder.num_input_streams", false]], "num_iterations (ldpccoding property)": [[68, "hermespy.fec.aff3ct.ldpc.LDPCCoding.num_iterations", false]], "num_iterations (turbocoding property)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding.num_iterations", false]], "num_offset_samples (sampleoffsettrigger property)": [[223, "hermespy.simulation.simulated_device.SampleOffsetTrigger.num_offset_samples", false]], "num_offset_samples (triggerrealization property)": [[227, "hermespy.simulation.simulated_device.TriggerRealization.num_offset_samples", false]], "num_operator_inputs (processeddeviceinput property)": [[45, "hermespy.core.device.ProcessedDeviceInput.num_operator_inputs", false]], "num_operator_receptions (devicereception property)": [[42, "hermespy.core.device.DeviceReception.num_operator_receptions", false]], "num_operator_transmissions (devicetransmission property)": [[43, "hermespy.core.device.DeviceTransmission.num_operator_transmissions", false]], "num_operators (scenario property)": [[59, "hermespy.core.scenario.Scenario.num_operators", false]], "num_output_streams (alamouti property)": [[116, "hermespy.modem.precoding.space_time_block_coding.Alamouti.num_output_streams", false]], "num_output_streams (dft property)": [[113, "hermespy.modem.precoding.dft.DFT.num_output_streams", false]], "num_output_streams (ganesan property)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan.num_output_streams", false]], "num_output_streams (maximumratiocombining property)": [[114, "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining.num_output_streams", false]], "num_output_streams (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.num_output_streams", false]], "num_output_streams (precoding property)": [[149, "hermespy.precoding.precoding.Precoding.num_output_streams", false]], "num_output_streams (receivestreamdecoder property)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder.num_output_streams", false]], "num_output_streams (singlecarrier property)": [[115, "hermespy.modem.precoding.single_carrier.SingleCarrier.num_output_streams", false]], "num_output_streams (spatialmultiplexing property)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing.num_output_streams", false]], "num_output_streams (transmitstreamencoder property)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder.num_output_streams", false]], "num_pilot_chirps (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.num_pilot_chirps", false]], "num_points (radarpointcloud property)": [[156, "hermespy.radar.detection.RadarPointCloud.num_points", false]], "num_ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.num_ports", false]], "num_postamble_symbols (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_postamble_symbols", false]], "num_preamble_symbols (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.num_preamble_symbols", false]], "num_prepeneded_zeros (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_prepeneded_zeros", false]], "num_quantization_bits (analogdigitalconverter property)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.num_quantization_bits", false]], "num_quantization_levels (analogdigitalconverter property)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.num_quantization_levels", false]], "num_rays (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.num_rays", false]], "num_receive_antennas (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.num_receive_antennas", false]], "num_receive_antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.num_receive_antennas", false]], "num_receive_antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.num_receive_antennas", false]], "num_receive_antennas (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.num_receive_antennas", false]], "num_receive_antennas (device property)": [[39, "hermespy.core.device.Device.num_receive_antennas", false]], "num_receive_antennas (receiver property)": [[46, "hermespy.core.device.Receiver.num_receive_antennas", false]], "num_receive_focus_points (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.num_receive_focus_points", false]], "num_receive_focus_points (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_receive_focus_points", false]], "num_receive_focus_points (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.num_receive_focus_points", false]], "num_receive_input_streams (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.num_receive_input_streams", false]], "num_receive_input_streams (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_receive_input_streams", false]], "num_receive_input_streams (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.num_receive_input_streams", false]], "num_receive_input_streams (receivestreamdecoder property)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder.num_receive_input_streams", false]], "num_receive_output_streams (caponbeamformer property)": [[3, "hermespy.beamforming.capon.CaponBeamformer.num_receive_output_streams", false]], "num_receive_output_streams (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_receive_output_streams", false]], "num_receive_output_streams (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.num_receive_output_streams", false]], "num_receive_output_streams (receivestreamdecoder property)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder.num_receive_output_streams", false]], "num_receive_ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.num_receive_ports", false]], "num_receive_ports (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.num_receive_ports", false]], "num_receive_ports (device property)": [[39, "hermespy.core.device.Device.num_receive_ports", false]], "num_receive_ports (receiver property)": [[46, "hermespy.core.device.Receiver.num_receive_ports", false]], "num_receive_ports (receivingmodem property)": [[109, "hermespy.modem.modem.ReceivingModem.num_receive_ports", false]], "num_receive_ports (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_receive_ports", false]], "num_receive_streams (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.num_receive_streams", false]], "num_receivers (scenario property)": [[59, "hermespy.core.scenario.Scenario.num_receivers", false]], "num_references (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_references", false]], "num_references (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_references", false]], "num_references (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_references", false]], "num_references (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_references", false]], "num_repetitions (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_repetitions", false]], "num_repetitions (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_repetitions", false]], "num_resolvable_paths (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.num_resolvable_paths", false]], "num_sample_points (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.num_sample_points", false]], "num_samples (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.num_samples", false]], "num_samples (gridsection property)": [[55, "hermespy.core.monte_carlo.GridSection.num_samples", false], [137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_samples", false]], "num_samples (guardsection property)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.num_samples", false]], "num_samples (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.num_samples", false]], "num_samples (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_samples", false]], "num_samples (signal property)": [[60, "hermespy.core.signal_model.Signal.num_samples", false]], "num_samples (simulation property)": [[219, "hermespy.simulation.simulation.Simulation.num_samples", false]], "num_samples (staticoperator property)": [[56, "hermespy.core.operators.StaticOperator.num_samples", false]], "num_samples (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_samples", false]], "num_sinusoids (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.num_sinusoids", false]], "num_streams (signal property)": [[60, "hermespy.core.signal_model.Signal.num_streams", false]], "num_streams (symbols property)": [[120, "hermespy.modem.symbols.Symbols.num_streams", false]], "num_subcarriers (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_subcarriers", false]], "num_subcarriers (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_subcarriers", false]], "num_subcarriers (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.num_subcarriers", false]], "num_subcarriers (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_subcarriers", false]], "num_subcarriers (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_subcarriers", false]], "num_symbols (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.num_symbols", false]], "num_symbols (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.num_symbols", false]], "num_symbols (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_symbols", false]], "num_symbols (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_symbols", false]], "num_symbols (symbols property)": [[120, "hermespy.modem.symbols.Symbols.num_symbols", false]], "num_symbols (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_symbols", false]], "num_transmit_antennas (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.num_transmit_antennas", false]], "num_transmit_antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.num_transmit_antennas", false]], "num_transmit_antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.num_transmit_antennas", false]], "num_transmit_antennas (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.num_transmit_antennas", false]], "num_transmit_antennas (device property)": [[39, "hermespy.core.device.Device.num_transmit_antennas", false]], "num_transmit_antennas (transmitter property)": [[49, "hermespy.core.device.Transmitter.num_transmit_antennas", false]], "num_transmit_focus_points (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_transmit_focus_points", false]], "num_transmit_focus_points (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.num_transmit_focus_points", false]], "num_transmit_input_streams (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_transmit_input_streams", false]], "num_transmit_input_streams (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.num_transmit_input_streams", false]], "num_transmit_input_streams (transmitstreamencoder property)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder.num_transmit_input_streams", false]], "num_transmit_output_streams (conventionalbeamformer property)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.num_transmit_output_streams", false]], "num_transmit_output_streams (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.num_transmit_output_streams", false]], "num_transmit_output_streams (transmitstreamencoder property)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder.num_transmit_output_streams", false]], "num_transmit_ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.num_transmit_ports", false]], "num_transmit_ports (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.num_transmit_ports", false]], "num_transmit_ports (device property)": [[39, "hermespy.core.device.Device.num_transmit_ports", false]], "num_transmit_ports (transmitter property)": [[49, "hermespy.core.device.Transmitter.num_transmit_ports", false]], "num_transmit_ports (transmittingmodembase property)": [[111, "hermespy.modem.modem.TransmittingModemBase.num_transmit_ports", false]], "num_transmit_ports (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.num_transmit_ports", false]], "num_transmit_streams (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.num_transmit_streams", false]], "num_transmit_streams (statedsymbols property)": [[120, "hermespy.modem.symbols.StatedSymbols.num_transmit_streams", false]], "num_transmitters (scenario property)": [[59, "hermespy.core.scenario.Scenario.num_transmitters", false]], "num_words (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.num_words", false]], "num_words (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.num_words", false]], "num_words (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.num_words", false]], "ocdmwaveform (class in hermespy.modem.waveforms.orthogonal.ocdm)": [[142, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform", false]], "ofdmradar (class in hermespy.jcas.ofdm_radar)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar", false]], "ofdmwaveform (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform", false]], "office_type (indooroffice property)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOffice.office_type", false]], "officetype (class in hermespy.channel.cdl.indoor_office)": [[10, "hermespy.channel.cdl.indoor_office.OfficeType", false]], "offset (consistentvariable property)": [[18, "hermespy.channel.consistent.ConsistentVariable.offset", false]], "offset (timeoffsettrigger property)": [[225, "hermespy.simulation.simulated_device.TimeOffsetTrigger.offset", false]], "open (officetype attribute)": [[10, "hermespy.channel.cdl.indoor_office.OfficeType.OPEN", false]], "operationresult (class in hermespy.core.device)": [[44, "hermespy.core.device.OperationResult", false]], "operator (beamformerbase property)": [[2, "hermespy.beamforming.beamformer.BeamformerBase.operator", false]], "operator_inputs (drop property)": [[50, "hermespy.core.drop.Drop.operator_inputs", false]], "operator_inputs (processeddeviceinput property)": [[45, "hermespy.core.device.ProcessedDeviceInput.operator_inputs", false]], "operator_receptions (devicereception property)": [[42, "hermespy.core.device.DeviceReception.operator_receptions", false]], "operator_separation (processedsimulateddeviceinput property)": [[213, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.operator_separation", false]], "operator_separation (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.operator_separation", false]], "operator_separation (simulateddeviceoutput property)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.operator_separation", false]], "operator_transmissions (devicetransmission property)": [[43, "hermespy.core.device.DeviceTransmission.operator_transmissions", false]], "operators (scenario property)": [[59, "hermespy.core.scenario.Scenario.operators", false]], "orientation (transformable property)": [[61, "hermespy.core.transformation.Transformable.orientation", false]], "orthogonalwaveform (class in hermespy.modem.waveforms.orthogonal.waveform)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform", false]], "oscillatorphasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[211, "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise", false]], "ot (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.OT", false]], "otfswaveform (class in hermespy.modem.waveforms.orthogonal.otfs)": [[147, "hermespy.modem.waveforms.orthogonal.otfs.OTFSWaveform", false]], "output (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.output", false]], "oversampling_factor (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.oversampling_factor", false]], "oxygen_absorption (clusterdelaylinebase property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.oxygen_absorption", false]], "patchantenna (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.PatchAntenna", false]], "path_delays (quadrigachannelsample property)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.path_delays", false]], "path_gains (quadrigachannelsample property)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.path_gains", false]], "paths (radarchannelsample property)": [[33, "hermespy.channel.radar.radar.RadarChannelSample.paths", false]], "paths (scattervisualization property)": [[62, "hermespy.core.visualize.ScatterVisualization.paths", false]], "pattern (symbolsection attribute)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.pattern", false]], "peak_detection (thresholddetector property)": [[157, "hermespy.radar.detection.ThresholdDetector.peak_detection", false]], "perfectcoupling (class in hermespy.simulation.coupling.perfect)": [[182, "hermespy.simulation.coupling.perfect.PerfectCoupling", false]], "perfectisolation (class in hermespy.simulation.isolation.perfect)": [[185, "hermespy.simulation.isolation.perfect.PerfectIsolation", false]], "performance_time (montecarloresult property)": [[55, "hermespy.core.monte_carlo.MonteCarloResult.performance_time", false]], "phase (custompoweramplifier property)": [[205, "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier.phase", false]], "phase_alpha (salehpoweramplifier attribute)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.phase_alpha", false]], "phase_beta (salehpoweramplifier attribute)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier.phase_beta", false]], "phase_noise (rfchain property)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.phase_noise", false]], "phase_offset (rfchain property)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.phase_offset", false]], "phasenoise (class in hermespy.simulation.rf_chain.phase_noise)": [[209, "hermespy.simulation.rf_chain.phase_noise.PhaseNoise", false]], "phases (dualconsistentrealization property)": [[18, "hermespy.channel.consistent.DualConsistentRealization.phases", false]], "physicaldevice (class in hermespy.hardware_loop.physical_device)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice", false]], "physicaldevicedummy (class in hermespy.hardware_loop.physical_device_dummy)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy", false]], "physicalradartarget (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.PhysicalRadarTarget", false]], "physicalscenario (class in hermespy.hardware_loop.scenario)": [[85, "hermespy.hardware_loop.scenario.PhysicalScenario", false]], "physicalscenariodummy (class in hermespy.hardware_loop.physical_device_dummy)": [[84, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy", false]], "pick() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.pick", false]], "pick() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.pick", false]], "pick() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pick", false]], "pick() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pick", false]], "pick_samples() (gridsection method)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.pick_samples", false]], "pick_samples() (guardsection method)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.pick_samples", false]], "pick_samples() (pilotsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.pick_samples", false]], "pick_samples() (symbolsection method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.pick_samples", false]], "pick_symbols() (gridsection method)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.pick_symbols", false]], "pilot_elements (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.pilot_elements", false]], "pilot_rate (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pilot_rate", false]], "pilot_section (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pilot_section", false]], "pilot_signal (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.pilot_signal", false]], "pilot_signal (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.pilot_signal", false]], "pilot_signal (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.pilot_signal", false]], "pilot_signal (pilotcommunicationwaveform property)": [[121, "hermespy.modem.waveform.PilotCommunicationWaveform.pilot_signal", false]], "pilot_symbol_sequence (configurablepilotwaveform attribute)": [[121, "hermespy.modem.waveform.ConfigurablePilotWaveform.pilot_symbol_sequence", false]], "pilot_symbols() (configurablepilotwaveform method)": [[121, "hermespy.modem.waveform.ConfigurablePilotWaveform.pilot_symbols", false]], "pilotcommunicationwaveform (class in hermespy.modem.waveform)": [[121, "hermespy.modem.waveform.PilotCommunicationWaveform", false]], "pilotsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection", false]], "ping() (fmcw method)": [[162, "hermespy.radar.fmcw.FMCW.ping", false]], "ping() (radarwaveform method)": [[166, "hermespy.radar.radar.RadarWaveform.ping", false]], "pipeline (class in hermespy.core.pipeline)": [[57, "hermespy.core.pipeline.Pipeline", false]], "place() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.place", false]], "place() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.place", false]], "place() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.place", false]], "place() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.place", false]], "place_samples() (gridsection method)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.place_samples", false]], "place_samples() (guardsection method)": [[138, "hermespy.modem.waveforms.orthogonal.waveform.GuardSection.place_samples", false]], "place_samples() (pilotsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.place_samples", false]], "place_samples() (symbolsection method)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.place_samples", false]], "place_symbols() (gridsection method)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.place_symbols", false]], "place_symbols() (pilotsection method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.place_symbols", false]], "playback_channels (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.playback_channels", false]], "playback_device (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.playback_device", false]], "plot (signal property)": [[60, "hermespy.core.signal_model.Signal.plot", false]], "plot() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.plot", false]], "plot() (montecarloresult method)": [[55, "hermespy.core.monte_carlo.MonteCarloResult.plot", false]], "plot() (selectiveleakagecalibration method)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.plot", false]], "plot_angles (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_angles", false]], "plot_angles (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.plot_angles", false]], "plot_characteristics() (poweramplifier method)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.plot_characteristics", false]], "plot_constellation (symbols property)": [[120, "hermespy.modem.symbols.Symbols.plot_constellation", false]], "plot_filter() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.plot_filter", false]], "plot_filter_correlation() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.plot_filter_correlation", false]], "plot_gain() (antenna method)": [[36, "hermespy.core.antennas.Antenna.plot_gain", false]], "plot_grid (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.plot_grid", false]], "plot_information (hardwareloop attribute)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.plot_information", false]], "plot_pattern() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.plot_pattern", false]], "plot_polarization() (antenna method)": [[36, "hermespy.core.antennas.Antenna.plot_polarization", false]], "plot_power_delay (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_power_delay", false]], "plot_power_delay() (multipathfadingsample method)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.plot_power_delay", false]], "plot_quantizer() (analogdigitalconverter method)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.plot_quantizer", false]], "plot_range (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.plot_range", false]], "plot_range_velocity (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.plot_range_velocity", false]], "plot_rays() (clusterdelaylinesample method)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.plot_rays", false]], "plot_results (simulation attribute)": [[219, "hermespy.simulation.simulation.Simulation.plot_results", false]], "plot_scale (evaluator property)": [[55, "hermespy.core.monte_carlo.Evaluator.plot_scale", false]], "plot_scale (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.plot_scale", false]], "plot_surface (scalarevaluationresult attribute)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult.plot_surface", false]], "plot_topology() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.plot_topology", false]], "plotvisualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.PlotVisualization", false]], "pointdetection (class in hermespy.radar.detection)": [[154, "hermespy.radar.detection.PointDetection", false]], "points (radarpointcloud property)": [[156, "hermespy.radar.detection.RadarPointCloud.points", false]], "polarization_transformations (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.polarization_transformations", false]], "polarsccoding (class in hermespy.fec.aff3ct.polar)": [[69, "hermespy.fec.aff3ct.polar.PolarSCCoding", false]], "polarsclcoding (class in hermespy.fec.aff3ct.polar)": [[69, "hermespy.fec.aff3ct.polar.PolarSCLCoding", false]], "pop_precoder() (precoding method)": [[149, "hermespy.precoding.precoding.Precoding.pop_precoder", false]], "port (antenna property)": [[36, "hermespy.core.antennas.Antenna.port", false]], "port (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.port", false]], "ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.ports", false]], "ports (customantennaarray property)": [[36, "hermespy.core.antennas.CustomAntennaArray.ports", false]], "ports (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.ports", false]], "pose (statictrajectory property)": [[168, "hermespy.simulation.animation.StaticTrajectory.pose", false]], "pose (trajectorysample property)": [[168, "hermespy.simulation.animation.TrajectorySample.pose", false]], "pose (transformable property)": [[61, "hermespy.core.transformation.Transformable.pose", false]], "position (pointdetection property)": [[154, "hermespy.radar.detection.PointDetection.position", false]], "position (radartargetpath property)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.position", false]], "position (transformable property)": [[61, "hermespy.core.transformation.Transformable.position", false]], "power (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.power", false]], "power (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.power", false]], "power (dbconversiontype attribute)": [[230, "hermespy.tools.math.DbConversionType.POWER", false]], "power (device property)": [[39, "hermespy.core.device.Device.power", false]], "power (duplexoperator property)": [[51, "hermespy.core.duplex.DuplexOperator.power", false]], "power (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.power", false]], "power (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.power", false]], "power (matchedfilterjcas property)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas.power", false]], "power (n0 property)": [[191, "hermespy.simulation.noise.level.N0.power", false]], "power (noiserealization property)": [[190, "hermespy.simulation.noise.model.NoiseRealization.power", false]], "power (ofdmradar property)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar.power", false]], "power (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.power", false]], "power (pointdetection property)": [[154, "hermespy.radar.detection.PointDetection.power", false]], "power (radar property)": [[163, "hermespy.radar.radar.Radar.power", false]], "power (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.power", false]], "power (receiver property)": [[46, "hermespy.core.device.Receiver.power", false]], "power (receivingmodem property)": [[109, "hermespy.modem.modem.ReceivingModem.power", false]], "power (signal property)": [[60, "hermespy.core.signal_model.Signal.power", false]], "power (signalreceiver property)": [[56, "hermespy.core.operators.SignalReceiver.power", false]], "power (signaltransmitter property)": [[56, "hermespy.core.operators.SignalTransmitter.power", false]], "power (silenttransmitter property)": [[56, "hermespy.core.operators.SilentTransmitter.power", false]], "power (transmitter property)": [[49, "hermespy.core.device.Transmitter.power", false]], "power (transmittingmodem property)": [[111, "hermespy.modem.modem.TransmittingModem.power", false]], "power_amplifier (rfchain property)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.power_amplifier", false]], "power_profile (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.power_profile", false]], "power_profile (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.power_profile", false]], "poweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier", false]], "precoder (class in hermespy.precoding.precoding)": [[149, "hermespy.precoding.precoding.Precoder", false]], "precodertype (class in hermespy.precoding.precoding)": [[149, "hermespy.precoding.precoding.PrecoderType", false]], "precoding (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.precoding", false]], "precoding (class in hermespy.precoding.precoding)": [[149, "hermespy.precoding.precoding.Precoding", false]], "precoding (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.precoding", false]], "precoding (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.precoding", false]], "precoding (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.precoding", false]], "prefix_ratio (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.prefix_ratio", false]], "prefix_type (gridresource attribute)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.prefix_type", false]], "prefixtype (class in hermespy.modem.waveforms.orthogonal.waveform)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType", false]], "prepare_plot() (hardwareloopplot method)": [[81, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.prepare_plot", false]], "print() (evaluationresult method)": [[55, "hermespy.core.monte_carlo.EvaluationResult.print", false]], "print() (montecarloresult method)": [[55, "hermespy.core.monte_carlo.MonteCarloResult.print", false]], "probe() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.probe", false]], "probe_focus_points (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.probe_focus_points", false]], "process_from_realization() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.process_from_realization", false]], "process_input() (device method)": [[39, "hermespy.core.device.Device.process_input", false]], "process_input() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.process_input", false]], "process_input() (physicaldevicedummy method)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.process_input", false]], "process_input() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.process_input", false]], "process_inputs() (scenario method)": [[59, "hermespy.core.scenario.Scenario.process_inputs", false]], "process_inputs() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.process_inputs", false]], "processeddeviceinput (class in hermespy.core.device)": [[45, "hermespy.core.device.ProcessedDeviceInput", false]], "processedsimulateddeviceinput (class in hermespy.simulation.simulated_device)": [[213, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput", false]], "propagate() (channel method)": [[15, "hermespy.channel.channel.Channel.propagate", false]], "propagate() (channelsample method)": [[17, "hermespy.channel.channel.ChannelSample.propagate", false]], "propagate() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.propagate", false]], "propagate() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.propagate", false]], "propagation_delay() (radarinterferencepath method)": [[33, "hermespy.channel.radar.radar.RadarInterferencePath.propagation_delay", false]], "propagation_delay() (radarpath method)": [[33, "hermespy.channel.radar.radar.RadarPath.propagation_delay", false]], "propagation_delay() (radartargetpath method)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.propagation_delay", false]], "propagation_response() (radarinterferencepath method)": [[33, "hermespy.channel.radar.radar.RadarInterferencePath.propagation_response", false]], "propagation_response() (radarpath method)": [[33, "hermespy.channel.radar.radar.RadarPath.propagation_response", false]], "propagation_response() (radartargetpath method)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.propagation_response", false]], "pseudorandomgenerator (class in hermespy.fec.scrambler)": [[73, "hermespy.fec.scrambler.PseudoRandomGenerator", false]], "pulse_rep_interval (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.pulse_rep_interval", false]], "quadmeshvisualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.QuadMeshVisualization", false]], "quadrigachannel (class in hermespy.channel.quadriga.quadriga)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannel", false]], "quadrigachannelrealization (class in hermespy.channel.quadriga.quadriga)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization", false]], "quadrigachannelsample (class in hermespy.channel.quadriga.quadriga)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample", false]], "quantizer_type (analogdigitalconverter property)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.quantizer_type", false]], "quantizertype (class in hermespy.simulation.rf_chain.analog_digital_converter)": [[202, "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType", false]], "radar (class in hermespy.radar.radar)": [[163, "hermespy.radar.radar.Radar", false]], "radar (detectionprobevaluator property)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator.radar", false]], "radar_channel (radarevaluator property)": [[159, "hermespy.radar.evaluators.RadarEvaluator.radar_channel", false]], "radar_cross_section (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.radar_cross_section", false]], "radarbase (class in hermespy.radar.radar)": [[163, "hermespy.radar.radar.RadarBase", false]], "radarchannelbase (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarChannelBase", false]], "radarchannelrealization (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarChannelRealization", false]], "radarchannelsample (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarChannelSample", false]], "radarcrosssectionmodel (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.RadarCrossSectionModel", false]], "radarcube (class in hermespy.radar.cube)": [[152, "hermespy.radar.cube.RadarCube", false]], "radardetector (class in hermespy.radar.detection)": [[155, "hermespy.radar.detection.RadarDetector", false]], "radarevaluator (class in hermespy.radar.evaluators)": [[159, "hermespy.radar.evaluators.RadarEvaluator", false]], "radarinterferencepath (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarInterferencePath", false]], "radarpath (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarPath", false]], "radarpointcloud (class in hermespy.radar.detection)": [[156, "hermespy.radar.detection.RadarPointCloud", false]], "radarrangeplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.RadarRangePlot", false]], "radarreception (class in hermespy.radar.radar)": [[164, "hermespy.radar.radar.RadarReception", false]], "radartarget (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.RadarTarget", false]], "radartargetpath (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RadarTargetPath", false]], "radartransmission (class in hermespy.radar.radar)": [[165, "hermespy.radar.radar.RadarTransmission", false]], "radarwaveform (class in hermespy.radar.radar)": [[166, "hermespy.radar.radar.RadarWaveform", false]], "raisedcosinewaveform (class in hermespy.modem.waveform_single_carrier)": [[131, "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform", false]], "randombitssource (class in hermespy.modem.bits_source)": [[94, "hermespy.modem.bits_source.RandomBitsSource", false]], "randomdelaychannel (class in hermespy.channel.delay.random)": [[20, "hermespy.channel.delay.random.RandomDelayChannel", false]], "randomdelaychannelrealization (class in hermespy.channel.delay.random)": [[20, "hermespy.channel.delay.random.RandomDelayChannelRealization", false]], "randomnode (class in hermespy.core.random_node)": [[58, "hermespy.core.random_node.RandomNode", false]], "randomrealization (class in hermespy.core.random_node)": [[58, "hermespy.core.random_node.RandomRealization", false]], "randomtrigger (class in hermespy.simulation.simulated_device)": [[222, "hermespy.simulation.simulated_device.RandomTrigger", false]], "range_bins (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.range_bins", false]], "range_bins (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.range_bins", false]], "range_resolution (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.range_resolution", false]], "range_resolution (matchedfilterjcas property)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas.range_resolution", false]], "range_resolution (ofdmradar property)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar.range_resolution", false]], "range_resolution (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.range_resolution", false]], "rapppoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[207, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier", false]], "rate (blockinterleaver property)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.rate", false]], "rate (encoder property)": [[66, "hermespy.fec.coding.Encoder.rate", false]], "rate (encodermanager property)": [[66, "hermespy.fec.coding.EncoderManager.rate", false]], "rate (ganesan property)": [[116, "hermespy.modem.precoding.space_time_block_coding.Ganesan.rate", false]], "rate (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.rate", false]], "rate (precoding property)": [[149, "hermespy.precoding.precoding.Precoding.rate", false]], "rate (spatialmultiplexing property)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing.rate", false]], "raw (symbols property)": [[120, "hermespy.modem.symbols.Symbols.raw", false]], "rayleigh_factor (cdl property)": [[7, "hermespy.channel.cdl.cdl.CDL.rayleigh_factor", false]], "rcrt (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RCRT", false]], "rcst (class in hermespy.channel.radar.radar)": [[33, "hermespy.channel.radar.radar.RCST", false]], "realization (channel property)": [[15, "hermespy.channel.channel.Channel.realization", false]], "realization (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.realization", false]], "realize() (awgn method)": [[193, "hermespy.simulation.noise.model.AWGN.realize", false]], "realize() (channel method)": [[15, "hermespy.channel.channel.Channel.realize", false]], "realize() (consistentgenerator method)": [[18, "hermespy.channel.consistent.ConsistentGenerator.realize", false]], "realize() (noisemodel method)": [[190, "hermespy.simulation.noise.model.NoiseModel.realize", false]], "realize() (randomtrigger method)": [[222, "hermespy.simulation.simulated_device.RandomTrigger.realize", false]], "realize() (sampleoffsettrigger method)": [[223, "hermespy.simulation.simulated_device.SampleOffsetTrigger.realize", false]], "realize() (statictrigger method)": [[224, "hermespy.simulation.simulated_device.StaticTrigger.realize", false]], "realize() (timeoffsettrigger method)": [[225, "hermespy.simulation.simulated_device.TimeOffsetTrigger.realize", false]], "realize() (triggermodel method)": [[226, "hermespy.simulation.simulated_device.TriggerModel.realize", false]], "realize_channels() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.realize_channels", false]], "realize_reception() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.realize_reception", false]], "realize_triggers() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.realize_triggers", false]], "recall() (devicereception class method)": [[42, "hermespy.core.device.DeviceReception.Recall", false]], "recall() (devicetransmission class method)": [[43, "hermespy.core.device.DeviceTransmission.Recall", false]], "recall_realization() (cdl method)": [[7, "hermespy.channel.cdl.cdl.CDL.recall_realization", false]], "recall_realization() (channel method)": [[15, "hermespy.channel.channel.Channel.recall_realization", false]], "recall_realization() (clusterdelaylinebase method)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase.recall_realization", false]], "recall_realization() (idealchannel method)": [[30, "hermespy.channel.ideal.IdealChannel.recall_realization", false]], "recall_realization() (multipathfadingchannel method)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.recall_realization", false]], "recall_realization() (multitargetradarchannel method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.recall_realization", false]], "recall_realization() (quadrigachannel method)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannel.recall_realization", false]], "recall_realization() (randomdelaychannel method)": [[20, "hermespy.channel.delay.random.RandomDelayChannel.recall_realization", false]], "recall_realization() (singletargetradarchannel method)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.recall_realization", false]], "recall_realization() (spatialdelaychannel method)": [[21, "hermespy.channel.delay.spatial.SpatialDelayChannel.recall_realization", false]], "receive() (coupling method)": [[180, "hermespy.simulation.coupling.coupling.Coupling.receive", false]], "receive() (device method)": [[39, "hermespy.core.device.Device.receive", false]], "receive() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.receive", false]], "receive() (physicaldevicedummy method)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.receive", false]], "receive() (receivebeamformer method)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.receive", false]], "receive() (receiver method)": [[46, "hermespy.core.device.Receiver.receive", false]], "receive() (rfchain method)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.receive", false]], "receive() (simulatedantenna method)": [[170, "hermespy.simulation.antennas.SimulatedAntenna.receive", false], [174, "hermespy.simulation.antennas.SimulatedAntenna.receive", false]], "receive() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.receive", false]], "receive() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.receive", false]], "receive_antennas (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.receive_antennas", false]], "receive_antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.receive_antennas", false]], "receive_antennas (antennaarraystate property)": [[36, "hermespy.core.antennas.AntennaArrayState.receive_antennas", false]], "receive_antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.receive_antennas", false]], "receive_beamformer (radarbase property)": [[163, "hermespy.radar.radar.RadarBase.receive_beamformer", false]], "receive_correlation (impedancecoupling property)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.receive_correlation", false]], "receive_devices() (physicalscenario method)": [[85, "hermespy.hardware_loop.scenario.PhysicalScenario.receive_devices", false]], "receive_devices() (physicalscenariodummy method)": [[84, "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy.receive_devices", false]], "receive_devices() (scenario method)": [[59, "hermespy.core.scenario.Scenario.receive_devices", false]], "receive_devices() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.receive_devices", false]], "receive_focus (receivebeamformer property)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer.receive_focus", false]], "receive_impedance (impedancecoupling property)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.receive_impedance", false]], "receive_operators() (device method)": [[39, "hermespy.core.device.Device.receive_operators", false]], "receive_operators() (scenario method)": [[59, "hermespy.core.scenario.Scenario.receive_operators", false]], "receive_ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.receive_ports", false]], "receive_stream_coding (receivingmodembase property)": [[109, "hermespy.modem.modem.ReceivingModemBase.receive_stream_coding", false]], "receive_topology (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.receive_topology", false]], "receive_transmission (physicaldevicedummy property)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.receive_transmission", false]], "receivebeamformer (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.ReceiveBeamformer", false]], "received_streams() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.received_streams", false]], "receivedconstellationplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.ReceivedConstellationPlot", false]], "receiver (class in hermespy.core.device)": [[46, "hermespy.core.device.Receiver", false]], "receiver_antennas (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.receiver_antennas", false]], "receiver_pose (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.receiver_pose", false]], "receiver_state (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.receiver_state", false]], "receiver_velocity (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.receiver_velocity", false]], "receiveroperatingcharacteristic (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic", false]], "receivers (device attribute)": [[39, "hermespy.core.device.Device.receivers", false]], "receivers (scenario property)": [[59, "hermespy.core.scenario.Scenario.receivers", false]], "receivestreamcoding (class in hermespy.precoding.stream_precoding)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamCoding", false]], "receivestreamdecoder (class in hermespy.precoding.stream_precoding)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamDecoder", false]], "receiving (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.receiving", false]], "receiving_device (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.receiving_device", false]], "receiving_device (duplexjcasoperator property)": [[90, "hermespy.jcas.jcas.DuplexJCASOperator.receiving_device", false]], "receiving_device (duplexmodem property)": [[108, "hermespy.modem.modem.DuplexModem.receiving_device", false]], "receiving_device (radarevaluator property)": [[159, "hermespy.radar.evaluators.RadarEvaluator.receiving_device", false]], "receiving_device (receivingmodem property)": [[109, "hermespy.modem.modem.ReceivingModem.receiving_device", false]], "receiving_device (simplexlink property)": [[110, "hermespy.modem.modem.SimplexLink.receiving_device", false]], "receiving_device (transmittingmodem property)": [[111, "hermespy.modem.modem.TransmittingModem.receiving_device", false]], "receiving_modem (communicationevaluator property)": [[96, "hermespy.modem.evaluators.CommunicationEvaluator.receiving_modem", false]], "receiving_radar (radarevaluator property)": [[159, "hermespy.radar.evaluators.RadarEvaluator.receiving_radar", false]], "receivingmodem (class in hermespy.modem.modem)": [[109, "hermespy.modem.modem.ReceivingModem", false]], "receivingmodembase (class in hermespy.modem.modem)": [[109, "hermespy.modem.modem.ReceivingModemBase", false]], "reception (class in hermespy.core.device)": [[47, "hermespy.core.device.Reception", false]], "reception (receiver property)": [[46, "hermespy.core.device.Receiver.reception", false]], "reciprocal() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.reciprocal", false]], "reciprocal() (clusterdelaylinesample method)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.reciprocal", false]], "reciprocal_sample() (channelrealization method)": [[16, "hermespy.channel.channel.ChannelRealization.reciprocal_sample", false]], "record (scenariomode attribute)": [[59, "hermespy.core.scenario.ScenarioMode.RECORD", false]], "record() (scenario method)": [[59, "hermespy.core.scenario.Scenario.record", false]], "record_channels (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.record_channels", false]], "record_device (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.record_device", false]], "record_drops (hardwareloop attribute)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.record_drops", false]], "rectangularwaveform (class in hermespy.modem.waveform_single_carrier)": [[132, "hermespy.modem.waveform_single_carrier.RectangularWaveform", false]], "reedsolomoncoding (class in hermespy.fec.aff3ct.rs)": [[71, "hermespy.fec.aff3ct.rs.ReedSolomonCoding", false]], "reference (coordinatefocus property)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.reference", false]], "reference (elementtype attribute)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.ElementType.REFERENCE", false]], "reference (receiver property)": [[46, "hermespy.core.device.Receiver.reference", false]], "reference (simplexlink property)": [[110, "hermespy.modem.modem.SimplexLink.reference", false]], "reference (snr property)": [[192, "hermespy.simulation.noise.level.SNR.reference", false]], "references_per_frame (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.references_per_frame", false]], "reflection_phase (radartargetpath property)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.reflection_phase", false]], "register() (in module hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.register", false]], "registered_classes (factory property)": [[53, "hermespy.core.factory.Factory.registered_classes", false]], "registered_tags (factory property)": [[53, "hermespy.core.factory.Factory.registered_tags", false]], "registereddimension (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.RegisteredDimension", false]], "relative_bandwidth (rectangularwaveform property)": [[132, "hermespy.modem.waveform_single_carrier.RectangularWaveform.relative_bandwidth", false]], "relative_bandwidth (rolledoffsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.relative_bandwidth", false]], "relative_doppler_bins (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.relative_doppler_bins", false]], "relative_doppler_bins (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.relative_doppler_bins", false]], "relative_doppler_resolution (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.relative_doppler_resolution", false]], "relative_doppler_resolution (ofdmradar property)": [[92, "hermespy.jcas.ofdm_radar.OFDMRadar.relative_doppler_resolution", false]], "relative_doppler_resolution (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.relative_doppler_resolution", false]], "relative_velocity() (radarinterferencepath method)": [[33, "hermespy.channel.radar.radar.RadarInterferencePath.relative_velocity", false]], "relative_velocity() (radarpath method)": [[33, "hermespy.channel.radar.radar.RadarPath.relative_velocity", false]], "relative_velocity() (radartargetpath method)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.relative_velocity", false]], "remove_antenna() (antennaport method)": [[36, "hermespy.core.antennas.AntennaPort.remove_antenna", false]], "remove_device() (triggermodel method)": [[226, "hermespy.simulation.simulated_device.TriggerModel.remove_device", false]], "remove_dimension() (montecarlo method)": [[55, "hermespy.core.monte_carlo.MonteCarlo.remove_dimension", false]], "remove_leakage() (selectiveleakagecalibration method)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.remove_leakage", false]], "remove_link() (transformablelink method)": [[61, "hermespy.core.transformation.TransformableLink.remove_link", false]], "remove_port() (customantennaarray method)": [[36, "hermespy.core.antennas.CustomAntennaArray.remove_port", false]], "remove_port() (simulatedcustomarray method)": [[173, "hermespy.simulation.antennas.SimulatedCustomArray.remove_port", false]], "remove_sample_hook() (channel method)": [[15, "hermespy.channel.channel.Channel.remove_sample_hook", false]], "repeat_pilot_symbol_sequence (configurablepilotwaveform attribute)": [[121, "hermespy.modem.waveform.ConfigurablePilotWaveform.repeat_pilot_symbol_sequence", false]], "repetitionencoder (class in hermespy.fec.repetition_encoder)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder", false]], "repetitions (gridelement attribute)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.GridElement.repetitions", false]], "repetitions (gridresource property)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.GridResource.repetitions", false]], "repetitions (repetitionencoder property)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.repetitions", false]], "replay (scenariomode attribute)": [[59, "hermespy.core.scenario.ScenarioMode.REPLAY", false]], "replay() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.replay", false]], "replay() (scenario class method)": [[59, "hermespy.core.scenario.Scenario.Replay", false]], "replay() (scenario method)": [[59, "hermespy.core.scenario.Scenario.replay", false]], "replayscenario (class in hermespy.core.scenario)": [[59, "hermespy.core.scenario.ReplayScenario", false]], "required_inputs() (precoding method)": [[149, "hermespy.precoding.precoding.Precoding.required_inputs", false]], "required_num_data_bits() (encodermanager method)": [[66, "hermespy.fec.coding.EncoderManager.required_num_data_bits", false]], "required_num_input_streams (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.required_num_input_streams", false]], "required_num_output_streams (precoder property)": [[149, "hermespy.precoding.precoding.Precoder.required_num_output_streams", false]], "required_outputs() (precoding method)": [[149, "hermespy.precoding.precoding.Precoding.required_outputs", false]], "resample() (signal method)": [[60, "hermespy.core.signal_model.Signal.resample", false]], "rescale_quantization (gaincontrolbase property)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.rescale_quantization", false]], "reset() (pseudorandomgenerator method)": [[73, "hermespy.fec.scrambler.PseudoRandomGenerator.reset", false]], "resource_mask (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.resource_mask", false]], "resource_mask (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.resource_mask", false]], "resource_mask (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.resource_mask", false]], "resource_mask (symbolsection property)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection.resource_mask", false]], "results_dir (executable property)": [[52, "hermespy.core.executable.Executable.results_dir", false]], "rf_chain (simulatedantennaport property)": [[172, "hermespy.simulation.antennas.SimulatedAntennaPort.rf_chain", false]], "rf_chain (simulateddevice attribute)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.rf_chain", false]], "rf_chain_modified() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.rf_chain_modified", false]], "rfchain (class in hermespy.simulation.rf_chain.rf_chain)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain", false]], "rice_factor (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.rice_factor", false]], "rice_factors (multipathfadingchannel property)": [[26, "hermespy.channel.fading.fading.MultipathFadingChannel.rice_factors", false]], "rms_amplitude (gaincontroltype attribute)": [[201, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType.RMS_AMPLITUDE", false]], "rms_delay (cdl property)": [[7, "hermespy.channel.cdl.cdl.CDL.rms_delay", false]], "rms_delay (exponential property)": [[23, "hermespy.channel.fading.exponential.Exponential.rms_delay", false]], "rms_delay (tdl property)": [[29, "hermespy.channel.fading.tdl.TDL.rms_delay", false]], "rms_value() (in module hermespy.tools.math)": [[230, "hermespy.tools.math.rms_value", false]], "rocartifact (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RocArtifact", false]], "rocevaluation (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RocEvaluation", false]], "rocevaluationresult (class in hermespy.radar.evaluators)": [[160, "hermespy.radar.evaluators.RocEvaluationResult", false]], "roll_off (rolledoffsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform.roll_off", false]], "rolledoffsinglecarrierwaveform (class in hermespy.modem.waveform_single_carrier)": [[129, "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform", false]], "rootmeansquareartifact (class in hermespy.radar.evaluators)": [[161, "hermespy.radar.evaluators.RootMeanSquareArtifact", false]], "rootmeansquareerror (class in hermespy.radar.evaluators)": [[161, "hermespy.radar.evaluators.RootMeanSquareError", false]], "rootmeansquareerrorresult (class in hermespy.radar.evaluators)": [[161, "hermespy.radar.evaluators.RootMeanSquareErrorResult", false]], "rootmeansquareevaluation (class in hermespy.radar.evaluators)": [[161, "hermespy.radar.evaluators.RootMeanSquareEvaluation", false]], "rootraisedcosinewaveform (class in hermespy.modem.waveform_single_carrier)": [[133, "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform", false]], "rotate_direction() (transformation method)": [[61, "hermespy.core.transformation.Transformation.rotate_direction", false]], "rotation_quaternion (transformation property)": [[61, "hermespy.core.transformation.Transformation.rotation_quaternion", false]], "rotation_rpy (transformation property)": [[61, "hermespy.core.transformation.Transformation.rotation_rpy", false]], "rsccoding (class in hermespy.fec.aff3ct.rsc)": [[72, "hermespy.fec.aff3ct.rsc.RSCCoding", false]], "run() (executable method)": [[52, "hermespy.core.executable.Executable.run", false]], "run() (hardwareloop method)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.run", false]], "run() (montecarloactor method)": [[55, "hermespy.core.monte_carlo.MonteCarloActor.run", false]], "run() (simulation method)": [[219, "hermespy.simulation.simulation.Simulation.run", false]], "runtime_env (montecarlo attribute)": [[55, "hermespy.core.monte_carlo.MonteCarlo.runtime_env", false]], "rural (cost259type attribute)": [[22, "hermespy.channel.fading.cost259.Cost259Type.RURAL", false]], "ruralmacrocells (class in hermespy.channel.cdl.rural_macrocells)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells", false]], "ruralmacrocellsrealization (class in hermespy.channel.cdl.rural_macrocells)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization", false]], "rx (antennamode attribute)": [[36, "hermespy.core.antennas.AntennaMode.RX", false]], "rx_gain (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.rx_gain", false]], "salehpoweramplifier (class in hermespy.simulation.rf_chain.power_amplifier)": [[208, "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier", false]], "sample() (channelrealization method)": [[16, "hermespy.channel.channel.ChannelRealization.sample", false]], "sample() (consistentboolean method)": [[18, "hermespy.channel.consistent.ConsistentBoolean.sample", false]], "sample() (consistentgaussian method)": [[18, "hermespy.channel.consistent.ConsistentGaussian.sample", false]], "sample() (consistentrealization method)": [[18, "hermespy.channel.consistent.ConsistentRealization.sample", false]], "sample() (consistentuniform method)": [[18, "hermespy.channel.consistent.ConsistentUniform.sample", false]], "sample() (consistentvariable method)": [[18, "hermespy.channel.consistent.ConsistentVariable.sample", false]], "sample() (dualconsistentrealization method)": [[18, "hermespy.channel.consistent.DualConsistentRealization.sample", false]], "sample() (lineartrajectory method)": [[168, "hermespy.simulation.animation.LinearTrajectory.sample", false]], "sample() (staticconsistentrealization method)": [[18, "hermespy.channel.consistent.StaticConsistentRealization.sample", false]], "sample() (statictrajectory method)": [[168, "hermespy.simulation.animation.StaticTrajectory.sample", false]], "sample() (trajectory method)": [[168, "hermespy.simulation.animation.Trajectory.sample", false]], "sample_covariance() (antennacorrelation method)": [[25, "hermespy.channel.fading.fading.AntennaCorrelation.sample_covariance", false]], "sample_covariance() (customantennacorrelation method)": [[25, "hermespy.channel.fading.fading.CustomAntennaCorrelation.sample_covariance", false]], "sample_cross_section() (physicalradartarget method)": [[32, "hermespy.channel.radar.multi.PhysicalRadarTarget.sample_cross_section", false]], "sample_cross_section() (radartarget method)": [[32, "hermespy.channel.radar.multi.RadarTarget.sample_cross_section", false]], "sample_cross_section() (virtualradartarget method)": [[32, "hermespy.channel.radar.multi.VirtualRadarTarget.sample_cross_section", false]], "sample_hooks (channel property)": [[15, "hermespy.channel.channel.Channel.sample_hooks", false]], "sample_hooks (channelrealization property)": [[16, "hermespy.channel.channel.ChannelRealization.sample_hooks", false]], "sample_index (montecarlosample property)": [[55, "hermespy.core.monte_carlo.MonteCarloSample.sample_index", false]], "sample_offset (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.sample_offset", false]], "sample_offset (pilotsection property)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.sample_offset", false]], "sample_points (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.sample_points", false]], "sample_trajectory() (physicalradartarget method)": [[32, "hermespy.channel.radar.multi.PhysicalRadarTarget.sample_trajectory", false]], "sample_trajectory() (radartarget method)": [[32, "hermespy.channel.radar.multi.RadarTarget.sample_trajectory", false]], "sample_trajectory() (virtualradartarget method)": [[32, "hermespy.channel.radar.multi.VirtualRadarTarget.sample_trajectory", false]], "samplegrid (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.SampleGrid", false]], "sampleoffsettrigger (class in hermespy.simulation.simulated_device)": [[223, "hermespy.simulation.simulated_device.SampleOffsetTrigger", false]], "samplepoint (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.SamplePoint", false]], "samples (actorrunresult attribute)": [[55, "hermespy.core.monte_carlo.ActorRunResult.samples", false]], "samples (gridsection property)": [[55, "hermespy.core.monte_carlo.GridSection.samples", false]], "samples() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.samples", false]], "samples_in_chirp (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.samples_in_chirp", false]], "samples_per_frame (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.samples_per_frame", false]], "samples_per_frame (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.samples_per_frame", false]], "samples_per_frame (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.samples_per_frame", false]], "samples_per_frame (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.samples_per_frame", false]], "samples_per_frame (ofdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.samples_per_frame", false]], "samples_per_frame (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.samples_per_frame", false]], "sampling_rate (audiodevice property)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.sampling_rate", false]], "sampling_rate (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.sampling_rate", false]], "sampling_rate (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.sampling_rate", false]], "sampling_rate (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.sampling_rate", false]], "sampling_rate (device property)": [[39, "hermespy.core.device.Device.sampling_rate", false]], "sampling_rate (deviceoutput property)": [[41, "hermespy.core.device.DeviceOutput.sampling_rate", false]], "sampling_rate (duplexjcasoperator property)": [[90, "hermespy.jcas.jcas.DuplexJCASOperator.sampling_rate", false]], "sampling_rate (duplexoperator property)": [[51, "hermespy.core.duplex.DuplexOperator.sampling_rate", false]], "sampling_rate (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.sampling_rate", false]], "sampling_rate (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.sampling_rate", false]], "sampling_rate (matchedfilterjcas property)": [[91, "hermespy.jcas.matched_filtering.MatchedFilterJcas.sampling_rate", false]], "sampling_rate (ocdmwaveform property)": [[142, "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform.sampling_rate", false]], "sampling_rate (ofdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.sampling_rate", false]], "sampling_rate (radar property)": [[163, "hermespy.radar.radar.Radar.sampling_rate", false]], "sampling_rate (radarwaveform property)": [[166, "hermespy.radar.radar.RadarWaveform.sampling_rate", false]], "sampling_rate (selectiveleakagecalibration property)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration.sampling_rate", false]], "sampling_rate (signal property)": [[60, "hermespy.core.signal_model.Signal.sampling_rate", false]], "sampling_rate (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.sampling_rate", false]], "sampling_rate (staticoperator property)": [[56, "hermespy.core.operators.StaticOperator.sampling_rate", false]], "sampling_rate (triggerrealization property)": [[227, "hermespy.simulation.simulated_device.TriggerRealization.sampling_rate", false]], "sampling_rate (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.sampling_rate", false]], "saturation_amplitude (poweramplifier property)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.saturation_amplitude", false]], "save_calibration() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.save_calibration", false]], "save_to_matlab() (montecarloresult method)": [[55, "hermespy.core.monte_carlo.MonteCarloResult.save_to_matlab", false]], "scalardimension (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.ScalarDimension", false]], "scalarevaluationresult (class in hermespy.core.monte_carlo)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult", false]], "scale_quantized_signal() (gaincontrolbase method)": [[200, "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase.scale_quantized_signal", false]], "scale_transmission (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.scale_transmission", false]], "scattervisualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.ScatterVisualization", false]], "scenario (channel property)": [[15, "hermespy.channel.channel.Channel.scenario", false]], "scenario (class in hermespy.core.scenario)": [[59, "hermespy.core.scenario.Scenario", false]], "scenario (pipeline property)": [[57, "hermespy.core.pipeline.Pipeline.scenario", false]], "scenario (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.scenario", false]], "scenariomode (class in hermespy.core.scenario)": [[59, "hermespy.core.scenario.ScenarioMode", false]], "scenariotype (class in hermespy.core.scenario)": [[59, "hermespy.core.scenario.ScenarioType", false]], "schmidlcoxpilotsection (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[145, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection", false]], "schmidlcoxsynchronization (class in hermespy.modem.waveforms.orthogonal.ofdm)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization", false]], "scrambler3gpp (class in hermespy.fec.scrambler)": [[73, "hermespy.fec.scrambler.Scrambler3GPP", false]], "scrambler80211a (class in hermespy.fec.scrambler)": [[73, "hermespy.fec.scrambler.Scrambler80211a", false]], "screen_geometry() (in module hermespy.tools.tile)": [[232, "hermespy.tools.tile.screen_geometry", false]], "section_block_size (montecarlo property)": [[55, "hermespy.core.monte_carlo.MonteCarlo.section_block_size", false]], "seed (randomrealization property)": [[58, "hermespy.core.random_node.RandomRealization.seed", false]], "seed (scrambler80211a property)": [[73, "hermespy.fec.scrambler.Scrambler80211a.seed", false]], "selected_receive_ports (receiver property)": [[46, "hermespy.core.device.Receiver.selected_receive_ports", false]], "selected_receive_ports (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.selected_receive_ports", false]], "selected_transmit_ports (transmitter property)": [[49, "hermespy.core.device.Transmitter.selected_transmit_ports", false]], "selected_transmit_ports (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.selected_transmit_ports", false]], "selectiveleakage (class in hermespy.simulation.isolation.selective)": [[186, "hermespy.simulation.isolation.selective.SelectiveLeakage", false]], "selectiveleakagecalibration (class in hermespy.hardware_loop.calibration.leakage)": [[79, "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration", false]], "send() (poweramplifier method)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.send", false]], "serializable (class in hermespy.core.factory)": [[53, "hermespy.core.factory.Serializable", false]], "serializableenum (class in hermespy.core.factory)": [[53, "hermespy.core.factory.SerializableEnum", false]], "serializabletype (class in hermespy.core.factory)": [[53, "hermespy.core.factory.SerializableType", false]], "serialized_attribute (simulateddevice attribute)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.serialized_attribute", false]], "serialized_attributes (scenario attribute)": [[59, "hermespy.core.scenario.Scenario.serialized_attributes", false]], "set (class in hermespy.core.factory)": [[53, "hermespy.core.factory.SET", false]], "set_base() (transformable method)": [[61, "hermespy.core.transformation.Transformable.set_base", false]], "set_base() (transformablebase method)": [[61, "hermespy.core.transformation.TransformableBase.set_base", false]], "set_base() (transformablelink method)": [[61, "hermespy.core.transformation.TransformableLink.set_base", false]], "set_channel() (simulation method)": [[219, "hermespy.simulation.simulation.Simulation.set_channel", false]], "set_channel() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.set_channel", false]], "set_figure_geometry() (in module hermespy.tools.tile)": [[232, "hermespy.tools.tile.set_figure_geometry", false]], "set_samples() (signal method)": [[60, "hermespy.core.signal_model.Signal.set_samples", false]], "set_state() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.set_state", false]], "setter() (registereddimension method)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.setter", false]], "sh (factorytype attribute)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.SH", false]], "shape (consistentvariable property)": [[18, "hermespy.channel.consistent.ConsistentVariable.shape", false]], "shape (signal property)": [[60, "hermespy.core.signal_model.Signal.shape", false]], "signal (class in hermespy.core.signal_model)": [[60, "hermespy.core.signal_model.Signal", false]], "signal (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.signal", false]], "signal (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.signal", false]], "signal (operationresult attribute)": [[44, "hermespy.core.device.OperationResult.signal", false]], "signal (receiver property)": [[46, "hermespy.core.device.Receiver.signal", false]], "signal (signaltransmitter property)": [[56, "hermespy.core.operators.SignalTransmitter.signal", false]], "signalplot (class in hermespy.hardware_loop.visualizers)": [[88, "hermespy.hardware_loop.visualizers.SignalPlot", false]], "signalreceiver (class in hermespy.core.operators)": [[56, "hermespy.core.operators.SignalReceiver", false]], "signaltransmitter (class in hermespy.core.operators)": [[56, "hermespy.core.operators.SignalTransmitter", false]], "silent (consolemode attribute)": [[38, "hermespy.core.definitions.ConsoleMode.SILENT", false]], "silenttransmitter (class in hermespy.core.operators)": [[56, "hermespy.core.operators.SilentTransmitter", false]], "simplexlink (class in hermespy.modem.modem)": [[110, "hermespy.modem.modem.SimplexLink", false]], "simulate() (montecarlo method)": [[55, "hermespy.core.monte_carlo.MonteCarlo.simulate", false]], "simulatedantenna (class in hermespy.simulation.antennas)": [[170, "hermespy.simulation.antennas.SimulatedAntenna", false], [174, "hermespy.simulation.antennas.SimulatedAntenna", false]], "simulatedantennaarray (class in hermespy.simulation.antennas)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray", false]], "simulatedantennaport (class in hermespy.simulation.antennas)": [[172, "hermespy.simulation.antennas.SimulatedAntennaPort", false]], "simulatedcustomarray (class in hermespy.simulation.antennas)": [[173, "hermespy.simulation.antennas.SimulatedCustomArray", false]], "simulateddevice (class in hermespy.simulation.simulated_device)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice", false]], "simulateddeviceoutput (class in hermespy.simulation.simulated_device)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceOutput", false]], "simulateddevicereceiverealization (class in hermespy.simulation.simulated_device)": [[215, "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization", false]], "simulateddevicereception (class in hermespy.simulation.simulated_device)": [[216, "hermespy.simulation.simulated_device.SimulatedDeviceReception", false]], "simulateddevicetransmission (class in hermespy.simulation.simulated_device)": [[217, "hermespy.simulation.simulated_device.SimulatedDeviceTransmission", false]], "simulateddrop (class in hermespy.simulation.drop)": [[218, "hermespy.simulation.drop.SimulatedDrop", false]], "simulatedidealantenna (class in hermespy.simulation.antennas)": [[175, "hermespy.simulation.antennas.SimulatedIdealAntenna", false]], "simulatedlinearantenna (class in hermespy.simulation.antennas)": [[176, "hermespy.simulation.antennas.SimulatedLinearAntenna", false]], "simulatedpatchantenna (class in hermespy.simulation.antennas)": [[177, "hermespy.simulation.antennas.SimulatedPatchAntenna", false]], "simulateduniformarray (class in hermespy.simulation.antennas)": [[178, "hermespy.simulation.antennas.SimulatedUniformArray", false]], "simulation (class in hermespy.simulation.simulation)": [[219, "hermespy.simulation.simulation.Simulation", false]], "simulationscenario (class in hermespy.simulation.simulation)": [[220, "hermespy.simulation.simulation.SimulationScenario", false]], "sinc (interpolationmode attribute)": [[15, "hermespy.channel.channel.InterpolationMode.SINC", false]], "singlecarrier (class in hermespy.modem.precoding.single_carrier)": [[115, "hermespy.modem.precoding.single_carrier.SingleCarrier", false]], "singletargetradarchannel (class in hermespy.channel.radar.single)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel", false]], "singletargetradarchannelrealization (class in hermespy.channel.radar.single)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization", false]], "size (consistentvariable property)": [[18, "hermespy.channel.consistent.ConsistentVariable.size", false]], "sl (factorytype attribute)": [[9, "hermespy.channel.cdl.indoor_factory.FactoryType.SL", false]], "slant (linearantenna property)": [[36, "hermespy.core.antennas.LinearAntenna.slant", false]], "slope (fmcw property)": [[162, "hermespy.radar.fmcw.FMCW.slope", false]], "smoothness_factor (rapppoweramplifier property)": [[207, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.smoothness_factor", false]], "snr (class in hermespy.simulation.noise.level)": [[192, "hermespy.simulation.noise.level.SNR", false]], "snr (device property)": [[39, "hermespy.core.device.Device.snr", false]], "snr (snr property)": [[192, "hermespy.simulation.noise.level.SNR.snr", false]], "space (signalplot property)": [[88, "hermespy.hardware_loop.visualizers.SignalPlot.space", false]], "spacing (uniformarray property)": [[36, "hermespy.core.antennas.UniformArray.spacing", false]], "spatial_response (multipathfadingsample property)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.spatial_response", false]], "spatialdelaychannel (class in hermespy.channel.delay.spatial)": [[21, "hermespy.channel.delay.spatial.SpatialDelayChannel", false]], "spatialdelaychannelrealization (class in hermespy.channel.delay.spatial)": [[21, "hermespy.channel.delay.spatial.SpatialDelayChannelRealization", false]], "spatialmultiplexing (class in hermespy.modem.precoding.spatial_multiplexing)": [[117, "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing", false]], "specificisolation (class in hermespy.simulation.isolation.specific)": [[187, "hermespy.simulation.isolation.specific.SpecificIsolation", false]], "spherical_angles (beamfocus property)": [[2, "hermespy.beamforming.beamformer.BeamFocus.spherical_angles", false]], "spherical_angles (coordinatefocus property)": [[2, "hermespy.beamforming.beamformer.CoordinateFocus.spherical_angles", false]], "spherical_angles (devicefocus property)": [[2, "hermespy.beamforming.beamformer.DeviceFocus.spherical_angles", false]], "spherical_angles (sphericalfocus property)": [[2, "hermespy.beamforming.beamformer.SphericalFocus.spherical_angles", false]], "spherical_phase_response() (antennaarraybase method)": [[36, "hermespy.core.antennas.AntennaArrayBase.spherical_phase_response", false]], "sphericalfocus (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.SphericalFocus", false]], "stage_executors() (montecarloactor method)": [[55, "hermespy.core.monte_carlo.MonteCarloActor.stage_executors", false]], "stage_identifiers() (montecarloactor static method)": [[55, "hermespy.core.monte_carlo.MonteCarloActor.stage_identifiers", false]], "state (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.state", false]], "state() (antennaarray method)": [[36, "hermespy.core.antennas.AntennaArray.state", false]], "state() (channelsample method)": [[17, "hermespy.channel.channel.ChannelSample.state", false]], "state() (clusterdelaylinesample method)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.state", false]], "state() (delaychannelsample method)": [[19, "hermespy.channel.delay.delay.DelayChannelSample.state", false]], "state() (idealchannelsample method)": [[30, "hermespy.channel.ideal.IdealChannelSample.state", false]], "state() (multipathfadingsample method)": [[28, "hermespy.channel.fading.fading.MultipathFadingSample.state", false]], "state() (quadrigachannelsample method)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample.state", false]], "state() (radarchannelsample method)": [[33, "hermespy.channel.radar.radar.RadarChannelSample.state", false]], "state() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.state", false]], "state_format (channelstateinformation property)": [[37, "hermespy.core.channel.ChannelStateInformation.state_format", false]], "statedsymbols (class in hermespy.modem.symbols)": [[120, "hermespy.modem.symbols.StatedSymbols", false]], "states (statedsymbols property)": [[120, "hermespy.modem.symbols.StatedSymbols.states", false]], "static (radarpath property)": [[33, "hermespy.channel.radar.radar.RadarPath.static", false]], "static (radartarget property)": [[32, "hermespy.channel.radar.multi.RadarTarget.static", false]], "staticconsistentrealization (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.StaticConsistentRealization", false]], "staticconsistentsample (class in hermespy.channel.consistent)": [[18, "hermespy.channel.consistent.StaticConsistentSample", false]], "staticoperator (class in hermespy.core.operators)": [[56, "hermespy.core.operators.StaticOperator", false]], "statictrajectory (class in hermespy.simulation.animation)": [[168, "hermespy.simulation.animation.StaticTrajectory", false]], "statictrigger (class in hermespy.simulation.simulated_device)": [[224, "hermespy.simulation.simulated_device.StaticTrigger", false]], "stemvisualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.StemVisualization", false]], "stop() (scenario method)": [[59, "hermespy.core.scenario.Scenario.stop", false]], "streambitssource (class in hermespy.modem.bits_source)": [[94, "hermespy.modem.bits_source.StreamBitsSource", false]], "style (executable property)": [[52, "hermespy.core.executable.Executable.style", false]], "style_context() (executable static method)": [[52, "hermespy.core.executable.Executable.style_context", false]], "subcarrier_spacing (ofdmwaveform property)": [[144, "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform.subcarrier_spacing", false]], "subcluster_indices (clusterdelaylinesample attribute)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.subcluster_indices", false]], "superimpose() (signal method)": [[60, "hermespy.core.signal_model.Signal.superimpose", false]], "surface (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.surface", false]], "symbol_duration (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.symbol_duration", false]], "symbol_duration (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_duration", false]], "symbol_duration (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.symbol_duration", false]], "symbol_duration (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_duration", false]], "symbol_duration (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbol_duration", false]], "symbol_energy (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_energy", false]], "symbol_energy (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.symbol_energy", false]], "symbol_energy (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_energy", false]], "symbol_energy (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbol_energy", false]], "symbol_precoding_support (chirpfskwaveform property)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_precoding_support", false]], "symbol_precoding_support (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.symbol_precoding_support", false]], "symbol_rate (filteredsinglecarrierwaveform property)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.symbol_rate", false]], "symbol_type (chirpfskwaveform attribute)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.symbol_type", false]], "symbol_type (communicationwaveform attribute)": [[121, "hermespy.modem.waveform.CommunicationWaveform.symbol_type", false]], "symbolprecoder (class in hermespy.modem.precoding.symbol_precoding)": [[118, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoder", false]], "symbolprecoding (class in hermespy.modem.precoding.symbol_precoding)": [[119, "hermespy.modem.precoding.symbol_precoding.SymbolPrecoding", false]], "symbols (class in hermespy.modem.symbols)": [[120, "hermespy.modem.symbols.Symbols", false]], "symbols (communicationreception property)": [[104, "hermespy.modem.modem.CommunicationReception.symbols", false]], "symbols (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.symbols", false]], "symbols (communicationtransmission property)": [[106, "hermespy.modem.modem.CommunicationTransmission.symbols", false]], "symbols (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.symbols", false]], "symbols_per_frame (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.symbols_per_frame", false]], "symbolsection (class in hermespy.modem.waveforms.orthogonal.waveform)": [[141, "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection", false]], "synchronization (class in hermespy.modem.waveform)": [[124, "hermespy.modem.waveform.Synchronization", false]], "synchronization (communicationwaveform property)": [[121, "hermespy.modem.waveform.CommunicationWaveform.synchronization", false]], "synchronize() (correlationsynchronization method)": [[128, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.synchronize", false]], "synchronize() (schmidlcoxsynchronization method)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.synchronize", false]], "synchronize() (synchronization method)": [[124, "hermespy.modem.waveform.Synchronization.synchronize", false]], "tag_registry (factory property)": [[53, "hermespy.core.factory.Factory.tag_registry", false]], "tap_interval (exponential property)": [[23, "hermespy.channel.fading.exponential.Exponential.tap_interval", false]], "target_azimuth (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_azimuth", false]], "target_exists (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_exists", false]], "target_range (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_range", false]], "target_velocity (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_velocity", false]], "target_zenith (singletargetradarchannel property)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannel.target_zenith", false]], "targets (multitargetradarchannel property)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannel.targets", false]], "tdl (class in hermespy.channel.fading.tdl)": [[29, "hermespy.channel.fading.tdl.TDL", false]], "tdltype (class in hermespy.channel.fading.tdl)": [[29, "hermespy.channel.fading.tdl.TDLType", false]], "threshold (correlationsynchronization property)": [[128, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.threshold", false]], "thresholddetector (class in hermespy.radar.detection)": [[157, "hermespy.radar.detection.ThresholdDetector", false]], "throughputartifact (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.ThroughputArtifact", false]], "throughputevaluation (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.ThroughputEvaluation", false]], "throughputevaluator (class in hermespy.modem.evaluators)": [[102, "hermespy.modem.evaluators.ThroughputEvaluator", false]], "tick_format (evaluator attribute)": [[55, "hermespy.core.monte_carlo.Evaluator.tick_format", false]], "tick_format (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.tick_format", false]], "tile_figures() (in module hermespy.tools.tile)": [[232, "hermespy.tools.tile.tile_figures", false]], "time (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.time", false]], "timeoffsettrigger (class in hermespy.simulation.simulated_device)": [[225, "hermespy.simulation.simulated_device.TimeOffsetTrigger", false]], "timestamp (communicationreceptionframe attribute)": [[105, "hermespy.modem.modem.CommunicationReceptionFrame.timestamp", false]], "timestamp (communicationtransmissionframe attribute)": [[107, "hermespy.modem.modem.CommunicationTransmissionFrame.timestamp", false]], "timestamp (drop property)": [[50, "hermespy.core.drop.Drop.timestamp", false]], "timestamp (trajectorysample property)": [[168, "hermespy.simulation.animation.TrajectorySample.timestamp", false]], "timestamps (signal property)": [[60, "hermespy.core.signal_model.Signal.timestamps", false]], "title (_anglevisualization property)": [[8, "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization.title", false]], "title (_constellationplot property)": [[120, "hermespy.modem.symbols._ConstellationPlot.title", false]], "title (_powerdelayvisualization property)": [[8, "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization.title", false]], "title (biterrorevaluation property)": [[98, "hermespy.modem.evaluators.BitErrorEvaluation.title", false]], "title (biterrorevaluator property)": [[98, "hermespy.modem.evaluators.BitErrorEvaluator.title", false]], "title (blockerrorevaluation property)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluation.title", false]], "title (blockerrorevaluator property)": [[99, "hermespy.modem.evaluators.BlockErrorEvaluator.title", false]], "title (constellationevm property)": [[100, "hermespy.modem.evaluators.ConstellationEVM.title", false]], "title (detectionprobevaluator property)": [[158, "hermespy.radar.evaluators.DetectionProbEvaluator.title", false]], "title (ebn0 property)": [[188, "hermespy.simulation.modem.noise.EBN0.title", false]], "title (esn0 property)": [[189, "hermespy.simulation.modem.noise.ESN0.title", false]], "title (evaluator property)": [[55, "hermespy.core.monte_carlo.Evaluator.title", false]], "title (evmevaluation property)": [[100, "hermespy.modem.evaluators.EVMEvaluation.title", false]], "title (frameerrorevaluation property)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluation.title", false]], "title (frameerrorevaluator property)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluator.title", false]], "title (griddimension property)": [[55, "hermespy.core.monte_carlo.GridDimension.title", false]], "title (hardwareloopplot property)": [[81, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.title", false]], "title (n0 property)": [[191, "hermespy.simulation.noise.level.N0.title", false]], "title (poweramplifier property)": [[206, "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier.title", false]], "title (radarpointcloud property)": [[156, "hermespy.radar.detection.RadarPointCloud.title", false]], "title (receiveroperatingcharacteristic property)": [[160, "hermespy.radar.evaluators.ReceiverOperatingCharacteristic.title", false]], "title (registereddimension property)": [[55, "hermespy.core.monte_carlo.RegisteredDimension.title", false]], "title (rootmeansquareerror property)": [[161, "hermespy.radar.evaluators.RootMeanSquareError.title", false]], "title (samplepoint property)": [[55, "hermespy.core.monte_carlo.SamplePoint.title", false]], "title (scalardimension property)": [[55, "hermespy.core.monte_carlo.ScalarDimension.title", false]], "title (scalarevaluationresult property)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult.title", false]], "title (signal property)": [[60, "hermespy.core.signal_model.Signal.title", false]], "title (snr property)": [[192, "hermespy.simulation.noise.level.SNR.title", false]], "title (throughputevaluation property)": [[102, "hermespy.modem.evaluators.ThroughputEvaluation.title", false]], "title (throughputevaluator property)": [[102, "hermespy.modem.evaluators.ThroughputEvaluator.title", false]], "title (visualizable property)": [[62, "hermespy.core.visualize.Visualizable.title", false]], "to_array() (evaluationresult method)": [[55, "hermespy.core.monte_carlo.EvaluationResult.to_array", false]], "to_array() (rocevaluationresult method)": [[160, "hermespy.radar.evaluators.RocEvaluationResult.to_array", false]], "to_array() (scalarevaluationresult method)": [[55, "hermespy.core.monte_carlo.ScalarEvaluationResult.to_array", false]], "to_dense() (signal method)": [[60, "hermespy.core.signal_model.Signal.to_dense", false]], "to_file() (factory method)": [[53, "hermespy.core.factory.Factory.to_file", false]], "to_folder() (factory method)": [[53, "hermespy.core.factory.Factory.to_folder", false]], "to_frequency_selectivity() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.to_frequency_selectivity", false]], "to_hdf() (cdlrealization method)": [[7, "hermespy.channel.cdl.cdl.CDLRealization.to_HDF", false]], "to_hdf() (channelrealization method)": [[16, "hermespy.channel.channel.ChannelRealization.to_HDF", false]], "to_hdf() (clusterdelaylinerealization method)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization.to_HDF", false]], "to_hdf() (delaychannelrealization method)": [[19, "hermespy.channel.delay.delay.DelayChannelRealization.to_HDF", false]], "to_hdf() (idealchannelrealization method)": [[30, "hermespy.channel.ideal.IdealChannelRealization.to_HDF", false]], "to_hdf() (indoorfactoryrealization method)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization.to_HDF", false]], "to_hdf() (indoorofficerealization method)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization.to_HDF", false]], "to_hdf() (multipathfadingrealization method)": [[27, "hermespy.channel.fading.fading.MultipathFadingRealization.to_HDF", false]], "to_hdf() (multitargetradarchannelrealization method)": [[32, "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization.to_HDF", false]], "to_hdf() (quadrigachannelrealization method)": [[31, "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization.to_HDF", false]], "to_hdf() (randomdelaychannelrealization method)": [[20, "hermespy.channel.delay.random.RandomDelayChannelRealization.to_HDF", false]], "to_hdf() (ruralmacrocellsrealization method)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization.to_HDF", false]], "to_hdf() (singletargetradarchannelrealization method)": [[34, "hermespy.channel.radar.single.SingleTargetRadarChannelRealization.to_HDF", false]], "to_hdf() (urbanmacrocellsrealization method)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization.to_HDF", false]], "to_hdf() (urbanmicrocellsrealization method)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization.to_HDF", false]], "to_impulse_response() (channelstateinformation method)": [[37, "hermespy.core.channel.ChannelStateInformation.to_impulse_response", false]], "to_interleaved() (signal method)": [[60, "hermespy.core.signal_model.Signal.to_interleaved", false]], "to_local_coordinates() (transformable method)": [[61, "hermespy.core.transformation.Transformable.to_local_coordinates", false]], "to_scalar() (artifact method)": [[55, "hermespy.core.monte_carlo.Artifact.to_scalar", false]], "to_scalar() (artifacttemplate method)": [[55, "hermespy.core.monte_carlo.ArtifactTemplate.to_scalar", false]], "to_scalar() (rocartifact method)": [[160, "hermespy.radar.evaluators.RocArtifact.to_scalar", false]], "to_scalar() (rootmeansquareartifact method)": [[161, "hermespy.radar.evaluators.RootMeanSquareArtifact.to_scalar", false]], "to_spherical() (direction method)": [[61, "hermespy.core.transformation.Direction.to_spherical", false]], "to_str() (factory method)": [[53, "hermespy.core.factory.Factory.to_str", false]], "to_stream() (factory method)": [[53, "hermespy.core.factory.Factory.to_stream", false]], "to_yaml() (cost259 class method)": [[22, "hermespy.channel.fading.cost259.Cost259.to_yaml", false]], "to_yaml() (pilotsection class method)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.to_yaml", false]], "to_yaml() (precoding class method)": [[149, "hermespy.precoding.precoding.Precoding.to_yaml", false]], "to_yaml() (simulation class method)": [[219, "hermespy.simulation.simulation.Simulation.to_yaml", false]], "tolerance (evaluator property)": [[55, "hermespy.core.monte_carlo.Evaluator.tolerance", false]], "tolist() (logarithmicsequence method)": [[54, "hermespy.core.logarithmic.LogarithmicSequence.tolist", false]], "topology (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.topology", false]], "trajectory (class in hermespy.simulation.animation)": [[168, "hermespy.simulation.animation.Trajectory", false]], "trajectory (moveable property)": [[168, "hermespy.simulation.animation.Moveable.trajectory", false]], "trajectorysample (class in hermespy.simulation.animation)": [[168, "hermespy.simulation.animation.TrajectorySample", false]], "transform_direction() (transformation method)": [[61, "hermespy.core.transformation.Transformation.transform_direction", false]], "transform_position() (transformation method)": [[61, "hermespy.core.transformation.Transformation.transform_position", false]], "transformable (class in hermespy.core.transformation)": [[61, "hermespy.core.transformation.Transformable", false]], "transformablebase (class in hermespy.core.transformation)": [[61, "hermespy.core.transformation.TransformableBase", false]], "transformablelink (class in hermespy.core.transformation)": [[61, "hermespy.core.transformation.TransformableLink", false]], "transformation (class in hermespy.core.transformation)": [[61, "hermespy.core.transformation.Transformation", false]], "translation (transformation property)": [[61, "hermespy.core.transformation.Transformation.translation", false]], "transmission (class in hermespy.core.device)": [[48, "hermespy.core.device.Transmission", false]], "transmission (transmitter property)": [[49, "hermespy.core.device.Transmitter.transmission", false]], "transmit() (coupling method)": [[180, "hermespy.simulation.coupling.coupling.Coupling.transmit", false]], "transmit() (device method)": [[39, "hermespy.core.device.Device.transmit", false]], "transmit() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.transmit", false]], "transmit() (physicaldevicedummy method)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.transmit", false]], "transmit() (rfchain method)": [[195, "hermespy.simulation.rf_chain.rf_chain.RfChain.transmit", false]], "transmit() (simulatedantenna method)": [[170, "hermespy.simulation.antennas.SimulatedAntenna.transmit", false], [174, "hermespy.simulation.antennas.SimulatedAntenna.transmit", false]], "transmit() (simulatedantennaarray method)": [[171, "hermespy.simulation.antennas.SimulatedAntennaArray.transmit", false]], "transmit() (simulateddevice method)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.transmit", false]], "transmit() (transmitbeamformer method)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.transmit", false]], "transmit() (transmitter method)": [[49, "hermespy.core.device.Transmitter.transmit", false]], "transmit_antennas (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.transmit_antennas", false]], "transmit_antennas (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.transmit_antennas", false]], "transmit_antennas (antennaarraystate property)": [[36, "hermespy.core.antennas.AntennaArrayState.transmit_antennas", false]], "transmit_antennas (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.transmit_antennas", false]], "transmit_beamformer (radarbase property)": [[163, "hermespy.radar.radar.RadarBase.transmit_beamformer", false]], "transmit_correlation (impedancecoupling property)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.transmit_correlation", false]], "transmit_devices() (scenario method)": [[59, "hermespy.core.scenario.Scenario.transmit_devices", false]], "transmit_devices() (simulationscenario method)": [[220, "hermespy.simulation.simulation.SimulationScenario.transmit_devices", false]], "transmit_focus (transmitbeamformer property)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer.transmit_focus", false]], "transmit_impedance (impedancecoupling property)": [[181, "hermespy.simulation.coupling.impedance.ImpedanceCoupling.transmit_impedance", false]], "transmit_operators() (device method)": [[39, "hermespy.core.device.Device.transmit_operators", false]], "transmit_operators() (scenario method)": [[59, "hermespy.core.scenario.Scenario.transmit_operators", false]], "transmit_ports (antennaarray property)": [[36, "hermespy.core.antennas.AntennaArray.transmit_ports", false]], "transmit_stream_coding (transmittingmodembase property)": [[111, "hermespy.modem.modem.TransmittingModemBase.transmit_stream_coding", false]], "transmit_topology (antennaarraybase property)": [[36, "hermespy.core.antennas.AntennaArrayBase.transmit_topology", false]], "transmitbeamformer (class in hermespy.beamforming.beamformer)": [[2, "hermespy.beamforming.beamformer.TransmitBeamformer", false]], "transmitstreamcoding (class in hermespy.precoding.stream_precoding)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamCoding", false]], "transmitstreamencoder (class in hermespy.precoding.stream_precoding)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamEncoder", false]], "transmitter (class in hermespy.core.device)": [[49, "hermespy.core.device.Transmitter", false]], "transmitter_antennas (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.transmitter_antennas", false]], "transmitter_pose (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.transmitter_pose", false]], "transmitter_state (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.transmitter_state", false]], "transmitter_velocity (channelsample property)": [[17, "hermespy.channel.channel.ChannelSample.transmitter_velocity", false]], "transmitters (device attribute)": [[39, "hermespy.core.device.Device.transmitters", false]], "transmitters (scenario property)": [[59, "hermespy.core.scenario.Scenario.transmitters", false]], "transmitting (antennaport property)": [[36, "hermespy.core.antennas.AntennaPort.transmitting", false]], "transmitting_device (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.transmitting_device", false]], "transmitting_device (duplexjcasoperator property)": [[90, "hermespy.jcas.jcas.DuplexJCASOperator.transmitting_device", false]], "transmitting_device (duplexmodem property)": [[108, "hermespy.modem.modem.DuplexModem.transmitting_device", false]], "transmitting_device (radarevaluator property)": [[159, "hermespy.radar.evaluators.RadarEvaluator.transmitting_device", false]], "transmitting_device (receivingmodem property)": [[109, "hermespy.modem.modem.ReceivingModem.transmitting_device", false]], "transmitting_device (simplexlink property)": [[110, "hermespy.modem.modem.SimplexLink.transmitting_device", false]], "transmitting_device (transmittingmodem property)": [[111, "hermespy.modem.modem.TransmittingModem.transmitting_device", false]], "transmitting_modem (communicationevaluator property)": [[96, "hermespy.modem.evaluators.CommunicationEvaluator.transmitting_modem", false]], "transmittingmodem (class in hermespy.modem.modem)": [[111, "hermespy.modem.modem.TransmittingModem", false]], "transmittingmodembase (class in hermespy.modem.modem)": [[111, "hermespy.modem.modem.TransmittingModemBase", false]], "trigger() (audiodevice method)": [[76, "hermespy.hardware_loop.audio.device.AudioDevice.trigger", false]], "trigger() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.trigger", false]], "trigger() (physicaldevicedummy method)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.trigger", false]], "trigger() (usrpdevice method)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.trigger", false]], "trigger_delay (triggerrealization property)": [[227, "hermespy.simulation.simulated_device.TriggerRealization.trigger_delay", false]], "trigger_direct() (physicaldevice method)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.trigger_direct", false]], "trigger_direct() (physicaldevicedummy method)": [[83, "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy.trigger_direct", false]], "trigger_model (simulateddevice property)": [[212, "hermespy.simulation.simulated_device.SimulatedDevice.trigger_model", false]], "trigger_realization (processedsimulateddeviceinput property)": [[213, "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput.trigger_realization", false]], "trigger_realization (simulateddeviceoutput property)": [[214, "hermespy.simulation.simulated_device.SimulatedDeviceOutput.trigger_realization", false]], "triggermodel (class in hermespy.simulation.simulated_device)": [[226, "hermespy.simulation.simulated_device.TriggerModel", false]], "triggerrealization (class in hermespy.simulation.simulated_device)": [[227, "hermespy.simulation.simulated_device.TriggerRealization", false]], "turbocoding (class in hermespy.fec.aff3ct.turbo)": [[74, "hermespy.fec.aff3ct.turbo.TurboCoding", false]], "tx (antennamode attribute)": [[36, "hermespy.core.antennas.AntennaMode.TX", false]], "tx_gain (usrpdevice property)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.tx_gain", false]], "type (gridelement attribute)": [[135, "hermespy.modem.waveforms.orthogonal.waveform.GridElement.type", false]], "uniform() (consistentgenerator method)": [[18, "hermespy.channel.consistent.ConsistentGenerator.uniform", false]], "uniformarray (class in hermespy.core.antennas)": [[36, "hermespy.core.antennas.UniformArray", false]], "unmap() (chirpfskwaveform method)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform.unmap", false]], "unmap() (communicationwaveform method)": [[121, "hermespy.modem.waveform.CommunicationWaveform.unmap", false]], "unmap() (filteredsinglecarrierwaveform method)": [[129, "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform.unmap", false]], "unmap() (orthogonalwaveform method)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.unmap", false]], "unmatchableexception": [[55, "hermespy.core.monte_carlo.UnmatchableException", false]], "update_plot() (hardwareloopplot method)": [[81, "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot.update_plot", false]], "update_visualization() (visualizable method)": [[62, "hermespy.core.visualize.Visualizable.update_visualization", false]], "urban (cost259type attribute)": [[22, "hermespy.channel.fading.cost259.Cost259Type.URBAN", false]], "urbanmacrocells (class in hermespy.channel.cdl.urban_macrocells)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells", false]], "urbanmacrocellsrealization (class in hermespy.channel.cdl.urban_macrocells)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization", false]], "urbanmicrocells (class in hermespy.channel.cdl.urban_microcells)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells", false]], "urbanmicrocellsrealization (class in hermespy.channel.cdl.urban_microcells)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization", false]], "usrpdevice (class in hermespy.hardware_loop.uhd.usrp)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice", false]], "usrpsystem (class in hermespy.hardware_loop.uhd.system)": [[86, "hermespy.hardware_loop.uhd.system.UsrpSystem", false]], "value (largescalestate property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState.value", false]], "value (samplepoint property)": [[55, "hermespy.core.monte_carlo.SamplePoint.value", false]], "value_db (logarithmic property)": [[54, "hermespy.core.logarithmic.Logarithmic.value_db", false]], "valuetype (class in hermespy.core.logarithmic)": [[54, "hermespy.core.logarithmic.ValueType", false]], "vat (in module hermespy.core.visualize)": [[62, "hermespy.core.visualize.VAT", false]], "velocity (physicaldevice property)": [[82, "hermespy.hardware_loop.physical_device.PhysicalDevice.velocity", false]], "velocity (pointdetection property)": [[154, "hermespy.radar.detection.PointDetection.velocity", false]], "velocity (radartargetpath property)": [[33, "hermespy.channel.radar.radar.RadarTargetPath.velocity", false]], "velocity (statictrajectory property)": [[168, "hermespy.simulation.animation.StaticTrajectory.velocity", false]], "velocity (trajectorysample property)": [[168, "hermespy.simulation.animation.TrajectorySample.velocity", false]], "velocity_bins (radarcube property)": [[152, "hermespy.radar.cube.RadarCube.velocity_bins", false]], "velocity_resolution (radar property)": [[163, "hermespy.radar.radar.Radar.velocity_resolution", false]], "verbosity (class in hermespy.core.executable)": [[52, "hermespy.core.executable.Verbosity", false]], "verbosity (executable property)": [[52, "hermespy.core.executable.Executable.verbosity", false]], "virtualradartarget (class in hermespy.channel.radar.multi)": [[32, "hermespy.channel.radar.multi.VirtualRadarTarget", false]], "visualizable (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.Visualizable", false]], "visualizableattribute (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.VisualizableAttribute", false]], "visualization (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.Visualization", false]], "visualization (visualizable property)": [[62, "hermespy.core.visualize.Visualizable.visualization", false]], "visualize (simulationscenario property)": [[220, "hermespy.simulation.simulation.SimulationScenario.visualize", false]], "visualize() (visualizable method)": [[62, "hermespy.core.visualize.Visualizable.visualize", false]], "vlt (in module hermespy.core.visualize)": [[62, "hermespy.core.visualize.VLT", false]], "volume (indoorfactory property)": [[9, "hermespy.channel.cdl.indoor_factory.IndoorFactory.volume", false]], "vt (class in hermespy.core.visualize)": [[62, "hermespy.core.visualize.VT", false]], "warning (verbosity attribute)": [[52, "hermespy.core.executable.Verbosity.WARNING", false]], "wave (gridsection property)": [[137, "hermespy.modem.waveforms.orthogonal.waveform.GridSection.wave", false]], "waveform (basemodem property)": [[103, "hermespy.modem.modem.BaseModem.waveform", false]], "waveform (channelequalization property)": [[122, "hermespy.modem.waveform.ChannelEqualization.waveform", false]], "waveform (channelestimation property)": [[123, "hermespy.modem.waveform.ChannelEstimation.waveform", false]], "waveform (radar property)": [[163, "hermespy.radar.radar.Radar.waveform", false]], "waveform (synchronization property)": [[124, "hermespy.modem.waveform.Synchronization.waveform", false]], "wavelength (device property)": [[39, "hermespy.core.device.Device.wavelength", false]], "weight (simulatedantenna property)": [[170, "hermespy.simulation.antennas.SimulatedAntenna.weight", false], [174, "hermespy.simulation.antennas.SimulatedAntenna.weight", false]], "words_per_frame (orthogonalwaveform property)": [[139, "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform.words_per_frame", false]], "yaml_tag (analogdigitalconverter attribute)": [[197, "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter.yaml_tag", false]], "yaml_tag (audioscenario attribute)": [[77, "hermespy.hardware_loop.audio.scenario.AudioScenario.yaml_tag", false]], "yaml_tag (automaticgaincontrol attribute)": [[198, "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl.yaml_tag", false]], "yaml_tag (blockinterleaver attribute)": [[65, "hermespy.fec.block_interleaver.BlockInterleaver.yaml_tag", false]], "yaml_tag (chirpfskcorrelationsynchronization attribute)": [[127, "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization.yaml_tag", false]], "yaml_tag (clippingpoweramplifier attribute)": [[204, "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier.yaml_tag", false]], "yaml_tag (conventionalbeamformer attribute)": [[4, "hermespy.beamforming.conventional.ConventionalBeamformer.yaml_tag", false]], "yaml_tag (correlationsynchronization attribute)": [[128, "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization.yaml_tag", false]], "yaml_tag (customantennacorrelation attribute)": [[25, "hermespy.channel.fading.fading.CustomAntennaCorrelation.yaml_tag", false]], "yaml_tag (cyclicredundancycheck attribute)": [[67, "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck.yaml_tag", false]], "yaml_tag (dipole attribute)": [[36, "hermespy.core.antennas.Dipole.yaml_tag", false]], "yaml_tag (duplexmodem attribute)": [[108, "hermespy.modem.modem.DuplexModem.yaml_tag", false]], "yaml_tag (encoder attribute)": [[66, "hermespy.fec.coding.Encoder.yaml_tag", false]], "yaml_tag (fmcwwaveform attribute)": [[130, "hermespy.modem.waveform_single_carrier.FMCWWaveform.yaml_tag", false]], "yaml_tag (frameerrorevaluator attribute)": [[101, "hermespy.modem.evaluators.FrameErrorEvaluator.yaml_tag", false]], "yaml_tag (gain attribute)": [[199, "hermespy.simulation.rf_chain.analog_digital_converter.Gain.yaml_tag", false]], "yaml_tag (hardwareloop attribute)": [[80, "hermespy.hardware_loop.hardware_loop.HardwareLoop.yaml_tag", false]], "yaml_tag (idealantenna attribute)": [[36, "hermespy.core.antennas.IdealAntenna.yaml_tag", false]], "yaml_tag (indooroffice attribute)": [[10, "hermespy.channel.cdl.indoor_office.IndoorOffice.yaml_tag", false]], "yaml_tag (maxdetector attribute)": [[153, "hermespy.radar.detection.MaxDetector.yaml_tag", false]], "yaml_tag (nophasenoise attribute)": [[210, "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise.yaml_tag", false]], "yaml_tag (patchantenna attribute)": [[36, "hermespy.core.antennas.PatchAntenna.yaml_tag", false]], "yaml_tag (pilotsection attribute)": [[140, "hermespy.modem.waveforms.orthogonal.waveform.PilotSection.yaml_tag", false]], "yaml_tag (precoder attribute)": [[149, "hermespy.precoding.precoding.Precoder.yaml_tag", false]], "yaml_tag (raisedcosinewaveform attribute)": [[131, "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform.yaml_tag", false]], "yaml_tag (rapppoweramplifier attribute)": [[207, "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier.yaml_tag", false]], "yaml_tag (receivestreamcoding attribute)": [[150, "hermespy.precoding.stream_precoding.ReceiveStreamCoding.yaml_tag", false]], "yaml_tag (receivingmodem attribute)": [[109, "hermespy.modem.modem.ReceivingModem.yaml_tag", false]], "yaml_tag (rectangularwaveform attribute)": [[132, "hermespy.modem.waveform_single_carrier.RectangularWaveform.yaml_tag", false]], "yaml_tag (repetitionencoder attribute)": [[70, "hermespy.fec.repetition_encoder.RepetitionEncoder.yaml_tag", false]], "yaml_tag (rootraisedcosinewaveform attribute)": [[133, "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform.yaml_tag", false]], "yaml_tag (ruralmacrocells attribute)": [[11, "hermespy.channel.cdl.rural_macrocells.RuralMacrocells.yaml_tag", false]], "yaml_tag (scenario attribute)": [[59, "hermespy.core.scenario.Scenario.yaml_tag", false]], "yaml_tag (schmidlcoxpilotsection attribute)": [[145, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection.yaml_tag", false]], "yaml_tag (schmidlcoxsynchronization attribute)": [[146, "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization.yaml_tag", false]], "yaml_tag (scrambler3gpp attribute)": [[73, "hermespy.fec.scrambler.Scrambler3GPP.yaml_tag", false]], "yaml_tag (scrambler80211a attribute)": [[73, "hermespy.fec.scrambler.Scrambler80211a.yaml_tag", false]], "yaml_tag (simplexlink attribute)": [[110, "hermespy.modem.modem.SimplexLink.yaml_tag", false]], "yaml_tag (simulatedidealantenna attribute)": [[175, "hermespy.simulation.antennas.SimulatedIdealAntenna.yaml_tag", false]], "yaml_tag (simulatedpatchantenna attribute)": [[177, "hermespy.simulation.antennas.SimulatedPatchAntenna.yaml_tag", false]], "yaml_tag (simulationscenario attribute)": [[220, "hermespy.simulation.simulation.SimulationScenario.yaml_tag", false]], "yaml_tag (throughputevaluator attribute)": [[102, "hermespy.modem.evaluators.ThroughputEvaluator.yaml_tag", false]], "yaml_tag (transmitstreamcoding attribute)": [[150, "hermespy.precoding.stream_precoding.TransmitStreamCoding.yaml_tag", false]], "yaml_tag (urbanmacrocells attribute)": [[12, "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells.yaml_tag", false]], "yaml_tag (urbanmicrocells attribute)": [[13, "hermespy.channel.cdl.urban_microcells.UrbanMicrocells.yaml_tag", false]], "yaml_tag (usrpdevice attribute)": [[87, "hermespy.hardware_loop.uhd.usrp.UsrpDevice.yaml_tag", false]], "yaml_tag (usrpsystem attribute)": [[86, "hermespy.hardware_loop.uhd.system.UsrpSystem.yaml_tag", false]], "yaml_tag (zeroforcingchannelequalization attribute)": [[125, "hermespy.modem.waveform.ZeroForcingChannelEqualization.yaml_tag", false]], "zenith_arrival_spread (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_arrival_spread", false]], "zenith_departure_spread (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_departure_spread", false]], "zenith_of_arrival (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_of_arrival", false]], "zenith_of_departure (clusterdelaylinesample property)": [[8, "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample.zenith_of_departure", false]], "zeroforcingchannelequalization (class in hermespy.modem.waveform)": [[125, "hermespy.modem.waveform.ZeroForcingChannelEqualization", false]], "zeropad (prefixtype attribute)": [[136, "hermespy.modem.waveforms.orthogonal.waveform.PrefixType.ZEROPAD", false]]}, "objects": {"hermespy.beamforming": [[2, 0, 0, "-", "beamformer"], [3, 0, 0, "-", "capon"], [4, 0, 0, "-", "conventional"]], "hermespy.beamforming.beamformer": [[2, 1, 1, "", "BeamFocus"], [2, 1, 1, "", "BeamformerBase"], [2, 1, 1, "", "CoordinateFocus"], [2, 1, 1, "", "DeviceFocus"], [2, 1, 1, "", "FT"], [2, 1, 1, "", "OT"], [2, 1, 1, "", "ReceiveBeamformer"], [2, 1, 1, "", "SphericalFocus"], [2, 1, 1, "", "TransmitBeamformer"]], "hermespy.beamforming.beamformer.BeamFocus": [[2, 2, 1, "", "beamformer"], [2, 3, 1, "", "copy"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.BeamformerBase": [[2, 2, 1, "", "operator"]], "hermespy.beamforming.beamformer.CoordinateFocus": [[2, 2, 1, "", "coordinates"], [2, 3, 1, "", "copy"], [2, 2, 1, "", "reference"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.DeviceFocus": [[2, 3, 1, "", "copy"], [2, 2, 1, "", "device"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.ReceiveBeamformer": [[2, 3, 1, "", "_decode"], [2, 3, 1, "", "decode_streams"], [2, 2, 1, "", "num_receive_focus_points"], [2, 2, 1, "", "num_receive_input_streams"], [2, 2, 1, "", "num_receive_output_streams"], [2, 2, 1, "", "precoding"], [2, 3, 1, "", "probe"], [2, 2, 1, "", "probe_focus_points"], [2, 3, 1, "", "receive"], [2, 2, 1, "", "receive_focus"]], "hermespy.beamforming.beamformer.SphericalFocus": [[2, 2, 1, "", "angles"], [2, 3, 1, "", "copy"], [2, 2, 1, "", "spherical_angles"]], "hermespy.beamforming.beamformer.TransmitBeamformer": [[2, 3, 1, "", "encode_streams"], [2, 2, 1, "", "num_transmit_focus_points"], [2, 2, 1, "", "num_transmit_input_streams"], [2, 2, 1, "", "num_transmit_output_streams"], [2, 2, 1, "", "precoding"], [2, 3, 1, "", "transmit"], [2, 2, 1, "", "transmit_focus"]], "hermespy.beamforming.capon": [[3, 1, 1, "", "CaponBeamformer"]], "hermespy.beamforming.capon.CaponBeamformer": [[3, 3, 1, "", "_decode"], [3, 2, 1, "", "loading"], [3, 2, 1, "", "num_receive_focus_points"], [3, 2, 1, "", "num_receive_input_streams"], [3, 2, 1, "", "num_receive_output_streams"]], "hermespy.beamforming.conventional": [[4, 1, 1, "", "ConventionalBeamformer"]], "hermespy.beamforming.conventional.ConventionalBeamformer": [[4, 3, 1, "", "_decode"], [4, 3, 1, "", "_encode"], [4, 2, 1, "", "num_receive_focus_points"], [4, 2, 1, "", "num_receive_input_streams"], [4, 2, 1, "", "num_receive_output_streams"], [4, 2, 1, "", "num_transmit_focus_points"], [4, 2, 1, "", "num_transmit_input_streams"], [4, 2, 1, "", "num_transmit_output_streams"], [4, 4, 1, "", "yaml_tag"]], "hermespy.bin": [[6, 0, 0, "-", "hermes"]], "hermespy.bin.hermes": [[6, 5, 1, "", "hermes_simulation"]], "hermespy.channel.cdl": [[7, 1, 1, "", "CDLType"]], "hermespy.channel.cdl.CDLType": [[7, 4, 1, "", "A"], [7, 4, 1, "", "B"], [7, 4, 1, "", "C"], [7, 4, 1, "", "D"], [7, 4, 1, "", "E"]], "hermespy.channel.cdl.cdl": [[7, 1, 1, "", "CDL"], [7, 1, 1, "", "CDLRealization"]], "hermespy.channel.cdl.cdl.CDL": [[7, 3, 1, "", "_realize"], [7, 2, 1, "", "decorrelation_distance"], [7, 2, 1, "", "model_type"], [7, 2, 1, "", "rayleigh_factor"], [7, 3, 1, "", "recall_realization"], [7, 2, 1, "", "rms_delay"]], "hermespy.channel.cdl.cdl.CDLRealization": [[7, 3, 1, "", "From_HDF"], [7, 3, 1, "", "_sample"], [7, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.cluster_delay_lines": [[8, 1, 1, "", "CDLRT"], [8, 1, 1, "", "ClusterDelayLineBase"], [8, 1, 1, "", "ClusterDelayLineRealization"], [8, 1, 1, "", "ClusterDelayLineSample"], [8, 1, 1, "", "LSST"], [8, 1, 1, "", "LargeScaleState"], [8, 1, 1, "", "_AngleVisualization"], [8, 1, 1, "", "_PowerDelayVisualization"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineBase": [[8, 2, 1, "", "delay_normalization"], [8, 2, 1, "", "expected_state"], [8, 2, 1, "", "max_num_clusters"], [8, 2, 1, "", "max_num_rays"], [8, 2, 1, "", "oxygen_absorption"], [8, 3, 1, "", "recall_realization"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineRealization": [[8, 2, 1, "", "expected_state"], [8, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.cluster_delay_lines.ClusterDelayLineSample": [[8, 2, 1, "", "azimuth_arrival_spread"], [8, 2, 1, "", "azimuth_departure_spread"], [8, 2, 1, "", "azimuth_of_arrival"], [8, 2, 1, "", "azimuth_of_departure"], [8, 2, 1, "", "cluster_delay_spread"], [8, 2, 1, "", "cluster_delays"], [8, 2, 1, "", "cluster_powers"], [8, 2, 1, "", "delay_offset"], [8, 2, 1, "", "expected_energy_scale"], [8, 2, 1, "", "line_of_sight"], [8, 2, 1, "", "max_delay"], [8, 2, 1, "", "num_clusters"], [8, 2, 1, "", "num_rays"], [8, 2, 1, "", "plot_angles"], [8, 2, 1, "", "plot_power_delay"], [8, 3, 1, "", "plot_rays"], [8, 2, 1, "", "polarization_transformations"], [8, 3, 1, "", "reciprocal"], [8, 2, 1, "", "rice_factor"], [8, 3, 1, "", "state"], [8, 4, 1, "", "subcluster_indices"], [8, 2, 1, "", "zenith_arrival_spread"], [8, 2, 1, "", "zenith_departure_spread"], [8, 2, 1, "", "zenith_of_arrival"], [8, 2, 1, "", "zenith_of_departure"]], "hermespy.channel.cdl.cluster_delay_lines.LargeScaleState": [[8, 2, 1, "", "line_of_sight"], [8, 2, 1, "", "value"]], "hermespy.channel.cdl.cluster_delay_lines._AngleVisualization": [[8, 3, 1, "", "create_figure"], [8, 2, 1, "", "title"]], "hermespy.channel.cdl.cluster_delay_lines._PowerDelayVisualization": [[8, 2, 1, "", "title"]], "hermespy.channel.cdl.indoor_factory": [[9, 1, 1, "", "FactoryType"], [9, 1, 1, "", "IndoorFactory"], [9, 1, 1, "", "IndoorFactoryRealization"]], "hermespy.channel.cdl.indoor_factory.FactoryType": [[9, 4, 1, "", "DH"], [9, 4, 1, "", "DL"], [9, 4, 1, "", "HH"], [9, 4, 1, "", "SH"], [9, 4, 1, "", "SL"], [9, 2, 1, "", "clutter_density"], [9, 2, 1, "", "clutter_size"]], "hermespy.channel.cdl.indoor_factory.IndoorFactory": [[9, 2, 1, "", "clutter_height"], [9, 2, 1, "", "factory_type"], [9, 2, 1, "", "max_num_clusters"], [9, 2, 1, "", "max_num_rays"], [9, 2, 1, "", "surface"], [9, 2, 1, "", "volume"]], "hermespy.channel.cdl.indoor_factory.IndoorFactoryRealization": [[9, 3, 1, "", "From_HDF"], [9, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.indoor_office": [[10, 1, 1, "", "IndoorOffice"], [10, 1, 1, "", "IndoorOfficeRealization"], [10, 1, 1, "", "OfficeType"]], "hermespy.channel.cdl.indoor_office.IndoorOffice": [[10, 2, 1, "", "max_num_clusters"], [10, 2, 1, "", "max_num_rays"], [10, 2, 1, "", "office_type"], [10, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.indoor_office.IndoorOfficeRealization": [[10, 3, 1, "", "From_HDF"], [10, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.indoor_office.OfficeType": [[10, 4, 1, "", "MIXED"], [10, 4, 1, "", "OPEN"]], "hermespy.channel.cdl.rural_macrocells": [[11, 1, 1, "", "RuralMacrocells"], [11, 1, 1, "", "RuralMacrocellsRealization"]], "hermespy.channel.cdl.rural_macrocells.RuralMacrocells": [[11, 2, 1, "", "max_num_clusters"], [11, 2, 1, "", "max_num_rays"], [11, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.rural_macrocells.RuralMacrocellsRealization": [[11, 3, 1, "", "From_HDF"], [11, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.urban_macrocells": [[12, 1, 1, "", "UrbanMacrocells"], [12, 1, 1, "", "UrbanMacrocellsRealization"]], "hermespy.channel.cdl.urban_macrocells.UrbanMacrocells": [[12, 2, 1, "", "max_num_clusters"], [12, 2, 1, "", "max_num_rays"], [12, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.urban_macrocells.UrbanMacrocellsRealization": [[12, 3, 1, "", "From_HDF"], [12, 3, 1, "", "to_HDF"]], "hermespy.channel.cdl.urban_microcells": [[13, 1, 1, "", "UrbanMicrocells"], [13, 1, 1, "", "UrbanMicrocellsRealization"]], "hermespy.channel.cdl.urban_microcells.UrbanMicrocells": [[13, 2, 1, "", "max_num_clusters"], [13, 2, 1, "", "max_num_rays"], [13, 4, 1, "", "yaml_tag"]], "hermespy.channel.cdl.urban_microcells.UrbanMicrocellsRealization": [[13, 3, 1, "", "From_HDF"], [13, 3, 1, "", "to_HDF"]], "hermespy.channel.channel": [[16, 1, 1, "", "CRT"], [17, 1, 1, "", "CST"], [15, 1, 1, "", "Channel"], [16, 1, 1, "", "ChannelRealization"], [17, 1, 1, "", "ChannelSample"], [15, 1, 1, "", "ChannelSampleHook"], [15, 1, 1, "", "InterpolationMode"]], "hermespy.channel.channel.Channel": [[15, 3, 1, "", "add_sample_hook"], [15, 2, 1, "", "gain"], [15, 3, 1, "", "propagate"], [15, 2, 1, "", "realization"], [15, 3, 1, "", "realize"], [15, 3, 1, "", "recall_realization"], [15, 3, 1, "", "remove_sample_hook"], [15, 2, 1, "", "sample_hooks"], [15, 2, 1, "", "scenario"]], "hermespy.channel.channel.ChannelRealization": [[16, 2, 1, "", "gain"], [16, 3, 1, "", "reciprocal_sample"], [16, 3, 1, "", "sample"], [16, 2, 1, "", "sample_hooks"], [16, 3, 1, "", "to_HDF"]], "hermespy.channel.channel.ChannelSample": [[17, 2, 1, "", "bandwidth"], [17, 2, 1, "", "carrier_frequency"], [17, 2, 1, "", "expected_energy_scale"], [17, 2, 1, "", "num_receive_antennas"], [17, 2, 1, "", "num_transmit_antennas"], [17, 3, 1, "", "propagate"], [17, 2, 1, "", "receiver_antennas"], [17, 2, 1, "", "receiver_pose"], [17, 2, 1, "", "receiver_state"], [17, 2, 1, "", "receiver_velocity"], [17, 3, 1, "", "state"], [17, 2, 1, "", "time"], [17, 2, 1, "", "transmitter_antennas"], [17, 2, 1, "", "transmitter_pose"], [17, 2, 1, "", "transmitter_state"], [17, 2, 1, "", "transmitter_velocity"]], "hermespy.channel.channel.InterpolationMode": [[15, 4, 1, "", "NEAREST"], [15, 4, 1, "", "SINC"]], "hermespy.channel.consistent": [[18, 1, 1, "", "ConsistentBoolean"], [18, 1, 1, "", "ConsistentGaussian"], [18, 1, 1, "", "ConsistentGenerator"], [18, 1, 1, "", "ConsistentRealization"], [18, 1, 1, "", "ConsistentSample"], [18, 1, 1, "", "ConsistentUniform"], [18, 1, 1, "", "ConsistentVariable"], [18, 1, 1, "", "DualConsistentRealization"], [18, 1, 1, "", "DualConsistentSample"], [18, 1, 1, "", "StaticConsistentRealization"], [18, 1, 1, "", "StaticConsistentSample"]], "hermespy.channel.consistent.ConsistentBoolean": [[18, 3, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentGaussian": [[18, 3, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentGenerator": [[18, 3, 1, "", "add_variable"], [18, 3, 1, "", "boolean"], [18, 3, 1, "", "gaussian"], [18, 3, 1, "", "realize"], [18, 3, 1, "", "uniform"]], "hermespy.channel.consistent.ConsistentRealization": [[18, 3, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentSample": [[18, 3, 1, "", "fetch_scalars"]], "hermespy.channel.consistent.ConsistentUniform": [[18, 3, 1, "", "sample"]], "hermespy.channel.consistent.ConsistentVariable": [[18, 2, 1, "", "offset"], [18, 3, 1, "", "sample"], [18, 2, 1, "", "shape"], [18, 2, 1, "", "size"]], "hermespy.channel.consistent.DualConsistentRealization": [[18, 2, 1, "", "frequencies"], [18, 2, 1, "", "phases"], [18, 3, 1, "", "sample"]], "hermespy.channel.consistent.DualConsistentSample": [[18, 3, 1, "", "fetch_scalars"]], "hermespy.channel.consistent.StaticConsistentRealization": [[18, 3, 1, "", "sample"]], "hermespy.channel.consistent.StaticConsistentSample": [[18, 3, 1, "", "fetch_scalars"]], "hermespy.channel.delay.delay": [[19, 1, 1, "", "DCRT"], [19, 1, 1, "", "DelayChannelBase"], [19, 1, 1, "", "DelayChannelRealization"], [19, 1, 1, "", "DelayChannelSample"]], "hermespy.channel.delay.delay.DelayChannelBase": [[19, 2, 1, "", "model_propagation_loss"]], "hermespy.channel.delay.delay.DelayChannelRealization": [[19, 2, 1, "", "model_propagation_loss"], [19, 3, 1, "", "to_HDF"]], "hermespy.channel.delay.delay.DelayChannelSample": [[19, 2, 1, "", "delay"], [19, 2, 1, "", "expected_energy_scale"], [19, 2, 1, "", "gain"], [19, 2, 1, "", "model_propagation_loss"], [19, 3, 1, "", "state"]], "hermespy.channel.delay.random": [[20, 1, 1, "", "RandomDelayChannel"], [20, 1, 1, "", "RandomDelayChannelRealization"]], "hermespy.channel.delay.random.RandomDelayChannel": [[20, 3, 1, "", "_realize"], [20, 2, 1, "", "decorrelation_distance"], [20, 2, 1, "", "delay"], [20, 3, 1, "", "recall_realization"]], "hermespy.channel.delay.random.RandomDelayChannelRealization": [[20, 3, 1, "", "From_HDF"], [20, 2, 1, "", "delay"], [20, 3, 1, "", "to_HDF"]], "hermespy.channel.delay.spatial": [[21, 1, 1, "", "SpatialDelayChannel"], [21, 1, 1, "", "SpatialDelayChannelRealization"]], "hermespy.channel.delay.spatial.SpatialDelayChannel": [[21, 3, 1, "", "_realize"], [21, 3, 1, "", "recall_realization"]], "hermespy.channel.delay.spatial.SpatialDelayChannelRealization": [[21, 3, 1, "", "From_HDF"]], "hermespy.channel.fading.cost259": [[22, 1, 1, "", "Cost259"], [22, 1, 1, "", "Cost259Type"]], "hermespy.channel.fading.cost259.Cost259": [[22, 2, 1, "", "model_type"], [22, 3, 1, "", "to_yaml"]], "hermespy.channel.fading.cost259.Cost259Type": [[22, 4, 1, "", "HILLY"], [22, 4, 1, "", "RURAL"], [22, 4, 1, "", "URBAN"]], "hermespy.channel.fading.exponential": [[23, 1, 1, "", "Exponential"]], "hermespy.channel.fading.exponential.Exponential": [[23, 2, 1, "", "rms_delay"], [23, 2, 1, "", "tap_interval"]], "hermespy.channel.fading.fading": [[25, 1, 1, "", "AntennaCorrelation"], [25, 1, 1, "", "CustomAntennaCorrelation"], [26, 1, 1, "", "MultipathFadingChannel"], [27, 1, 1, "", "MultipathFadingRealization"], [28, 1, 1, "", "MultipathFadingSample"]], "hermespy.channel.fading.fading.AntennaCorrelation": [[25, 2, 1, "", "channel"], [25, 3, 1, "", "sample_covariance"]], "hermespy.channel.fading.fading.CustomAntennaCorrelation": [[25, 2, 1, "", "covariance"], [25, 3, 1, "", "sample_covariance"], [25, 4, 1, "", "yaml_tag"]], "hermespy.channel.fading.fading.MultipathFadingChannel": [[26, 2, 1, "", "antenna_correlation"], [26, 2, 1, "", "correlation_distance"], [26, 2, 1, "", "delays"], [26, 2, 1, "", "doppler_frequency"], [26, 2, 1, "", "los_angle"], [26, 2, 1, "", "los_doppler_frequency"], [26, 2, 1, "", "max_delay"], [26, 2, 1, "", "num_resolvable_paths"], [26, 2, 1, "", "num_sinusoids"], [26, 2, 1, "", "power_profile"], [26, 3, 1, "", "recall_realization"], [26, 2, 1, "", "rice_factors"]], "hermespy.channel.fading.fading.MultipathFadingRealization": [[27, 3, 1, "", "From_HDF"], [27, 3, 1, "", "to_HDF"]], "hermespy.channel.fading.fading.MultipathFadingSample": [[28, 2, 1, "", "delay_profile"], [28, 2, 1, "", "expected_energy_scale"], [28, 2, 1, "", "gain"], [28, 2, 1, "", "los_angles"], [28, 2, 1, "", "los_doppler"], [28, 2, 1, "", "los_gains"], [28, 2, 1, "", "los_phases"], [28, 2, 1, "", "nlos_angles"], [28, 2, 1, "", "nlos_doppler"], [28, 2, 1, "", "nlos_gains"], [28, 2, 1, "", "nlos_phases"], [28, 3, 1, "", "plot_power_delay"], [28, 2, 1, "", "power_profile"], [28, 2, 1, "", "spatial_response"], [28, 3, 1, "", "state"]], "hermespy.channel.fading.tdl": [[29, 1, 1, "", "TDL"], [29, 1, 1, "", "TDLType"]], "hermespy.channel.fading.tdl.TDL": [[29, 2, 1, "", "model_type"], [29, 2, 1, "", "rms_delay"]], "hermespy.channel.fading.tdl.TDLType": [[29, 4, 1, "", "A"], [29, 4, 1, "", "B"], [29, 4, 1, "", "C"], [29, 4, 1, "", "D"], [29, 4, 1, "", "E"]], "hermespy.channel.ideal": [[30, 1, 1, "", "IdealChannel"], [30, 1, 1, "", "IdealChannelRealization"], [30, 1, 1, "", "IdealChannelSample"]], "hermespy.channel.ideal.IdealChannel": [[30, 3, 1, "", "_realize"], [30, 3, 1, "", "recall_realization"]], "hermespy.channel.ideal.IdealChannelRealization": [[30, 3, 1, "", "From_HDF"], [30, 3, 1, "", "_sample"], [30, 3, 1, "", "to_HDF"]], "hermespy.channel.ideal.IdealChannelSample": [[30, 3, 1, "", "_propagate"], [30, 2, 1, "", "expected_energy_scale"], [30, 3, 1, "", "state"]], "hermespy.channel.quadriga.quadriga": [[31, 1, 1, "", "QuadrigaChannel"], [31, 1, 1, "", "QuadrigaChannelRealization"], [31, 1, 1, "", "QuadrigaChannelSample"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannel": [[31, 3, 1, "", "recall_realization"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannelRealization": [[31, 3, 1, "", "From_HDF"], [31, 3, 1, "", "to_HDF"]], "hermespy.channel.quadriga.quadriga.QuadrigaChannelSample": [[31, 2, 1, "", "expected_energy_scale"], [31, 2, 1, "", "path_delays"], [31, 2, 1, "", "path_gains"], [31, 3, 1, "", "state"]], "hermespy.channel.radar.multi": [[32, 1, 1, "", "FixedCrossSection"], [32, 1, 1, "", "MultiTargetRadarChannel"], [32, 1, 1, "", "MultiTargetRadarChannelRealization"], [32, 1, 1, "", "PhysicalRadarTarget"], [32, 1, 1, "", "RadarCrossSectionModel"], [32, 1, 1, "", "RadarTarget"], [32, 1, 1, "", "VirtualRadarTarget"]], "hermespy.channel.radar.multi.FixedCrossSection": [[32, 2, 1, "", "cross_section"], [32, 3, 1, "", "get_cross_section"]], "hermespy.channel.radar.multi.MultiTargetRadarChannel": [[32, 3, 1, "", "_realize"], [32, 3, 1, "", "add_target"], [32, 2, 1, "", "decorrelation_distance"], [32, 4, 1, "", "interfernce"], [32, 3, 1, "", "make_target"], [32, 3, 1, "", "recall_realization"], [32, 2, 1, "", "targets"]], "hermespy.channel.radar.multi.MultiTargetRadarChannelRealization": [[32, 3, 1, "", "From_HDF"], [32, 3, 1, "", "to_HDF"]], "hermespy.channel.radar.multi.PhysicalRadarTarget": [[32, 2, 1, "", "cross_section"], [32, 2, 1, "", "moveable"], [32, 3, 1, "", "sample_cross_section"], [32, 3, 1, "", "sample_trajectory"]], "hermespy.channel.radar.multi.RadarCrossSectionModel": [[32, 3, 1, "", "get_cross_section"]], "hermespy.channel.radar.multi.RadarTarget": [[32, 3, 1, "", "sample_cross_section"], [32, 3, 1, "", "sample_trajectory"], [32, 2, 1, "", "static"]], "hermespy.channel.radar.multi.VirtualRadarTarget": [[32, 2, 1, "", "cross_section"], [32, 3, 1, "", "sample_cross_section"], [32, 3, 1, "", "sample_trajectory"]], "hermespy.channel.radar.radar": [[33, 1, 1, "", "RCRT"], [33, 1, 1, "", "RCST"], [33, 1, 1, "", "RadarChannelBase"], [33, 1, 1, "", "RadarChannelRealization"], [33, 1, 1, "", "RadarChannelSample"], [33, 1, 1, "", "RadarInterferencePath"], [33, 1, 1, "", "RadarPath"], [33, 1, 1, "", "RadarTargetPath"]], "hermespy.channel.radar.radar.RadarChannelBase": [[33, 2, 1, "", "attenuate"]], "hermespy.channel.radar.radar.RadarChannelSample": [[33, 2, 1, "", "expected_energy_scale"], [33, 2, 1, "", "gain"], [33, 3, 1, "", "null_hypothesis"], [33, 2, 1, "", "paths"], [33, 3, 1, "", "state"]], "hermespy.channel.radar.radar.RadarInterferencePath": [[33, 2, 1, "", "ground_truth"], [33, 3, 1, "", "propagation_delay"], [33, 3, 1, "", "propagation_response"], [33, 3, 1, "", "relative_velocity"]], "hermespy.channel.radar.radar.RadarPath": [[33, 3, 1, "", "add_propagation"], [33, 3, 1, "", "add_state"], [33, 2, 1, "", "attenuate"], [33, 2, 1, "", "ground_truth"], [33, 3, 1, "", "propagation_delay"], [33, 3, 1, "", "propagation_response"], [33, 3, 1, "", "relative_velocity"], [33, 2, 1, "", "static"]], "hermespy.channel.radar.radar.RadarTargetPath": [[33, 2, 1, "", "cross_section"], [33, 2, 1, "", "ground_truth"], [33, 2, 1, "", "position"], [33, 3, 1, "", "propagation_delay"], [33, 3, 1, "", "propagation_response"], [33, 2, 1, "", "reflection_phase"], [33, 3, 1, "", "relative_velocity"], [33, 2, 1, "", "velocity"]], "hermespy.channel.radar.single": [[34, 1, 1, "", "SingleTargetRadarChannel"], [34, 1, 1, "", "SingleTargetRadarChannelRealization"]], "hermespy.channel.radar.single.SingleTargetRadarChannel": [[34, 3, 1, "", "_realize"], [34, 2, 1, "", "decorrelation_distance"], [34, 2, 1, "", "radar_cross_section"], [34, 3, 1, "", "recall_realization"], [34, 2, 1, "", "target_azimuth"], [34, 2, 1, "", "target_exists"], [34, 2, 1, "", "target_range"], [34, 2, 1, "", "target_velocity"], [34, 2, 1, "", "target_zenith"]], "hermespy.channel.radar.single.SingleTargetRadarChannelRealization": [[34, 3, 1, "", "From_HDF"], [34, 3, 1, "", "to_HDF"]], "hermespy.core": [[36, 0, 0, "-", "antennas"], [38, 0, 0, "-", "definitions"], [51, 0, 0, "-", "duplex"], [52, 0, 0, "-", "executable"], [53, 0, 0, "-", "factory"], [54, 0, 0, "-", "logarithmic"], [55, 0, 0, "-", "monte_carlo"], [56, 0, 0, "-", "operators"], [57, 0, 0, "-", "pipeline"], [58, 0, 0, "-", "random_node"], [59, 0, 0, "-", "scenario"], [61, 0, 0, "-", "transformation"], [62, 0, 0, "-", "visualize"]], "hermespy.core.antennas": [[36, 1, 1, "", "AAT"], [36, 1, 1, "", "APT"], [36, 1, 1, "", "AT"], [36, 1, 1, "", "Antenna"], [36, 1, 1, "", "AntennaArray"], [36, 1, 1, "", "AntennaArrayBase"], [36, 1, 1, "", "AntennaArrayState"], [36, 1, 1, "", "AntennaMode"], [36, 1, 1, "", "AntennaPort"], [36, 1, 1, "", "CustomAntennaArray"], [36, 1, 1, "", "Dipole"], [36, 1, 1, "", "IdealAntenna"], [36, 1, 1, "", "LinearAntenna"], [36, 1, 1, "", "PatchAntenna"], [36, 1, 1, "", "UniformArray"]], "hermespy.core.antennas.Antenna": [[36, 3, 1, "", "copy"], [36, 3, 1, "", "global_characteristics"], [36, 3, 1, "", "local_characteristics"], [36, 2, 1, "", "mode"], [36, 3, 1, "", "plot_gain"], [36, 3, 1, "", "plot_polarization"], [36, 2, 1, "", "port"]], "hermespy.core.antennas.AntennaArray": [[36, 2, 1, "", "antennas"], [36, 3, 1, "", "count_antennas"], [36, 3, 1, "", "count_receive_antennas"], [36, 3, 1, "", "count_transmit_antennas"], [36, 2, 1, "", "num_ports"], [36, 2, 1, "", "num_receive_antennas"], [36, 2, 1, "", "num_receive_ports"], [36, 2, 1, "", "num_transmit_antennas"], [36, 2, 1, "", "num_transmit_ports"], [36, 2, 1, "", "ports"], [36, 2, 1, "", "receive_antennas"], [36, 2, 1, "", "receive_ports"], [36, 3, 1, "", "state"], [36, 2, 1, "", "transmit_antennas"], [36, 2, 1, "", "transmit_ports"]], "hermespy.core.antennas.AntennaArrayBase": [[36, 2, 1, "", "antennas"], [36, 3, 1, "", "cartesian_array_response"], [36, 3, 1, "", "cartesian_phase_response"], [36, 3, 1, "", "characteristics"], [36, 3, 1, "", "horizontal_phase_response"], [36, 2, 1, "", "num_antennas"], [36, 2, 1, "", "num_receive_antennas"], [36, 2, 1, "", "num_transmit_antennas"], [36, 3, 1, "", "plot_topology"], [36, 2, 1, "", "receive_antennas"], [36, 2, 1, "", "receive_topology"], [36, 3, 1, "", "spherical_phase_response"], [36, 2, 1, "", "topology"], [36, 2, 1, "", "transmit_antennas"], [36, 2, 1, "", "transmit_topology"]], "hermespy.core.antennas.AntennaArrayState": [[36, 2, 1, "", "antennas"], [36, 2, 1, "", "receive_antennas"], [36, 2, 1, "", "transmit_antennas"]], "hermespy.core.antennas.AntennaMode": [[36, 4, 1, "", "DUPLEX"], [36, 4, 1, "", "RX"], [36, 4, 1, "", "TX"]], "hermespy.core.antennas.AntennaPort": [[36, 3, 1, "", "add_antenna"], [36, 2, 1, "", "antennas"], [36, 3, 1, "", "antennas_updated"], [36, 2, 1, "", "array"], [36, 2, 1, "", "num_antennas"], [36, 2, 1, "", "num_receive_antennas"], [36, 2, 1, "", "num_transmit_antennas"], [36, 2, 1, "", "receive_antennas"], [36, 2, 1, "", "receiving"], [36, 3, 1, "", "remove_antenna"], [36, 2, 1, "", "transmit_antennas"], [36, 2, 1, "", "transmitting"]], "hermespy.core.antennas.CustomAntennaArray": [[36, 3, 1, "", "add_antenna"], [36, 3, 1, "", "add_port"], [36, 2, 1, "", "ports"], [36, 3, 1, "", "remove_port"]], "hermespy.core.antennas.Dipole": [[36, 3, 1, "", "copy"], [36, 3, 1, "", "local_characteristics"], [36, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.IdealAntenna": [[36, 3, 1, "", "copy"], [36, 3, 1, "", "local_characteristics"], [36, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.LinearAntenna": [[36, 3, 1, "", "copy"], [36, 3, 1, "", "local_characteristics"], [36, 2, 1, "", "slant"]], "hermespy.core.antennas.PatchAntenna": [[36, 3, 1, "", "copy"], [36, 3, 1, "", "local_characteristics"], [36, 4, 1, "", "yaml_tag"]], "hermespy.core.antennas.UniformArray": [[36, 2, 1, "", "antennas"], [36, 2, 1, "", "base_port"], [36, 2, 1, "", "dimensions"], [36, 2, 1, "", "num_antennas"], [36, 2, 1, "", "ports"], [36, 2, 1, "", "spacing"]], "hermespy.core.channel": [[37, 1, 1, "", "ChannelStateInformation"]], "hermespy.core.channel.ChannelStateInformation": [[37, 3, 1, "", "Ideal"], [37, 4, 1, "", "__num_delay_taps"], [37, 4, 1, "", "__num_frequency_bins"], [37, 4, 1, "", "__state"], [37, 4, 1, "", "__state_format"], [37, 3, 1, "", "concatenate"], [37, 3, 1, "", "dense_state"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "num_delay_taps"], [37, 2, 1, "", "num_receive_streams"], [37, 2, 1, "", "num_samples"], [37, 2, 1, "", "num_symbols"], [37, 2, 1, "", "num_transmit_streams"], [37, 3, 1, "", "plot"], [37, 3, 1, "", "propagate"], [37, 3, 1, "", "received_streams"], [37, 3, 1, "", "reciprocal"], [37, 3, 1, "", "samples"], [37, 3, 1, "", "set_state"], [37, 2, 1, "", "state"], [37, 2, 1, "", "state_format"], [37, 3, 1, "", "to_frequency_selectivity"], [37, 3, 1, "", "to_impulse_response"]], "hermespy.core.definitions": [[38, 1, 1, "", "ConsoleMode"]], "hermespy.core.definitions.ConsoleMode": [[38, 4, 1, "", "INTERACTIVE"], [38, 4, 1, "", "LINEAR"], [38, 4, 1, "", "SILENT"]], "hermespy.core.device": [[39, 1, 1, "", "Device"], [40, 1, 1, "", "DeviceInput"], [41, 1, 1, "", "DeviceOutput"], [42, 1, 1, "", "DeviceReception"], [43, 1, 1, "", "DeviceTransmission"], [44, 1, 1, "", "OperationResult"], [45, 1, 1, "", "ProcessedDeviceInput"], [46, 1, 1, "", "Receiver"], [47, 1, 1, "", "Reception"], [48, 1, 1, "", "Transmission"], [49, 1, 1, "", "Transmitter"]], "hermespy.core.device.Device": [[39, 2, 1, "", "antennas"], [39, 3, 1, "", "cache_transmission"], [39, 2, 1, "", "carrier_frequency"], [39, 3, 1, "", "generate_output"], [39, 2, 1, "", "max_frame_duration"], [39, 2, 1, "", "num_antennas"], [39, 2, 1, "", "num_receive_antennas"], [39, 2, 1, "", "num_receive_ports"], [39, 2, 1, "", "num_transmit_antennas"], [39, 2, 1, "", "num_transmit_ports"], [39, 2, 1, "", "power"], [39, 3, 1, "", "process_input"], [39, 3, 1, "", "receive"], [39, 3, 1, "", "receive_operators"], [39, 4, 1, "", "receivers"], [39, 2, 1, "", "sampling_rate"], [39, 2, 1, "", "snr"], [39, 3, 1, "", "transmit"], [39, 3, 1, "", "transmit_operators"], [39, 4, 1, "", "transmitters"], [39, 2, 1, "", "wavelength"]], "hermespy.core.device.DeviceInput": [[40, 2, 1, "", "impinging_signals"], [40, 2, 1, "", "num_impinging_signals"]], "hermespy.core.device.DeviceOutput": [[41, 2, 1, "", "carrier_frequency"], [41, 2, 1, "", "emerging_signals"], [41, 2, 1, "", "mixed_signal"], [41, 2, 1, "", "num_antennas"], [41, 2, 1, "", "num_emerging_signals"], [41, 2, 1, "", "sampling_rate"]], "hermespy.core.device.DeviceReception": [[42, 3, 1, "", "From_ProcessedDeviceInput"], [42, 3, 1, "", "Recall"], [42, 2, 1, "", "num_operator_receptions"], [42, 2, 1, "", "operator_receptions"]], "hermespy.core.device.DeviceTransmission": [[43, 3, 1, "", "From_Output"], [43, 3, 1, "", "Recall"], [43, 2, 1, "", "num_operator_transmissions"], [43, 2, 1, "", "operator_transmissions"]], "hermespy.core.device.OperationResult": [[44, 4, 1, "", "signal"]], "hermespy.core.device.ProcessedDeviceInput": [[45, 2, 1, "", "num_operator_inputs"], [45, 2, 1, "", "operator_inputs"]], "hermespy.core.device.Receiver": [[46, 3, 1, "", "cache_reception"], [46, 2, 1, "", "device"], [46, 2, 1, "", "num_receive_antennas"], [46, 2, 1, "", "num_receive_ports"], [46, 2, 1, "", "power"], [46, 3, 1, "", "receive"], [46, 2, 1, "", "reception"], [46, 2, 1, "", "reference"], [46, 2, 1, "", "selected_receive_ports"], [46, 2, 1, "", "signal"]], "hermespy.core.device.Transmitter": [[49, 3, 1, "", "cache_transmission"], [49, 2, 1, "", "device"], [49, 2, 1, "", "num_transmit_antennas"], [49, 2, 1, "", "num_transmit_ports"], [49, 2, 1, "", "power"], [49, 2, 1, "", "selected_transmit_ports"], [49, 2, 1, "", "transmission"], [49, 3, 1, "", "transmit"]], "hermespy.core.drop": [[50, 1, 1, "", "Drop"]], "hermespy.core.drop.Drop": [[50, 2, 1, "", "device_receptions"], [50, 2, 1, "", "device_transmissions"], [50, 2, 1, "", "num_device_receptions"], [50, 2, 1, "", "num_device_transmissions"], [50, 2, 1, "", "operator_inputs"], [50, 2, 1, "", "timestamp"]], "hermespy.core.duplex": [[51, 1, 1, "", "DuplexOperator"]], "hermespy.core.duplex.DuplexOperator": [[51, 2, 1, "", "device"], [51, 2, 1, "", "frame_duration"], [51, 2, 1, "", "power"], [51, 2, 1, "", "sampling_rate"]], "hermespy.core.executable": [[52, 1, 1, "", "Executable"], [52, 1, 1, "", "Verbosity"]], "hermespy.core.executable.Executable": [[52, 2, 1, "", "console"], [52, 2, 1, "", "console_mode"], [52, 2, 1, "", "debug"], [52, 3, 1, "", "default_results_dir"], [52, 3, 1, "", "execute"], [52, 2, 1, "", "results_dir"], [52, 3, 1, "", "run"], [52, 2, 1, "", "style"], [52, 3, 1, "", "style_context"], [52, 2, 1, "", "verbosity"]], "hermespy.core.executable.Verbosity": [[52, 4, 1, "", "ALL"], [52, 4, 1, "", "ERROR"], [52, 4, 1, "", "INFO"], [52, 4, 1, "", "NONE"], [52, 4, 1, "", "WARNING"]], "hermespy.core.factory": [[53, 1, 1, "", "Factory"], [53, 1, 1, "", "HDFSerializable"], [53, 1, 1, "", "HDFSerializableType"], [53, 1, 1, "", "SET"], [53, 1, 1, "", "Serializable"], [53, 1, 1, "", "SerializableEnum"], [53, 1, 1, "", "SerializableType"]], "hermespy.core.factory.Factory": [[53, 2, 1, "", "clean"], [53, 4, 1, "", "extensions"], [53, 3, 1, "", "from_file"], [53, 3, 1, "", "from_folder"], [53, 3, 1, "", "from_path"], [53, 3, 1, "", "from_str"], [53, 3, 1, "", "from_stream"], [53, 2, 1, "", "registered_classes"], [53, 2, 1, "", "registered_tags"], [53, 2, 1, "", "tag_registry"], [53, 3, 1, "", "to_file"], [53, 3, 1, "", "to_folder"], [53, 3, 1, "", "to_str"], [53, 3, 1, "", "to_stream"]], "hermespy.core.factory.SerializableEnum": [[53, 3, 1, "", "from_parameters"]], "hermespy.core.logarithmic": [[54, 1, 1, "", "Logarithmic"], [54, 1, 1, "", "LogarithmicSequence"], [54, 1, 1, "", "ValueType"], [54, 5, 1, "", "dB"]], "hermespy.core.logarithmic.Logarithmic": [[54, 3, 1, "", "From_Tuple"], [54, 2, 1, "", "conversion"], [54, 2, 1, "", "value_db"]], "hermespy.core.logarithmic.LogarithmicSequence": [[54, 2, 1, "", "conversion"], [54, 3, 1, "", "tolist"]], "hermespy.core.logarithmic.ValueType": [[54, 4, 1, "", "DB"], [54, 4, 1, "", "LIN"]], "hermespy.core.monte_carlo": [[55, 1, 1, "", "ActorRunResult"], [55, 1, 1, "", "Artifact"], [55, 1, 1, "", "ArtifactTemplate"], [55, 1, 1, "", "Evaluation"], [55, 1, 1, "", "EvaluationResult"], [55, 1, 1, "", "EvaluationTemplate"], [55, 1, 1, "", "Evaluator"], [55, 1, 1, "", "GridDimension"], [55, 1, 1, "", "GridSection"], [55, 1, 1, "", "MonteCarlo"], [55, 1, 1, "", "MonteCarloActor"], [55, 1, 1, "", "MonteCarloResult"], [55, 1, 1, "", "MonteCarloSample"], [55, 1, 1, "", "RegisteredDimension"], [55, 1, 1, "", "SampleGrid"], [55, 1, 1, "", "SamplePoint"], [55, 1, 1, "", "ScalarDimension"], [55, 1, 1, "", "ScalarEvaluationResult"], [55, 6, 1, "", "UnmatchableException"], [55, 5, 1, "", "register"]], "hermespy.core.monte_carlo.ActorRunResult": [[55, 4, 1, "", "message"], [55, 4, 1, "", "samples"]], "hermespy.core.monte_carlo.Artifact": [[55, 3, 1, "", "to_scalar"]], "hermespy.core.monte_carlo.ArtifactTemplate": [[55, 2, 1, "", "artifact"], [55, 3, 1, "", "to_scalar"]], "hermespy.core.monte_carlo.Evaluation": [[55, 3, 1, "", "artifact"]], "hermespy.core.monte_carlo.EvaluationResult": [[55, 2, 1, "", "evaluator"], [55, 2, 1, "", "grid"], [55, 3, 1, "", "print"], [55, 3, 1, "", "to_array"]], "hermespy.core.monte_carlo.EvaluationTemplate": [[55, 2, 1, "", "evaluation"]], "hermespy.core.monte_carlo.Evaluator": [[55, 2, 1, "", "abbreviation"], [55, 2, 1, "", "confidence"], [55, 3, 1, "", "evaluate"], [55, 3, 1, "", "generate_result"], [55, 2, 1, "", "plot_scale"], [55, 4, 1, "", "tick_format"], [55, 2, 1, "", "title"], [55, 2, 1, "", "tolerance"]], "hermespy.core.monte_carlo.GridDimension": [[55, 3, 1, "", "configure_point"], [55, 2, 1, "", "considered_objects"], [55, 2, 1, "", "dimension"], [55, 2, 1, "", "first_impact"], [55, 2, 1, "", "last_impact"], [55, 2, 1, "", "num_sample_points"], [55, 2, 1, "", "plot_scale"], [55, 2, 1, "", "sample_points"], [55, 2, 1, "", "tick_format"], [55, 2, 1, "", "title"]], "hermespy.core.monte_carlo.GridSection": [[55, 3, 1, "", "add_samples"], [55, 3, 1, "", "confidence_status"], [55, 2, 1, "", "confidences"], [55, 2, 1, "", "coordinates"], [55, 2, 1, "", "num_samples"], [55, 2, 1, "", "samples"]], "hermespy.core.monte_carlo.MonteCarlo": [[55, 3, 1, "", "add_dimension"], [55, 3, 1, "", "add_evaluator"], [55, 4, 1, "", "catch_exceptions"], [55, 2, 1, "", "console"], [55, 2, 1, "", "console_mode"], [55, 2, 1, "", "cpus_per_actor"], [55, 2, 1, "", "dimensions"], [55, 2, 1, "", "evaluators"], [55, 2, 1, "", "investigated_object"], [55, 2, 1, "", "max_num_samples"], [55, 2, 1, "", "min_num_samples"], [55, 3, 1, "", "new_dimension"], [55, 2, 1, "", "num_actors"], [55, 2, 1, "", "num_samples"], [55, 3, 1, "", "remove_dimension"], [55, 4, 1, "", "runtime_env"], [55, 2, 1, "", "section_block_size"], [55, 3, 1, "", "simulate"]], "hermespy.core.monte_carlo.MonteCarloActor": [[55, 4, 1, "", "catch_exceptions"], [55, 3, 1, "", "run"], [55, 3, 1, "", "stage_executors"], [55, 3, 1, "", "stage_identifiers"]], "hermespy.core.monte_carlo.MonteCarloResult": [[55, 2, 1, "", "evaluation_results"], [55, 2, 1, "", "performance_time"], [55, 3, 1, "", "plot"], [55, 3, 1, "", "print"], [55, 3, 1, "", "save_to_matlab"]], "hermespy.core.monte_carlo.MonteCarloSample": [[55, 2, 1, "", "artifact_scalars"], [55, 2, 1, "", "artifacts"], [55, 2, 1, "", "grid_section"], [55, 2, 1, "", "num_artifacts"], [55, 2, 1, "", "sample_index"]], "hermespy.core.monte_carlo.RegisteredDimension": [[55, 3, 1, "", "deleter"], [55, 2, 1, "", "first_impact"], [55, 3, 1, "", "getter"], [55, 3, 1, "", "is_registered"], [55, 2, 1, "", "last_impact"], [55, 3, 1, "", "setter"], [55, 2, 1, "", "title"]], "hermespy.core.monte_carlo.SamplePoint": [[55, 2, 1, "", "title"], [55, 2, 1, "", "value"]], "hermespy.core.monte_carlo.ScalarDimension": [[55, 2, 1, "", "title"]], "hermespy.core.monte_carlo.ScalarEvaluationResult": [[55, 3, 1, "", "From_Artifacts"], [55, 3, 1, "", "create_figure"], [55, 4, 1, "", "plot_surface"], [55, 2, 1, "", "title"], [55, 3, 1, "", "to_array"]], "hermespy.core.operators": [[56, 1, 1, "", "SignalReceiver"], [56, 1, 1, "", "SignalTransmitter"], [56, 1, 1, "", "SilentTransmitter"], [56, 1, 1, "", "StaticOperator"]], "hermespy.core.operators.SignalReceiver": [[56, 2, 1, "", "energy"], [56, 2, 1, "", "power"]], "hermespy.core.operators.SignalTransmitter": [[56, 2, 1, "", "power"], [56, 2, 1, "", "signal"]], "hermespy.core.operators.SilentTransmitter": [[56, 2, 1, "", "power"]], "hermespy.core.operators.StaticOperator": [[56, 2, 1, "", "frame_duration"], [56, 2, 1, "", "num_samples"], [56, 2, 1, "", "sampling_rate"]], "hermespy.core.pipeline": [[57, 1, 1, "", "Pipeline"]], "hermespy.core.pipeline.Pipeline": [[57, 3, 1, "", "add_device"], [57, 3, 1, "", "device_index"], [57, 3, 1, "", "new_device"], [57, 2, 1, "", "num_drops"], [57, 2, 1, "", "scenario"]], "hermespy.core.random_node": [[58, 1, 1, "", "RandomNode"], [58, 1, 1, "", "RandomRealization"]], "hermespy.core.random_node.RandomRealization": [[58, 3, 1, "", "generator"], [58, 2, 1, "", "seed"]], "hermespy.core.scenario": [[59, 1, 1, "", "ReplayScenario"], [59, 1, 1, "", "Scenario"], [59, 1, 1, "", "ScenarioMode"], [59, 1, 1, "", "ScenarioType"]], "hermespy.core.scenario.Scenario": [[59, 3, 1, "", "Replay"], [59, 3, 1, "", "add_device"], [59, 2, 1, "", "campaign"], [59, 3, 1, "", "device_index"], [59, 3, 1, "", "device_registered"], [59, 2, 1, "", "devices"], [59, 3, 1, "", "drop"], [59, 2, 1, "", "drop_duration"], [59, 3, 1, "", "generate_outputs"], [59, 2, 1, "", "mode"], [59, 3, 1, "", "new_device"], [59, 2, 1, "", "num_devices"], [59, 2, 1, "", "num_drops"], [59, 2, 1, "", "num_operators"], [59, 2, 1, "", "num_receivers"], [59, 2, 1, "", "num_transmitters"], [59, 2, 1, "", "operators"], [59, 3, 1, "", "process_inputs"], [59, 3, 1, "", "receive_devices"], [59, 3, 1, "", "receive_operators"], [59, 2, 1, "", "receivers"], [59, 3, 1, "", "record"], [59, 3, 1, "", "replay"], [59, 4, 1, "", "serialized_attributes"], [59, 3, 1, "", "stop"], [59, 3, 1, "", "transmit_devices"], [59, 3, 1, "", "transmit_operators"], [59, 2, 1, "", "transmitters"], [59, 4, 1, "", "yaml_tag"]], "hermespy.core.scenario.ScenarioMode": [[59, 4, 1, "", "DEFAULT"], [59, 4, 1, "", "RECORD"], [59, 4, 1, "", "REPLAY"]], "hermespy.core.signal_model": [[60, 1, 1, "", "Signal"]], "hermespy.core.signal_model.Signal": [[60, 3, 1, "", "Create"], [60, 3, 1, "", "Empty"], [60, 3, 1, "", "append_samples"], [60, 3, 1, "", "append_streams"], [60, 2, 1, "", "carrier_frequency"], [60, 3, 1, "", "copy"], [60, 4, 1, "", "delay"], [60, 2, 1, "", "duration"], [60, 2, 1, "", "energy"], [60, 2, 1, "", "eye"], [60, 4, 1, "", "filter_order"], [60, 2, 1, "", "frequencies"], [60, 3, 1, "", "from_interleaved"], [60, 3, 1, "", "from_ndarray"], [60, 2, 1, "", "kwargs"], [60, 2, 1, "", "noise_power"], [60, 2, 1, "", "num_samples"], [60, 2, 1, "", "num_streams"], [60, 2, 1, "", "plot"], [60, 2, 1, "", "power"], [60, 3, 1, "", "resample"], [60, 2, 1, "", "sampling_rate"], [60, 3, 1, "", "set_samples"], [60, 2, 1, "", "shape"], [60, 3, 1, "", "superimpose"], [60, 2, 1, "", "timestamps"], [60, 2, 1, "", "title"], [60, 3, 1, "", "to_dense"], [60, 3, 1, "", "to_interleaved"]], "hermespy.core.transformation": [[61, 1, 1, "", "Direction"], [61, 1, 1, "", "Transformable"], [61, 1, 1, "", "TransformableBase"], [61, 1, 1, "", "TransformableLink"], [61, 1, 1, "", "Transformation"]], "hermespy.core.transformation.Direction": [[61, 3, 1, "", "From_Cartesian"], [61, 3, 1, "", "From_Spherical"], [61, 3, 1, "", "to_spherical"]], "hermespy.core.transformation.Transformable": [[61, 2, 1, "", "backwards_transformation"], [61, 2, 1, "", "forwards_transformation"], [61, 2, 1, "", "global_orientation"], [61, 2, 1, "", "global_position"], [61, 2, 1, "", "is_base"], [61, 2, 1, "", "orientation"], [61, 2, 1, "", "pose"], [61, 2, 1, "", "position"], [61, 3, 1, "", "set_base"], [61, 3, 1, "", "to_local_coordinates"]], "hermespy.core.transformation.TransformableBase": [[61, 2, 1, "", "forwards_transformation"], [61, 3, 1, "", "set_base"]], "hermespy.core.transformation.TransformableLink": [[61, 3, 1, "", "add_link"], [61, 2, 1, "", "forwards_transformation"], [61, 2, 1, "", "linked_frames"], [61, 3, 1, "", "remove_link"], [61, 3, 1, "", "set_base"]], "hermespy.core.transformation.Transformation": [[61, 3, 1, "", "From_Quaternion"], [61, 3, 1, "", "From_RPY"], [61, 3, 1, "", "From_Translation"], [61, 3, 1, "", "No"], [61, 3, 1, "", "invert"], [61, 3, 1, "", "rotate_direction"], [61, 2, 1, "", "rotation_quaternion"], [61, 2, 1, "", "rotation_rpy"], [61, 3, 1, "", "transform_direction"], [61, 3, 1, "", "transform_position"], [61, 2, 1, "", "translation"]], "hermespy.core.visualize": [[62, 1, 1, "", "ImageVisualization"], [62, 1, 1, "", "PlotVisualization"], [62, 1, 1, "", "QuadMeshVisualization"], [62, 1, 1, "", "ScatterVisualization"], [62, 1, 1, "", "StemVisualization"], [62, 4, 1, "", "VAT"], [62, 4, 1, "", "VLT"], [62, 1, 1, "", "VT"], [62, 1, 1, "", "Visualizable"], [62, 1, 1, "", "VisualizableAttribute"], [62, 1, 1, "", "Visualization"]], "hermespy.core.visualize.ImageVisualization": [[62, 2, 1, "", "image"]], "hermespy.core.visualize.PlotVisualization": [[62, 2, 1, "", "lines"]], "hermespy.core.visualize.QuadMeshVisualization": [[62, 2, 1, "", "mesh"]], "hermespy.core.visualize.ScatterVisualization": [[62, 2, 1, "", "paths"]], "hermespy.core.visualize.StemVisualization": [[62, 2, 1, "", "container"]], "hermespy.core.visualize.Visualizable": [[62, 3, 1, "", "create_figure"], [62, 2, 1, "", "title"], [62, 3, 1, "", "update_visualization"], [62, 2, 1, "", "visualization"], [62, 3, 1, "", "visualize"]], "hermespy.core.visualize.Visualization": [[62, 2, 1, "", "axes"], [62, 2, 1, "", "figure"]], "hermespy.fec": [[65, 0, 0, "-", "block_interleaver"], [66, 0, 0, "-", "coding"], [67, 0, 0, "-", "cyclic_redundancy_check"], [70, 0, 0, "-", "repetition_encoder"], [73, 0, 0, "-", "scrambler"]], "hermespy.fec.aff3ct": [[64, 0, 0, "-", "bch"], [68, 0, 0, "-", "ldpc"], [69, 0, 0, "-", "polar"], [71, 0, 0, "-", "rs"], [72, 0, 0, "-", "rsc"], [74, 0, 0, "-", "turbo"]], "hermespy.fec.aff3ct.bch": [[64, 1, 1, "", "BCHCoding"]], "hermespy.fec.aff3ct.bch.BCHCoding": [[64, 2, 1, "", "bit_block_size"], [64, 2, 1, "", "code_block_size"], [64, 2, 1, "", "correction_power"], [64, 3, 1, "", "decode"], [64, 4, 1, "", "enabled"], [64, 3, 1, "", "encode"]], "hermespy.fec.aff3ct.ldpc": [[68, 1, 1, "", "LDPCCoding"]], "hermespy.fec.aff3ct.ldpc.LDPCCoding": [[68, 2, 1, "", "bit_block_size"], [68, 2, 1, "", "code_block_size"], [68, 3, 1, "", "decode"], [68, 4, 1, "", "enabled"], [68, 3, 1, "", "encode"], [68, 2, 1, "", "num_iterations"]], "hermespy.fec.aff3ct.polar": [[69, 1, 1, "", "PolarSCCoding"], [69, 1, 1, "", "PolarSCLCoding"]], "hermespy.fec.aff3ct.polar.PolarSCCoding": [[69, 2, 1, "", "bit_block_size"], [69, 2, 1, "", "code_block_size"], [69, 3, 1, "", "decode"], [69, 4, 1, "", "enabled"], [69, 3, 1, "", "encode"]], "hermespy.fec.aff3ct.polar.PolarSCLCoding": [[69, 2, 1, "", "bit_block_size"], [69, 2, 1, "", "code_block_size"], [69, 3, 1, "", "decode"], [69, 4, 1, "", "enabled"], [69, 3, 1, "", "encode"]], "hermespy.fec.aff3ct.rs": [[71, 1, 1, "", "ReedSolomonCoding"]], "hermespy.fec.aff3ct.rs.ReedSolomonCoding": [[71, 2, 1, "", "bit_block_size"], [71, 2, 1, "", "code_block_size"], [71, 2, 1, "", "correction_power"], [71, 3, 1, "", "decode"], [71, 4, 1, "", "enabled"], [71, 3, 1, "", "encode"]], "hermespy.fec.aff3ct.rsc": [[72, 1, 1, "", "RSCCoding"]], "hermespy.fec.aff3ct.rsc.RSCCoding": [[72, 2, 1, "", "bit_block_size"], [72, 2, 1, "", "code_block_size"], [72, 3, 1, "", "decode"], [72, 4, 1, "", "enabled"], [72, 3, 1, "", "encode"]], "hermespy.fec.aff3ct.turbo": [[74, 1, 1, "", "TurboCoding"]], "hermespy.fec.aff3ct.turbo.TurboCoding": [[74, 2, 1, "", "bit_block_size"], [74, 2, 1, "", "code_block_size"], [74, 3, 1, "", "decode"], [74, 4, 1, "", "enabled"], [74, 3, 1, "", "encode"], [74, 2, 1, "", "num_iterations"]], "hermespy.fec.block_interleaver": [[65, 1, 1, "", "BlockInterleaver"]], "hermespy.fec.block_interleaver.BlockInterleaver": [[65, 2, 1, "", "bit_block_size"], [65, 2, 1, "", "block_size"], [65, 2, 1, "", "code_block_size"], [65, 3, 1, "", "decode"], [65, 3, 1, "", "encode"], [65, 2, 1, "", "interleave_blocks"], [65, 2, 1, "", "rate"], [65, 4, 1, "", "yaml_tag"]], "hermespy.fec.coding": [[66, 1, 1, "", "Encoder"], [66, 1, 1, "", "EncoderManager"]], "hermespy.fec.coding.Encoder": [[66, 2, 1, "", "bit_block_size"], [66, 2, 1, "", "code_block_size"], [66, 3, 1, "", "decode"], [66, 2, 1, "", "enabled"], [66, 3, 1, "", "encode"], [66, 2, 1, "", "manager"], [66, 2, 1, "", "rate"], [66, 4, 1, "", "yaml_tag"]], "hermespy.fec.coding.EncoderManager": [[66, 3, 1, "", "add_encoder"], [66, 4, 1, "", "allow_padding"], [66, 4, 1, "", "allow_truncating"], [66, 2, 1, "", "bit_block_size"], [66, 2, 1, "", "code_block_size"], [66, 3, 1, "", "decode"], [66, 3, 1, "", "encode"], [66, 2, 1, "", "encoders"], [66, 2, 1, "", "modem"], [66, 2, 1, "", "rate"], [66, 3, 1, "", "required_num_data_bits"]], "hermespy.fec.cyclic_redundancy_check": [[67, 1, 1, "", "CyclicRedundancyCheck"]], "hermespy.fec.cyclic_redundancy_check.CyclicRedundancyCheck": [[67, 2, 1, "", "bit_block_size"], [67, 2, 1, "", "check_block_size"], [67, 2, 1, "", "code_block_size"], [67, 3, 1, "", "decode"], [67, 3, 1, "", "encode"], [67, 4, 1, "", "yaml_tag"]], "hermespy.fec.repetition_encoder": [[70, 1, 1, "", "RepetitionEncoder"]], "hermespy.fec.repetition_encoder.RepetitionEncoder": [[70, 2, 1, "", "bit_block_size"], [70, 2, 1, "", "code_block_size"], [70, 3, 1, "", "decode"], [70, 3, 1, "", "encode"], [70, 2, 1, "", "repetitions"], [70, 4, 1, "", "yaml_tag"]], "hermespy.fec.scrambler": [[73, 1, 1, "", "PseudoRandomGenerator"], [73, 1, 1, "", "Scrambler3GPP"], [73, 1, 1, "", "Scrambler80211a"]], "hermespy.fec.scrambler.PseudoRandomGenerator": [[73, 3, 1, "", "generate"], [73, 3, 1, "", "generate_sequence"], [73, 3, 1, "", "reset"]], "hermespy.fec.scrambler.Scrambler3GPP": [[73, 2, 1, "", "bit_block_size"], [73, 2, 1, "", "code_block_size"], [73, 3, 1, "", "decode"], [73, 3, 1, "", "encode"], [73, 4, 1, "", "yaml_tag"]], "hermespy.fec.scrambler.Scrambler80211a": [[73, 2, 1, "", "bit_block_size"], [73, 2, 1, "", "code_block_size"], [73, 3, 1, "", "decode"], [73, 3, 1, "", "encode"], [73, 2, 1, "", "seed"], [73, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop": [[88, 0, 0, "-", "visualizers"]], "hermespy.hardware_loop.audio.device": [[76, 1, 1, "", "AudioDevice"]], "hermespy.hardware_loop.audio.device.AudioDevice": [[76, 2, 1, "", "antennas"], [76, 2, 1, "", "carrier_frequency"], [76, 2, 1, "", "max_sampling_rate"], [76, 2, 1, "", "playback_channels"], [76, 2, 1, "", "playback_device"], [76, 2, 1, "", "record_channels"], [76, 2, 1, "", "record_device"], [76, 2, 1, "", "sampling_rate"], [76, 3, 1, "", "trigger"]], "hermespy.hardware_loop.audio.scenario": [[77, 1, 1, "", "AudioScenario"]], "hermespy.hardware_loop.audio.scenario.AudioScenario": [[77, 3, 1, "", "new_device"], [77, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.calibration": [[78, 0, 0, "-", "delay"], [79, 0, 0, "-", "leakage"]], "hermespy.hardware_loop.calibration.delay": [[78, 1, 1, "", "DelayCalibration"]], "hermespy.hardware_loop.calibration.delay.DelayCalibration": [[78, 3, 1, "", "Estimate"], [78, 2, 1, "", "delay"]], "hermespy.hardware_loop.calibration.leakage": [[79, 1, 1, "", "SelectiveLeakageCalibration"]], "hermespy.hardware_loop.calibration.leakage.SelectiveLeakageCalibration": [[79, 3, 1, "", "LeastSquaresEstimate"], [79, 3, 1, "", "MMSEEstimate"], [79, 2, 1, "", "delay"], [79, 3, 1, "", "estimate_delay"], [79, 2, 1, "", "leakage_response"], [79, 3, 1, "", "plot"], [79, 3, 1, "", "remove_leakage"], [79, 2, 1, "", "sampling_rate"]], "hermespy.hardware_loop.hardware_loop": [[80, 1, 1, "", "HardwareLoop"], [81, 1, 1, "", "HardwareLoopPlot"]], "hermespy.hardware_loop.hardware_loop.HardwareLoop": [[80, 3, 1, "", "add_dimension"], [80, 3, 1, "", "add_evaluator"], [80, 3, 1, "", "add_plot"], [80, 3, 1, "", "evaluator_index"], [80, 2, 1, "", "evaluators"], [80, 2, 1, "", "iteration_priority"], [80, 4, 1, "", "manual_triggering"], [80, 3, 1, "", "new_dimension"], [80, 2, 1, "", "num_evaluators"], [80, 4, 1, "", "plot_information"], [80, 4, 1, "", "record_drops"], [80, 3, 1, "", "replay"], [80, 3, 1, "", "run"], [80, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.hardware_loop.HardwareLoopPlot": [[81, 2, 1, "", "hardware_loop"], [81, 3, 1, "", "prepare_plot"], [81, 2, 1, "", "title"], [81, 3, 1, "", "update_plot"]], "hermespy.hardware_loop.physical_device": [[82, 1, 1, "", "PhysicalDevice"]], "hermespy.hardware_loop.physical_device.PhysicalDevice": [[82, 2, 1, "", "adaptive_sampling"], [82, 2, 1, "", "delay_calibration"], [82, 3, 1, "", "estimate_noise_power"], [82, 2, 1, "", "leakage_calibration"], [82, 3, 1, "", "load_calibration"], [82, 2, 1, "", "lowpass_bandwidth"], [82, 2, 1, "", "lowpass_filter"], [82, 2, 1, "", "max_receive_delay"], [82, 2, 1, "", "max_sampling_rate"], [82, 2, 1, "", "noise_power"], [82, 3, 1, "", "process_input"], [82, 3, 1, "", "receive"], [82, 3, 1, "", "save_calibration"], [82, 3, 1, "", "transmit"], [82, 3, 1, "", "trigger"], [82, 3, 1, "", "trigger_direct"], [82, 2, 1, "", "velocity"]], "hermespy.hardware_loop.physical_device_dummy": [[83, 1, 1, "", "PhysicalDeviceDummy"], [84, 1, 1, "", "PhysicalScenarioDummy"]], "hermespy.hardware_loop.physical_device_dummy.PhysicalDeviceDummy": [[83, 2, 1, "", "max_sampling_rate"], [83, 3, 1, "", "process_input"], [83, 3, 1, "", "receive"], [83, 2, 1, "", "receive_transmission"], [83, 3, 1, "", "transmit"], [83, 3, 1, "", "trigger"], [83, 3, 1, "", "trigger_direct"]], "hermespy.hardware_loop.physical_device_dummy.PhysicalScenarioDummy": [[84, 3, 1, "", "add_device"], [84, 3, 1, "", "new_device"], [84, 3, 1, "", "receive_devices"]], "hermespy.hardware_loop.scenario": [[85, 1, 1, "", "PhysicalScenario"]], "hermespy.hardware_loop.scenario.PhysicalScenario": [[85, 3, 1, "", "add_device"], [85, 3, 1, "", "receive_devices"]], "hermespy.hardware_loop.uhd.system": [[86, 1, 1, "", "UsrpSystem"]], "hermespy.hardware_loop.uhd.system.UsrpSystem": [[86, 3, 1, "", "add_device"], [86, 3, 1, "", "new_device"], [86, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.uhd.usrp": [[87, 1, 1, "", "UsrpDevice"]], "hermespy.hardware_loop.uhd.usrp.UsrpDevice": [[87, 2, 1, "", "antennas"], [87, 2, 1, "", "carrier_frequency"], [87, 2, 1, "", "ip"], [87, 2, 1, "", "max_sampling_rate"], [87, 2, 1, "", "num_appended_zeros"], [87, 2, 1, "", "num_prepeneded_zeros"], [87, 2, 1, "", "num_receive_ports"], [87, 2, 1, "", "num_transmit_ports"], [87, 2, 1, "", "port"], [87, 2, 1, "", "rx_gain"], [87, 2, 1, "", "sampling_rate"], [87, 2, 1, "", "scale_transmission"], [87, 2, 1, "", "selected_receive_ports"], [87, 2, 1, "", "selected_transmit_ports"], [87, 3, 1, "", "trigger"], [87, 2, 1, "", "tx_gain"], [87, 4, 1, "", "yaml_tag"]], "hermespy.hardware_loop.visualizers": [[88, 1, 1, "", "ArtifactPlot"], [88, 1, 1, "", "DeviceReceptionPlot"], [88, 1, 1, "", "DeviceTransmissionPlot"], [88, 1, 1, "", "EvaluationPlot"], [88, 1, 1, "", "EyePlot"], [88, 1, 1, "", "HardwareLoopDevicePlot"], [88, 1, 1, "", "HardwareLoopEvaluatorPlot"], [88, 1, 1, "", "RadarRangePlot"], [88, 1, 1, "", "ReceivedConstellationPlot"], [88, 1, 1, "", "SignalPlot"]], "hermespy.hardware_loop.visualizers.HardwareLoopDevicePlot": [[88, 2, 1, "", "device"]], "hermespy.hardware_loop.visualizers.HardwareLoopEvaluatorPlot": [[88, 2, 1, "", "evaluator"], [88, 2, 1, "", "evaluator_index"]], "hermespy.hardware_loop.visualizers.SignalPlot": [[88, 2, 1, "", "space"]], "hermespy.jcas.jcas": [[90, 1, 1, "", "DuplexJCASOperator"], [90, 1, 1, "", "JCASReception"], [90, 1, 1, "", "JCASTransmission"]], "hermespy.jcas.jcas.DuplexJCASOperator": [[90, 2, 1, "", "frame_duration"], [90, 2, 1, "", "receiving_device"], [90, 2, 1, "", "sampling_rate"], [90, 2, 1, "", "transmitting_device"]], "hermespy.jcas.matched_filtering": [[91, 1, 1, "", "MatchedFilterJcas"]], "hermespy.jcas.matched_filtering.MatchedFilterJcas": [[91, 2, 1, "", "frame_duration"], [91, 2, 1, "", "max_range"], [91, 2, 1, "", "power"], [91, 2, 1, "", "range_resolution"], [91, 2, 1, "", "sampling_rate"]], "hermespy.jcas.ofdm_radar": [[92, 1, 1, "", "OFDMRadar"]], "hermespy.jcas.ofdm_radar.OFDMRadar": [[92, 2, 1, "", "max_range"], [92, 2, 1, "", "max_relative_doppler"], [92, 2, 1, "", "power"], [92, 2, 1, "", "range_resolution"], [92, 2, 1, "", "relative_doppler_resolution"]], "hermespy.modem.bits_source": [[94, 1, 1, "", "BitsSource"], [94, 1, 1, "", "RandomBitsSource"], [94, 1, 1, "", "StreamBitsSource"]], "hermespy.modem.bits_source.BitsSource": [[94, 3, 1, "", "generate_bits"]], "hermespy.modem.bits_source.RandomBitsSource": [[94, 3, 1, "", "generate_bits"]], "hermespy.modem.bits_source.StreamBitsSource": [[94, 3, 1, "", "generate_bits"]], "hermespy.modem.evaluators": [[98, 1, 1, "", "BitErrorArtifact"], [98, 1, 1, "", "BitErrorEvaluation"], [98, 1, 1, "", "BitErrorEvaluator"], [99, 1, 1, "", "BlockErrorArtifact"], [99, 1, 1, "", "BlockErrorEvaluation"], [99, 1, 1, "", "BlockErrorEvaluator"], [96, 1, 1, "", "CommunicationEvaluator"], [100, 1, 1, "", "ConstellationEVM"], [100, 1, 1, "", "EVMArtifact"], [100, 1, 1, "", "EVMEvaluation"], [101, 1, 1, "", "FrameErrorArtifact"], [101, 1, 1, "", "FrameErrorEvaluation"], [101, 1, 1, "", "FrameErrorEvaluator"], [102, 1, 1, "", "ThroughputArtifact"], [102, 1, 1, "", "ThroughputEvaluation"], [102, 1, 1, "", "ThroughputEvaluator"]], "hermespy.modem.evaluators.BitErrorEvaluation": [[98, 3, 1, "", "artifact"], [98, 2, 1, "", "title"]], "hermespy.modem.evaluators.BitErrorEvaluator": [[98, 2, 1, "", "abbreviation"], [98, 3, 1, "", "evaluate"], [98, 2, 1, "", "title"]], "hermespy.modem.evaluators.BlockErrorEvaluation": [[99, 3, 1, "", "artifact"], [99, 2, 1, "", "title"]], "hermespy.modem.evaluators.BlockErrorEvaluator": [[99, 2, 1, "", "abbreviation"], [99, 3, 1, "", "evaluate"], [99, 2, 1, "", "title"]], "hermespy.modem.evaluators.CommunicationEvaluator": [[96, 3, 1, "", "generate_result"], [96, 2, 1, "", "receiving_modem"], [96, 2, 1, "", "transmitting_modem"]], "hermespy.modem.evaluators.ConstellationEVM": [[100, 2, 1, "", "abbreviation"], [100, 3, 1, "", "evaluate"], [100, 2, 1, "", "title"]], "hermespy.modem.evaluators.EVMEvaluation": [[100, 2, 1, "", "abbreviation"], [100, 3, 1, "", "artifact"], [100, 2, 1, "", "title"]], "hermespy.modem.evaluators.FrameErrorEvaluation": [[101, 3, 1, "", "artifact"], [101, 2, 1, "", "title"]], "hermespy.modem.evaluators.FrameErrorEvaluator": [[101, 2, 1, "", "abbreviation"], [101, 3, 1, "", "evaluate"], [101, 2, 1, "", "title"], [101, 4, 1, "", "yaml_tag"]], "hermespy.modem.evaluators.ThroughputEvaluation": [[102, 3, 1, "", "artifact"], [102, 2, 1, "", "title"]], "hermespy.modem.evaluators.ThroughputEvaluator": [[102, 2, 1, "", "abbreviation"], [102, 3, 1, "", "evaluate"], [102, 2, 1, "", "title"], [102, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem": [[103, 1, 1, "", "BaseModem"], [104, 1, 1, "", "CommunicationReception"], [105, 1, 1, "", "CommunicationReceptionFrame"], [106, 1, 1, "", "CommunicationTransmission"], [107, 1, 1, "", "CommunicationTransmissionFrame"], [108, 1, 1, "", "DuplexModem"], [109, 1, 1, "", "ReceivingModem"], [109, 1, 1, "", "ReceivingModemBase"], [110, 1, 1, "", "SimplexLink"], [111, 1, 1, "", "TransmittingModem"], [111, 1, 1, "", "TransmittingModemBase"]], "hermespy.modem.modem.BaseModem": [[103, 2, 1, "", "encoder_manager"], [103, 2, 1, "", "frame_duration"], [103, 2, 1, "", "num_data_bits_per_frame"], [103, 2, 1, "", "num_receive_ports"], [103, 2, 1, "", "num_transmit_ports"], [103, 2, 1, "", "precoding"], [103, 2, 1, "", "receiving_device"], [103, 2, 1, "", "samples_per_frame"], [103, 2, 1, "", "sampling_rate"], [103, 2, 1, "", "symbol_duration"], [103, 2, 1, "", "transmitting_device"], [103, 2, 1, "", "waveform"]], "hermespy.modem.modem.CommunicationReception": [[104, 2, 1, "", "bits"], [104, 2, 1, "", "encoded_bits"], [104, 2, 1, "", "equalized_symbols"], [104, 4, 1, "", "frames"], [104, 2, 1, "", "num_frames"], [104, 2, 1, "", "symbols"]], "hermespy.modem.modem.CommunicationReceptionFrame": [[105, 4, 1, "", "decoded_bits"], [105, 4, 1, "", "decoded_signal"], [105, 4, 1, "", "decoded_symbols"], [105, 4, 1, "", "encoded_bits"], [105, 4, 1, "", "equalized_symbols"], [105, 4, 1, "", "signal"], [105, 4, 1, "", "symbols"], [105, 4, 1, "", "timestamp"]], "hermespy.modem.modem.CommunicationTransmission": [[106, 2, 1, "", "bits"], [106, 4, 1, "", "frames"], [106, 2, 1, "", "num_frames"], [106, 2, 1, "", "symbols"]], "hermespy.modem.modem.CommunicationTransmissionFrame": [[107, 4, 1, "", "bits"], [107, 4, 1, "", "encoded_bits"], [107, 4, 1, "", "encoded_symbols"], [107, 4, 1, "", "signal"], [107, 4, 1, "", "symbols"], [107, 4, 1, "", "timestamp"]], "hermespy.modem.modem.DuplexModem": [[108, 2, 1, "", "device"], [108, 2, 1, "", "receiving_device"], [108, 2, 1, "", "transmitting_device"], [108, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.ReceivingModem": [[109, 2, 1, "", "device"], [109, 2, 1, "", "num_receive_ports"], [109, 2, 1, "", "power"], [109, 2, 1, "", "receiving_device"], [109, 2, 1, "", "transmitting_device"], [109, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.ReceivingModemBase": [[109, 3, 1, "", "_receive"], [109, 2, 1, "", "receive_stream_coding"]], "hermespy.modem.modem.SimplexLink": [[110, 2, 1, "", "receiving_device"], [110, 2, 1, "", "reference"], [110, 2, 1, "", "transmitting_device"], [110, 4, 1, "", "yaml_tag"]], "hermespy.modem.modem.TransmittingModem": [[111, 2, 1, "", "device"], [111, 2, 1, "", "power"], [111, 2, 1, "", "receiving_device"], [111, 2, 1, "", "transmitting_device"]], "hermespy.modem.modem.TransmittingModemBase": [[111, 3, 1, "", "_transmit"], [111, 2, 1, "", "bits_source"], [111, 2, 1, "", "num_transmit_ports"], [111, 2, 1, "", "transmit_stream_coding"]], "hermespy.modem.precoding.dft": [[113, 1, 1, "", "DFT"]], "hermespy.modem.precoding.dft.DFT": [[113, 3, 1, "", "decode"], [113, 3, 1, "", "encode"], [113, 2, 1, "", "num_input_streams"], [113, 2, 1, "", "num_output_streams"]], "hermespy.modem.precoding.ratio_combining": [[114, 1, 1, "", "MaximumRatioCombining"]], "hermespy.modem.precoding.ratio_combining.MaximumRatioCombining": [[114, 3, 1, "", "decode"], [114, 3, 1, "", "encode"], [114, 2, 1, "", "num_input_streams"], [114, 2, 1, "", "num_output_streams"]], "hermespy.modem.precoding.single_carrier": [[115, 1, 1, "", "SingleCarrier"]], "hermespy.modem.precoding.single_carrier.SingleCarrier": [[115, 3, 1, "", "decode"], [115, 3, 1, "", "encode"], [115, 2, 1, "", "num_input_streams"], [115, 2, 1, "", "num_output_streams"]], "hermespy.modem.precoding.space_time_block_coding": [[116, 1, 1, "", "Alamouti"], [116, 1, 1, "", "Ganesan"]], "hermespy.modem.precoding.space_time_block_coding.Alamouti": [[116, 3, 1, "", "decode"], [116, 3, 1, "", "encode"], [116, 2, 1, "", "num_input_streams"], [116, 2, 1, "", "num_output_streams"]], "hermespy.modem.precoding.space_time_block_coding.Ganesan": [[116, 3, 1, "", "decode"], [116, 3, 1, "", "encode"], [116, 2, 1, "", "num_input_streams"], [116, 2, 1, "", "num_output_streams"], [116, 2, 1, "", "rate"]], "hermespy.modem.precoding.spatial_multiplexing": [[117, 1, 1, "", "SpatialMultiplexing"]], "hermespy.modem.precoding.spatial_multiplexing.SpatialMultiplexing": [[117, 3, 1, "", "decode"], [117, 3, 1, "", "encode"], [117, 2, 1, "", "num_input_streams"], [117, 2, 1, "", "num_output_streams"], [117, 2, 1, "", "rate"]], "hermespy.modem.precoding.symbol_precoding": [[118, 1, 1, "", "SymbolPrecoder"], [119, 1, 1, "", "SymbolPrecoding"]], "hermespy.modem.precoding.symbol_precoding.SymbolPrecoder": [[118, 3, 1, "", "decode"], [118, 3, 1, "", "encode"]], "hermespy.modem.precoding.symbol_precoding.SymbolPrecoding": [[119, 3, 1, "", "decode"], [119, 3, 1, "", "encode"], [119, 3, 1, "", "num_encoded_blocks"]], "hermespy.modem.symbols": [[120, 1, 1, "", "StatedSymbols"], [120, 1, 1, "", "Symbols"], [120, 1, 1, "", "_ConstellationPlot"]], "hermespy.modem.symbols.StatedSymbols": [[120, 3, 1, "", "copy"], [120, 3, 1, "", "dense_states"], [120, 2, 1, "", "num_transmit_streams"], [120, 2, 1, "", "states"]], "hermespy.modem.symbols.Symbols": [[120, 3, 1, "", "append_stream"], [120, 3, 1, "", "append_symbols"], [120, 3, 1, "", "copy"], [120, 2, 1, "", "num_blocks"], [120, 2, 1, "", "num_streams"], [120, 2, 1, "", "num_symbols"], [120, 2, 1, "", "plot_constellation"], [120, 2, 1, "", "raw"]], "hermespy.modem.symbols._ConstellationPlot": [[120, 2, 1, "", "title"]], "hermespy.modem.waveform": [[121, 1, 1, "", "CWT"], [122, 1, 1, "", "ChannelEqualization"], [123, 1, 1, "", "ChannelEstimation"], [121, 1, 1, "", "CommunicationWaveform"], [121, 1, 1, "", "ConfigurablePilotWaveform"], [121, 1, 1, "", "PilotCommunicationWaveform"], [124, 1, 1, "", "Synchronization"], [125, 1, 1, "", "ZeroForcingChannelEqualization"]], "hermespy.modem.waveform.ChannelEqualization": [[122, 3, 1, "", "equalize_channel"], [122, 2, 1, "", "waveform"]], "hermespy.modem.waveform.ChannelEstimation": [[123, 3, 1, "", "estimate_channel"], [123, 2, 1, "", "waveform"]], "hermespy.modem.waveform.CommunicationWaveform": [[121, 2, 1, "", "bandwidth"], [121, 2, 1, "", "bit_energy"], [121, 3, 1, "", "bits_per_frame"], [121, 2, 1, "", "bits_per_symbol"], [121, 2, 1, "", "channel_equalization"], [121, 2, 1, "", "channel_estimation"], [121, 3, 1, "", "data_rate"], [121, 3, 1, "", "demodulate"], [121, 3, 1, "", "equalize_symbols"], [121, 3, 1, "", "estimate_channel"], [121, 2, 1, "", "frame_duration"], [121, 3, 1, "", "map"], [121, 2, 1, "", "modem"], [121, 3, 1, "", "modulate"], [121, 2, 1, "", "modulation_order"], [121, 2, 1, "", "num_data_symbols"], [121, 2, 1, "", "oversampling_factor"], [121, 3, 1, "", "pick"], [121, 3, 1, "", "place"], [121, 2, 1, "", "power"], [121, 2, 1, "", "samples_per_frame"], [121, 2, 1, "", "sampling_rate"], [121, 2, 1, "", "symbol_duration"], [121, 2, 1, "", "symbol_energy"], [121, 2, 1, "", "symbol_precoding_support"], [121, 4, 1, "", "symbol_type"], [121, 2, 1, "", "synchronization"], [121, 3, 1, "", "unmap"]], "hermespy.modem.waveform.ConfigurablePilotWaveform": [[121, 4, 1, "", "pilot_symbol_sequence"], [121, 3, 1, "", "pilot_symbols"], [121, 4, 1, "", "repeat_pilot_symbol_sequence"]], "hermespy.modem.waveform.PilotCommunicationWaveform": [[121, 2, 1, "", "pilot_signal"]], "hermespy.modem.waveform.Synchronization": [[124, 3, 1, "", "synchronize"], [124, 2, 1, "", "waveform"]], "hermespy.modem.waveform.ZeroForcingChannelEqualization": [[125, 3, 1, "", "equalize_channel"], [125, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_chirp_fsk": [[127, 1, 1, "", "ChirpFSKCorrelationSynchronization"], [127, 1, 1, "", "ChirpFSKSynchronization"], [127, 1, 1, "", "ChirpFSKWaveform"]], "hermespy.modem.waveform_chirp_fsk.ChirpFSKCorrelationSynchronization": [[127, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_chirp_fsk.ChirpFSKWaveform": [[127, 2, 1, "", "bandwidth"], [127, 2, 1, "", "bit_energy"], [127, 2, 1, "", "bits_per_symbol"], [127, 2, 1, "", "chirp_bandwidth"], [127, 2, 1, "", "chirp_duration"], [127, 2, 1, "", "chirps_in_frame"], [127, 3, 1, "", "demodulate"], [127, 2, 1, "", "frame_duration"], [127, 2, 1, "", "freq_difference"], [127, 2, 1, "", "guard_interval"], [127, 3, 1, "", "map"], [127, 3, 1, "", "modulate"], [127, 2, 1, "", "modulation_order"], [127, 2, 1, "", "num_data_chirps"], [127, 2, 1, "", "num_data_symbols"], [127, 2, 1, "", "num_pilot_chirps"], [127, 3, 1, "", "pick"], [127, 2, 1, "", "pilot_signal"], [127, 3, 1, "", "place"], [127, 2, 1, "", "power"], [127, 2, 1, "", "samples_in_chirp"], [127, 2, 1, "", "samples_per_frame"], [127, 2, 1, "", "sampling_rate"], [127, 2, 1, "", "symbol_duration"], [127, 2, 1, "", "symbol_energy"], [127, 2, 1, "", "symbol_precoding_support"], [127, 4, 1, "", "symbol_type"], [127, 3, 1, "", "unmap"]], "hermespy.modem.waveform_correlation_synchronization": [[128, 1, 1, "", "CorrelationSynchronization"]], "hermespy.modem.waveform_correlation_synchronization.CorrelationSynchronization": [[128, 2, 1, "", "guard_ratio"], [128, 3, 1, "", "synchronize"], [128, 2, 1, "", "threshold"], [128, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier": [[130, 1, 1, "", "FMCWWaveform"], [129, 1, 1, "", "FilteredSingleCarrierWaveform"], [131, 1, 1, "", "RaisedCosineWaveform"], [132, 1, 1, "", "RectangularWaveform"], [129, 1, 1, "", "RolledOffSingleCarrierWaveform"], [133, 1, 1, "", "RootRaisedCosineWaveform"]], "hermespy.modem.waveform_single_carrier.FMCWWaveform": [[130, 2, 1, "", "bandwidth"], [130, 2, 1, "", "chirp_duration"], [130, 2, 1, "", "chirp_slope"], [130, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.FilteredSingleCarrierWaveform": [[129, 2, 1, "", "bit_energy"], [129, 3, 1, "", "demodulate"], [129, 2, 1, "", "guard_interval"], [129, 3, 1, "", "map"], [129, 3, 1, "", "modulate"], [129, 2, 1, "", "modulation_order"], [129, 2, 1, "", "num_data_symbols"], [129, 2, 1, "", "num_guard_samples"], [129, 2, 1, "", "num_postamble_symbols"], [129, 2, 1, "", "num_preamble_symbols"], [129, 3, 1, "", "pick"], [129, 2, 1, "", "pilot_rate"], [129, 2, 1, "", "pilot_signal"], [129, 3, 1, "", "place"], [129, 3, 1, "", "plot_filter"], [129, 3, 1, "", "plot_filter_correlation"], [129, 2, 1, "", "power"], [129, 2, 1, "", "samples_per_frame"], [129, 2, 1, "", "sampling_rate"], [129, 2, 1, "", "symbol_duration"], [129, 2, 1, "", "symbol_energy"], [129, 2, 1, "", "symbol_rate"], [129, 3, 1, "", "unmap"]], "hermespy.modem.waveform_single_carrier.RaisedCosineWaveform": [[131, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.RectangularWaveform": [[132, 2, 1, "", "bandwidth"], [132, 2, 1, "", "relative_bandwidth"], [132, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveform_single_carrier.RolledOffSingleCarrierWaveform": [[129, 2, 1, "", "bandwidth"], [129, 2, 1, "", "filter_length"], [129, 2, 1, "", "relative_bandwidth"], [129, 2, 1, "", "roll_off"]], "hermespy.modem.waveform_single_carrier.RootRaisedCosineWaveform": [[133, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.ocdm": [[142, 1, 1, "", "OCDMWaveform"]], "hermespy.modem.waveforms.orthogonal.ocdm.OCDMWaveform": [[142, 2, 1, "", "bandwidth"], [142, 2, 1, "", "sampling_rate"]], "hermespy.modem.waveforms.orthogonal.ofdm": [[144, 1, 1, "", "OFDMWaveform"], [145, 1, 1, "", "SchmidlCoxPilotSection"], [146, 1, 1, "", "SchmidlCoxSynchronization"]], "hermespy.modem.waveforms.orthogonal.ofdm.OFDMWaveform": [[144, 2, 1, "", "bandwidth"], [144, 4, 1, "", "dc_suppression"], [144, 2, 1, "", "samples_per_frame"], [144, 2, 1, "", "sampling_rate"], [144, 2, 1, "", "subcarrier_spacing"]], "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxPilotSection": [[145, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.ofdm.SchmidlCoxSynchronization": [[146, 3, 1, "", "synchronize"], [146, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.otfs": [[147, 1, 1, "", "OTFSWaveform"]], "hermespy.modem.waveforms.orthogonal.waveform": [[135, 1, 1, "", "ElementType"], [135, 1, 1, "", "GridElement"], [136, 1, 1, "", "GridResource"], [137, 1, 1, "", "GridSection"], [138, 1, 1, "", "GuardSection"], [139, 1, 1, "", "OrthogonalWaveform"], [140, 1, 1, "", "PilotSection"], [136, 1, 1, "", "PrefixType"], [141, 1, 1, "", "SymbolSection"]], "hermespy.modem.waveforms.orthogonal.waveform.ElementType": [[135, 4, 1, "", "DATA"], [135, 4, 1, "", "NULL"], [135, 4, 1, "", "REFERENCE"]], "hermespy.modem.waveforms.orthogonal.waveform.GridElement": [[135, 4, 1, "", "repetitions"], [135, 4, 1, "", "type"]], "hermespy.modem.waveforms.orthogonal.waveform.GridResource": [[136, 4, 1, "", "elements"], [136, 2, 1, "", "mask"], [136, 2, 1, "", "num_references"], [136, 2, 1, "", "num_subcarriers"], [136, 2, 1, "", "num_symbols"], [136, 2, 1, "", "prefix_ratio"], [136, 4, 1, "", "prefix_type"], [136, 2, 1, "", "repetitions"]], "hermespy.modem.waveforms.orthogonal.waveform.GridSection": [[137, 2, 1, "", "num_references"], [137, 2, 1, "", "num_repetitions"], [137, 2, 1, "", "num_samples"], [137, 2, 1, "", "num_subcarriers"], [137, 2, 1, "", "num_symbols"], [137, 2, 1, "", "num_words"], [137, 3, 1, "", "pick_samples"], [137, 3, 1, "", "pick_symbols"], [137, 3, 1, "", "place_samples"], [137, 3, 1, "", "place_symbols"], [137, 2, 1, "", "resource_mask"], [137, 2, 1, "", "sample_offset"], [137, 2, 1, "", "wave"]], "hermespy.modem.waveforms.orthogonal.waveform.GuardSection": [[138, 2, 1, "", "duration"], [138, 2, 1, "", "num_samples"], [138, 3, 1, "", "pick_samples"], [138, 3, 1, "", "place_samples"]], "hermespy.modem.waveforms.orthogonal.waveform.OrthogonalWaveform": [[139, 2, 1, "", "bit_energy"], [139, 3, 1, "", "demodulate"], [139, 2, 1, "", "grid_resources"], [139, 2, 1, "", "grid_structure"], [139, 3, 1, "", "map"], [139, 2, 1, "", "mapping"], [139, 3, 1, "", "modulate"], [139, 2, 1, "", "modulation_order"], [139, 2, 1, "", "num_data_symbols"], [139, 2, 1, "", "num_subcarriers"], [139, 3, 1, "", "pick"], [139, 2, 1, "", "pilot_section"], [139, 2, 1, "", "pilot_signal"], [139, 3, 1, "", "place"], [139, 2, 1, "", "plot_grid"], [139, 2, 1, "", "power"], [139, 2, 1, "", "references_per_frame"], [139, 2, 1, "", "resource_mask"], [139, 2, 1, "", "samples_per_frame"], [139, 2, 1, "", "symbol_duration"], [139, 2, 1, "", "symbol_energy"], [139, 2, 1, "", "symbols_per_frame"], [139, 3, 1, "", "unmap"], [139, 2, 1, "", "words_per_frame"]], "hermespy.modem.waveforms.orthogonal.waveform.PilotSection": [[140, 3, 1, "", "from_yaml"], [140, 3, 1, "", "generate"], [140, 2, 1, "", "num_references"], [140, 2, 1, "", "num_repetitions"], [140, 2, 1, "", "num_samples"], [140, 2, 1, "", "num_subcarriers"], [140, 2, 1, "", "num_symbols"], [140, 2, 1, "", "num_words"], [140, 3, 1, "", "pick_samples"], [140, 2, 1, "", "pilot_elements"], [140, 3, 1, "", "place_samples"], [140, 3, 1, "", "place_symbols"], [140, 2, 1, "", "resource_mask"], [140, 2, 1, "", "sample_offset"], [140, 3, 1, "", "to_yaml"], [140, 4, 1, "", "yaml_tag"]], "hermespy.modem.waveforms.orthogonal.waveform.PrefixType": [[136, 4, 1, "", "CYCLIC"], [136, 4, 1, "", "NONE"], [136, 4, 1, "", "ZEROPAD"]], "hermespy.modem.waveforms.orthogonal.waveform.SymbolSection": [[141, 2, 1, "", "num_references"], [141, 2, 1, "", "num_samples"], [141, 2, 1, "", "num_subcarriers"], [141, 2, 1, "", "num_symbols"], [141, 2, 1, "", "num_words"], [141, 4, 1, "", "pattern"], [141, 3, 1, "", "pick_samples"], [141, 3, 1, "", "place_samples"], [141, 2, 1, "", "resource_mask"]], "hermespy.precoding": [[149, 0, 0, "-", "precoding"], [150, 0, 0, "-", "stream_precoding"]], "hermespy.precoding.precoding": [[149, 1, 1, "", "Precoder"], [149, 1, 1, "", "PrecoderType"], [149, 1, 1, "", "Precoding"]], "hermespy.precoding.precoding.Precoder": [[149, 2, 1, "", "num_input_streams"], [149, 2, 1, "", "num_output_streams"], [149, 2, 1, "", "precoding"], [149, 2, 1, "", "rate"], [149, 2, 1, "", "required_num_input_streams"], [149, 2, 1, "", "required_num_output_streams"], [149, 4, 1, "", "yaml_tag"]], "hermespy.precoding.precoding.Precoding": [[149, 4, 1, "", "__modem"], [149, 4, 1, "", "__precoders"], [149, 3, 1, "", "from_yaml"], [149, 2, 1, "", "modem"], [149, 2, 1, "", "num_input_streams"], [149, 2, 1, "", "num_output_streams"], [149, 3, 1, "", "pop_precoder"], [149, 2, 1, "", "rate"], [149, 3, 1, "", "required_inputs"], [149, 3, 1, "", "required_outputs"], [149, 3, 1, "", "to_yaml"]], "hermespy.precoding.stream_precoding": [[150, 1, 1, "", "ReceiveStreamCoding"], [150, 1, 1, "", "ReceiveStreamDecoder"], [150, 1, 1, "", "TransmitStreamCoding"], [150, 1, 1, "", "TransmitStreamEncoder"]], "hermespy.precoding.stream_precoding.ReceiveStreamCoding": [[150, 3, 1, "", "decode"], [150, 4, 1, "", "yaml_tag"]], "hermespy.precoding.stream_precoding.ReceiveStreamDecoder": [[150, 3, 1, "", "decode_streams"], [150, 2, 1, "", "num_input_streams"], [150, 2, 1, "", "num_output_streams"], [150, 2, 1, "", "num_receive_input_streams"], [150, 2, 1, "", "num_receive_output_streams"]], "hermespy.precoding.stream_precoding.TransmitStreamCoding": [[150, 3, 1, "", "encode"], [150, 4, 1, "", "yaml_tag"]], "hermespy.precoding.stream_precoding.TransmitStreamEncoder": [[150, 3, 1, "", "encode_streams"], [150, 2, 1, "", "num_input_streams"], [150, 2, 1, "", "num_output_streams"], [150, 2, 1, "", "num_transmit_input_streams"], [150, 2, 1, "", "num_transmit_output_streams"]], "hermespy.radar.cube": [[152, 1, 1, "", "RadarCube"]], "hermespy.radar.cube.RadarCube": [[152, 2, 1, "", "angle_bins"], [152, 2, 1, "", "carrier_frequency"], [152, 2, 1, "", "data"], [152, 2, 1, "", "doppler_bins"], [152, 3, 1, "", "normalize_power"], [152, 2, 1, "", "plot_angles"], [152, 2, 1, "", "plot_range"], [152, 2, 1, "", "plot_range_velocity"], [152, 2, 1, "", "range_bins"], [152, 2, 1, "", "velocity_bins"]], "hermespy.radar.detection": [[153, 1, 1, "", "MaxDetector"], [154, 1, 1, "", "PointDetection"], [155, 1, 1, "", "RadarDetector"], [156, 1, 1, "", "RadarPointCloud"], [157, 1, 1, "", "ThresholdDetector"]], "hermespy.radar.detection.MaxDetector": [[153, 3, 1, "", "detect"], [153, 4, 1, "", "yaml_tag"]], "hermespy.radar.detection.PointDetection": [[154, 3, 1, "", "FromSpherical"], [154, 2, 1, "", "position"], [154, 2, 1, "", "power"], [154, 2, 1, "", "velocity"]], "hermespy.radar.detection.RadarDetector": [[155, 3, 1, "", "detect"]], "hermespy.radar.detection.RadarPointCloud": [[156, 3, 1, "", "add_point"], [156, 3, 1, "", "create_figure"], [156, 2, 1, "", "max_range"], [156, 2, 1, "", "num_points"], [156, 2, 1, "", "points"], [156, 2, 1, "", "title"]], "hermespy.radar.detection.ThresholdDetector": [[157, 3, 1, "", "detect"], [157, 2, 1, "", "min_power"], [157, 2, 1, "", "normalize"], [157, 2, 1, "", "peak_detection"]], "hermespy.radar.evaluators": [[158, 1, 1, "", "DetectionProbArtifact"], [158, 1, 1, "", "DetectionProbEvaluator"], [158, 1, 1, "", "DetectionProbabilityEvaluation"], [159, 1, 1, "", "RadarEvaluator"], [160, 1, 1, "", "ReceiverOperatingCharacteristic"], [160, 1, 1, "", "RocArtifact"], [160, 1, 1, "", "RocEvaluation"], [160, 1, 1, "", "RocEvaluationResult"], [161, 1, 1, "", "RootMeanSquareArtifact"], [161, 1, 1, "", "RootMeanSquareError"], [161, 1, 1, "", "RootMeanSquareErrorResult"], [161, 1, 1, "", "RootMeanSquareEvaluation"]], "hermespy.radar.evaluators.DetectionProbEvaluator": [[158, 2, 1, "", "abbreviation"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "generate_result"], [158, 2, 1, "", "radar"], [158, 2, 1, "", "title"]], "hermespy.radar.evaluators.DetectionProbabilityEvaluation": [[158, 3, 1, "", "artifact"]], "hermespy.radar.evaluators.RadarEvaluator": [[159, 3, 1, "", "generate_result"], [159, 2, 1, "", "radar_channel"], [159, 2, 1, "", "receiving_device"], [159, 2, 1, "", "receiving_radar"], [159, 2, 1, "", "transmitting_device"]], "hermespy.radar.evaluators.ReceiverOperatingCharacteristic": [[160, 3, 1, "", "From_HDF"], [160, 3, 1, "", "From_Scenarios"], [160, 2, 1, "", "abbreviation"], [160, 3, 1, "", "evaluate"], [160, 3, 1, "", "from_scenarios"], [160, 3, 1, "", "generate_result"], [160, 2, 1, "", "title"]], "hermespy.radar.evaluators.RocArtifact": [[160, 2, 1, "", "h0_value"], [160, 2, 1, "", "h1_value"], [160, 3, 1, "", "to_scalar"]], "hermespy.radar.evaluators.RocEvaluation": [[160, 3, 1, "", "artifact"], [160, 2, 1, "", "cube_h0"], [160, 2, 1, "", "cube_h1"]], "hermespy.radar.evaluators.RocEvaluationResult": [[160, 3, 1, "", "to_array"]], "hermespy.radar.evaluators.RootMeanSquareArtifact": [[161, 2, 1, "", "cummulation"], [161, 2, 1, "", "num_errors"], [161, 3, 1, "", "to_scalar"]], "hermespy.radar.evaluators.RootMeanSquareError": [[161, 2, 1, "", "abbreviation"], [161, 3, 1, "", "evaluate"], [161, 3, 1, "", "generate_result"], [161, 2, 1, "", "title"]], "hermespy.radar.evaluators.RootMeanSquareEvaluation": [[161, 3, 1, "", "artifact"]], "hermespy.radar.fmcw": [[162, 1, 1, "", "FMCW"]], "hermespy.radar.fmcw.FMCW": [[162, 2, 1, "", "adc_sampling_rate"], [162, 2, 1, "", "bandwidth"], [162, 2, 1, "", "chirp_duration"], [162, 2, 1, "", "energy"], [162, 3, 1, "", "estimate"], [162, 2, 1, "", "frame_duration"], [162, 2, 1, "", "max_range"], [162, 2, 1, "", "max_relative_doppler"], [162, 2, 1, "", "num_chirps"], [162, 3, 1, "", "ping"], [162, 2, 1, "", "power"], [162, 2, 1, "", "pulse_rep_interval"], [162, 2, 1, "", "range_resolution"], [162, 2, 1, "", "relative_doppler_bins"], [162, 2, 1, "", "relative_doppler_resolution"], [162, 2, 1, "", "sampling_rate"], [162, 2, 1, "", "slope"]], "hermespy.radar.radar": [[163, 1, 1, "", "Radar"], [163, 1, 1, "", "RadarBase"], [164, 1, 1, "", "RadarReception"], [165, 1, 1, "", "RadarTransmission"], [166, 1, 1, "", "RadarWaveform"]], "hermespy.radar.radar.Radar": [[163, 2, 1, "", "frame_duration"], [163, 2, 1, "", "max_range"], [163, 2, 1, "", "power"], [163, 2, 1, "", "sampling_rate"], [163, 2, 1, "", "velocity_resolution"], [163, 2, 1, "", "waveform"]], "hermespy.radar.radar.RadarBase": [[163, 2, 1, "", "detector"], [163, 2, 1, "", "receive_beamformer"], [163, 2, 1, "", "transmit_beamformer"]], "hermespy.radar.radar.RadarReception": [[164, 2, 1, "", "cloud"], [164, 2, 1, "", "cube"]], "hermespy.radar.radar.RadarWaveform": [[166, 2, 1, "", "energy"], [166, 3, 1, "", "estimate"], [166, 2, 1, "", "frame_duration"], [166, 2, 1, "", "max_range"], [166, 2, 1, "", "max_relative_doppler"], [166, 3, 1, "", "ping"], [166, 2, 1, "", "power"], [166, 2, 1, "", "range_bins"], [166, 2, 1, "", "range_resolution"], [166, 2, 1, "", "relative_doppler_bins"], [166, 2, 1, "", "relative_doppler_resolution"], [166, 2, 1, "", "sampling_rate"]], "hermespy.simulation.animation": [[168, 1, 1, "", "LinearTrajectory"], [168, 1, 1, "", "Moveable"], [168, 1, 1, "", "StaticTrajectory"], [168, 1, 1, "", "Trajectory"], [168, 1, 1, "", "TrajectorySample"]], "hermespy.simulation.animation.LinearTrajectory": [[168, 2, 1, "", "max_timestamp"], [168, 3, 1, "", "sample"]], "hermespy.simulation.animation.Moveable": [[168, 2, 1, "", "max_trajectory_timestamp"], [168, 2, 1, "", "trajectory"]], "hermespy.simulation.animation.StaticTrajectory": [[168, 2, 1, "", "max_timestamp"], [168, 2, 1, "", "pose"], [168, 3, 1, "", "sample"], [168, 2, 1, "", "velocity"]], "hermespy.simulation.animation.Trajectory": [[168, 2, 1, "", "max_timestamp"], [168, 3, 1, "", "sample"]], "hermespy.simulation.animation.TrajectorySample": [[168, 2, 1, "", "pose"], [168, 2, 1, "", "timestamp"], [168, 2, 1, "", "velocity"]], "hermespy.simulation.antennas": [[174, 1, 1, "", "SimulatedAntenna"], [171, 1, 1, "", "SimulatedAntennaArray"], [172, 1, 1, "", "SimulatedAntennaPort"], [173, 1, 1, "", "SimulatedCustomArray"], [175, 1, 1, "", "SimulatedIdealAntenna"], [176, 1, 1, "", "SimulatedLinearAntenna"], [177, 1, 1, "", "SimulatedPatchAntenna"], [178, 1, 1, "", "SimulatedUniformArray"]], "hermespy.simulation.antennas.SimulatedAntenna": [[174, 3, 1, "", "receive"], [174, 3, 1, "", "transmit"], [174, 2, 1, "", "weight"]], "hermespy.simulation.antennas.SimulatedAntennaArray": [[171, 3, 1, "", "analog_digital_conversion"], [171, 3, 1, "", "antenna_state"], [171, 3, 1, "", "plot_pattern"], [171, 3, 1, "", "receive"], [171, 3, 1, "", "rf_chain_modified"], [171, 3, 1, "", "transmit"]], "hermespy.simulation.antennas.SimulatedAntennaPort": [[172, 2, 1, "", "rf_chain"]], "hermespy.simulation.antennas.SimulatedCustomArray": [[173, 3, 1, "", "add_antenna"], [173, 3, 1, "", "add_port"], [173, 3, 1, "", "remove_port"]], "hermespy.simulation.antennas.SimulatedIdealAntenna": [[175, 4, 1, "", "yaml_tag"]], "hermespy.simulation.antennas.SimulatedPatchAntenna": [[177, 4, 1, "", "yaml_tag"]], "hermespy.simulation.coupling.coupling": [[180, 1, 1, "", "Coupling"]], "hermespy.simulation.coupling.coupling.Coupling": [[180, 2, 1, "", "device"], [180, 3, 1, "", "receive"], [180, 3, 1, "", "transmit"]], "hermespy.simulation.coupling.impedance": [[181, 1, 1, "", "ImpedanceCoupling"]], "hermespy.simulation.coupling.impedance.ImpedanceCoupling": [[181, 2, 1, "", "matching_impedance"], [181, 2, 1, "", "receive_correlation"], [181, 2, 1, "", "receive_impedance"], [181, 2, 1, "", "transmit_correlation"], [181, 2, 1, "", "transmit_impedance"]], "hermespy.simulation.coupling.perfect": [[182, 1, 1, "", "PerfectCoupling"]], "hermespy.simulation.drop": [[218, 1, 1, "", "SimulatedDrop"]], "hermespy.simulation.drop.SimulatedDrop": [[218, 2, 1, "", "channel_realizations"]], "hermespy.simulation.isolation.isolation": [[184, 1, 1, "", "Isolation"]], "hermespy.simulation.isolation.isolation.Isolation": [[184, 2, 1, "", "device"], [184, 3, 1, "", "leak"]], "hermespy.simulation.isolation.perfect": [[185, 1, 1, "", "PerfectIsolation"]], "hermespy.simulation.isolation.perfect.PerfectIsolation": [[185, 3, 1, "", "leak"]], "hermespy.simulation.isolation.selective": [[186, 1, 1, "", "SelectiveLeakage"]], "hermespy.simulation.isolation.selective.SelectiveLeakage": [[186, 3, 1, "", "Normal"], [186, 2, 1, "", "leakage_response"]], "hermespy.simulation.isolation.specific": [[187, 1, 1, "", "SpecificIsolation"]], "hermespy.simulation.isolation.specific.SpecificIsolation": [[187, 2, 1, "", "isolation"]], "hermespy.simulation.modem.noise": [[188, 1, 1, "", "EBN0"], [189, 1, 1, "", "ESN0"]], "hermespy.simulation.modem.noise.EBN0": [[188, 3, 1, "", "get_power"], [188, 2, 1, "", "title"]], "hermespy.simulation.modem.noise.ESN0": [[189, 3, 1, "", "get_power"], [189, 2, 1, "", "title"]], "hermespy.simulation.noise.level": [[191, 1, 1, "", "N0"], [190, 1, 1, "", "NoiseLevel"], [192, 1, 1, "", "SNR"]], "hermespy.simulation.noise.level.N0": [[191, 3, 1, "", "get_power"], [191, 2, 1, "", "level"], [191, 2, 1, "", "power"], [191, 2, 1, "", "title"]], "hermespy.simulation.noise.level.NoiseLevel": [[190, 3, 1, "", "get_power"], [190, 2, 1, "", "level"]], "hermespy.simulation.noise.level.SNR": [[192, 3, 1, "", "get_power"], [192, 2, 1, "", "level"], [192, 2, 1, "", "reference"], [192, 2, 1, "", "snr"], [192, 2, 1, "", "title"]], "hermespy.simulation.noise.model": [[193, 1, 1, "", "AWGN"], [194, 1, 1, "", "AWGNRealization"], [190, 1, 1, "", "NRT"], [190, 1, 1, "", "NoiseModel"], [190, 1, 1, "", "NoiseRealization"]], "hermespy.simulation.noise.model.AWGN": [[193, 3, 1, "", "realize"]], "hermespy.simulation.noise.model.AWGNRealization": [[194, 3, 1, "", "add_to"]], "hermespy.simulation.noise.model.NoiseModel": [[190, 3, 1, "", "add_noise"], [190, 3, 1, "", "realize"]], "hermespy.simulation.noise.model.NoiseRealization": [[190, 3, 1, "", "add_to"], [190, 2, 1, "", "power"]], "hermespy.simulation.rf_chain.analog_digital_converter": [[197, 1, 1, "", "AnalogDigitalConverter"], [198, 1, 1, "", "AutomaticGainControl"], [199, 1, 1, "", "Gain"], [200, 1, 1, "", "GainControlBase"], [201, 1, 1, "", "GainControlType"], [202, 1, 1, "", "QuantizerType"]], "hermespy.simulation.rf_chain.analog_digital_converter.AnalogDigitalConverter": [[197, 3, 1, "", "convert"], [197, 4, 1, "", "gain"], [197, 2, 1, "", "num_quantization_bits"], [197, 2, 1, "", "num_quantization_levels"], [197, 3, 1, "", "plot_quantizer"], [197, 2, 1, "", "quantizer_type"], [197, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.AutomaticGainControl": [[198, 2, 1, "", "agc_type"], [198, 2, 1, "", "backoff"], [198, 3, 1, "", "estimate_gain"], [198, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.Gain": [[199, 3, 1, "", "estimate_gain"], [199, 2, 1, "", "gain"], [199, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.analog_digital_converter.GainControlBase": [[200, 3, 1, "", "adjust_signal"], [200, 3, 1, "", "estimate_gain"], [200, 2, 1, "", "rescale_quantization"], [200, 3, 1, "", "scale_quantized_signal"]], "hermespy.simulation.rf_chain.analog_digital_converter.GainControlType": [[201, 4, 1, "", "MAX_AMPLITUDE"], [201, 4, 1, "", "NONE"], [201, 4, 1, "", "RMS_AMPLITUDE"]], "hermespy.simulation.rf_chain.analog_digital_converter.QuantizerType": [[202, 4, 1, "", "MID_RISER"], [202, 4, 1, "", "MID_TREAD"]], "hermespy.simulation.rf_chain.phase_noise": [[210, 1, 1, "", "NoPhaseNoise"], [211, 1, 1, "", "OscillatorPhaseNoise"], [209, 1, 1, "", "PhaseNoise"]], "hermespy.simulation.rf_chain.phase_noise.NoPhaseNoise": [[210, 3, 1, "", "add_noise"], [210, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.phase_noise.OscillatorPhaseNoise": [[211, 2, 1, "", "K0"], [211, 2, 1, "", "K2"], [211, 2, 1, "", "K3"], [211, 3, 1, "", "add_noise"]], "hermespy.simulation.rf_chain.phase_noise.PhaseNoise": [[209, 3, 1, "", "add_noise"]], "hermespy.simulation.rf_chain.power_amplifier": [[204, 1, 1, "", "ClippingPowerAmplifier"], [205, 1, 1, "", "CustomPowerAmplifier"], [206, 1, 1, "", "PowerAmplifier"], [207, 1, 1, "", "RappPowerAmplifier"], [208, 1, 1, "", "SalehPowerAmplifier"]], "hermespy.simulation.rf_chain.power_amplifier.ClippingPowerAmplifier": [[204, 3, 1, "", "model"], [204, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.power_amplifier.CustomPowerAmplifier": [[205, 2, 1, "", "gain"], [205, 2, 1, "", "input"], [205, 3, 1, "", "model"], [205, 2, 1, "", "phase"]], "hermespy.simulation.rf_chain.power_amplifier.PowerAmplifier": [[206, 4, 1, "", "adjust_power"], [206, 3, 1, "", "model"], [206, 3, 1, "", "plot_characteristics"], [206, 2, 1, "", "saturation_amplitude"], [206, 3, 1, "", "send"], [206, 2, 1, "", "title"]], "hermespy.simulation.rf_chain.power_amplifier.RappPowerAmplifier": [[207, 3, 1, "", "model"], [207, 2, 1, "", "smoothness_factor"], [207, 4, 1, "", "yaml_tag"]], "hermespy.simulation.rf_chain.power_amplifier.SalehPowerAmplifier": [[208, 2, 1, "", "amplitude_alpha"], [208, 2, 1, "", "amplitude_beta"], [208, 3, 1, "", "model"], [208, 4, 1, "", "phase_alpha"], [208, 4, 1, "", "phase_beta"]], "hermespy.simulation.rf_chain.rf_chain": [[195, 1, 1, "", "RfChain"]], "hermespy.simulation.rf_chain.rf_chain.RfChain": [[195, 2, 1, "", "adc"], [195, 3, 1, "", "add_iq_imbalance"], [195, 2, 1, "", "amplitude_imbalance"], [195, 2, 1, "", "phase_noise"], [195, 2, 1, "", "phase_offset"], [195, 2, 1, "", "power_amplifier"], [195, 3, 1, "", "receive"], [195, 3, 1, "", "transmit"]], "hermespy.simulation.simulated_device": [[213, 1, 1, "", "ProcessedSimulatedDeviceInput"], [222, 1, 1, "", "RandomTrigger"], [223, 1, 1, "", "SampleOffsetTrigger"], [212, 1, 1, "", "SimulatedDevice"], [214, 1, 1, "", "SimulatedDeviceOutput"], [215, 1, 1, "", "SimulatedDeviceReceiveRealization"], [216, 1, 1, "", "SimulatedDeviceReception"], [217, 1, 1, "", "SimulatedDeviceTransmission"], [224, 1, 1, "", "StaticTrigger"], [225, 1, 1, "", "TimeOffsetTrigger"], [226, 1, 1, "", "TriggerModel"], [227, 1, 1, "", "TriggerRealization"]], "hermespy.simulation.simulated_device.ProcessedSimulatedDeviceInput": [[213, 2, 1, "", "baseband_signal"], [213, 2, 1, "", "leaking_signal"], [213, 2, 1, "", "operator_separation"], [213, 2, 1, "", "trigger_realization"]], "hermespy.simulation.simulated_device.RandomTrigger": [[222, 3, 1, "", "realize"]], "hermespy.simulation.simulated_device.SampleOffsetTrigger": [[223, 2, 1, "", "num_offset_samples"], [223, 3, 1, "", "realize"]], "hermespy.simulation.simulated_device.SimulatedDevice": [[212, 2, 1, "", "antennas"], [212, 2, 1, "", "attached"], [212, 2, 1, "", "carrier_frequency"], [212, 2, 1, "", "coupling"], [212, 3, 1, "", "generate_output"], [212, 2, 1, "", "input"], [212, 2, 1, "", "isolation"], [212, 2, 1, "", "noise"], [212, 2, 1, "", "noise_level"], [212, 2, 1, "", "noise_model"], [212, 2, 1, "", "operator_separation"], [212, 2, 1, "", "output"], [212, 3, 1, "", "process_from_realization"], [212, 3, 1, "", "process_input"], [212, 2, 1, "", "realization"], [212, 3, 1, "", "realize_reception"], [212, 3, 1, "", "receive"], [212, 4, 1, "", "rf_chain"], [212, 2, 1, "", "sampling_rate"], [212, 2, 1, "", "scenario"], [212, 4, 1, "", "serialized_attribute"], [212, 3, 1, "", "state"], [212, 3, 1, "", "transmit"], [212, 2, 1, "", "trigger_model"]], "hermespy.simulation.simulated_device.SimulatedDeviceOutput": [[214, 3, 1, "", "From_DeviceOutput"], [214, 2, 1, "", "emerging_signals"], [214, 2, 1, "", "operator_separation"], [214, 2, 1, "", "trigger_realization"]], "hermespy.simulation.simulated_device.SimulatedDeviceReceiveRealization": [[215, 2, 1, "", "noise_realization"]], "hermespy.simulation.simulated_device.SimulatedDeviceReception": [[216, 3, 1, "", "From_ProcessedSimulatedDeviceInput"]], "hermespy.simulation.simulated_device.SimulatedDeviceTransmission": [[217, 3, 1, "", "From_SimulatedDeviceOutput"]], "hermespy.simulation.simulated_device.StaticTrigger": [[224, 3, 1, "", "realize"]], "hermespy.simulation.simulated_device.TimeOffsetTrigger": [[225, 2, 1, "", "offset"], [225, 3, 1, "", "realize"]], "hermespy.simulation.simulated_device.TriggerModel": [[226, 3, 1, "", "add_device"], [226, 2, 1, "", "devices"], [226, 2, 1, "", "num_devices"], [226, 3, 1, "", "realize"], [226, 3, 1, "", "remove_device"]], "hermespy.simulation.simulated_device.TriggerRealization": [[227, 3, 1, "", "compute_num_offset_samples"], [227, 2, 1, "", "num_offset_samples"], [227, 2, 1, "", "sampling_rate"], [227, 2, 1, "", "trigger_delay"]], "hermespy.simulation.simulation": [[219, 1, 1, "", "Simulation"], [220, 1, 1, "", "SimulationScenario"]], "hermespy.simulation.simulation.Simulation": [[219, 2, 1, "", "console"], [219, 2, 1, "", "console_mode"], [219, 2, 1, "", "drop_interval"], [219, 4, 1, "", "dump_results"], [219, 3, 1, "", "from_yaml"], [219, 2, 1, "", "num_samples"], [219, 4, 1, "", "plot_results"], [219, 3, 1, "", "run"], [219, 3, 1, "", "set_channel"], [219, 3, 1, "", "to_yaml"]], "hermespy.simulation.simulation.SimulationScenario": [[220, 3, 1, "", "add_device"], [220, 3, 1, "", "channel"], [220, 2, 1, "", "channels"], [220, 3, 1, "", "device_channels"], [220, 3, 1, "", "generate_outputs"], [220, 3, 1, "", "new_device"], [220, 2, 1, "", "noise_level"], [220, 2, 1, "", "noise_model"], [220, 3, 1, "", "process_inputs"], [220, 3, 1, "", "propagate"], [220, 3, 1, "", "realize_channels"], [220, 3, 1, "", "realize_triggers"], [220, 3, 1, "", "receive_devices"], [220, 3, 1, "", "set_channel"], [220, 3, 1, "", "transmit_devices"], [220, 2, 1, "", "visualize"], [220, 4, 1, "", "yaml_tag"]], "hermespy.tools": [[230, 0, 0, "-", "math"], [231, 0, 0, "-", "resampling"], [232, 0, 0, "-", "tile"]], "hermespy.tools.math": [[230, 1, 1, "", "DbConversionType"], [230, 5, 1, "", "amplitude_path_loss"], [230, 5, 1, "", "db2lin"], [230, 5, 1, "", "lin2db"], [230, 5, 1, "", "marcum_q"], [230, 5, 1, "", "rms_value"]], "hermespy.tools.math.DbConversionType": [[230, 4, 1, "", "AMPLITUDE"], [230, 4, 1, "", "POWER"]], "hermespy.tools.resampling": [[231, 5, 1, "", "delay_resampling_matrix"]], "hermespy.tools.tile": [[232, 5, 1, "", "get_monitors"], [232, 5, 1, "", "screen_geometry"], [232, 5, 1, "", "set_figure_geometry"], [232, 5, 1, "", "tile_figures"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "terms": {"": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 46, 49, 50, 51, 55, 59, 60, 61, 71, 76, 78, 79, 82, 83, 87, 88, 90, 91, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 121, 122, 123, 124, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 144, 147, 152, 154, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 190, 196, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "0": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 34, 36, 38, 39, 49, 52, 54, 55, 56, 59, 60, 65, 70, 73, 78, 79, 82, 83, 87, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147, 152, 156, 158, 161, 162, 163, 167, 168, 169, 171, 176, 186, 187, 197, 198, 199, 201, 202, 207, 212, 219, 221, 222, 223, 225, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "00": [8, 9, 10, 11, 12, 13, 22, 29, 263], "00_60": [8, 9, 10, 11, 12, 13, 22, 29, 73, 263], "01": [235, 239, 240, 241, 242, 243], "0108018": [71, 263], "016": [124, 263], "02": [73, 158, 262, 263], "02ch37367": [24, 263], "06": [4, 162, 263], "0670": [124, 263], "0684": 113, "07": [73, 263], "0703125": [234, 239, 241, 242, 244], "072": 261, "072e9": 261, "078125": [234, 239, 241, 242, 244], "08": 127, "0j": [170, 174, 175, 176, 177], "1": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 83, 90, 91, 92, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 116, 117, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 151, 158, 160, 161, 162, 163, 166, 167, 169, 170, 171, 174, 175, 176, 177, 186, 187, 195, 197, 198, 199, 201, 202, 203, 207, 208, 211, 212, 230, 231, 234, 236, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "10": [3, 8, 9, 10, 11, 12, 13, 14, 15, 22, 24, 31, 36, 54, 55, 60, 64, 68, 69, 71, 72, 73, 74, 78, 92, 98, 99, 100, 101, 102, 114, 116, 124, 134, 142, 143, 145, 146, 147, 161, 162, 167, 169, 195, 203, 207, 208, 211, 212, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 261, 262, 263], "100": [8, 9, 10, 11, 12, 13, 29, 98, 99, 100, 101, 102, 113, 167, 168, 186, 212, 219, 233, 236, 239, 240, 241, 242, 244, 248, 255, 257, 263], "1000": [9, 10, 11, 12, 13, 14, 82, 98, 99, 100, 101, 102, 144, 147, 161, 235, 236, 238, 240, 241, 242, 243, 254, 256, 259, 261, 262], "10000": [9, 211, 236, 238], "100000000": 162, "1000000000": 127, "1002729": [24, 263], "100345": [64, 68, 69, 71, 72, 74, 263], "1005": 263, "1008": 263, "100e": 241, "100e6": [212, 236, 238, 240], "100e9": 248, "101": [160, 186, 187], "1016": [64, 68, 69, 71, 72, 74, 263], "1024": [113, 144, 147, 221, 236, 256, 258, 260], "1054010": 263, "1055186": [72, 263], "1064": [74, 263], "1070": [74, 263], "1094911": [203, 208, 263], "10cm": [241, 242], "10e": [241, 242], "10e6": 130, "10e9": [248, 254, 259, 261], "10ghz": [254, 259], "10m": [9, 235, 241], "11": [8, 73, 114, 203, 208, 211, 238, 250, 251, 253, 257, 263], "110": 211, "1109": [3, 15, 22, 24, 31, 36, 69, 72, 73, 74, 92, 114, 116, 145, 146, 195, 203, 208, 211, 249, 263], "1137": [55, 71, 263], "1162830": 263, "1186": [124, 263], "11a": [73, 263], "12": [8, 9, 10, 11, 12, 13, 14, 22, 24, 36, 92, 98, 99, 100, 101, 102, 145, 146, 248, 251, 253, 259, 260, 263], "120": 255, "1200": 239, "120256": [249, 263], "120273": [249, 263], "125": [212, 235, 243], "125900_125999": [22, 263], "125943": [22, 263], "125hz": 235, "127": 79, "1274": [31, 263], "1278": [31, 263], "128": [130, 134, 142, 143, 147, 236, 242, 253], "128e3": 142, "13": [8, 22, 92, 251, 253, 263], "130911433": [55, 263], "132": 244, "1361130": 263, "138": 9, "138200_138299": [73, 263], "138211": [73, 263], "138900_138999": [8, 9, 10, 11, 12, 13, 29, 263], "138901": [8, 9, 10, 11, 12, 13, 29, 263], "14": [8, 9, 10, 11, 12, 13, 98, 99, 100, 101, 102, 127, 251, 253, 255, 263], "1408": [3, 263], "1418": [3, 263], "1451": [116, 263], "1458": [116, 263], "15": [8, 73, 251, 253, 255, 261, 263], "1553": [211, 263], "15625": 235, "1565": [211, 263], "15e3": [239, 242], "16": [4, 8, 9, 10, 11, 12, 13, 14, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 121, 127, 129, 130, 131, 132, 133, 134, 142, 143, 147, 196, 235, 236, 238, 239, 240, 242, 243, 248, 251, 255, 256, 259, 260, 262, 263], "160": 235, "1600": 73, "1613": [145, 146, 263], "1621": [145, 146, 263], "16384": [134, 142, 143, 147], "1650": [116, 263], "1656": [116, 263], "168": 244, "1698": [114, 263], "17": [8, 9, 10, 11, 12, 13, 29, 73, 251, 255, 263], "1704": [114, 263], "1715": [203, 208, 263], "1720": [203, 208, 263], "179": [203, 207, 263], "18": [8, 9, 10, 11, 12, 13, 98, 99, 100, 101, 102, 116, 254, 255, 259, 263], "180": [36, 124, 263], "184": [203, 207, 263], "189": 244, "19": [8, 251, 255, 263], "192": [108, 109, 110, 111, 244], "1950": [4, 263], "1953": [235, 243], "1954": [114, 263], "1960": [64, 71, 263], "1963": [68, 263], "1967": 263, "1969": [3, 263], "1974": [72, 263], "1976": 263, "1981": [203, 208, 263], "1983": 263, "1989": 263, "1991": [203, 207, 263], "1993": [74, 263], "1996": 251, "1997": [145, 146, 263], "1998": [116, 263], "1999": [73, 263], "1d": [162, 166], "1e": [127, 134, 142, 143, 147, 162, 171, 211, 212, 236, 238, 239, 240, 242, 258], "1e10": [108, 109, 110, 111, 167], "1e11": 167, "1e3": [143, 147], "1e4": [238, 253], "1e6": [108, 109, 110, 111, 114, 115, 116, 117, 130, 131, 132, 133, 236, 238, 239, 248, 259], "1e8": [9, 10, 11, 12, 13, 14, 98, 99, 100, 101, 102, 167, 171], "1e9": [127, 162, 167, 240, 244, 248, 255], "1ghz": 240, "1j": [212, 256], "1m": 240, "1x2": [114, 115], "2": [4, 7, 8, 9, 10, 11, 12, 13, 14, 22, 24, 26, 29, 31, 32, 33, 34, 36, 38, 52, 55, 59, 64, 68, 69, 71, 72, 73, 74, 92, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 121, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 151, 152, 158, 162, 171, 197, 201, 203, 208, 211, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "20": [9, 10, 11, 12, 13, 14, 54, 72, 88, 98, 99, 100, 101, 102, 161, 167, 168, 190, 212, 235, 236, 238, 239, 241, 242, 243, 244, 248, 251, 255, 259, 260, 261, 263], "200": [87, 239, 255], "2001": [116, 263], "2002": [15, 24, 263], "2004": 263, "2006": [22, 24, 263], "2007": [251, 263], "2009": [69, 92, 263], "2012": [36, 263], "2013": [211, 263], "2014": [31, 55, 211, 263], "2015": [69, 263], "2016": [22, 124, 263], "2017": [195, 263], "2018": [73, 195, 263], "2019": [64, 68, 69, 71, 72, 74, 263], "2020": [8, 9, 10, 11, 12, 13, 29, 263], "2021379": [69, 263], "2022": [4, 249, 263], "2048": [223, 239, 253], "20db": 54, "21": [190, 254, 255], "2100": [234, 241], "22": [203, 207, 255, 263], "2213": [69, 263], "2214017": [36, 263], "2226": [69, 263], "223": 263, "226": 263, "2285698": [211, 263], "2299": [195, 263], "23": 255, "2310220": [31, 263], "2312": [195, 263], "2332141": [4, 263], "23rd": 263, "24": [203, 207, 255, 256, 258, 263], "2410251": [69, 263], "25": [254, 255, 261, 263], "256": [235, 241, 242, 243], "256966": [22, 263], "256967": [22, 263], "256990": [24, 263], "259": 263, "25j": [130, 131, 132, 133], "26": [145, 146, 263], "260": 263, "269": 263, "274666": [114, 263], "2786729": [195, 263], "28": [4, 251, 263], "284": [72, 263], "287": [72, 263], "29": [203, 208, 263], "29364": 254, "2d": [60, 162, 166], "2e": [239, 240, 242, 261], "2e6": 240, "2f": 258, "2j": [167, 255], "2m": 240, "2nd": 211, "2p_": 207, "2x2": [116, 117, 241], "3": [7, 8, 9, 15, 22, 31, 33, 36, 52, 64, 69, 70, 73, 108, 109, 110, 111, 113, 116, 130, 131, 132, 133, 134, 142, 143, 147, 162, 167, 211, 212, 221, 222, 223, 224, 225, 226, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "30": [7, 18, 54, 161, 251, 261], "300": [71, 263], "30000": 9, "304": [71, 263], "3051": [69, 263], "3073": [69, 263], "309350": 263, "30db": 54, "30e3": [234, 241, 244], "30khz": 241, "31": 73, "319": [15, 263], "32": [70, 108, 109, 110, 111, 114, 115, 116, 117, 130, 131, 132, 133, 239, 255], "320": 263, "3222063": [249, 263], "3242": [31, 263], "3256": [31, 263], "327": 263, "3333333333333333": 259, "33776": [203, 207, 263], "34": 255, "342": [15, 263], "3421": [22, 263], "3433": [22, 263], "3434": [22, 263], "3450": [22, 263], "35": [234, 241, 244], "36": [55, 239, 263], "3667": [24, 263], "366852": 263, "3679": [24, 263], "37": [4, 263], "370": [24, 263], "374": [24, 263], "38": 29, "381": 255, "382": 255, "383": 255, "384": 255, "385": 255, "387": 255, "388": 255, "39": [255, 257, 259], "397441": [74, 263], "3d": [34, 255], "3e9": 241, "3ghz": 241, "3gpp": [9, 10, 11, 12, 13, 14, 22, 29, 73, 134, 142, 143, 147, 235, 255, 263], "3gpptran04": 263, "3k": 259, "3pi": 255, "3rd": 211, "4": [7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 29, 33, 52, 73, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 129, 131, 132, 133, 158, 203, 207, 211, 212, 221, 232, 234, 236, 238, 240, 241, 242, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "40": [9, 10, 11, 12, 13], "400": 236, "400e6": 221, "4096": [234, 241, 244], "41392685158225": 54, "42": [9, 10, 108, 110, 111, 114, 248, 253, 255, 257, 262, 263], "45": [145, 146, 263], "4673": 79, "47": [116, 263], "48": 76, "48000": 76, "49": [116, 263], "4th": 37, "4x4": 116, "5": [8, 9, 10, 11, 12, 13, 15, 22, 24, 29, 69, 73, 92, 124, 151, 161, 162, 168, 169, 195, 211, 212, 225, 239, 240, 242, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263], "50": [127, 169, 186, 187, 235, 238, 243, 255, 257], "500e3": [235, 243], "500khz": 235, "501": 239, "501e9": 239, "5073387": [92, 263], "51": [186, 187], "512": [235, 255], "512e": [235, 243], "513": 255, "514": 255, "516": 255, "517": 255, "518": 255, "519": 255, "521": 255, "522": 255, "53": 263, "55": [69, 263], "5555": [86, 87, 244], "55th": [24, 263], "57": [3, 241, 263], "5966": [36, 263], "5977": [36, 263], "5e": 162, "5e8": 254, "5e9": 239, "5g": [134, 142, 143, 147, 237, 240, 242, 248], "5gtdl": [240, 241, 242], "5m2": 240, "6": [8, 9, 10, 11, 12, 13, 31, 158, 162, 234, 236, 238, 239, 240, 241, 244, 251, 253, 254, 255, 257, 258, 259, 261, 263], "60": [36, 151, 168, 251, 263], "600": 234, "608": 263, "60e9": [151, 158, 160, 161, 162], "61": [69, 211, 263], "61503168": 232, "62": [31, 263], "621": 263, "64": [108, 109, 110, 111, 114, 115, 116, 117, 127, 130, 131, 132, 133, 134, 142, 143, 147, 236, 239, 253], "650240": [145, 146, 263], "66": [195, 263], "677083e": [234, 241, 244], "68": [64, 263], "6902008": [31, 263], "69th": [92, 263], "6b": 251, "6d": 251, "6g": [249, 263], "7": [8, 9, 69, 73, 79, 134, 142, 143, 147, 221, 251, 255, 257, 261, 263], "700": 87, "700000000": 87, "701": 255, "703": 255, "704": 255, "706": 255, "707": 255, "70e9": 255, "7278": [3, 263], "72e9": 254, "730453": [116, 263], "75": [255, 261], "75pi": 255, "79": [64, 263], "7e9": [134, 142, 143, 147, 212, 221, 222, 223, 224, 225, 226], "8": [3, 8, 9, 10, 11, 12, 13, 14, 24, 71, 98, 99, 100, 101, 102, 116, 127, 128, 134, 142, 143, 147, 158, 235, 239, 240, 248, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263], "800": 257, "800e6": 257, "802": [73, 263], "8647704": 263, "865e6": [235, 242, 243], "865mhz": 235, "881182": 263, "8th": [31, 263], "8x8": 254, "9": [8, 113, 114, 115, 116, 117, 124, 127, 128, 131, 133, 221, 235, 238, 239, 240, 241, 242, 243, 248, 251, 252, 253, 263], "90": [15, 239, 263], "900": 29, "901": 9, "902": 255, "904": 255, "905": 255, "906": 255, "90606": [73, 263], "908": 255, "909": 255, "91": [203, 207, 263], "923754": [116, 263], "93": [74, 263], "943": 263, "95": 236, "993400": [15, 263], "998": 241, "9e9": [221, 222, 223, 224, 225, 226], "A": [2, 3, 4, 7, 8, 14, 15, 19, 20, 21, 22, 24, 29, 30, 32, 33, 34, 36, 37, 46, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 86, 91, 92, 94, 105, 107, 110, 111, 113, 116, 118, 120, 121, 124, 129, 130, 134, 140, 142, 143, 147, 149, 151, 152, 154, 156, 158, 160, 161, 162, 163, 166, 168, 173, 178, 195, 197, 203, 208, 211, 212, 219, 220, 221, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 248, 251, 255, 263, 264], "AND": 251, "AS": 251, "AT": [36, 55, 98, 99, 100, 101, 102, 158, 173], "And": 254, "As": [53, 124, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260], "At": 260, "BE": 251, "BEING": 251, "BUT": 251, "BY": 251, "Be": 78, "But": [251, 259], "By": [1, 2, 6, 20, 26, 32, 36, 37, 55, 58, 59, 61, 66, 76, 83, 88, 120, 121, 130, 140, 145, 160, 170, 174, 175, 176, 177, 197, 209, 210, 212, 221, 226, 251], "FOR": 251, "For": [3, 8, 9, 14, 15, 24, 26, 30, 32, 55, 57, 59, 76, 82, 87, 108, 109, 110, 116, 117, 127, 129, 130, 131, 132, 133, 149, 151, 156, 162, 163, 167, 168, 192, 203, 212, 227, 232, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262], "IF": 251, "IN": 251, "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 46, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 65, 66, 67, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 136, 139, 140, 144, 146, 147, 149, 152, 154, 159, 160, 161, 162, 163, 168, 170, 171, 172, 173, 174, 180, 184, 185, 186, 190, 191, 192, 195, 197, 198, 199, 200, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 220, 222, 223, 224, 225, 226, 230, 232, 250, 251, 253], "In": [6, 14, 19, 24, 31, 52, 55, 65, 66, 67, 70, 73, 74, 92, 98, 99, 100, 101, 102, 111, 119, 121, 127, 129, 130, 131, 132, 133, 139, 149, 162, 167, 169, 171, 203, 204, 206, 207, 220, 233, 235, 236, 237, 238, 239, 241, 248, 250, 251, 255, 256, 258, 263, 264], "It": [17, 30, 31, 35, 39, 63, 75, 93, 114, 115, 117, 118, 147, 149, 151, 161, 167, 184, 188, 189, 192, 193, 197, 219, 222, 223, 224, 225, 233, 241, 249, 251, 255, 262], "Its": [20, 21], "NO": 251, "NOT": 251, "Near": [74, 263], "No": [6, 24, 36, 38, 61, 93, 121, 126, 136, 209, 240, 251, 263], "Not": 251, "OF": 251, "OR": 251, "Of": [163, 179, 183, 190, 203, 209, 221, 226, 255, 262], "On": [2, 23, 39, 55, 64, 76, 87, 129, 132, 157, 167, 169, 212, 255, 256, 263], "One": [55, 57, 129, 131, 133, 186], "Or": 257, "SUCH": 251, "Such": [251, 258], "THE": 251, "THERE": 251, "TO": 251, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 205, 206, 209, 210, 211, 212, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "Then": [3, 4, 254], "There": [33, 94, 159, 212, 248, 250, 251], "These": [8, 251, 255], "To": [14, 249, 250, 251, 255, 256, 257, 260], "WILL": 251, "WITH": 251, "Will": [60, 232], "_": [3, 4, 8, 9, 14, 26, 32, 33, 36, 55, 98, 99, 100, 101, 102, 206, 208, 221, 253, 254, 255, 257, 258, 259, 260, 261, 262], "_2": [21, 33, 99, 101, 102], "__": 32, "__decorrelation_dist": 256, "__future__": [256, 258], "__gain": 256, "__init__": [254, 256, 258], "__modem": 149, "__num_delay_tap": 37, "__num_frequency_bin": 37, "__phase_shift": 256, "__phase_shift_vari": 256, "__precod": 149, "__receiv": 258, "__rng": 256, "__state": 37, "__state_format": 37, "__str__": 258, "_angleplot": 152, "_anglevisu": 8, "_block": 60, "_constellationplot": 120, "_create_group": 256, "_decod": [2, 3, 4, 254], "_description_": 141, "_drop": 255, "_encod": 4, "_eyevisu": 60, "_m": [36, 55], "_powerdelayvisu": 8, "_prepare_multidim_visu": 258, "_prepare_visu": 258, "_propag": [17, 30, 255, 256], "_properti": 55, "_rangeplot": 152, "_rangevelocityplot": 152, "_ray_trace_ctx": 55, "_realiz": [7, 15, 20, 21, 30, 32, 34, 256], "_receiv": [46, 108, 109, 110, 163], "_reciprocal_sampl": 256, "_sampl": [7, 30, 256], "_samplesvisu": 60, "_scenariovisu": 220, "_signal": 255, "_summary_": [32, 33], "_transmit": [49, 108, 110, 111, 163], "_update_multidim_visu": 258, "_update_plot": 81, "_update_visu": 258, "a869": [55, 263], "a885": [55, 263], "a_": 36, "a_1": 36, "a_2": 36, "aat": 36, "ab": 262, "abbrevi": [55, 98, 99, 100, 101, 102, 158, 159, 160, 161, 258], "abc": [2, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 39, 52, 55, 59, 60, 62, 66, 81, 82, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 118, 121, 122, 124, 125, 128, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 159, 163, 168, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 209, 210, 211, 219, 220, 222, 223, 224, 225, 226], "abdelaziz": [195, 263], "abil": 251, "abl": [250, 257], "abort": 55, "about": [55, 227, 251, 255], "abov": [9, 167, 179, 183, 190, 203, 204, 209, 212, 221, 226, 248, 251, 255], "absenc": 251, "absolut": [34, 37, 52, 230, 251, 261], "absorpt": [8, 11, 12, 13], "abstract": [2, 7, 8, 14, 15, 16, 17, 18, 20, 21, 30, 32, 33, 34, 36, 39, 46, 49, 51, 52, 55, 60, 61, 66, 81, 82, 83, 94, 103, 118, 121, 122, 124, 134, 137, 149, 150, 151, 155, 159, 166, 168, 179, 180, 183, 184, 190, 200, 203, 209, 221, 226, 248, 254, 256, 259, 260, 262], "accept": [55, 251], "acces": 55, "access": [2, 22, 29, 33, 34, 36, 37, 55, 73, 119, 120, 121, 123, 127, 129, 139, 149, 195, 212, 219, 220, 248, 249, 251, 255, 256, 257, 263, 264], "accompani": 251, "accomplish": 251, "accord": [19, 60, 195, 207, 208, 211, 251], "accordingli": 192, "account": [60, 119, 149], "accur": [15, 24, 167], "accuraci": 24, "accustom": [248, 249, 258, 260], "acess": 220, "achiev": [65, 66, 67, 69, 70, 92, 121, 169, 188, 233, 251, 252, 259, 263], "achiv": [179, 183, 185, 186, 187], "acknowledg": 251, "acoust": 263, "acquir": [3, 4, 251, 254], "across": [36, 251], "act": [14, 39, 54, 61, 248], "action": [22, 250, 251], "activ": [6, 167, 220, 237, 250, 251, 252], "active_onli": 220, "actor": [55, 167, 219, 241], "actorrunresult": 55, "actual": [55, 170, 171, 174, 190, 248, 251, 254, 256, 262], "ad": [14, 32, 36, 55, 57, 59, 66, 77, 80, 84, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 127, 130, 131, 132, 133, 149, 156, 169, 173, 190, 193, 194, 209, 210, 211, 220, 238, 248, 251, 252, 255, 256, 262], "adapt": [82, 195, 248, 251, 263], "adaptive_sampl": 82, "adc": [162, 167, 195, 196, 197, 198, 199, 200, 212, 238, 261], "adc_sampling_r": 162, "add": [14, 15, 18, 32, 33, 36, 55, 57, 59, 80, 84, 85, 108, 109, 110, 111, 112, 156, 167, 173, 190, 195, 209, 210, 211, 212, 220, 226, 248, 251, 255, 256, 258, 260, 261], "add_antenna": [36, 169, 171, 173], "add_devic": [14, 57, 59, 84, 85, 86, 220, 226], "add_dimens": [55, 80], "add_encod": [66, 108, 109, 110, 111, 259], "add_evalu": [9, 10, 11, 12, 13, 14, 55, 80, 98, 99, 100, 101, 102, 158, 160, 161, 162, 167, 248, 254, 255, 256, 258, 259, 260, 261, 262], "add_iq_imbal": 195, "add_link": 61, "add_nois": [190, 209, 210, 211], "add_plot": [80, 248], "add_point": 156, "add_port": [36, 169, 173], "add_propag": 33, "add_sampl": 55, "add_sample_hook": 15, "add_stat": 33, "add_target": 32, "add_to": [190, 194], "add_vari": 18, "added_sign": 60, "addit": [7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 32, 53, 55, 57, 59, 60, 82, 87, 93, 108, 109, 110, 111, 121, 127, 130, 131, 132, 133, 170, 190, 193, 194, 195, 212, 233, 243, 244, 250, 251, 260, 262], "addition": [121, 127, 129, 134, 139, 142, 143, 147, 196, 212, 250, 260, 261, 262], "additional_dimens": 55, "address": [55, 87, 219, 251, 256], "addtion": 211, "adequ": [55, 121, 127, 129, 130, 132, 142, 144], "adjac": 127, "adjust": [190, 196, 197, 198, 199, 200, 206, 232], "adjust_pow": 206, "adjust_sign": 200, "adler": [249, 263], "adnan": [195, 263], "adopt": 251, "adress": [87, 226], "advantag": 248, "advers": 251, "advis": 251, "ae": 263, "aerospac": 263, "aff3ct": [64, 68, 69, 71, 72, 74, 263], "affect": 251, "affero": 251, "affirm": 251, "aforement": 171, "after": [7, 8, 15, 16, 17, 19, 27, 28, 30, 31, 32, 33, 36, 37, 55, 59, 60, 64, 66, 67, 68, 69, 71, 72, 74, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 124, 128, 149, 150, 160, 167, 171, 195, 204, 205, 206, 207, 208, 219, 235, 236, 238, 239, 240, 241, 242, 243, 248, 251, 252, 254, 257, 259, 261], "afterward": [6, 109, 127, 130, 131, 132, 133, 151, 237, 250], "again": [53, 167], "against": [137, 140, 251], "agc": 198, "agc_typ": 198, "aggreg": 251, "agm": 263, "agpl": [249, 251], "agplv3": 251, "agre": 251, "agreement": 251, "aim": [248, 249], "air": [171, 195, 248], "aka": 257, "akb22": 263, "al": [22, 24, 36, 55, 124, 195, 211, 249], "ala98": 263, "alamouti": [116, 263], "alarm": [160, 249], "alayon": [22, 263], "alexand": [69, 263], "algorithm": [1, 2, 55, 67, 109, 111, 118, 121, 128, 145, 146, 149, 150, 155, 157, 212, 240, 248, 249, 254, 259, 263], "ali": [124, 263], "alia": [2, 8, 16, 17, 19, 33, 36, 53, 59, 62, 121, 127, 149, 167, 190], "alias": 60, "aliasing_filt": 60, "align": 60, "all": [0, 2, 3, 4, 8, 14, 15, 16, 17, 24, 33, 35, 36, 37, 39, 46, 49, 50, 52, 53, 54, 55, 59, 60, 66, 70, 75, 81, 84, 85, 95, 96, 104, 108, 109, 110, 111, 121, 134, 151, 167, 170, 179, 180, 183, 184, 190, 200, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 233, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263], "alleg": 251, "allow": [1, 26, 33, 57, 59, 60, 80, 82, 87, 121, 129, 132, 143, 167, 186, 237, 243, 248, 251, 259], "allow_pad": 66, "allow_trunc": 66, "allowd": 60, "almost": [252, 255, 261], "alon": [55, 212], "along": [136, 163, 169, 251, 255], "alpha": [8, 19, 20, 21, 30, 33, 72, 74, 96, 98, 99, 100, 101, 102, 208, 219, 243, 255], "alpha_": 208, "alpha_alpha_channel": 167, "alpha_beta_channel": 167, "alpha_beta_sampl": 255, "alpha_devic": [9, 10, 11, 12, 13, 14, 15, 17, 28, 29, 220], "alpha_propag": [14, 255], "alpha_receiv": 167, "alpha_recept": 14, "alpha_transmiss": 14, "alpha_transmitt": 167, "alreadi": [14, 36, 55, 57, 59, 80, 84, 85, 173, 190, 220, 248, 250, 251, 260, 262], "also": [3, 4, 14, 15, 33, 36, 60, 83, 113, 207, 212, 226, 236, 239, 248, 250, 251, 254, 255, 261], "alter": [250, 255, 260], "altern": [134, 142, 143, 147, 160, 190, 251, 257], "alwai": [20, 32, 37, 54, 83, 224, 254, 255, 262], "among": [70, 251], "amount": [2, 3, 4, 30, 36], "amplif": [83, 167, 195, 204, 205, 206, 207, 208, 212], "amplifc": 203, "amplifi": [167, 195, 203, 236, 238, 263], "amplitud": [8, 9, 10, 11, 12, 13, 30, 129, 167, 170, 174, 175, 176, 177, 195, 196, 197, 198, 204, 206, 208, 230, 238, 262], "amplitude_alpha": 208, "amplitude_beta": 208, "amplitude_imbal": [195, 238], "amplitude_path_loss": 230, "amplitudeshiftkei": 262, "an": [1, 2, 3, 4, 8, 9, 10, 12, 13, 14, 17, 19, 28, 29, 30, 31, 33, 34, 36, 37, 39, 42, 52, 53, 55, 57, 59, 60, 61, 62, 65, 66, 73, 76, 78, 80, 84, 86, 88, 89, 92, 96, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 127, 134, 137, 140, 142, 143, 147, 149, 151, 158, 159, 160, 161, 162, 163, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 183, 185, 186, 187, 190, 193, 195, 196, 197, 203, 210, 211, 212, 219, 220, 223, 225, 230, 231, 236, 238, 239, 240, 241, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "analog": [39, 76, 87, 108, 109, 110, 111, 162, 167, 169, 171, 179, 195, 196, 198, 212, 238, 248, 255, 261], "analog_digital_convers": 171, "analog_digital_convert": [197, 198, 199, 200, 201, 202], "analogdigitalconvert": [195, 196, 197], "analysi": [3, 4, 263], "analyz": 14, "ancient": [15, 263], "ancillari": 251, "andr": [22, 263], "andrea": [22, 263], "andr\u00e9": [249, 263], "angl": [1, 2, 3, 4, 8, 22, 24, 26, 28, 34, 36, 61, 152, 154, 176, 204, 254, 255], "angle_bin": 152, "angle_coupling_indic": 7, "angle_resolut": 36, "angular": 8, "ani": [5, 6, 8, 9, 14, 15, 19, 22, 23, 26, 28, 29, 51, 52, 53, 54, 55, 62, 79, 80, 81, 82, 127, 128, 129, 132, 144, 147, 156, 158, 167, 190, 204, 205, 207, 208, 210, 212, 237, 248, 249, 250, 251, 252, 255, 260], "anim": 212, "annot": [55, 98, 99, 100, 101, 102, 158, 160, 161, 233, 256, 258], "anntena": [36, 173, 178], "anntenna": 178, "anoth": [18, 36, 124, 128, 173, 179], "answer": 258, "ant": 167, "anteannaarrai": 171, "antenna": [1, 2, 3, 4, 8, 14, 15, 17, 19, 20, 21, 24, 26, 28, 30, 31, 33, 34, 35, 39, 41, 46, 49, 76, 79, 83, 87, 103, 108, 109, 110, 111, 114, 115, 116, 117, 119, 149, 163, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 196, 206, 212, 214, 217, 235, 241, 242, 248, 249, 254, 255, 256, 258, 260, 261, 263], "antenna_correl": [26, 27, 235], "antenna_correlation_vari": 27, "antenna_st": 171, "antennaarrai": [2, 3, 4, 36, 39, 171, 173, 178, 254], "antennaarraybas": 36, "antennaarrayst": [17, 25, 36, 171], "antennacorrel": [25, 26], "antennamod": [25, 36, 114, 115, 116, 117, 170, 174, 175, 176, 177, 254, 255], "antennaport": [36, 109, 172, 255], "antennas_upd": 36, "antennna": 169, "anti": [60, 251], "anttila": [195, 263], "anyon": [251, 252], "anyth": 251, "aoa": 8, "aod": 8, "apart": [241, 242], "api": [31, 54, 151, 233, 248, 249, 251, 255, 256, 257, 258, 261, 264], "append": [38, 60, 67, 82, 87, 120, 250], "append_sampl": 60, "append_stream": [60, 120], "append_symbol": 120, "appli": [8, 11, 12, 13, 17, 32, 46, 49, 51, 55, 56, 60, 62, 71, 79, 82, 91, 92, 93, 109, 111, 112, 113, 129, 136, 146, 162, 163, 170, 174, 175, 176, 177, 180, 195, 197, 198, 199, 200, 248, 250, 251, 253, 254, 263], "applic": [0, 2, 59, 86, 127, 128, 190, 249, 251, 254], "apprixm": 196, "approach": [24, 89, 92, 116, 263], "appropri": [14, 199, 221, 251], "approv": 251, "approxim": [18, 24, 230, 251, 256], "april": 263, "apt": [36, 173], "ar": [2, 5, 6, 8, 14, 15, 16, 17, 19, 24, 26, 29, 32, 33, 36, 37, 39, 52, 53, 55, 58, 59, 60, 66, 70, 76, 84, 93, 94, 95, 96, 108, 110, 111, 112, 116, 117, 120, 121, 127, 129, 132, 134, 139, 142, 143, 147, 149, 151, 159, 162, 163, 166, 167, 168, 169, 170, 171, 173, 179, 180, 183, 184, 190, 195, 196, 197, 203, 205, 209, 210, 212, 213, 216, 218, 219, 220, 221, 226, 227, 232, 233, 237, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "arang": [255, 262], "arbitrari": [36, 53, 55, 66, 76, 94, 98, 99, 100, 101, 102, 125, 128, 129, 158, 160, 161, 167, 255], "architectur": 31, "archiv": [250, 251], "area": [8, 9, 22, 116, 232, 263], "arg": [2, 6, 16, 31, 32, 33, 46, 49, 53, 55, 56, 57, 59, 77, 80, 82, 83, 84, 86, 108, 109, 110, 111, 127, 128, 129, 130, 131, 132, 133, 163, 186, 220, 254], "arg0": [64, 68, 69, 71, 72, 74], "arg1": [64, 68, 69, 71, 72, 74], "arg2": [64, 68, 69, 72, 74], "arg3": [68, 69, 72, 74], "arg4": [68, 72], "arg_0": [36, 61, 171], "arg_1": [61, 171], "arguabl": [258, 259], "argument": [2, 8, 9, 10, 11, 12, 13, 19, 21, 23, 32, 36, 55, 60, 76, 80, 87, 127, 152, 204, 205, 207, 208], "argument_tupl": 55, "ari09": 263, "aribtrai": 171, "aribtrarili": 167, "arikan": [69, 263], "aris": 251, "around": [36, 46, 49, 64, 68, 69, 71, 72, 74, 129, 167, 173, 197, 212, 258], "arrai": [1, 2, 3, 4, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 24, 25, 30, 33, 36, 39, 46, 49, 55, 60, 61, 62, 73, 76, 82, 83, 87, 96, 104, 106, 108, 109, 110, 111, 120, 130, 131, 132, 133, 137, 140, 152, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 181, 182, 187, 212, 230, 241, 242, 248, 254, 255, 257, 260], "arrang": 251, "arrari": [3, 4, 254], "array_comparison": 255, "array_respons": 254, "arriv": [2, 3, 4, 8, 28, 36, 83, 152, 212], "arsenia": 263, "art": [73, 124, 263], "articl": [64, 68, 69, 71, 72, 74, 251, 263], "artifact": [6, 52, 55, 88, 95, 96, 98, 99, 100, 101, 102, 158, 159, 160, 161, 219, 258], "artifact_scalar": 55, "artifacto": 158, "artifactplot": 88, "artifacttempl": [55, 98, 99, 100, 101, 102, 158], "arxiv": [71, 263], "ashkan": [211, 263], "asign": 15, "ask": [233, 262], "aspect": [0, 22, 263], "asplund": [22, 263], "assert": [233, 251, 255], "assess": 253, "asset": 251, "assigend": 248, "assign": [2, 46, 49, 51, 55, 70, 108, 109, 111, 112, 144, 147, 163, 166, 168, 169, 171, 192, 212, 222, 223, 224, 225, 226, 248, 253, 255, 262], "associ": [15, 93, 137, 138, 140, 145, 194, 251], "assum": [2, 3, 4, 8, 9, 10, 14, 17, 19, 20, 21, 26, 28, 30, 31, 32, 33, 34, 36, 46, 54, 55, 59, 69, 79, 82, 83, 84, 116, 121, 129, 130, 131, 133, 134, 142, 143, 144, 147, 158, 160, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 187, 190, 195, 212, 220, 227, 240, 241, 242, 248, 251, 252, 254, 255, 257, 259, 261], "assumpt": [14, 185, 187, 248, 251, 261], "ast": [14, 33], "astronomi": [15, 263], "astyp": [259, 262], "asymptot": [55, 263], "asynchron": 226, "atennna": 255, "attach": [2, 32, 36, 66, 81, 83, 119, 121, 122, 123, 124, 125, 127, 146, 149, 150, 173, 212, 251], "attempt": [55, 251], "attenu": [19, 32, 33, 34, 78, 158, 160, 161, 162, 254, 261], "attr": 256, "attribut": [15, 29, 55, 60, 62, 80, 103, 113, 114, 115, 116, 117, 163, 171, 212, 251, 255], "audio": [75, 237, 248, 250, 264], "audiodevic": [76, 77, 234, 253], "audiodeviceantenna": 76, "audioscenario": 77, "audiosystem": [77, 234], "aumag": [64, 68, 69, 71, 72, 74, 263], "author": 251, "autodoc": 233, "autom": 233, "automat": [36, 53, 55, 82, 167, 169, 171, 173, 197, 233, 238, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "automaticgaincontrol": [196, 198, 238, 261], "automatig": 201, "automot": 167, "avail": [6, 36, 39, 46, 49, 52, 55, 59, 94, 108, 109, 110, 111, 117, 123, 129, 134, 139, 142, 166, 167, 168, 169, 171, 173, 183, 190, 203, 212, 219, 221, 240, 241, 242, 248, 250, 251, 258, 262], "averag": [39, 98, 121, 127, 129, 139, 161, 258, 262], "avoid": [14, 37, 120], "awai": [251, 254, 255], "awgn": [129, 190, 212, 236, 239, 256, 260, 262], "awgnreal": [193, 194], "ax": [8, 28, 55, 62, 81, 98, 99, 100, 101, 102, 120, 156, 158, 160, 161, 197, 206, 258], "axesimag": 62, "axi": [55, 62, 136, 152, 169, 197, 206, 234, 239, 241, 242, 244, 255, 259, 260, 262], "azimuth": [2, 3, 4, 8, 34, 36, 61, 152, 154, 254], "azimuth_arrival_spread": 8, "azimuth_departure_spread": 8, "azimuth_of_arriv": 8, "azimuth_of_departur": 8, "b": [2, 3, 4, 7, 24, 29, 54, 64, 68, 69, 71, 72, 74, 92, 98, 99, 100, 101, 102, 152, 221, 230, 235, 248, 251, 263], "b_": [98, 99, 101, 102], "back": [73, 83, 200, 248, 250, 262], "backend": 232, "background": 192, "backoff": 198, "backscatt": [90, 240], "backwards_transform": 61, "bahl": [72, 263], "balanc": [8, 24, 26], "band": [15, 30, 39, 44, 47, 48, 60, 73, 76, 82, 83, 87, 88, 90, 104, 105, 106, 107, 109, 111, 112, 119, 121, 124, 127, 128, 129, 139, 146, 149, 150, 167, 171, 195, 212, 219, 221, 235, 241, 242, 243, 248, 260, 262, 263], "bandlimit": 15, "bandwidth": [3, 4, 17, 28, 33, 82, 121, 127, 129, 130, 131, 132, 133, 142, 144, 162, 212, 235, 236, 239, 243, 254, 261, 262], "bandwith": 167, "bar": [55, 232], "bar50": 263, "bare": [109, 111], "barebon": [108, 109, 110, 111], "barkausen": 251, "barreto": [249, 263], "barthou": [64, 68, 69, 71, 72, 74, 263], "bartlett": [4, 263], "base": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 233, 240, 248, 249, 250, 251, 255, 256, 260, 261, 262], "base_port": 36, "base_pos": [36, 171], "base_st": 240, "base_station_devic": 255, "base_station_oper": 240, "base_station_transmitt": 255, "baseband": [2, 111, 162, 213, 216, 254, 262], "baseband_recept": 262, "baseband_sampl": 262, "baseband_sign": [121, 127, 129, 139, 213, 216], "baseband_transmiss": 262, "basemodem": [66, 90, 91, 92, 103, 108, 109, 110, 111, 113, 119, 121, 149, 188, 189], "basi": [39, 167, 257, 258], "basic": [14, 15, 33, 35, 63, 70, 94, 167, 184, 230, 249, 251, 256, 259], "bastract": 159, "bat": 6, "bayer": [55, 263], "bch": 63, "bchcode": 64, "bcjr": 72, "bcjr74": 263, "beach": [24, 263], "beam": [2, 255], "beamfocu": 2, "beamfor": 163, "beamform": [0, 163, 248, 258, 264], "beamformed_sampl": 254, "beamformerbas": 2, "beamformingtransmitt": 255, "beaulieu": [24, 263], "becaus": [251, 256], "becom": [55, 124, 157, 249, 251, 258], "been": [7, 15, 37, 46, 49, 55, 114, 115, 212, 248, 250, 251, 252, 253, 254, 259], "befor": [37, 61, 104, 105, 106, 108, 110, 113, 114, 115, 117, 118, 119, 123, 157, 167, 195, 198, 199, 200, 206, 235, 236, 238, 239, 240, 241, 242, 243, 248, 250, 252, 254, 255, 257, 258], "begin": [30, 36, 129, 139, 142, 195, 219, 236, 254, 259, 264], "behalf": 251, "behav": 248, "behaviour": [8, 14, 15, 17, 19, 28, 30, 31, 33, 38, 52, 55, 66, 83, 197, 206, 212, 219, 226, 248, 256, 258], "being": [2, 3, 4, 6, 8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 54, 57, 65, 80, 129, 132, 151, 167, 183, 219, 226, 248, 251, 252, 254, 258], "belgium": [203, 207, 263], "believ": 251, "belong": [15, 18, 36, 55, 80], "below": 251, "benefit": 251, "bengtsson": [24, 263], "ber": [9, 10, 11, 12, 13, 14, 69, 98, 221, 248, 253, 256, 260], "ber_a": 221, "ber_b": 221, "berrou": [74, 263], "best": 251, "beta": [8, 19, 20, 21, 30, 33, 72, 74, 96, 98, 99, 100, 101, 102, 208, 219, 255], "beta_": 208, "beta_alpha_sampl": 255, "beta_beta_channel": 167, "beta_devic": [9, 10, 11, 12, 13, 14, 15, 17, 28, 29, 220], "beta_propag": [14, 255], "beta_receiv": 167, "beta_recept": 14, "beta_transmiss": 14, "beta_transmitt": 167, "better": 251, "betwe": 157, "betweeen": 110, "between": [8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 24, 30, 32, 33, 36, 37, 55, 65, 66, 73, 78, 83, 93, 95, 96, 97, 98, 99, 100, 101, 102, 110, 113, 114, 115, 116, 117, 119, 122, 124, 127, 128, 129, 131, 132, 133, 134, 136, 142, 143, 144, 147, 149, 161, 162, 167, 168, 171, 178, 182, 183, 184, 185, 187, 198, 199, 212, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 251, 255, 256, 257, 258, 260, 261, 263], "beyond": 251, "bgt93": 263, "bhvst14": 263, "bi": 251, "bidirect": 93, "big": 60, "bigger": [30, 66, 231], "bin": [6, 37, 60, 152, 158, 162, 166, 250], "binari": [5, 55, 64, 69, 160, 250, 261, 262, 263], "bind": [51, 75, 76, 77, 85, 237, 250], "bindung": 87, "biometrika": [4, 263], "bistat": [32, 167], "bit": [14, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 93, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 121, 127, 129, 139, 149, 188, 189, 190, 197, 221, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 253, 256, 259, 260, 261, 262], "bit_block_s": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 235, 236, 243, 259], "bit_energi": [121, 127, 129, 139, 262], "biterrorartifact": 98, "biterrorevalu": [9, 10, 11, 12, 13, 14, 95, 98, 221, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 256, 259, 260, 262], "bitord": 262, "bits_per_fram": [102, 121, 262], "bits_per_symbol": [121, 127], "bits_sourc": [94, 108, 110, 111], "bitssourc": [94, 108, 110, 111], "bjepc14": 263, "black": 233, "blazingli": 258, "bler": 99, "block": [30, 55, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 93, 95, 97, 101, 102, 112, 119, 120, 121, 123, 127, 129, 136, 139, 235, 236, 241, 243, 249, 259, 263], "block_siz": [65, 241, 242], "blockerrorartifact": 99, "blockerrorevalu": 99, "blockinterleav": [65, 108, 109, 110, 111], "blostein": [124, 263], "bmatrix": 30, "bodi": 251, "bomfin": 252, "bool": [8, 11, 12, 13, 15, 19, 20, 21, 32, 33, 34, 36, 39, 42, 46, 49, 52, 53, 55, 59, 60, 61, 66, 68, 72, 79, 80, 82, 83, 84, 85, 87, 96, 98, 99, 100, 101, 102, 121, 127, 129, 132, 139, 142, 144, 147, 157, 158, 161, 198, 199, 200, 206, 212, 213, 214, 216, 219, 220], "boolean": [18, 55, 61, 87, 121, 127, 136, 139, 158, 213], "borner": [36, 263], "bose": [64, 263], "both": [2, 8, 14, 19, 21, 24, 33, 51, 60, 73, 88, 89, 93, 112, 123, 136, 139, 150, 167, 171, 179, 183, 190, 193, 198, 233, 235, 240, 248, 249, 251, 256, 258, 260], "bound": [2, 8, 15, 16, 17, 19, 33, 36, 42, 46, 49, 53, 55, 57, 59, 62, 121, 149, 190, 263], "boundari": [7, 10, 15, 22, 29, 36, 38, 52, 53, 54, 59, 135, 136, 201, 202, 230], "box": [93, 248], "brc60": 263, "brief": 251, "broadcast": [39, 170, 203, 207, 248, 263], "brook": 263, "browser": 233, "buffer": 33, "bufferd": 72, "buffered_cod": 72, "build": [8, 233, 250], "built": [250, 258], "burkhardt": [31, 263], "busi": 251, "bw": 235, "bypass": [82, 83, 248], "b\u00f6rner": [31, 263], "c": [2, 3, 4, 7, 8, 14, 15, 17, 19, 20, 21, 24, 26, 28, 29, 30, 31, 33, 36, 54, 64, 68, 69, 71, 72, 74, 100, 145, 146, 152, 163, 203, 233, 250, 251, 252, 254, 255, 263], "c_0": [21, 33, 92, 163], "cabl": [78, 253], "cach": [15, 39, 42, 45, 46, 49, 59, 62, 82, 83, 84, 85, 151, 163, 212, 213, 216, 220, 255], "cache_recept": 46, "cache_transmiss": [39, 49], "calcul": [55, 198, 211, 230, 235, 236, 238, 239, 240, 241, 242, 243, 263], "calibr": [75, 82, 83], "call": [2, 3, 4, 7, 10, 11, 12, 13, 14, 15, 16, 18, 27, 29, 30, 31, 32, 33, 36, 39, 46, 49, 55, 59, 81, 82, 84, 85, 104, 105, 106, 107, 108, 109, 110, 111, 151, 163, 164, 165, 166, 167, 171, 206, 212, 219, 220, 248, 249, 251, 252, 253, 254, 255, 257, 258, 260], "callabl": [15, 55], "callback": [8, 15, 36, 55], "campa": 80, "campaign": [55, 59, 80, 98, 99, 100, 101, 102, 160, 167, 248, 255, 257, 261, 262], "can": [1, 2, 5, 6, 14, 22, 24, 32, 33, 36, 53, 55, 59, 60, 66, 70, 93, 99, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 124, 127, 130, 131, 132, 133, 136, 137, 140, 141, 143, 151, 163, 167, 169, 171, 183, 190, 192, 196, 197, 199, 212, 219, 222, 223, 224, 225, 226, 232, 233, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "cancel": [69, 195, 263], "candid": [255, 261], "cannot": [14, 167, 251], "canyon": [8, 12, 13, 255], "cap69": [254, 263], "capab": 167, "capabl": [212, 248, 256], "capac": [69, 263], "capaign": 259, "capon": [1, 4, 254, 263], "caponbeamform": [3, 254], "captur": 39, "card": [75, 77, 253], "care": 78, "carlo": [55, 167, 212, 219, 220, 235, 236, 238, 239, 240, 241, 242, 243, 248, 249, 255, 256, 258, 260, 261, 263], "carri": [46, 49, 51, 56, 91, 92, 109, 111, 121, 134, 142, 143, 147, 163, 251, 260], "carrier": [2, 3, 4, 17, 19, 28, 33, 39, 41, 60, 76, 82, 83, 87, 112, 114, 116, 117, 124, 130, 131, 132, 133, 139, 143, 146, 152, 167, 211, 212, 214, 217, 221, 230, 235, 237, 238, 239, 240, 241, 248, 253, 254, 257, 261, 263], "carrier_frequ": [2, 3, 4, 9, 10, 11, 12, 13, 17, 28, 33, 34, 36, 39, 41, 60, 76, 83, 87, 108, 109, 110, 111, 134, 142, 143, 147, 151, 152, 158, 160, 161, 162, 167, 171, 212, 214, 217, 221, 222, 223, 224, 225, 226, 230, 235, 239, 240, 241, 242, 243, 244, 248, 254, 255, 257, 259, 261], "carter": 263, "cartesian": [2, 33, 36, 61, 154, 255], "cartesian_array_respons": 36, "cartesian_phase_respons": 36, "case": [2, 3, 8, 32, 52, 55, 82, 98, 99, 100, 101, 102, 124, 158, 169, 171, 179, 183, 204, 220, 248, 251, 255, 256, 257, 258], "cassagn": [64, 68, 69, 71, 72, 74, 263], "cat": [24, 263], "catch": 55, "catch_except": 55, "caught": 55, "caus": [251, 255, 257], "cb06": 263, "cb07": 263, "cd": 250, "cdl": [8, 9, 10, 11, 12, 13], "cdlrealiz": 7, "cdlrt": 8, "cdltype": 7, "cdot": [8, 65, 66, 70, 204, 207, 208], "ceas": 251, "ceil": 9, "cell": [31, 255, 257, 263], "center": [36, 60, 83, 212, 234, 235, 241, 242, 243, 244], "central": [2, 3, 4, 33, 39, 55, 76, 87, 121, 152, 167, 212], "cerdeira": [31, 263], "certain": [2, 36, 66, 71, 188, 251, 263], "cessat": 251, "cfar": 263, "cfg": 53, "ch": [203, 207, 263], "chafii": 263, "chain": [33, 61, 63, 66, 82, 83, 108, 110, 149, 151, 167, 169, 171, 172, 179, 182, 183, 184, 185, 187, 196, 206, 212, 213, 216, 236, 238, 250, 254, 255, 260, 261], "chanc": 233, "chanel": [8, 17, 19, 28, 30, 31, 33], "chang": [30, 36, 37, 59, 61, 116, 162, 167, 168, 171, 251, 255], "chann": 32, "channel": [0, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 46, 65, 66, 67, 69, 70, 73, 76, 78, 82, 83, 84, 93, 108, 109, 110, 114, 115, 116, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 134, 140, 142, 143, 147, 148, 149, 151, 158, 159, 160, 161, 162, 167, 192, 212, 218, 219, 220, 221, 234, 235, 236, 239, 240, 241, 242, 243, 244, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264], "channel_equ": [9, 10, 11, 12, 13, 14, 108, 109, 110, 121, 130, 131, 132, 133, 134, 142, 143, 147, 221, 234, 236, 240, 241, 242, 244, 248, 253, 256, 257], "channel_estim": [9, 10, 11, 12, 13, 14, 108, 109, 110, 114, 115, 116, 121, 130, 131, 132, 133, 134, 142, 143, 147, 221, 234, 236, 240, 241, 242, 244, 248, 253, 256, 257], "channel_propag": 255, "channel_r": [14, 46, 218, 220, 255], "channelequ": [121, 122, 125, 256], "channelestim": [121, 123], "channelpropag": 17, "channelr": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 27, 30, 31, 32, 33, 34, 37, 218, 220, 256], "channelrealizationbas": 46, "channelsampl": [8, 14, 15, 16, 17, 19, 28, 30, 31, 33, 255, 256], "channelsamplehook": [7, 8, 10, 11, 12, 13, 15, 16, 27, 30, 31, 32, 33, 256], "channelst": [8, 17, 19, 30, 31, 33], "channelstateformat": [37, 256], "channelstateinform": [8, 17, 19, 28, 30, 31, 33, 37, 256, 260], "chapter": 237, "characerist": 255, "character": [36, 251], "characteris": 2, "characterist": [3, 4, 8, 33, 36, 129, 151, 159, 169, 170, 171, 174, 186, 187, 197, 203, 204, 205, 206, 207, 208, 209, 240, 254, 264], "characteristc": [160, 261], "charactersit": [36, 261], "charaterist": 197, "charcterist": 255, "charg": 251, "chaudhuri": [64, 263], "check": [55, 59, 63, 236, 263], "check_block_s": 67, "checksum": 67, "chengshan": [24, 263], "chi": 230, "chirp": [93, 121, 126, 127, 130, 142, 162, 237, 239, 243, 261], "chirp_bandwidth": [127, 235, 243], "chirp_dur": [127, 130, 162, 235, 243, 261], "chirp_slop": 130, "chirpfsk": [127, 235, 243], "chirpfskcorrelationsynchron": 127, "chirpfsksynchron": 127, "chirpfskwaveform": 127, "chirps_in_fram": 127, "chleonardon": 263, "choic": [233, 250, 251], "choos": [248, 251], "chorti": 263, "chosen": 262, "christian": [55, 92, 263], "chronologi": [15, 263], "circl": 262, "circuit": [211, 263], "circular": 193, "circumst": 251, "circumvent": 251, "cite": 249, "civil": 251, "claim": 251, "class": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 248, 251, 254, 256, 258, 259, 260, 262, 263], "classic": 255, "classif": [124, 263], "classmethod": [9, 10, 11, 12, 13, 22, 42, 43, 53, 54, 55, 59, 60, 61, 140, 149, 154, 160, 186, 214, 216, 217, 219], "claus": 251, "clean": 53, "clear": [39, 46, 49, 82, 251], "clear_cach": [39, 82], "clearli": [253, 257], "cli": 250, "click": 257, "clip": 203, "clippingpoweramplifi": 204, "clock": [124, 127, 128], "clone": 250, "close": [251, 257], "closest": 14, "cloud": [151, 153, 155, 157, 158, 163, 164, 167], "cluster": [7, 9, 10, 11, 12, 13, 14, 167, 249], "cluster_delai": 8, "cluster_delay_lin": [8, 9, 10, 11, 12, 13], "cluster_delay_spread": 8, "cluster_pow": 8, "clusterdelaylinebas": [8, 9, 10, 11, 12, 13], "clusterdelayliner": [8, 9, 10, 11, 12, 13], "clusterdelaylinerealizationparamet": [8, 9, 10, 11, 12, 13], "clusterdelaylinesampl": [7, 8, 10, 11, 12, 13], "cluter": 9, "clutter": [9, 33, 34, 263], "clutter_dens": 9, "clutter_height": 9, "clutter_s": 9, "cmake": 250, "co": [24, 36, 255], "cock": [72, 263], "code": [22, 63, 65, 67, 68, 73, 93, 103, 109, 111, 112, 118, 123, 130, 131, 132, 133, 140, 148, 149, 150, 162, 202, 203, 219, 237, 241, 248, 250, 251, 257, 260, 262, 263, 264], "code_block_s": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 259], "coeffici": 3, "cofid": 55, "coher": [120, 260], "col": 232, "colab": 264, "collect": [14, 55, 62, 96, 104, 106, 158, 159, 161, 167, 171, 212, 220, 229, 248, 251, 255, 258, 261], "color": 52, "com": [64, 68, 69, 71, 72, 74, 232, 263], "combin": [29, 41, 55, 66, 91, 108, 110, 112, 115, 162, 163, 167, 169, 248, 250, 251, 255, 256, 261], "come": 251, "comm": [203, 207, 263], "command": [5, 233, 237, 248, 250, 251, 257, 261], "commerci": 251, "commit": 251, "common": [55, 88, 93, 95, 96, 169, 183, 193, 251, 256, 260], "commonli": 170, "commuic": [93, 221, 240], "commun": [0, 9, 10, 11, 12, 13, 14, 22, 24, 63, 65, 66, 74, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 143, 144, 145, 146, 147, 149, 167, 170, 183, 188, 189, 190, 193, 203, 208, 211, 212, 219, 220, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 251, 253, 255, 256, 257, 259, 260, 263, 264], "communc": 262, "communication_artifact": 95, "communication_evalu": 95, "communicationevalu": [96, 98, 99, 100, 101, 102], "communicationnoiselevel": [188, 189], "communicationrecept": [90, 104, 105, 109], "communicationreceptionfram": [90, 104, 105], "communicationtransmiss": [90, 106, 111], "communicationtransmissionfram": [90, 106, 107], "communicationwaveform": [91, 109, 111, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 139, 142, 144, 146, 147, 188, 189, 262], "communicaton": [121, 127, 129, 139], "communict": [234, 241, 244], "compact": 249, "compar": [93, 95, 97, 171, 192, 248, 254, 255, 257], "comparison": [243, 263], "compat": 54, "compens": [78, 129, 221, 232, 236], "compil": 251, "complementari": 262, "complet": [30, 55, 182, 220, 226, 249, 252, 255], "complex": [15, 24, 33, 36, 60, 111, 118, 120, 121, 124, 127, 128, 129, 139, 146, 149, 167, 170, 174, 175, 176, 177, 190, 193, 198, 203, 204, 212, 248, 249, 253, 254, 256, 258, 260, 262], "complex128": 121, "compli": 251, "complianc": [233, 251], "compliant": [66, 233], "compon": [8, 15, 17, 19, 22, 24, 26, 28, 30, 31, 33, 36, 108, 109, 110, 111, 124, 144, 147, 184, 185, 211, 234, 241, 242, 244, 251], "compos": [8, 24, 167], "composit": 163, "comprehens": 8, "compress": [2, 258], "compris": 93, "comput": [8, 17, 19, 24, 28, 30, 31, 33, 36, 37, 55, 60, 61, 66, 103, 160, 163, 167, 184, 185, 227, 230, 249, 251, 254, 258, 261, 262, 263], "computation": [37, 55, 120], "compute_num_offset_sampl": 227, "con": 255, "concaten": [37, 60, 120, 248], "concept": [66, 92, 102, 243, 249, 255, 256, 258, 263], "concern": 251, "concret": 14, "conda": [6, 250, 252], "condit": [8, 251], "conduct": [248, 255], "conf": [203, 207, 263], "confer": [24, 31, 74, 92, 263], "confid": [55, 235, 236, 238, 239, 240, 241, 242, 243], "confidence_level": 55, "confidence_statu": 55, "config": 53, "config_test": 233, "configur": [2, 6, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 39, 46, 49, 52, 53, 55, 59, 65, 66, 76, 79, 80, 82, 83, 84, 85, 87, 88, 93, 94, 95, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 158, 160, 161, 162, 163, 167, 169, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 203, 209, 212, 219, 220, 221, 222, 223, 224, 225, 226, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "configurablepilotwaveform": [121, 129, 130, 131, 132, 133, 139, 142, 144, 147], "configure_devic": 79, "configure_point": 55, "confin": 179, "confirm": 255, "conid": 55, "conist": 14, "conj": 254, "connect": [36, 78, 169, 171, 172, 173, 251, 255], "consecut": [57, 162], "consequ": [251, 258], "consequenti": 251, "consid": [2, 3, 4, 8, 14, 15, 17, 18, 19, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 46, 49, 51, 55, 56, 58, 61, 66, 69, 79, 83, 90, 91, 92, 95, 98, 99, 100, 101, 102, 108, 109, 110, 111, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 139, 142, 143, 147, 149, 159, 160, 163, 167, 180, 184, 192, 196, 198, 209, 210, 212, 213, 220, 221, 226, 235, 236, 238, 241, 242, 248, 251, 255, 256, 257, 260, 261], "considered_object": 55, "consisd": 31, "consist": [0, 7, 9, 10, 11, 12, 13, 14, 24, 59, 63, 66, 75, 134, 142, 143, 147, 151, 162, 190, 212, 248, 251, 255, 256, 257, 258, 260, 261], "consistent_r": [7, 20, 32, 34, 256], "consistent_sampl": 256, "consistentboolean": 18, "consistentgaussian": 18, "consistentgener": [18, 256], "consistentr": [7, 8, 9, 10, 11, 12, 13, 18, 256], "consistentsampl": 18, "consistentuniform": [7, 18, 256], "consistentvari": 18, "consol": [52, 55, 98, 99, 100, 101, 102, 158, 160, 161, 167, 219], "console_mod": [52, 55, 219, 254, 255, 256, 258, 259, 260, 261, 262], "consolemod": [38, 52, 55, 219, 254, 255, 256, 258, 259, 260, 261, 262], "consolid": [33, 248], "conspicu": 251, "constant": [20, 26, 168, 206, 223, 225, 254, 255], "constel": [88, 100, 120, 129, 139, 248, 253, 257, 262], "constellationevm": 100, "constitut": 251, "constraint": 167, "constru": 251, "construct": [69, 212, 263], "constructor": [32, 140, 149, 219], "constructorerror": 53, "consum": 251, "contact": [249, 251], "contain": [2, 3, 4, 5, 6, 8, 36, 37, 42, 45, 50, 53, 55, 56, 59, 60, 62, 66, 73, 83, 93, 104, 121, 124, 127, 129, 130, 131, 132, 133, 139, 140, 156, 158, 160, 163, 167, 169, 212, 213, 218, 220, 226, 227, 229, 250, 251, 257, 258, 263], "content": [54, 55, 160, 161, 251, 253], "context": [9, 10, 11, 12, 13, 20, 21, 22, 23, 26, 29, 32, 34, 52, 53, 98, 99, 100, 101, 102, 112, 151, 158, 160, 161, 162, 169, 170, 212, 248, 251, 262], "continu": [4, 14, 15, 130, 162, 212, 251, 263], "contractu": 251, "contradict": 251, "contrast": 251, "contribut": [233, 249], "contributor": [233, 251], "control": [14, 55, 64, 73, 80, 82, 87, 167, 169, 196, 197, 222, 223, 224, 225, 226, 238, 240, 251, 252, 258, 261, 262, 263], "convei": 251, "conveni": [6, 24, 36, 56, 57, 59, 103, 110, 163, 167, 173, 219, 237, 248, 251, 262], "convent": [1, 2, 254, 255, 263], "conventionalbeamform": [4, 108, 109, 110, 111, 254, 255], "convers": [37, 53, 54, 55, 87, 108, 109, 110, 111, 160, 161, 162, 167, 171, 179, 195, 198, 230, 238, 248, 261], "conversion_typ": 230, "convert": [37, 39, 54, 55, 60, 61, 76, 87, 120, 155, 160, 195, 196, 212, 230, 253, 255, 262], "convey": 251, "convolut": [14, 72, 129, 263], "cooper": 251, "coordiant": [34, 36, 154], "coordin": [2, 3, 4, 14, 33, 34, 35, 36, 39, 55, 83, 154, 212, 254, 255], "coordinatefocu": 2, "copi": [2, 36, 55, 60, 120, 167, 237, 250, 251, 257, 259, 260], "copyleft": 251, "copyright": 251, "core": [0, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 55, 57, 59, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 161, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262], "correct": [0, 64, 67, 68, 69, 71, 72, 74, 79, 93, 95, 97, 103, 105, 108, 109, 110, 111, 122, 251, 257, 259, 263], "corrected_data": 259, "correction_pow": [64, 71], "correl": [3, 14, 24, 26, 127, 142, 181, 235, 254, 263], "correlatiom": 91, "correlation_dist": 26, "correlationsynchron": [127, 128, 134, 142, 143, 147], "corresp": [72, 263], "correspond": [215, 235, 251], "corret": [64, 248], "cosin": [93, 121, 126, 129, 170, 221, 248, 253], "cost": [251, 263], "cost256": 22, "cost259": [22, 24, 263], "cost259typ": 22, "costli": 37, "could": [248, 251, 258], "count": [36, 40, 41, 45], "count_antenna": 36, "count_receive_antenna": 36, "count_transmit_antenna": 36, "counterclaim": 251, "counterpart": 260, "countri": 251, "coupl": [7, 83, 167, 171, 183, 212], "coupling_model": 171, "cours": [179, 183, 190, 203, 209, 221, 226, 248, 255, 262], "court": 251, "courtesi": 252, "covari": [3, 25, 79, 254], "coven": 251, "coventionalbeamform": 254, "cover": [233, 251], "coverag": [233, 251], "cox": [143, 234, 244, 263], "cpu": [55, 167, 219, 248, 258], "cpus_per_actor": 55, "cr": 30, "crash": 257, "crc": 67, "creat": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 18, 32, 36, 52, 55, 57, 59, 60, 62, 77, 80, 86, 95, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 120, 149, 156, 158, 160, 161, 162, 167, 168, 169, 173, 179, 183, 185, 186, 187, 190, 196, 197, 203, 209, 212, 219, 221, 222, 223, 224, 225, 226, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "create_figur": [8, 55, 62, 156], "creation": [57, 59, 250], "criteria": [55, 160, 161, 263], "criterion": 251, "cross": [7, 26, 32, 33, 34, 55, 142, 151, 240, 251, 261], "cross_sect": [32, 33], "crt": [15, 16], "cst": [15, 16, 17, 27, 30, 32, 33], "cube": [90, 151, 153, 154, 155, 157, 160, 163, 164], "cube_h0": 160, "cube_h1": 160, "cubic": 211, "cummul": 161, "cure": 251, "current": [2, 5, 6, 8, 19, 25, 33, 36, 37, 46, 49, 51, 52, 55, 59, 61, 66, 89, 93, 94, 95, 102, 108, 109, 111, 120, 121, 124, 129, 144, 147, 149, 151, 159, 166, 167, 168, 170, 171, 179, 190, 197, 203, 209, 212, 219, 221, 226, 233, 237, 248, 249, 257, 258], "curtesi": 232, "curv": [9, 10, 11, 12, 13, 160, 207], "custom": [24, 56, 108, 109, 110, 111, 112, 127, 130, 131, 132, 133, 143, 167, 171, 179, 196, 203, 227, 248, 251, 255, 258, 260], "custom_arrai": 171, "customantennaarrai": [36, 173], "customantennacorrel": 25, "customari": 251, "customarili": 251, "customcorrel": 25, "customiz": [25, 93, 203, 205], "custompilotsymbolsequ": [130, 131, 132, 133], "custompoweramplifi": 205, "cut": [66, 206], "cwt": [90, 92, 103, 109, 111, 121, 122, 123, 124, 125], "cyclic": [63, 134, 136, 137, 140, 142, 143, 147, 239, 241, 242], "cyclicredundancycheck": 67, "d": [7, 14, 24, 29, 31, 36, 64, 68, 69, 71, 72, 74, 124, 145, 146, 248, 251, 254, 255, 263], "d_": [33, 92], "dac": [87, 167, 196], "dai": 251, "damag": 251, "dan": [211, 263], "dani": [195, 263], "data": [37, 55, 57, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 102, 103, 105, 107, 111, 113, 114, 115, 116, 117, 118, 119, 121, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 149, 152, 160, 164, 197, 234, 235, 239, 241, 242, 243, 244, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262], "data_bit": [66, 121, 127, 129, 139, 262], "data_block_s": [64, 69, 71], "data_r": 121, "data_symbol": [121, 127, 129, 137, 139, 140, 262], "data_typ": 60, "dataclass": [55, 168, 212], "dataset": [59, 248, 261, 264], "date": 251, "db": [9, 10, 11, 12, 13, 14, 15, 53, 54, 87, 98, 99, 100, 101, 102, 161, 167, 190, 211, 212, 230, 235, 236, 238, 239, 240, 241, 242, 243, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262], "db2lin": 230, "db_val": 230, "dbconversiontyp": [54, 230], "dc": [234, 241, 242, 244], "dc_suppress": [144, 147, 234, 239, 241, 242, 244], "dcrt": 19, "dddd": 241, "ddddd": 241, "ddddffuddddffu": 241, "ddot": 30, "de": [53, 140, 203, 207, 263], "deactiv": [53, 260], "debug": [52, 248, 258], "decai": [23, 211], "decemb": 251, "decibel": 54, "decid": [251, 259], "decis": [65, 158], "declar": [32, 248], "declin": 251, "decod": [2, 3, 4, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 100, 103, 104, 105, 109, 112, 113, 114, 116, 117, 118, 119, 149, 150, 254, 259, 260, 263], "decode_stream": [2, 150], "decoded_bit": 105, "decoded_sign": 105, "decoded_symbol": [105, 260], "decorrel": [7, 20, 32, 34], "decorrelation_dist": [7, 18, 20, 32, 34, 256], "decreas": [116, 254], "decsript": 171, "dedic": [26, 32, 55, 57, 110, 134, 142, 143, 144, 147, 162, 169, 235, 243, 248, 255, 257], "deduc": 257, "deem": 251, "deep": [36, 120], "deepcopi": 221, "def": [254, 256, 258, 259, 260, 262], "default": [2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 30, 32, 33, 34, 36, 37, 39, 49, 52, 54, 55, 57, 58, 59, 60, 61, 66, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 96, 98, 99, 100, 101, 102, 108, 110, 111, 120, 121, 127, 128, 129, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 147, 149, 152, 157, 160, 161, 162, 167, 170, 171, 172, 174, 175, 176, 177, 179, 181, 182, 185, 186, 190, 197, 198, 199, 200, 203, 206, 209, 210, 212, 219, 220, 221, 226, 228, 230, 232, 256, 262], "default_channel": [84, 220], "default_results_dir": [52, 248, 261], "default_rf_chain": 171, "default_rng": 262, "defect": 251, "defend": 251, "defens": 251, "defici": 3, "defin": [3, 6, 8, 9, 22, 29, 36, 55, 65, 66, 75, 92, 98, 99, 100, 101, 102, 121, 127, 129, 139, 169, 188, 189, 192, 205, 211, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 251, 254, 255, 257, 258, 260, 261, 262], "definit": [5, 35, 143, 186, 251, 255], "defint": 25, "delai": [4, 7, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24, 26, 28, 29, 30, 31, 33, 37, 60, 75, 79, 82, 83, 123, 124, 212, 213, 214, 216, 217, 221, 231, 235, 241, 242, 243, 248, 255, 256, 263], "delay_calibr": 82, "delay_correct": 79, "delay_norm": [8, 11, 12, 13], "delay_offset": 8, "delay_profil": [27, 28], "delay_resampling_matrix": 231, "delay_vari": 20, "delaycalibr": [78, 79], "delaycalibrationbas": [78, 82], "delaychannel": 19, "delaychannelbas": [19, 20, 21], "delaychannelr": [19, 20, 21], "delaychannelsampl": 19, "delaynorm": [8, 11, 12, 13], "deleg": [108, 109, 110, 111], "delet": [55, 251], "deliv": [8, 9, 10, 11, 12, 13, 22, 29, 73, 263], "delta": [19, 20, 21, 24, 30, 33, 55, 92, 162, 163, 166, 197, 211], "delta_f": 235, "demand": [55, 241, 259], "demap": 113, "demodul": [65, 109, 113, 114, 115, 121, 123, 127, 129, 139, 253, 260, 262], "demonstr": [83, 84, 168, 243, 248, 256, 257, 258, 259, 260], "deni": 251, "denomin": 251, "denot": [8, 9, 14, 17, 19, 26, 28, 30, 31, 32, 33, 36, 51, 90, 91, 96, 98, 99, 100, 101, 102, 120, 152, 162, 163, 166, 207, 211, 222], "dens": [37, 60, 120], "dense_st": [37, 120], "densesign": 60, "densiti": [68, 188, 189, 211, 263], "departur": [4, 8], "depend": [0, 2, 14, 15, 19, 21, 30, 33, 34, 36, 37, 55, 58, 61, 103, 111, 195, 198, 203, 208, 225, 233, 244, 248, 250, 263], "depict": [197, 206, 248], "deploi": [219, 233, 249], "deploy": [22, 249, 263], "depriv": 251, "depth": [237, 249, 255], "deriv": [2, 55, 90, 251], "describ": [0, 2, 6, 14, 65, 70, 73, 121, 168, 169, 197, 208, 212, 248, 250, 255, 256, 262], "descript": [6, 8, 35, 55, 63, 103, 108, 110, 121, 127, 130, 131, 132, 133, 137, 144, 145, 146, 151, 163, 166, 167, 168, 169, 170, 171, 179, 183, 190, 203, 209, 212, 219, 220, 221, 226, 228, 248, 250], "descriptor": 55, "deseri": [53, 257], "design": [19, 147, 167, 188, 189, 251], "desir": [1, 159, 160, 161, 169, 179, 183, 192, 197, 221, 226, 230], "desktop": 234, "detach": 61, "detail": [9, 10, 11, 12, 13, 55, 73, 77, 86, 108, 109, 110, 111, 113, 144, 145, 146, 147, 151, 167, 207, 208, 244, 248, 251, 257], "detect": [53, 55, 67, 91, 92, 124, 127, 128, 146, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 240, 248, 249, 250, 253, 254, 258], "detection_prob": 160, "detectionprobabilityevalu": 158, "detectionprobartifact": 158, "detectionprobevalu": 158, "detector": [151, 158, 159, 160, 161, 163, 240, 261], "deterior": 195, "determin": [82, 87, 162, 188, 189, 197, 198, 251], "determinist": [14, 15, 30, 94], "determinst": 31, "develop": [167, 250, 251, 252, 260, 262], "devic": [2, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 24, 28, 29, 30, 31, 32, 33, 35, 36, 44, 46, 47, 48, 49, 50, 51, 56, 57, 59, 75, 77, 78, 79, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 124, 134, 142, 143, 147, 151, 158, 159, 160, 161, 162, 163, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 203, 206, 209, 210, 213, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "device_a_rx": [221, 222, 223, 224, 225, 226], "device_a_tx": [221, 222, 223, 224, 225, 226], "device_alpha": [98, 99, 100, 101, 102, 167, 168, 235, 236, 238, 239, 241, 242, 243], "device_alpha_idx": 255, "device_b_rx": [221, 222, 223, 224, 225, 226], "device_b_tx": [221, 222, 223, 224, 225, 226], "device_beta": [98, 99, 100, 101, 102, 167, 168, 239], "device_beta_idx": 255, "device_channel": 220, "device_index": [57, 59, 257], "device_input": [42, 216], "device_output": 214, "device_recept": [50, 218, 248, 257], "device_regist": 59, "device_sign": 212, "device_st": 220, "device_transmiss": [50, 218, 248, 255, 257], "devicefocu": [2, 255], "deviceinput": [39, 40, 42, 45, 59, 82, 83, 84, 85, 212, 213, 216, 220], "deviceoutput": [15, 17, 39, 41, 43, 59, 214, 217, 220], "devicerecept": [39, 42, 50, 59, 82, 85, 216], "devicereceptionplot": [88, 248], "devicest": [17, 28, 33, 212], "devicetransmiss": [39, 43, 50, 59, 82, 217, 218], "devicetransmissionplot": [88, 248], "devicetyp": [57, 59], "devis": 143, "dft": [108, 109, 110, 111, 113, 234, 241, 242, 244], "dh": 9, "diagon": [3, 30], "diagram": [14, 60, 88, 100], "dict": 60, "dictionari": [1, 254], "differ": [0, 19, 29, 36, 55, 60, 98, 99, 100, 101, 102, 127, 159, 160, 162, 171, 179, 183, 212, 226, 235, 248, 251, 253, 255], "differenti": [14, 63], "diffus": 24, "digial": 196, "digit": [39, 76, 82, 87, 108, 109, 110, 111, 142, 143, 162, 167, 169, 171, 179, 188, 189, 195, 196, 198, 203, 207, 212, 219, 238, 248, 255, 261, 263], "dimens": [2, 3, 4, 14, 18, 30, 36, 37, 55, 72, 73, 74, 79, 80, 83, 96, 120, 136, 152, 158, 159, 160, 161, 162, 166, 178, 186, 188, 189, 191, 192, 212, 235, 236, 238, 239, 240, 241, 242, 243, 255, 260], "dimension": [2, 3, 4, 15, 17, 25, 36, 55, 61, 83, 96, 98, 99, 100, 101, 102, 115, 117, 119, 120, 137, 140, 149, 152, 154, 161, 186, 187, 212], "dipol": [36, 170], "dipoleantenna": 36, "direct": [1, 2, 3, 4, 8, 14, 22, 26, 32, 36, 55, 61, 82, 83, 144, 147, 163, 169, 232, 251, 254, 257, 263], "directli": [14, 24, 26, 82, 83, 112, 123, 134, 233, 248, 249, 251, 264], "directori": [6, 52, 53, 219, 233, 248, 250, 252], "diretli": 253, "disabl": [32, 33, 53, 55, 59, 61, 66, 80, 198, 199, 200, 219, 220, 256], "disciplin": 252, "disclaim": 251, "discov": 233, "discret": [3, 4, 8, 14, 15, 17, 19, 28, 30, 31, 33, 37, 60, 103, 112, 121, 127, 129, 139, 152, 162, 166, 223, 227, 254], "discriminatori": 251, "discuss": 14, "displai": [6, 55, 188, 189, 191, 192, 251, 264], "distanc": [7, 14, 18, 20, 21, 26, 32, 33, 34, 60, 151, 154, 161, 211, 230, 240, 261], "distinct": 17, "distinguish": [8, 251], "distorionless": 206, "distort": [30, 37, 111, 170, 171, 174, 195, 203, 204, 205, 206, 207, 208], "distortionless": [3, 84, 220, 254], "distribut": [7, 14, 15, 18, 19, 20, 22, 24, 26, 29, 55, 65, 115, 116, 117, 123, 167, 169, 186, 193, 194, 219, 222, 230, 249, 250, 251, 258, 262], "diverg": 55, "divers": [116, 263], "divid": [65, 93, 95, 97, 130], "divis": [116, 142, 144], "dl": [9, 241], "dlr": [203, 207, 263], "do": [14, 19, 24, 55, 65, 67, 73, 120, 221, 234, 241, 244, 250, 251, 257, 258], "docssourc": 233, "document": [8, 55, 151, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "doe": [2, 8, 34, 39, 46, 53, 55, 57, 59, 61, 65, 66, 67, 70, 73, 82, 83, 84, 85, 102, 168, 171, 180, 184, 185, 210, 220, 248, 251, 252, 255], "doi": [3, 15, 22, 24, 31, 36, 55, 64, 68, 69, 71, 72, 73, 74, 92, 114, 116, 124, 145, 146, 195, 203, 208, 211, 249, 263], "domain": [8, 14, 17, 19, 26, 28, 30, 31, 33, 37, 60, 79, 88, 120, 121, 124, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 186, 195, 209, 211, 221, 234, 239, 241, 242, 244, 253, 255, 260, 262], "don": [46, 49, 60, 120, 152, 260], "done": [53, 65], "doppler": [22, 24, 26, 28, 29, 33, 92, 152, 162, 163, 166], "doppler_bin": 152, "doppler_frequ": [22, 26, 29, 134, 142, 143, 147], "dot": [14, 15, 17, 30, 36, 65, 70], "dotsc": [14, 15, 26, 30], "doubl": 60, "doubt": 251, "down": [22, 33, 73, 140, 149, 219, 249, 253], "downl": 240, "downlink": 240, "download": [85, 237, 248, 250, 264], "downsampl": 60, "downstream": 251, "dpsk": [203, 207, 263], "dpu": 102, "dr": 251, "draw": 15, "drawn": [8, 20, 55], "drive": [82, 167, 237, 261], "driven": [203, 204, 249], "driver": [237, 250], "drop": [14, 35, 52, 57, 59, 80, 83, 123, 151, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 234, 241, 244, 248, 255, 257, 258, 261], "drop_dur": [59, 219], "drop_interv": 219, "drt": 42, "drx": 102, "dsp": [108, 109, 110, 111], "dtype": [212, 254, 256, 258, 262], "dual": 18, "dualconsistentr": 18, "dualconsistentsampl": 18, "due": [2, 179, 221, 231, 248, 263], "dummi": 75, "dump": [53, 219], "dump_result": 219, "duplex": [35, 36, 89, 91, 92, 163, 167, 170, 174, 175, 176, 177, 183], "duplexjcasoper": [90, 91, 92], "duplexlink": 113, "duplexmodem": [93, 103, 108, 253, 256, 259, 260, 262], "duplexoper": [51, 90, 91, 92, 163], "duplic": 167, "durabl": 251, "durat": [39, 49, 51, 59, 60, 90, 91, 102, 103, 111, 121, 127, 128, 129, 130, 138, 139, 162, 163, 166, 168, 171, 197, 219, 222, 225, 234, 235, 236, 239, 241, 242, 243, 244], "dure": [1, 2, 3, 4, 8, 11, 12, 13, 32, 33, 37, 38, 46, 49, 50, 52, 55, 57, 59, 60, 65, 66, 67, 68, 70, 73, 74, 77, 79, 80, 81, 82, 85, 103, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 144, 147, 149, 150, 157, 158, 161, 162, 163, 167, 171, 180, 188, 189, 191, 192, 195, 212, 214, 217, 218, 219, 221, 234, 241, 242, 244, 248, 250, 255, 256, 257, 258, 259, 260, 261, 262], "durrani": [124, 263], "dwell": 251, "dwijendra": [64, 263], "dynam": [55, 60, 196, 251, 255], "e": [7, 15, 24, 25, 26, 29, 31, 33, 36, 37, 54, 55, 61, 65, 66, 73, 78, 82, 87, 99, 101, 102, 121, 127, 129, 132, 137, 139, 140, 141, 142, 160, 162, 163, 167, 179, 183, 189, 192, 197, 203, 208, 220, 233, 234, 235, 239, 240, 241, 242, 244, 248, 250, 251, 255, 263], "each": [0, 7, 8, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 36, 39, 55, 56, 57, 59, 60, 62, 80, 82, 98, 99, 100, 101, 102, 109, 113, 121, 127, 130, 131, 132, 133, 134, 139, 140, 142, 143, 147, 149, 160, 162, 163, 167, 168, 169, 171, 182, 186, 197, 215, 216, 219, 221, 226, 227, 234, 235, 236, 239, 241, 242, 243, 244, 248, 251, 255, 256, 258, 259, 261, 262, 264], "earlier": 251, "eas": 14, "easi": [33, 53, 250], "easili": [53, 258], "eb": 188, "eberlein": [31, 263], "ebn0": [190, 235, 236, 238, 239, 240, 241, 242, 243], "echo": 254, "edit": 250, "eeei": 263, "effect": [19, 55, 123, 167, 169, 179, 183, 203, 207, 209, 219, 238, 251, 256, 258, 260, 262, 263], "effici": [55, 147, 167, 258, 263], "effort": [249, 251], "either": [2, 14, 31, 33, 34, 112, 160, 190, 192, 197, 248, 250, 251, 257], "electr": 263, "electromagnet": [15, 32, 36, 39, 41, 59, 167, 179, 212, 214, 248, 249, 256, 262], "electron": [251, 263], "element": [36, 37, 55, 78, 83, 87, 113, 134, 136, 142, 143, 147, 169, 170, 171, 173, 178, 212, 219, 234, 239, 241, 242, 244, 255, 256, 257, 258, 260], "elementtyp": [113, 134, 135, 142, 143, 147, 234, 239, 241, 242, 244, 256, 257, 258, 260], "elemtromagnet": 15, "elev": [4, 36], "elib": [203, 207, 263], "ell": [24, 26, 32, 33], "els": 255, "elsevi": [64, 68, 69, 71, 72, 74, 263], "embarassingli": 258, "embodi": 251, "emerg": [37, 41, 167, 214, 217], "emerging_direct": 32, "emerging_sign": [41, 214, 217], "emiss": [39, 76, 87, 212], "emit": [1, 3, 4, 15, 36, 59, 90, 92, 103, 151, 212, 220, 234, 235, 241, 242, 243, 244, 248, 254, 255], "emmiss": 39, "employ": 251, "empti": [36, 54, 60, 135, 158, 172, 173, 219, 254, 258], "empty_lik": 258, "en": [195, 251], "enabl": [8, 11, 12, 13, 14, 15, 19, 21, 31, 32, 33, 39, 42, 49, 52, 55, 59, 60, 61, 64, 66, 68, 69, 71, 72, 74, 79, 80, 82, 83, 84, 85, 87, 121, 129, 132, 144, 147, 157, 161, 167, 198, 199, 200, 206, 212, 213, 214, 216, 219, 220, 234, 243, 244, 249, 250, 251, 258, 263], "enable_syndrome_check": 68, "encod": [2, 4, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 127, 134, 142, 143, 149, 150, 163, 235, 236, 241, 242, 243, 259, 260, 262], "encode_stream": [2, 150], "encoded_bit": [65, 66, 67, 70, 73, 104, 105, 107], "encoded_symbol": [107, 260], "encoder_manag": [103, 108, 109, 110, 111, 259], "encodermanag": [66, 103, 109, 111], "encount": 36, "encourag": [55, 251], "end": [30, 36, 87, 129, 167, 179, 190, 195, 212, 250, 251, 254, 259], "endpoint": [186, 187], "energi": [8, 15, 17, 19, 28, 30, 31, 33, 56, 60, 121, 127, 129, 139, 162, 166, 188, 189, 190, 192, 235, 236, 238, 239, 240, 241, 242, 243, 262], "enforc": [233, 251], "engin": [192, 212, 249, 250, 252, 263], "ensur": [87, 251], "enter": [237, 251], "entir": 251, "entiti": [167, 212, 248, 251], "entri": [0, 6, 52, 55, 60, 66, 124, 128, 146], "enum": [9, 10, 53, 54, 135, 136, 201, 202, 230], "enumer": [53, 254, 257], "env": [250, 252], "envelop": 253, "enviro": 91, "environ": [1, 6, 14, 52, 55, 163, 167, 233, 237, 248, 250, 252, 255, 257, 258], "environment": 14, "envnam": [6, 250, 252], "eploy": 263, "equal": [9, 34, 36, 39, 60, 65, 66, 67, 70, 73, 91, 93, 99, 101, 102, 104, 105, 108, 109, 110, 116, 117, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 139, 142, 143, 147, 154, 157, 162, 199, 214, 217, 219, 221, 227, 234, 236, 239, 241, 242, 244, 248, 256, 257, 262], "equalize_channel": [122, 125], "equalize_symbol": 121, "equalized_symbol": [104, 105, 248, 253, 257], "equat": [3, 4, 8, 9, 15, 17, 19, 24, 26, 28, 30, 31, 32, 33, 54, 65, 66, 67, 70, 73, 92, 96, 203, 206, 230, 254, 259], "equidistantli": 171, "equip": [255, 264], "equival": [14, 33, 60, 124, 128, 212, 230, 250, 251, 262], "equl": 253, "equz": 146, "erdal": [69, 263], "erik": [55, 263], "eriksson": [211, 263], "error": [0, 14, 38, 52, 64, 65, 67, 68, 69, 71, 72, 74, 79, 93, 95, 97, 102, 103, 105, 108, 109, 110, 111, 124, 151, 159, 188, 189, 195, 221, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 253, 256, 259, 263], "error_cod": 259, "errorevalu": [98, 99, 101], "errro": 161, "esenti": [252, 257], "esn0": 190, "especi": [252, 253], "essenc": 256, "essenti": [14, 55, 117, 120, 251, 256, 257, 260], "establish": [61, 234, 235, 244], "estim": [3, 4, 15, 46, 55, 78, 79, 82, 91, 92, 93, 96, 102, 108, 109, 110, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 142, 143, 144, 147, 152, 158, 161, 162, 163, 166, 167, 198, 199, 200, 218, 234, 240, 241, 242, 244, 248, 249, 254, 255, 257, 258, 260, 261, 263], "estimate_channel": [121, 123], "estimate_delai": 79, "estimate_gain": [198, 199, 200], "estimate_noise_pow": 82, "et": [22, 24, 36, 55, 98, 99, 101, 124, 158, 195, 211, 249], "etsi": [8, 9, 10, 11, 12, 13, 22, 29, 73, 263], "etsi18": 263, "etsi_t": [73, 263], "etsi_tr": [8, 9, 10, 11, 12, 13, 22, 29, 263], "eucap": [31, 263], "euclidean": 18, "eurasip": [124, 263], "european": [31, 203, 207, 263], "evalu": [9, 10, 11, 12, 13, 14, 33, 55, 80, 88, 93, 98, 99, 100, 101, 102, 127, 130, 131, 132, 133, 151, 160, 161, 162, 167, 171, 197, 206, 219, 221, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 253, 255, 256, 257, 260, 261, 263, 264], "evaluation_result": 55, "evaluationplot": 88, "evaluationresult": [55, 159, 160, 258], "evaluationtempl": [55, 98, 99, 100, 101, 102, 158], "evaluator_index": [80, 88], "even": [70, 116, 167, 197, 248, 251], "evenli": 232, "event": 251, "ever": 251, "everi": [15, 36, 53, 61, 94, 134, 142, 143, 147, 162, 167, 171], "everyon": [250, 251], "everyth": 52, "evm": 100, "evmartifact": 100, "evmevalu": 100, "evolut": [31, 263], "evolv": 256, "ex": 252, "exact": 251, "exactli": [66, 73, 167, 224], "exampl": [2, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 26, 29, 32, 33, 34, 95, 98, 99, 100, 101, 102, 112, 116, 117, 149, 151, 158, 160, 161, 162, 167, 168, 169, 171, 233, 234, 235, 236, 238, 239, 241, 244, 248, 249, 251, 252, 254, 256, 264], "except": [29, 52, 55, 251], "exchang": [15, 65, 73, 98, 99, 100, 101, 102, 167, 212, 221, 234, 244, 256, 263], "excit": 14, "exclud": 251, "exclus": [2, 109, 111, 251], "excus": 251, "execut": [5, 6, 14, 31, 35, 55, 57, 59, 66, 149, 151, 160, 163, 167, 171, 212, 219, 233, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "executionmod": 252, "exemplari": 89, "exepct": [99, 101, 102], "exept": 38, "exercis": [251, 260], "exist": [14, 32, 33, 34, 53, 55, 57, 59, 62, 80, 84, 85, 86, 212, 220, 233, 248, 250, 252], "exp": [33, 130, 131, 132, 133, 167, 255, 256], "expand": [167, 264], "expect": [8, 9, 10, 11, 12, 13, 17, 19, 28, 30, 31, 33, 39, 46, 49, 51, 53, 55, 56, 59, 66, 78, 82, 83, 91, 92, 94, 109, 111, 121, 159, 163, 180, 184, 190, 191, 192, 212, 251, 253, 255, 256, 260, 261], "expected_energy_scal": [8, 17, 19, 28, 30, 31, 33], "expected_pow": [56, 212], "expected_st": [8, 9, 10, 11, 12, 13, 255, 257], "expens": [37, 120], "experi": [8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 23, 26, 27, 28, 30, 32, 33, 34, 250], "experiment": 249, "explain": 262, "explicitli": [167, 251], "exploit": 171, "explot": [137, 140], "exponenti": 24, "expos": [14, 113, 114, 115, 116, 117, 168], "express": [14, 251], "expressli": 251, "exst": 57, "extend": [24, 108, 109, 110, 111, 169, 179, 219, 250, 251, 255, 263], "extens": [53, 112, 171, 233, 250, 251, 260], "extent": [14, 190, 251], "extern": 250, "extra": 35, "extract": [55, 95, 98, 99, 100, 101, 102, 140, 149, 153, 157, 158, 160, 161, 219, 248, 250, 258], "ey": [60, 88, 254], "eyeplot": 88, "f": [2, 3, 4, 8, 15, 22, 31, 36, 51, 72, 90, 91, 92, 101, 102, 124, 162, 163, 166, 167, 203, 211, 251, 255, 257, 258, 259, 262, 263], "f_": [2, 3, 4, 14, 15, 19, 20, 21, 33, 36, 51, 90, 91, 162, 163, 166], "facil": 251, "facilit": 251, "fact": [2, 179, 196], "factor": [3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 111, 121, 129, 131, 132, 133, 183, 190, 207, 208, 235, 236, 239, 253], "factori": [7, 8, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 90, 91, 92, 94, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 163, 168, 173, 175, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 227], "factory_typ": 9, "factorytyp": 9, "fade": [14, 19, 22, 23, 25, 29, 235, 243, 263], "fail": [53, 251], "failur": [251, 257], "fair": 251, "fall": [14, 250], "fals": [32, 33, 34, 52, 53, 55, 59, 61, 80, 158, 160, 161, 186, 187, 198, 199, 200, 206, 212, 219, 220, 234, 236, 239, 241, 242, 244, 249, 254, 258, 259, 261], "false_alarm_prob": 160, "famili": 251, "far": [3, 4, 32, 36, 129, 254], "fashion": [65, 114, 251], "fast": [15, 64, 68, 69, 71, 72, 74, 258, 263], "fat": 55, "favor": [251, 261], "fdel": 55, "featur": [0, 3, 4, 8, 19, 20, 21, 24, 30, 32, 34, 53, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 134, 142, 143, 147, 149, 158, 160, 161, 162, 163, 168, 169, 212, 221, 222, 223, 224, 225, 226, 233, 248, 249, 251, 252, 254, 258, 259, 262], "fec": [64, 68, 69, 71, 72, 74, 104, 106, 107, 264], "fed": [39, 59, 255], "fee": 251, "feed": [37, 50, 169, 203, 204, 205, 206, 207, 208, 255], "feedback": 55, "fer": 101, "fetch": [18, 253], "fetch_scalar": 18, "fettwei": 263, "few": [14, 257], "fft": [37, 113, 162], "fft_norm": 113, "ffu": 241, "fget": 55, "field": [3, 4, 31, 32, 36, 71, 151, 179, 254, 263], "fig": 232, "fig_ax": 197, "figur": [8, 28, 36, 55, 62, 81, 120, 129, 156, 171, 197, 202, 203, 206, 229, 258], "figurebas": [8, 55, 62, 79], "file": [6, 53, 55, 59, 80, 82, 94, 160, 167, 219, 233, 237, 248, 249, 250, 251, 252, 255, 257, 261, 264], "file_loc": 80, "filenam": 53, "filesystem": [53, 257], "filter": [60, 79, 82, 89, 128, 129, 130, 131, 132, 133, 186, 239, 253], "filter_calibr": 79, "filter_length": [129, 131, 133], "filter_ord": 60, "filteredsinglecarrierwaveform": [129, 130, 131, 132, 133], "final": [14, 55, 109, 111, 123, 160, 167, 195, 212, 248, 251, 257, 258], "final_pos": 168, "find": 251, "finish": [235, 236, 238, 239, 240, 241, 242, 243, 258], "finit": [71, 263], "first": [2, 3, 4, 14, 18, 20, 29, 33, 55, 76, 80, 83, 87, 120, 124, 128, 129, 146, 160, 162, 166, 195, 196, 212, 220, 225, 226, 233, 239, 243, 244, 251, 253, 257, 259, 261], "first_impact": 55, "fit": [31, 251], "five": 29, "fix": [14, 15, 32, 87, 167, 188, 189, 191, 212, 223, 225, 248, 251], "fixedcrosssect": 32, "flag": [14, 33, 42, 52, 53, 59, 82, 87, 121, 127, 157, 206, 212, 213, 216], "flake8": 233, "flat": 258, "flatten": 262, "fledg": 212, "flexibl": [55, 143], "flicker": 211, "flight": [33, 91, 256], "flip": [259, 260], "float": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 46, 49, 50, 51, 54, 55, 56, 59, 60, 61, 65, 66, 69, 76, 78, 79, 82, 83, 87, 90, 91, 92, 100, 101, 102, 103, 105, 107, 108, 109, 111, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 142, 144, 146, 147, 149, 152, 154, 156, 157, 160, 161, 162, 163, 166, 168, 171, 176, 178, 180, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 206, 207, 208, 211, 212, 214, 217, 218, 219, 225, 227, 230, 231, 254, 256, 258, 262], "float64": [98, 99], "float_": 212, "floatingerror": [2, 49, 180, 184, 185], "floor": [9, 82, 190, 211, 261], "flow": [248, 251], "flowchart": 55, "fluctuat": 209, "fly": 79, "fmcw": [93, 121, 126, 127, 129, 151, 158, 160, 161, 166, 167, 254, 261], "fmcwwaveform": 130, "focu": [1, 2, 3, 4, 124, 254, 255], "focus": [1, 2, 3, 4, 254, 255], "focus_angl": 4, "focus_dimens": 255, "focus_point": 2, "folder": [6, 53], "follow": [8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 26, 29, 32, 34, 53, 93, 98, 99, 100, 101, 102, 109, 111, 112, 116, 121, 123, 128, 129, 151, 163, 167, 168, 195, 198, 202, 203, 211, 236, 237, 238, 248, 250, 251, 258, 259, 260, 261, 263], "follow_link": 53, "follw": 219, "forbid": 251, "forc": [234, 239, 242, 244, 251, 256], "force_remov": 61, "form": [55, 60, 66, 193, 248, 251, 262], "format": [37, 53, 55, 120, 160, 241, 251], "formul": 249, "formula": [15, 19], "forward": [63, 64, 68, 69, 71, 72, 74, 93, 103, 108, 109, 110, 111, 248, 259, 263], "forwards_transform": 61, "found": [22, 233, 248, 251], "foundat": 251, "four": [116, 120, 163, 221, 248, 257, 258, 260, 262], "fourier": [37, 112], "frac": [3, 8, 14, 15, 19, 20, 21, 24, 33, 36, 55, 65, 66, 67, 70, 92, 98, 100, 102, 116, 162, 163, 166, 204, 207, 208, 211, 254, 259], "fraction": [116, 117, 149], "frame": [2, 36, 39, 51, 59, 61, 65, 66, 82, 83, 90, 91, 93, 95, 97, 102, 103, 104, 106, 109, 111, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 162, 163, 166, 171, 197, 212, 213, 214, 216, 217, 221, 222, 223, 225, 226, 227, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 249, 253, 256, 257, 258, 260, 261, 262], "frame_delai": 121, "frame_dur": [51, 56, 90, 91, 102, 103, 121, 127, 162, 163, 166, 171, 197], "frame_error": 102, "frameel": [234, 239, 244], "frameerrorartifact": 101, "frameerrorevalu": 101, "framesect": 139, "framework": [93, 167, 219, 249, 254, 263], "free": [19, 20, 21, 33, 124, 230, 251], "freedom": 251, "freeli": [212, 248], "freq_differ": [127, 235, 243], "freqeuenc": 143, "frequci": 60, "frequenc": [2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 22, 26, 28, 29, 30, 33, 36, 37, 39, 41, 60, 76, 79, 82, 83, 87, 88, 116, 121, 127, 129, 130, 132, 136, 139, 142, 143, 144, 145, 146, 147, 152, 162, 166, 167, 169, 170, 171, 174, 179, 183, 186, 187, 193, 203, 206, 208, 209, 211, 212, 214, 217, 221, 230, 234, 235, 238, 239, 240, 241, 242, 243, 244, 248, 254, 255, 257, 261, 263], "frequeni": 182, "frequent": 167, "freuenci": 209, "frii": 19, "from": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 46, 49, 53, 55, 57, 58, 59, 60, 61, 65, 66, 79, 82, 83, 85, 87, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 121, 123, 124, 127, 129, 136, 137, 138, 139, 140, 141, 144, 145, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 173, 179, 180, 183, 184, 185, 190, 195, 196, 206, 211, 212, 213, 214, 216, 217, 219, 221, 226, 230, 233, 240, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "from_artifact": 55, "from_cartesian": 61, "from_deviceoutput": 214, "from_fil": 53, "from_fold": 53, "from_hdf": [7, 9, 10, 11, 12, 13, 20, 21, 27, 30, 31, 32, 34, 53, 160, 256, 261], "from_interleav": 60, "from_ndarrai": [60, 256], "from_output": 43, "from_paramet": 53, "from_path": 53, "from_processeddeviceinput": 42, "from_processedsimulateddeviceinput": 216, "from_quaternion": 61, "from_rpi": 61, "from_scenario": 160, "from_simulateddeviceoutput": 217, "from_spher": 61, "from_str": 53, "from_stream": 53, "from_transl": [9, 10, 11, 12, 13, 61, 168, 169, 171, 255, 257], "from_tupl": 54, "from_yaml": [140, 149, 219], "fromspher": 154, "front": [6, 87, 167, 179, 190, 195, 212, 261], "frontend": [171, 182, 186, 212], "frontendend": 183, "fset": 55, "fsf": 251, "fsk": [93, 121, 126, 237], "ft": 2, "fulfil": 251, "full": [36, 53, 87, 118, 136, 139, 149, 169, 170, 174, 175, 176, 177, 183, 212, 219, 248, 251, 252, 255, 257, 259, 261], "fulli": [26, 109, 111, 167, 169, 203, 205, 233, 255], "function": [2, 8, 14, 15, 33, 35, 55, 57, 59, 62, 75, 89, 109, 111, 148, 151, 168, 211, 230, 250, 251, 252, 253, 257, 259, 262], "fundament": [188, 256], "funtion": 258, "further": [36, 39, 59, 69, 73, 77, 82, 84, 85, 86, 87, 103, 108, 109, 110, 111, 114, 116, 195, 196, 207, 208, 220, 244, 248, 250, 251, 255, 257], "furthermor": 255, "futur": [167, 179, 183, 251], "g": [26, 68, 71, 116, 263], "g_": [24, 26], "g_save_path": 68, "gain": [7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 87, 169, 196, 197, 203, 205, 206, 220, 235, 238, 240, 243, 255, 256, 257, 258, 260, 261], "gaincontrolbas": [198, 199, 200], "gaincontroltyp": [198, 201], "gal": [64, 68, 69, 71, 72, 74, 263], "gal63": 263, "gallag": [68, 263], "ganesan": [116, 263], "gaussian": [18, 190, 193, 194, 262], "gener": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 62, 65, 66, 68, 73, 75, 77, 80, 81, 83, 85, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 190, 192, 193, 197, 206, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 233, 234, 235, 243, 244, 248, 251, 253, 254, 255, 256, 257, 258, 262, 263], "generate_bit": 94, "generate_output": [39, 59, 212, 220], "generate_result": [55, 96, 158, 159, 160, 161, 258], "generate_sequ": 73, "geometr": [36, 263], "geometri": [14, 232], "geq": 207, "gernat": 73, "get": [22, 55, 57, 95, 116, 117, 140, 149, 197, 219, 235, 236, 243, 249, 251, 258, 260], "get_cross_sect": 32, "get_monitor": 232, "get_pow": [188, 189, 190, 191, 192], "getter": 55, "gfdm": 263, "gg": 36, "ghz": [8, 9, 10, 11, 12, 13, 29, 73, 151, 162, 167, 239, 261, 263], "girish": 116, "git": 250, "github": [248, 249, 250, 251, 252], "give": [55, 237, 248, 251], "given": [7, 15, 17, 18, 19, 20, 21, 25, 30, 32, 33, 55, 60, 80, 82, 83, 114, 115, 149, 151, 158, 160, 168, 189, 198, 211, 212, 221, 226, 228, 230, 235, 237, 251, 254, 256, 258, 259], "glavieux": [74, 263], "glazunov": [22, 263], "global": [2, 14, 17, 32, 33, 36, 55, 61, 84, 167, 212, 220, 236, 241, 256, 261, 263], "global_characterist": 36, "global_direct": 36, "global_orient": 61, "global_pos": 36, "global_posit": 61, "globecom": 263, "glocom": 263, "gnu": [249, 251], "goal": 251, "gold": 73, "goldberg": 263, "good": [24, 127, 128], "googl": 264, "govern": 251, "gpl": 251, "gpp": 263, "gpu": 167, "grant": 251, "graph": [35, 72, 74, 120, 167, 248], "graphic": 160, "grasp": 258, "grati": 251, "greater": [20, 39, 55, 60, 76, 87, 121, 127, 128, 129, 139, 168, 212, 214, 217, 220], "greatest": [198, 251], "grid": [55, 80, 96, 98, 99, 100, 101, 102, 134, 136, 137, 139, 140, 142, 143, 147, 158, 159, 160, 161, 167, 219, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 255, 258], "grid_configur": 55, "grid_resourc": [113, 134, 139, 142, 143, 144, 147, 241, 242, 256, 257, 258, 260], "grid_sect": 55, "grid_structur": [113, 134, 139, 142, 143, 144, 147, 241, 242, 256, 257, 258, 260], "griddimens": [55, 80, 96, 158, 159, 160, 161, 258], "gridel": [113, 134, 135, 136, 142, 143, 147, 256, 257, 258, 260], "gridresourc": [113, 134, 136, 139, 142, 143, 144, 147, 256, 257, 258, 260], "gridsect": [55, 137, 138, 139, 140, 141, 142, 144, 145, 147], "gridvisu": 139, "ground": 161, "ground_truth": [33, 161], "group": [7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 26, 27, 30, 31, 32, 34, 42, 43, 64, 256, 263], "gs01": 263, "gt": [255, 257], "guarante": 251, "guard": [46, 49, 51, 56, 91, 92, 109, 111, 121, 127, 128, 129, 132, 139, 162, 163, 234, 239, 241, 242, 244], "guard_interv": [127, 129, 132, 235, 236, 238, 239, 240, 243], "guard_ratio": [127, 128], "guardsect": 138, "h": [3, 4, 6, 8, 14, 15, 17, 19, 20, 21, 24, 28, 30, 31, 33, 36, 55, 68, 123, 124, 186, 232, 254, 263], "h0": 160, "h0_campaign": 160, "h0_measur": [160, 261], "h0_oper": 160, "h0_scenario": 160, "h0_valu": 160, "h1": 160, "h1_campaign": 160, "h1_measur": [160, 261], "h1_oper": 160, "h1_scenario": 160, "h1_valu": 160, "h5": [248, 257, 261], "h5py": [7, 8, 15, 20, 21, 26, 30, 31, 32, 34, 160, 256], "h_": 24, "h_c": 9, "h_source_path": 68, "ha": [7, 15, 24, 36, 37, 39, 46, 49, 55, 59, 109, 111, 116, 129, 134, 167, 170, 171, 174, 179, 183, 186, 190, 203, 209, 212, 219, 235, 236, 238, 239, 240, 241, 242, 243, 250, 251, 252, 254, 255, 258, 259, 260], "had": 251, "half": [36, 151, 255], "half_wavelength": 254, "hall": [8, 9], "hand": [39, 167], "handl": [2, 15, 22, 25, 26, 32, 46, 52, 55, 57, 59, 66, 77, 82, 86, 109, 110, 111, 120, 121, 122, 123, 124, 129, 140, 149, 160, 180, 184, 195, 212, 214, 219, 226], "handler": 52, "hani": [124, 263], "happen": 14, "hard": [82, 94, 121, 127, 129, 139, 262], "hardawar": [75, 253], "hardwar": [0, 80, 82, 83, 88, 123, 124, 167, 190, 203, 212, 219, 237, 243, 249, 250, 253, 255, 258, 261, 262], "hardware_loop": [81, 248, 253, 261], "hardware_scenario": 248, "hardwareloop": [80, 81, 88, 234, 244, 248, 261], "hardwareloopdeviceplot": 88, "hardwareloopevaluatorplot": 88, "hardwareloopplot": [80, 81, 88], "hardwareloopsampl": 81, "hartmann": [64, 68, 69, 71, 72, 74, 263], "hat": [3, 4, 15, 254], "have": [0, 15, 39, 53, 55, 59, 114, 115, 123, 146, 152, 163, 197, 198, 209, 212, 235, 236, 248, 250, 251, 253, 255, 261, 262], "hdf": [7, 8, 15, 20, 21, 26, 30, 31, 32, 34, 53, 255, 256], "hdf5": [7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 27, 30, 31, 32, 34, 53, 59, 257], "hdfserializ": [18, 33, 37, 40, 41, 42, 43, 44, 45, 47, 48, 50, 53, 60, 90, 104, 105, 106, 107, 120, 152, 213, 214, 216, 217, 218, 227, 256], "hdfserializabletyp": 53, "he": [64, 68, 69, 71, 72, 74, 263], "head": [55, 219], "hearten": 251, "heddergott": [22, 263], "height": [9, 232], "help": [6, 249], "helper": [53, 168], "henc": 102, "henrik": [22, 263], "herbert": [211, 263], "here": [55, 60, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "hereaft": 251, "herm": [5, 31, 33, 53, 54, 64, 68, 69, 71, 72, 74, 98, 99, 100, 101, 102, 123, 124, 151, 190, 226, 233, 237, 244, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262], "hermann": 263, "hermes_quadriga": 250, "hermes_simul": 6, "hermespi": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 53, 55, 57, 59, 60, 64, 68, 69, 71, 72, 74, 75, 76, 80, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 158, 160, 161, 162, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 233, 237, 243, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "hermspi": 237, "heterogen": [248, 249], "hh": 9, "high": [3, 73, 147, 186, 187, 249, 261, 263], "higher": [253, 255], "highest": 226, "highli": 249, "highlight": [260, 262], "higlight": 256, "hilbert": 253, "hilli": 22, "hint": [31, 233, 260], "hire": [130, 131, 132, 133, 162, 202], "hocquenghem": 64, "hoel": [55, 263], "hold": [55, 112], "holder": 251, "hook": [7, 8, 10, 11, 12, 13, 15, 16, 27, 30, 31, 32, 33], "hope": 251, "horizont": 36, "horizontal_phase_respons": 36, "host": [55, 87, 251, 252, 253], "hour": 255, "household": 251, "how": [9, 10, 11, 12, 13, 20, 21, 22, 23, 26, 29, 32, 34, 98, 99, 100, 101, 102, 109, 111, 112, 116, 127, 129, 130, 131, 132, 133, 168, 232, 248, 249, 251, 253, 255, 261], "howev": [14, 24, 54, 55, 87, 167, 221, 226, 233, 239, 248, 251, 256], "hpa": [203, 207, 263], "href": 257, "html": [233, 244, 251], "http": [4, 8, 9, 10, 11, 12, 13, 22, 29, 64, 68, 69, 71, 72, 73, 74, 195, 203, 207, 232, 244, 251, 257, 263], "human": 261, "hybrid": [169, 255], "hybrid_arrai": [169, 255], "hybrid_port": 255, "hypothesi": [32, 33, 160], "hz": [17, 26, 28, 33, 36, 39, 41, 51, 60, 76, 79, 82, 83, 87, 90, 91, 92, 103, 121, 127, 129, 130, 131, 132, 133, 142, 144, 147, 152, 162, 163, 166, 212, 214, 217, 227, 230, 231, 234, 235, 239, 241, 242, 243, 244, 262], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 46, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 73, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "icassp": 263, "icc": [74, 263], "idea": 251, "ideal": [14, 26, 36, 37, 78, 83, 84, 121, 123, 129, 167, 169, 170, 182, 185, 195, 203, 209, 210, 212, 220, 238, 241, 242, 253, 255, 256, 258], "idealantenna": [36, 175], "idealchannel": [30, 167, 248], "idealchannelr": 30, "idealchannelsampl": 30, "ident": [14, 20, 26, 55, 73, 80, 95, 181, 205, 221, 243, 248, 255, 257, 261], "identifi": [55, 59, 76, 160, 250, 251, 257], "idl": 78, "ido": [69, 263], "iee99": 263, "ieee": [3, 15, 22, 24, 31, 36, 69, 72, 73, 74, 92, 116, 145, 146, 195, 203, 208, 211, 249, 263], "ieeestd": [73, 263], "ifft": [186, 187], "ifftshift": [186, 187], "ignor": [60, 66, 121, 124, 127, 129, 139, 212, 234, 241, 244], "ii": [22, 263], "iii": 263, "illumin": [34, 158, 160, 161, 162, 255], "illustr": 160, "imag": [1, 15, 62, 152, 254, 263], "imagevisu": 62, "imaginari": [186, 193, 197, 198], "imbal": [167, 195, 238], "imed": 181, "imens": 80, "iming": 171, "immut": [17, 18, 28, 36, 212, 256], "impact": [19, 55, 122, 221], "impair": [111, 167, 195, 261], "imped": 179, "impedancecoupl": 181, "imping": [24, 32, 36, 39, 40, 42, 45, 59, 82, 84, 85, 120, 212, 213, 216, 220, 248, 254, 255, 261], "impinging_direct": 32, "impinging_sign": [39, 40, 42, 45, 59, 82, 83, 84, 85, 171, 212, 213, 216, 220], "implement": [2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 24, 26, 29, 30, 32, 33, 34, 52, 53, 55, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 133, 134, 147, 150, 151, 158, 159, 160, 161, 167, 170, 171, 179, 180, 183, 184, 185, 186, 187, 190, 195, 197, 203, 206, 207, 208, 209, 210, 212, 221, 226, 230, 233, 248, 249, 250, 251, 252, 263, 264], "impli": [73, 251], "implicit": 79, "import": [14, 15, 151, 158, 160, 161, 162, 232, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "import_modul": 252, "importantli": [93, 124], "importlib": 252, "impos": 251, "imposs": [55, 160, 161], "improperli": 212, "improv": [195, 250, 251, 263], "impuls": [8, 19, 20, 21, 30, 31, 33, 37, 79, 170, 171, 174, 186, 253], "impulse_respons": 256, "inabl": 251, "inaccur": 251, "inc": 251, "incident": 251, "includ": [8, 33, 62, 139, 167, 183, 197, 220, 233, 248, 251, 257], "inclus": 251, "incom": [109, 190, 260], "incorpor": 251, "increas": [55, 116, 255], "indemnif": 251, "independ": [30, 55, 66, 182, 193, 203, 208, 251, 263], "indepent": 190, "indepentedli": 197, "index": [2, 33, 36, 55, 57, 59, 70, 80, 88, 149, 219, 232, 233, 250], "indexerror": 36, "indic": [6, 7, 20, 24, 36, 46, 49, 55, 60, 61, 68, 76, 82, 83, 87, 93, 95, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 116, 117, 120, 121, 124, 127, 128, 129, 146, 149, 152, 154, 158, 160, 161, 162, 166, 167, 190, 194, 212, 214, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 249, 251, 253, 256, 257, 258, 262], "individu": [8, 26, 28, 33, 36, 55, 62, 90, 104, 106, 109, 114, 115, 136, 144, 147, 149, 151, 162, 167, 169, 212, 226, 234, 241, 242, 244, 248, 251, 255], "indiviu": 163, "indoor": [8, 24, 257, 263], "indoor_factori": 9, "indoor_offic": 10, "indoorfactori": 9, "indoorfactoryr": 9, "indooroffic": [10, 257], "indoorofficer": 10, "industri": [71, 251, 263], "inexperienc": 250, "inf": [20, 26, 32, 34, 64, 188, 189, 206, 219, 235, 243, 263], "infer": [42, 46, 49, 55, 59, 216, 240], "infin": 263, "infinit": 197, "info": [52, 219, 257], "inform": [8, 9, 10, 11, 12, 13, 17, 19, 22, 28, 30, 31, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 59, 62, 69, 72, 73, 80, 82, 83, 84, 85, 88, 90, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 120, 121, 123, 124, 127, 130, 131, 132, 133, 140, 149, 151, 163, 164, 165, 206, 211, 212, 213, 214, 216, 217, 218, 219, 220, 227, 233, 240, 241, 248, 251, 253, 256, 257, 258, 260, 261, 262, 263], "infring": 251, "infti": [14, 26, 32], "ing": 256, "inher": 78, "inherit": [2, 53, 66, 94, 95, 159, 168, 180, 184, 206, 248, 254, 256, 259, 260], "init": 60, "init_sequ": 73, "initi": [9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 29, 30, 36, 37, 39, 42, 43, 46, 49, 53, 54, 55, 58, 59, 60, 61, 73, 77, 78, 79, 82, 83, 85, 86, 94, 95, 103, 108, 109, 110, 111, 112, 115, 116, 117, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 142, 143, 144, 147, 149, 150, 151, 163, 167, 169, 186, 190, 195, 204, 205, 207, 208, 209, 210, 212, 214, 216, 219, 235, 248, 251, 252, 253, 254, 255, 257, 259, 261, 262], "initial_pos": 168, "initializ": [190, 193], "initil": 60, "input": [2, 3, 4, 14, 39, 42, 50, 59, 65, 66, 67, 69, 70, 73, 80, 82, 83, 84, 85, 113, 114, 115, 116, 117, 149, 150, 195, 196, 197, 198, 199, 200, 205, 212, 216, 220, 230, 231, 253, 259, 260, 263], "input_sampl": 197, "input_sign": [162, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208], "insert": 233, "insid": 8, "insight": 258, "inspect": [212, 253, 259, 261, 262], "instal": [6, 31, 233, 237, 244, 248, 251, 252], "instanc": [7, 8, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 42, 52, 55, 60, 66, 78, 79, 94, 95, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 129, 131, 133, 140, 149, 167, 179, 183, 185, 186, 187, 190, 192, 212, 219, 220, 221, 222, 223, 224, 225, 226, 248, 252], "instanti": [14, 169, 262], "instantiant": 262, "instead": [14, 24, 36, 37, 54, 112, 124, 167, 169, 173, 212, 237, 248, 252, 255], "institut": 251, "instruct": [112, 117, 127, 130, 131, 132, 133, 237, 248, 255, 264], "int": [2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 26, 28, 29, 30, 31, 33, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 92, 94, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 149, 150, 156, 160, 161, 162, 163, 178, 190, 193, 197, 209, 210, 212, 214, 217, 219, 223, 226, 227, 231, 232, 254, 256, 259, 260, 262], "int16": 60, "int32": [64, 68, 69, 71, 74], "int64": 127, "int8": 72, "int_": 14, "intact": 251, "integ": [8, 17, 19, 28, 30, 31, 33, 58, 60, 66, 225, 227, 262], "integr": [31, 233, 248, 249, 252], "integration_test": 233, "intend": [233, 248, 250, 251, 255], "intent": 251, "intenum": 59, "inter": [129, 131, 133], "interact": [14, 38, 52, 54, 55, 219, 251, 258], "interc": [36, 65, 70], "interchang": 251, "interchirp": 236, "interconnect": [167, 212, 220, 241, 242, 248, 258], "interdepend": [0, 35], "intereset": 227, "interest": [1, 2, 3, 4, 36, 55, 163, 249, 251, 252, 254], "interf": [221, 226, 251], "interfac": [0, 5, 14, 19, 31, 53, 103, 143, 167, 184, 237, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260], "interfer": [8, 17, 19, 28, 30, 31, 32, 33, 82, 129, 131, 133, 221, 236, 237, 240, 241, 242, 249, 255], "interfernc": [32, 235], "interleav": [60, 63, 121, 127, 129, 139], "interleave_block": 65, "interleaved_sampl": 60, "intermedi": [119, 149], "intern": [15, 37, 39, 54, 59, 60, 73, 74, 81, 82, 84, 85, 121, 127, 129, 142, 144, 163, 206, 220, 222, 223, 224, 225, 226, 253, 257, 258, 263], "internet": [87, 167], "interpol": [8, 14, 15, 17, 19, 28, 30, 31, 33, 220, 231, 256, 263], "interpolation_mod": [8, 15, 17, 19, 28, 30, 31, 33, 220, 255, 256], "interpolationmod": [8, 14, 15, 17, 19, 28, 30, 31, 33, 220, 255, 256], "interpret": [6, 32, 82, 124, 250, 251], "interv": [20, 23, 46, 49, 51, 55, 56, 91, 92, 109, 111, 121, 124, 127, 128, 129, 132, 139, 162, 163, 219, 221, 222, 226, 228, 255], "intial": 248, "intim": 251, "introduc": [30, 65, 66, 67, 73, 124, 167, 190, 195, 222, 223, 225, 226, 233, 248, 250, 256], "introduct": [248, 255], "inv": 254, "invalid": [2, 23, 36, 37, 55, 61, 186, 251], "invari": [8, 14, 18, 193, 203], "invers": [1, 3, 66, 113, 121, 130, 254, 260], "invert": [61, 262], "investig": [14, 19, 55, 80, 98, 99, 100, 101, 102, 158, 160, 161, 248, 249, 255, 258, 259], "investigated_object": 55, "invoc": 14, "invok": 15, "involv": 8, "ip": [86, 87, 244], "iq_imbal": 195, "ir": [114, 263], "irrevoc": 251, "is_bas": 61, "is_regist": 55, "isi": 129, "iso": 167, "isol": [83, 167, 179, 186, 195, 212, 240, 261, 263], "isotrop": [169, 170, 241, 242], "israel": 263, "issu": [249, 250], "istrop": [83, 212, 255], "item": 251, "iter": [37, 55, 59, 68, 74, 76, 78, 80, 84, 120, 167, 218, 219, 220, 248], "iteration_prior": 80, "iterationprior": 80, "itertool": 255, "its": [2, 3, 4, 7, 8, 14, 15, 20, 21, 24, 26, 30, 31, 32, 33, 34, 36, 39, 42, 53, 55, 61, 66, 73, 83, 85, 130, 151, 163, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 193, 209, 212, 214, 216, 220, 240, 248, 249, 250, 251, 254, 255, 260], "itself": [179, 251], "j": [3, 24, 33, 36, 64, 68, 69, 71, 72, 74, 208, 263], "jaeckel": [31, 36, 263], "jan": [249, 263], "jbtj12": 263, "jca": [0, 91, 92, 212, 237, 248], "jcasrecept": 90, "jcastransmiss": 90, "jelinek": [72, 263], "jitter": 197, "join": [248, 261], "joint": [14, 89, 90, 91, 92, 212, 240, 248, 263], "journal": [55, 71, 116, 124, 263], "jrbt14": 263, "jrproc": [114, 263], "jstor": [4, 263], "jump": 260, "jungnickel": [36, 263], "jupyt": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "jussi": [195, 263], "just": [14, 53, 179, 183, 248, 257], "j\u00e9go": [64, 68, 69, 71, 72, 74, 263], "k": [7, 8, 26, 36, 64, 65, 66, 68, 69, 70, 71, 72, 74, 116, 121, 127, 129, 139, 259, 263], "k0": [211, 238], "k2": [211, 238], "k3": [211, 238], "k_": [24, 26, 66], "k_0": 211, "k_2": 211, "k_3": 211, "k_n": [65, 66, 67, 70, 73], "kah54": 263, "kahn": [114, 263], "kai": [24, 31, 36, 263], "kari": [195, 263], "karlsson": [24, 263], "kawrg": [19, 21], "kbp": 235, "kc76": [128, 263], "keep": 251, "keepdim": [258, 259], "kei": [95, 127, 188, 189, 251, 262], "kennedi": [124, 263], "kernel": [14, 15, 251, 257], "keyboard": 80, "keysview": 53, "keyword": [8, 11, 12, 13, 32], "khanzadi": [211, 263], "khz": [76, 144, 147, 253], "kiayani": [195, 263], "kind": [251, 257], "kindli": 233, "kinemat": 61, "kinetmat": 61, "kkp": 263, "klau": [22, 263], "knapp": 263, "know": 251, "knowingli": 251, "knowledg": [237, 251], "known": [4, 15, 73, 123, 128, 152, 254], "kon": [55, 263], "korpi": [195, 263], "kosunen": [195, 263], "kotel": 15, "kronauer": [249, 263], "kuylenstierna": [211, 263], "kwa": 263, "kwarg": [3, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 23, 26, 29, 31, 32, 33, 34, 46, 49, 55, 56, 57, 59, 60, 62, 76, 77, 80, 82, 83, 84, 86, 87, 90, 91, 92, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 139, 142, 144, 147, 156, 163, 186, 204, 205, 207, 208, 220, 254, 258], "l": [8, 24, 26, 33, 55, 66, 72, 79, 99, 101, 102, 121, 127, 129, 139, 186, 234, 236, 240, 244, 263], "l_n": [65, 66, 67, 70, 73], "label": [55, 98, 99, 100, 101, 102, 158, 160, 161, 197], "lack": 248, "lambda": [3, 162, 166], "lan": [73, 263], "land": [31, 263], "languag": 251, "languang": 252, "laptop": 167, "lar": [31, 36, 263], "larg": [8, 9, 10, 11, 12, 13, 256], "larger": [129, 136, 232, 251], "largescalest": 8, "last": [15, 55, 66, 120, 124, 196, 206, 255, 263], "last_impact": 55, "latenc": 147, "later": [251, 257], "latest": [49, 250], "launch": [5, 6, 55, 219, 233, 234, 237, 244, 248, 255], "lauri": [195, 263], "law": [211, 251, 263], "lawsuit": 251, "layer": [73, 82, 83, 93, 167, 219, 220, 226, 248, 255, 256, 263], "lbrace": [2, 3, 4, 14, 15, 30, 65, 70, 98, 99, 101, 102, 203, 207, 208], "lceil": 66, "ldot": [98, 99, 100, 101, 102], "ldpc": [68, 241, 242, 263], "ldpccode": 68, "le": [64, 68, 69, 71, 72, 74, 263], "lead": [14, 70, 123, 179, 248, 251], "leak": [83, 171, 184, 185, 187, 212, 213, 216], "leakag": [33, 75, 82, 83, 171, 183, 184, 185, 187, 212, 213, 240, 261], "leakage_calibr": 82, "leakage_frequency_respons": [186, 187], "leakage_impulse_respons": [186, 187], "leakage_respons": [79, 186], "leakagecalibrationbas": [79, 82], "leakg": 186, "leaking_sign": [83, 171, 212, 213, 216], "leanoard": [114, 263], "least": [234, 241, 244, 251, 253], "leastsquaresestim": 79, "leat": 79, "leav": 32, "left": [3, 14, 15, 17, 24, 26, 30, 33, 36, 51, 55, 65, 66, 70, 90, 91, 98, 99, 100, 101, 102, 162, 163, 166, 207], "legal": 251, "len": 60, "length": [26, 37, 60, 65, 66, 67, 70, 73, 82, 99, 100, 101, 102, 111, 121, 127, 129, 131, 133, 136, 162, 205, 220, 241], "leq": [55, 124], "leroux": [64, 68, 69, 71, 72, 74, 263], "less": [15, 30, 36, 65, 127, 136, 195, 197, 255], "leszek": [31, 263], "let": [3, 4, 14, 15, 17, 65, 70, 76, 251, 254, 255, 257, 258, 259, 260, 261, 262], "level": [7, 14, 55, 63, 83, 84, 103, 116, 124, 134, 142, 143, 147, 150, 188, 189, 190, 191, 192, 197, 198, 211, 212, 220, 221, 226, 233, 241, 242, 249, 251, 256, 262, 263], "lf": 250, "lfloor": 15, "li": 20, "liabil": 251, "liabl": 251, "librari": [56, 87, 248, 251, 258], "licens": 249, "license": 251, "licensor": 251, "lieg": [203, 207, 263], "like": [68, 162, 248, 251, 252, 258], "likewis": 251, "limit": [55, 74, 129, 167, 183, 190, 241, 251, 255, 261, 263], "lin": [54, 152], "lin2db": 230, "linalg": 254, "line": [5, 7, 9, 10, 11, 12, 13, 14, 22, 24, 26, 28, 33, 62, 124, 152, 163, 168, 212, 237, 248, 250, 251, 255, 257, 261], "line_of_sight": 8, "linear": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 53, 54, 55, 72, 129, 152, 157, 167, 168, 169, 170, 187, 192, 195, 198, 199, 200, 206, 230, 231, 236, 254, 255, 259, 263], "linearantenna": [36, 176], "linearli": 36, "lineartrajectori": 168, "lines_arrai": 258, "link": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 24, 29, 30, 32, 33, 36, 37, 53, 61, 66, 73, 83, 84, 93, 95, 98, 99, 100, 101, 102, 108, 114, 115, 116, 117, 124, 127, 130, 131, 132, 133, 134, 142, 143, 147, 167, 212, 216, 218, 220, 221, 222, 223, 224, 225, 226, 234, 235, 244, 248, 249, 251, 253, 255, 257, 258, 263, 264], "link_a": 221, "link_b": 221, "linked_fram": 61, "linkstat": [7, 30, 256], "linspac": [186, 187], "linux": [6, 250], "list": [6, 8, 15, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 59, 60, 66, 69, 76, 80, 83, 84, 85, 90, 104, 106, 124, 128, 136, 141, 146, 149, 156, 203, 209, 212, 213, 214, 220, 221, 226, 233, 250, 251, 258, 263, 264], "liter": [2, 36, 88, 152], "literatur": [51, 90, 91, 162, 163, 166], "litig": 251, "litsyn": 263, "littl": 262, "ll": [255, 258, 261], "llr": 129, "lna": 167, "lo": [8, 9, 10, 11, 12, 13, 33, 255, 257], "load": [3, 53, 82, 252, 256], "load_calibr": 82, "lobe": 255, "local": [2, 36, 61, 83, 212, 233, 251, 255], "local_characterist": 36, "locat": [18, 21, 33, 34, 36, 55, 59, 68, 80, 120, 160, 233, 240, 250, 255, 256, 257, 261, 262], "log": [55, 152, 235, 236, 238, 239, 240, 241, 242, 243, 257], "log2": [235, 262], "logarithm": [15, 35, 152], "logarithmicsequ": 54, "logic": 254, "lokal": 253, "long": [55, 73, 98, 99, 100, 101, 102, 158, 160, 161, 251], "longer": [100, 129, 213], "look": [162, 167, 252, 255], "lookup": 59, "loop": [0, 88, 123, 253, 258, 261], "lora": 237, "los_angl": [22, 26, 28, 29], "los_angles_vari": 27, "los_doppl": [27, 28], "los_doppler_frequ": [22, 26, 29], "los_gain": [27, 28], "los_phas": 28, "los_phases_vari": 27, "los_real": [9, 10, 11, 12, 13], "lose": 229, "loss": [16, 19, 20, 21, 26, 27, 28, 30, 33, 34, 192, 230, 251, 260], "lossless": 30, "losstat": [9, 10, 257], "lot": 248, "low": [63, 147, 167, 195, 259, 261, 263], "lower": [9, 55, 167], "lowpass": 82, "lowpass_bandwidth": 82, "lowpass_filt": 82, "lshift": 55, "lsst": [8, 11, 12, 13], "lt": 257, "lte": 239, "lvert": [36, 98, 100, 124], "l\u00e9onardon": [64, 68, 69, 71, 72, 74, 263], "m": [2, 3, 4, 8, 9, 14, 15, 17, 19, 24, 28, 30, 31, 32, 33, 34, 36, 39, 55, 60, 61, 64, 65, 68, 69, 70, 71, 72, 74, 79, 91, 92, 116, 145, 146, 151, 152, 154, 156, 162, 163, 166, 178, 186, 203, 208, 211, 230, 231, 233, 235, 240, 243, 250, 254, 257, 261, 263], "m_": [14, 15, 17, 36, 55], "m_n": 66, "ma": 1, "mac": [73, 263], "machin": [55, 219, 251], "maco": 250, "macrocel": [8, 22, 263], "made": [158, 249, 251], "magnitud": [2, 3, 4, 36, 93, 95, 97, 255], "mah": 263, "mahmoud": [195, 263], "mai": [0, 2, 24, 33, 37, 55, 59, 62, 66, 71, 78, 80, 83, 98, 99, 100, 101, 102, 111, 113, 114, 115, 117, 118, 119, 120, 123, 134, 142, 143, 147, 149, 150, 167, 168, 170, 171, 174, 179, 198, 205, 206, 212, 221, 233, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264], "mail": 251, "main": [53, 229, 251, 255], "maintain": [233, 249, 251], "major": [251, 259], "make": [6, 55, 167, 244, 249, 250, 251, 257], "make_target": 32, "man": [73, 263], "manag": [52, 53, 66, 77, 85, 86, 110, 219, 220, 248], "mandatori": [103, 163], "mani": [14, 251], "manipul": [55, 112], "manner": 251, "manual": [80, 169, 233, 234, 244, 250], "manual_trigg": [80, 234, 244], "map": [31, 53, 55, 92, 94, 111, 113, 119, 121, 127, 129, 139, 140, 145, 149, 151, 162, 163, 166, 235, 236, 241, 242, 243, 248, 260, 262], "mapped_symbol": 262, "mappingnod": [22, 140], "march": 251, "marcum": 230, "marcum_q": 230, "mark": 251, "markerlin": 258, "marko": [195, 263], "martin": [22, 263], "mask": [73, 136, 139, 251], "mat": 167, "match": [2, 18, 30, 39, 46, 49, 55, 59, 66, 82, 83, 84, 85, 89, 120, 152, 171, 180, 181, 184, 185, 220, 255], "matched_filt": 91, "matchedfilterjca": [91, 240], "matching_imped": 181, "materi": 251, "math": 229, "mathbb": [2, 3, 4, 8, 14, 15, 17, 19, 26, 28, 30, 31, 33, 36, 55, 99, 100, 101, 102, 152, 203, 204, 206, 207, 208, 254], "mathbf": [2, 3, 4, 8, 14, 15, 17, 19, 20, 21, 24, 26, 28, 30, 31, 33, 36, 65, 70, 98, 99, 100, 101, 102, 123, 124, 186, 254, 259], "mathcal": [2, 3, 4, 20], "mathemat": [71, 263], "mathod": 250, "mathrm": [2, 3, 4, 8, 9, 14, 15, 17, 19, 20, 21, 24, 28, 30, 31, 32, 33, 36, 51, 55, 66, 67, 70, 87, 90, 91, 92, 98, 99, 100, 101, 102, 124, 144, 147, 151, 152, 162, 163, 166, 167, 203, 204, 206, 207, 208, 211, 222, 253, 254, 261], "mathscr": 15, "mathsf": [3, 4, 15, 26, 30, 33, 98, 99, 100, 101, 102, 254], "mathwork": 252, "matlab": [31, 55, 249, 250, 257], "matplotlib": [36, 52, 55, 62, 120, 129, 197, 206, 232, 256, 257, 258, 261], "matric": [14, 24], "matrici": 60, "matrix": [2, 3, 4, 15, 20, 25, 28, 30, 33, 36, 37, 60, 61, 68, 79, 120, 152, 162, 166, 179, 181, 186, 187, 195, 218, 219, 220, 231, 254, 255], "matth": 263, "max": [20, 55, 92, 124, 151, 155, 162, 163, 166], "max_amplitud": [198, 201], "max_delai": [8, 26, 78], "max_dur": 39, "max_frame_dur": [39, 225], "max_num_clust": [8, 9, 10, 11, 12, 13], "max_num_rai": [8, 9, 10, 11, 12, 13], "max_num_sampl": 55, "max_num_tap": [8, 17, 19, 28, 30, 31, 33, 256], "max_rang": [91, 92, 151, 156, 161, 162, 163, 166, 240], "max_receive_delai": [82, 83, 234, 253], "max_relative_doppl": [92, 162, 166], "max_sampling_r": [76, 82, 83, 87], "max_timestamp": 168, "max_trajectory_timestamp": 168, "maxdetector": [153, 161], "maxim": [4, 34, 76, 82, 83, 87, 91, 112, 124, 156, 222, 240], "maximum": [8, 9, 10, 11, 12, 13, 17, 19, 26, 28, 30, 31, 33, 39, 55, 59, 78, 82, 87, 91, 92, 114, 116, 144, 147, 151, 152, 153, 162, 163, 166, 168, 198, 204, 236, 263], "maximumratiocombin": 114, "maxium": 20, "mbp": [236, 239], "mc": 167, "mcnamara": [24, 263], "mean": [7, 9, 14, 16, 17, 18, 23, 24, 27, 29, 30, 32, 36, 55, 79, 93, 95, 97, 100, 129, 131, 133, 151, 159, 173, 182, 186, 193, 199, 221, 230, 241, 242, 248, 249, 251, 255, 258, 259, 261], "mean_pow": 258, "meant": [118, 134, 149], "measur": [59, 80, 160, 189, 192, 211, 248, 251, 257, 261, 263], "mechan": 249, "medium": [73, 235, 251, 263], "meet": 251, "mehrpouyan": [124, 263], "mei02": 263, "meijer": [15, 263], "memori": [60, 167, 241], "memoryless": [69, 203, 263], "mention": 262, "menu": 251, "merchant": 251, "mere": 251, "merg": [179, 183, 251], "mesh": 62, "messag": [55, 263], "met": 251, "meter": [9, 20, 26, 34, 162, 163, 166], "method": [2, 3, 4, 7, 14, 15, 16, 17, 20, 21, 30, 32, 34, 37, 46, 49, 52, 53, 55, 66, 69, 81, 104, 105, 106, 107, 111, 120, 129, 142, 143, 151, 158, 159, 163, 164, 165, 166, 167, 190, 212, 219, 230, 248, 250, 251, 254, 255, 256, 258, 260, 262, 263], "methodologi": [22, 263], "metric": [93, 96, 161, 219], "mhz": [87, 167, 236, 239, 257], "microcel": [8, 255], "microwav": [195, 263], "mid": 238, "mid_ris": [196, 197, 202, 238], "mid_tread": [197, 202], "might": [14, 66, 179, 183, 226, 231, 241, 255, 260], "mike": 263, "mikko": [195, 263], "mimo": [1, 2, 24, 31, 105, 109, 111, 112, 116, 117, 120, 150, 241, 242, 255, 258, 262, 263], "min": [20, 55, 124, 204], "min_num_iter": 68, "min_num_sampl": [55, 235, 236, 238, 239, 240, 241, 242, 243], "min_pow": [157, 240], "minim": [9, 10, 11, 12, 13, 20, 21, 22, 23, 26, 29, 32, 34, 72, 98, 99, 100, 101, 102, 121, 127, 129, 130, 132, 142, 144, 157, 158, 160, 161, 162, 233, 248, 249, 252, 263], "minimum": [3, 55, 68, 79, 109, 111, 124, 127, 128, 188, 235, 236, 238, 239, 240, 241, 242, 243, 254], "mininum": 20, "minmal": 157, "mismatch": 179, "misrepresent": 251, "miss": 261, "mix": [10, 41, 43, 60, 83, 162, 212], "mixed_sign": [41, 43], "mixer": 195, "mixingoper": [46, 49, 90, 91, 92, 163], "mmse": [79, 236], "mmseestim": 79, "mo": 55, "mobil": [22, 31, 147, 249, 263], "mock": [56, 62, 67, 261], "mod": [65, 70], "mode": [6, 25, 36, 37, 52, 55, 57, 59, 84, 85, 123, 170, 174, 175, 176, 177, 219, 220, 251, 255], "model": [0, 2, 7, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 44, 46, 47, 48, 55, 59, 60, 66, 76, 79, 83, 84, 87, 88, 108, 109, 110, 111, 121, 124, 129, 134, 139, 142, 143, 147, 151, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 235, 236, 237, 239, 240, 241, 242, 243, 248, 250, 251, 255, 256, 258, 260, 262, 263], "model_propagation_loss": [19, 20, 21], "model_typ": [7, 22, 29, 240, 241, 242], "modem": [14, 37, 59, 66, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 188, 189, 212, 234, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 256, 257, 258, 259, 260, 262], "modem_alpha": [95, 98, 99, 100, 101, 102, 236, 238, 239, 241, 242, 243], "modem_beta": [95, 98, 99, 100, 101, 102, 239, 243], "modern": [15, 263], "modif": [248, 251], "modifi": [2, 113, 114, 115, 117, 118, 119, 150, 171, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "modul": [0, 1, 5, 6, 7, 8, 10, 14, 15, 22, 24, 29, 35, 36, 38, 52, 53, 54, 55, 56, 59, 63, 66, 73, 75, 89, 90, 103, 109, 111, 112, 113, 119, 121, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 149, 151, 162, 167, 169, 171, 201, 202, 209, 212, 229, 230, 232, 233, 234, 235, 236, 239, 241, 242, 243, 244, 248, 251, 252, 253, 254, 256, 259, 260, 262, 263], "modulation_ord": [108, 109, 110, 111, 114, 115, 116, 117, 121, 127, 129, 130, 131, 132, 133, 139, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 253, 259, 262], "molisch": [22, 263], "monitor": 232, "mono": 33, "monostat": [163, 183, 261], "mont": [55, 167, 212, 219, 220, 235, 236, 238, 239, 240, 241, 242, 243, 248, 249, 255, 256, 258, 260, 261, 263], "monte_carlo": [96, 98, 99, 100, 101, 102, 188, 189, 190, 191, 192, 219], "montecarlo": [55, 218, 219], "montecarloactor": 55, "montecarloevalu": 55, "montecarloresult": [55, 167, 219, 258], "montecarlosampl": 55, "more": [22, 24, 33, 34, 55, 116, 124, 127, 130, 131, 132, 133, 137, 140, 151, 167, 170, 174, 195, 197, 212, 232, 248, 251, 253, 257, 258], "moreov": 251, "most": [37, 46, 62, 65, 70, 73, 83, 93, 123, 124, 127, 128, 167, 193, 212, 233, 250, 251, 255, 256, 259, 261, 264], "mother": [58, 209, 210], "mother_nod": [58, 209, 210], "motion": 168, "moulat": 111, "move": [33, 168, 256], "moveabl": [32, 83, 168, 212], "movebl": 32, "movement": 168, "mu": [162, 236], "muhammad": [195, 263], "multi": [2, 3, 4, 14, 31, 119, 149, 163, 249, 263], "multicarri": 134, "multicor": [167, 258], "multidimension": [55, 118, 148, 149], "multipath": [14, 22, 23, 29, 33, 124, 258], "multipathfad": [235, 243], "multipathfading5gtdl": 29, "multipathfadingchannel": [22, 23, 24, 26, 27, 29], "multipathfadingcost256": 22, "multipathfadingr": [26, 27, 28], "multipathfadingrealizaiton": 24, "multipathfadingsampl": [24, 26, 27, 28], "multipl": [0, 24, 32, 33, 53, 54, 55, 59, 66, 111, 112, 114, 115, 116, 117, 119, 134, 140, 142, 143, 149, 163, 167, 169, 212, 222, 223, 224, 225, 226, 248, 255, 256, 258, 261, 262, 263], "multiplex": [112, 142, 143, 144, 241, 242], "multipli": [93, 95, 97], "multitargetradarchannel": [32, 33], "multitargetradarchannelr": 32, "multitud": 248, "must": [14, 53, 55, 60, 73, 80, 114, 115, 116, 121, 152, 167, 197, 198, 221, 226, 233, 251, 254, 260], "mutabl": 53, "mutual": [83, 167, 171, 180, 181, 182, 183, 212], "mvdr": [3, 254], "mxn": 231, "mxt_i": 60, "mypi": 233, "n": [2, 3, 4, 8, 19, 20, 21, 24, 26, 66, 67, 73, 79, 92, 116, 121, 127, 129, 139, 167, 186, 231, 241, 243, 250, 254, 257, 259], "n0": [162, 188, 189, 190, 212, 257, 261], "n_": [8, 14, 15, 17, 19, 28, 30, 31, 33], "n_0": 191, "n_in": 37, "n_out": 37, "n_rx": 37, "n_tx": 37, "name": [7, 10, 14, 15, 19, 22, 29, 33, 36, 38, 52, 53, 54, 55, 59, 80, 95, 123, 135, 136, 201, 202, 221, 230, 248, 251, 252, 260, 262], "namespac": [0, 53, 248], "nasir": [124, 263], "nativ": [36, 249, 250, 253], "natur": [14, 134, 251], "ncmf18": 263, "ncol": 62, "ndarrai": [2, 3, 4, 7, 8, 17, 18, 25, 26, 28, 31, 33, 34, 36, 37, 54, 55, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 81, 82, 83, 94, 96, 100, 102, 104, 105, 106, 107, 120, 121, 124, 127, 128, 129, 136, 137, 138, 139, 140, 141, 146, 152, 154, 156, 158, 159, 160, 161, 162, 166, 168, 181, 186, 187, 195, 197, 204, 205, 206, 207, 208, 212, 230, 231, 254, 258, 259, 262], "ndindex": [171, 258], "ndm": 263, "nearest": [8, 15, 17, 19, 28, 30, 31, 33, 220, 225, 227, 255, 256], "necessari": [66, 241, 251], "necessarili": 231, "need": [60, 167, 190, 248, 250, 251, 257, 258], "neg": [7, 20, 39, 55, 76, 79, 82, 87, 121, 190, 191, 192, 197, 211, 212, 231], "neighbour": 127, "neither": [14, 30, 212, 251], "network": [19, 31, 124, 181, 212, 251, 263], "never": 55, "new": [6, 7, 8, 14, 15, 20, 21, 30, 31, 32, 34, 36, 37, 55, 57, 58, 59, 60, 61, 62, 66, 73, 77, 80, 84, 85, 86, 94, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 140, 149, 156, 158, 160, 161, 162, 167, 168, 169, 173, 179, 183, 185, 186, 187, 190, 196, 197, 203, 206, 209, 212, 219, 220, 221, 222, 223, 224, 225, 226, 233, 237, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262], "new_devic": [9, 10, 11, 12, 13, 15, 57, 59, 77, 84, 86, 98, 99, 100, 101, 102, 108, 109, 110, 111, 113, 114, 115, 116, 117, 134, 142, 143, 147, 151, 158, 160, 161, 162, 167, 168, 169, 171, 179, 183, 185, 186, 187, 190, 196, 203, 209, 212, 220, 221, 222, 223, 224, 225, 226, 248, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262], "new_dimens": [9, 10, 11, 12, 13, 14, 55, 80, 98, 99, 100, 101, 102, 158, 161, 167, 171, 248, 254, 255, 256, 258, 259, 260, 261, 262], "newaxi": [254, 262], "newest": 250, "newli": [8, 15, 32, 36, 52, 55, 62, 80, 84, 149, 156, 173, 219, 220, 250, 254, 256, 258, 259, 260, 262], "next": [46, 66, 73, 251, 260], "nikov": 15, "nimr": 263, "nlo": [8, 9, 10, 11, 12, 13, 24, 263], "nlos_angl": 28, "nlos_angles_vari": 27, "nlos_doppl": [27, 28], "nlos_gain": [27, 28], "nlos_phas": 28, "nlos_phases_vari": 27, "nlos_real": [9, 10, 11, 12, 13], "no_antenna": 195, "no_sampl": 195, "node": [22, 31, 55, 58, 94, 140, 149, 209, 210, 219], "nodelaycalibr": 82, "nois": [8, 17, 19, 28, 30, 31, 33, 34, 39, 60, 79, 82, 83, 84, 116, 160, 167, 188, 189, 191, 192, 193, 194, 195, 196, 197, 212, 213, 215, 216, 220, 235, 236, 238, 239, 240, 241, 242, 243, 248, 259, 261, 262, 263], "noise_level": [9, 10, 11, 12, 13, 14, 83, 84, 98, 99, 100, 101, 102, 161, 162, 167, 190, 212, 220, 235, 236, 238, 239, 240, 241, 242, 243, 248, 254, 255, 256, 257, 259, 260, 261, 262], "noise_model": [83, 84, 190, 212, 220], "noise_pow": [60, 79, 82, 83], "noise_r": [213, 215, 216], "noiseless": [83, 212], "noiselevel": [83, 84, 188, 189, 190, 191, 192, 212, 220], "noisemodel": [83, 84, 190, 193, 212, 220], "noiser": [190, 194, 213, 215, 216], "noleakagecalibr": 82, "noll": [249, 263], "non": [8, 24, 26, 28, 33, 37, 55, 121, 123, 124, 158, 167, 209, 236, 238, 251, 263], "noncommerci": 251, "none": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 103, 104, 106, 108, 109, 110, 111, 119, 120, 121, 122, 123, 124, 125, 127, 129, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 156, 160, 161, 162, 163, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 187, 190, 192, 193, 195, 197, 198, 201, 202, 206, 209, 210, 211, 212, 213, 219, 220, 222, 223, 224, 225, 226, 230, 232, 254, 256, 258], "nonlinear": [195, 203, 207, 208, 263], "nophasenois": 210, "nor": [14, 30, 212, 251], "norm": [61, 113], "normal": [8, 11, 12, 13, 18, 61, 152, 157, 158, 186, 206, 212, 251, 262], "normalize_pow": 152, "normalize_quaternion": 61, "norman": [24, 263], "notabl": 261, "notat": [14, 195], "note": [14, 24, 33, 37, 54, 60, 82, 102, 109, 111, 114, 115, 116, 120, 179, 183, 197, 198, 212, 221, 225, 248, 250, 252, 253], "notebook": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "noth": [30, 52, 251], "notic": 251, "notifi": [171, 251], "notimplementederror": [60, 113, 114, 115, 117, 118, 119], "notin": 14, "notwithstand": 251, "novel": [24, 263], "novemb": [203, 208, 251, 263], "now": [14, 167, 232, 237, 248, 253, 254, 255, 256, 257, 258, 259, 261, 262], "np": [2, 3, 4, 9, 10, 11, 12, 13, 18, 31, 33, 34, 36, 37, 55, 60, 61, 65, 66, 67, 70, 73, 76, 79, 82, 83, 94, 96, 100, 102, 107, 116, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 146, 152, 154, 158, 159, 160, 161, 167, 168, 169, 171, 181, 186, 187, 195, 197, 204, 205, 206, 207, 208, 212, 222, 223, 224, 225, 226, 230, 231, 254, 255, 256, 257, 258, 259, 260, 262], "nrow": 62, "nrt": 190, "null": [32, 33, 135, 160, 234, 241], "null_hypothesi": 33, "num": 129, "num_actor": [55, 167, 219, 241], "num_antenna": [36, 39, 41, 214, 217], "num_appended_zero": 87, "num_artifact": 55, "num_bin": 37, "num_bit": 94, "num_block": [116, 120], "num_chirp": [162, 261], "num_clust": 8, "num_code_bit": 66, "num_data_bit": 66, "num_data_bits_per_fram": 103, "num_data_chirp": [127, 235, 243], "num_data_symbol": [9, 10, 11, 12, 13, 14, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 121, 127, 129, 130, 131, 132, 133, 139, 221, 236, 238, 239, 240, 248, 253, 259, 262], "num_delay_tap": 37, "num_devic": [59, 226], "num_device_recept": 50, "num_device_transmiss": 50, "num_drop": [57, 59, 234, 244, 248, 255, 257, 261], "num_element_typ": 136, "num_emerging_sign": 41, "num_encoded_block": 119, "num_error": 161, "num_evalu": [55, 80], "num_fram": [104, 106], "num_frequency_bin": 37, "num_guard_sampl": 129, "num_impinging_sign": 40, "num_input_block": 119, "num_input_stream": [113, 114, 115, 116, 117, 149, 150, 260], "num_iter": [68, 74, 78], "num_offset_sampl": [223, 227], "num_oper": 59, "num_operator_input": 45, "num_operator_recept": 42, "num_operator_transmiss": 43, "num_output_stream": [113, 114, 115, 116, 117, 149, 150, 260], "num_path": 69, "num_pilot_chirp": 127, "num_point": 156, "num_port": 36, "num_postamble_symbol": [129, 132], "num_preamble_symbol": [9, 10, 11, 12, 13, 14, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 129, 130, 131, 132, 133, 221, 236, 238, 239, 240, 248, 253, 259], "num_prepended_zero": 87, "num_prepeneded_zero": 87, "num_prob": 79, "num_quantization_bit": [196, 197, 238, 261], "num_quantization_level": 197, "num_rai": 8, "num_recalled_drop": 257, "num_receiv": 59, "num_receive_antenna": [17, 36, 39, 46, 212, 254, 256], "num_receive_focus_angl": 254, "num_receive_focus_point": [2, 3, 4, 254], "num_receive_input_stream": [2, 3, 4, 150, 254], "num_receive_output_stream": [2, 3, 4, 150, 254], "num_receive_port": [36, 39, 46, 87, 103, 109, 254], "num_receive_stream": 37, "num_refer": [136, 137, 140, 141], "num_repetit": [137, 138, 140, 141, 234, 239, 241, 242, 244], "num_resolvable_path": 26, "num_sampl": [8, 17, 19, 28, 30, 31, 33, 37, 55, 56, 60, 82, 98, 99, 100, 101, 102, 124, 128, 137, 138, 140, 141, 146, 161, 186, 219, 235, 236, 238, 239, 240, 241, 242, 243, 254, 256, 259, 262], "num_sample_point": 55, "num_samples_in": 231, "num_samples_out": 231, "num_scalar": 18, "num_sinusoid": [18, 26, 29], "num_stream": [60, 120, 124, 128, 146, 255], "num_subcarri": [113, 134, 136, 137, 139, 140, 141, 142, 143, 144, 147, 234, 239, 241, 242, 244], "num_symbol": [37, 120, 121, 136, 137, 140, 141], "num_threshold": 160, "num_transmit_antenna": [17, 36, 39, 49, 212, 255, 256], "num_transmit_focus_point": [2, 4], "num_transmit_input_stream": [2, 4, 150], "num_transmit_output_stream": [2, 4, 150], "num_transmit_port": [36, 39, 49, 87, 103, 111, 212], "num_transmit_stream": [37, 120], "num_transmitt": 59, "num_wavelet_sampl": 79, "num_word": [137, 140, 141], "number": [2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 26, 28, 29, 30, 31, 33, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 93, 94, 98, 99, 100, 101, 102, 103, 104, 106, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144, 147, 149, 150, 152, 156, 160, 161, 162, 167, 171, 178, 180, 183, 184, 185, 186, 190, 193, 197, 198, 209, 210, 212, 214, 215, 217, 219, 220, 222, 223, 224, 225, 226, 227, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 251, 254, 255, 256, 258, 260, 262], "numer": [55, 167, 252, 263], "numerologi": 239, "numpi": [2, 3, 4, 18, 25, 26, 28, 33, 36, 37, 42, 45, 55, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 82, 83, 94, 96, 104, 106, 113, 120, 137, 138, 140, 141, 152, 158, 159, 160, 161, 162, 166, 186, 187, 212, 213, 254, 255, 256, 257, 258, 259, 260, 262], "nyquist": 236, "o": [6, 64, 68, 69, 71, 72, 74, 261, 263], "o2i": [11, 12, 13], "o2i_r": [11, 12, 13], "o2ist": [9, 10, 11, 12, 13, 255], "object": [8, 14, 17, 18, 22, 32, 33, 36, 37, 42, 43, 46, 49, 51, 53, 55, 56, 58, 60, 61, 62, 73, 80, 83, 96, 98, 99, 100, 101, 102, 108, 109, 111, 115, 117, 119, 120, 140, 149, 150, 154, 155, 158, 159, 160, 161, 163, 166, 168, 190, 206, 212, 214, 215, 216, 219, 222, 223, 224, 225, 226, 236, 240, 248, 251, 252, 255, 256, 257, 258, 262], "oblig": 251, "observ": [17, 55, 123, 258, 262], "obtain": [55, 190, 249], "obvisouli": 248, "occasion": 251, "occupi": 136, "occur": [55, 57, 119, 149, 251], "occurr": 67, "ocdm": [93, 121, 126, 134], "ocdmwaveform": 142, "oct2pi": 250, "octav": [31, 250], "octob": [64, 68, 69, 71, 72, 74, 263], "oeprat": 240, "ofdm": [89, 93, 113, 121, 126, 134, 136, 137, 138, 139, 140, 141, 145, 146, 147, 203, 207, 234, 237, 244, 256, 257, 258, 260, 263], "ofdm_radar": 92, "ofdmidealchannelestim": 256, "ofdmradar": 92, "ofdmsynchron": 146, "ofdmwaveform": [92, 113, 143, 144, 145, 147, 256, 257, 258, 260], "off": [129, 131, 133, 206, 239, 255], "off_target_focu": 255, "offer": [19, 75, 93, 248, 251, 257, 258], "offic": [8, 257], "office_typ": [10, 257], "officetyp": [10, 257], "offici": [249, 250, 251, 252, 264], "offlin": 261, "offset": [8, 18, 60, 61, 73, 123, 124, 127, 137, 138, 139, 140, 141, 146, 195, 221, 222, 226, 227, 228, 232, 235, 243], "older": 251, "omega": 26, "omega_": [24, 26], "omit": 250, "ommit": 14, "on_target_focu": 255, "onc": [55, 167, 197, 219, 221, 227, 258], "one": [14, 15, 34, 36, 37, 39, 55, 57, 60, 65, 70, 94, 116, 117, 118, 119, 124, 127, 128, 129, 131, 133, 134, 136, 139, 142, 143, 147, 149, 157, 162, 167, 169, 170, 171, 174, 179, 190, 195, 197, 203, 207, 209, 212, 213, 214, 217, 219, 234, 239, 241, 242, 244, 248, 250, 251, 258, 262], "ones": [30, 116, 212, 255, 256], "onli": [15, 24, 32, 33, 34, 36, 46, 49, 51, 52, 53, 56, 66, 67, 73, 79, 83, 87, 91, 92, 103, 109, 111, 116, 120, 121, 123, 124, 127, 129, 134, 139, 142, 143, 147, 157, 160, 163, 190, 196, 197, 200, 212, 219, 220, 221, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261], "onlin": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "onto": [32, 36, 39, 40, 42, 45, 59, 60, 82, 84, 85, 120, 121, 127, 129, 134, 139, 142, 143, 147, 171, 212, 213, 216, 220, 254, 261], "open": [10, 233, 249, 250, 251, 257, 263], "opensourc": 251, "oper": [2, 4, 14, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 59, 63, 65, 66, 67, 70, 73, 76, 82, 83, 84, 85, 87, 89, 91, 92, 103, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 123, 149, 150, 151, 159, 161, 163, 170, 174, 175, 176, 177, 182, 190, 199, 212, 213, 214, 215, 216, 217, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264], "operat": 240, "operationresult": [44, 47, 48, 90, 104, 105, 106, 107], "operator": [39, 59], "operator_input": [39, 42, 45, 50, 59, 213, 216, 255], "operator_recept": [42, 216, 248, 257], "operator_separ": [42, 212, 213, 214, 216, 243], "operator_transmiss": [39, 43, 212, 217, 248, 257], "operatornam": 15, "operatorrecept": 42, "opportun": 251, "optim": [55, 72, 114, 124, 212, 258, 262, 263], "optimum": 263, "option": [2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 70, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 156, 157, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 195, 197, 198, 199, 200, 206, 207, 209, 210, 212, 219, 220, 222, 223, 224, 225, 226, 230, 231, 251], "order": [1, 6, 14, 33, 54, 55, 65, 66, 67, 73, 119, 121, 127, 129, 130, 131, 132, 133, 137, 139, 140, 149, 167, 196, 211, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 248, 250, 251, 255, 258, 261, 262, 264], "org": [4, 8, 9, 10, 11, 12, 13, 22, 29, 64, 68, 69, 71, 72, 73, 74, 195, 244, 251, 263], "organ": 251, "orient": [14, 17, 21, 36, 61, 83, 167, 168, 170, 171, 172, 174, 175, 176, 177, 212, 248], "origin": [15, 39, 73, 83, 92, 100, 154, 198, 199, 200, 212, 251], "ortho": 113, "orthogon": [117, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "orthogonalleastsquareschannelestim": [134, 142, 143, 147, 257], "orthogonalwaveform": [134, 138, 139, 141, 142, 144, 147], "oscial": 209, "oscil": [167, 195, 209, 210, 263], "oscillatorphasenois": [211, 238], "osical": 209, "ot": 2, "otf": [93, 121, 126, 134, 263], "otfswaveform": 147, "other": [21, 55, 65, 66, 67, 70, 73, 123, 167, 168, 179, 182, 206, 221, 226, 234, 235, 239, 241, 242, 243, 244, 248, 251, 257, 258], "otherwis": [2, 3, 4, 30, 60, 83, 212, 251], "ottersten": [24, 263], "our": [251, 254, 255, 256, 258, 259, 260, 261, 262], "out": [55, 93, 209, 248, 251], "outer": 255, "outlin": [9, 10, 11, 12, 13, 20, 21, 22, 23, 26, 29, 32, 34, 98, 99, 100, 101, 102, 253, 254, 259, 261], "outofprocess": 252, "output": [2, 3, 4, 6, 14, 18, 31, 39, 42, 43, 44, 52, 54, 55, 59, 65, 66, 67, 70, 73, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 129, 149, 150, 158, 159, 160, 161, 197, 212, 217, 219, 220, 231, 243, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "output_dir": 6, "outsid": [8, 14, 212, 251], "over": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 32, 33, 34, 37, 39, 42, 43, 45, 47, 48, 49, 55, 59, 60, 65, 71, 75, 76, 80, 82, 83, 84, 85, 90, 94, 96, 103, 104, 105, 106, 107, 116, 123, 124, 134, 142, 143, 147, 151, 158, 159, 161, 164, 165, 167, 168, 169, 170, 171, 174, 184, 185, 192, 195, 212, 213, 216, 217, 219, 220, 222, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 255, 256, 257, 258, 260, 261, 262, 263], "overal": [24, 33, 134, 142, 143, 147, 162, 167], "overflow": 60, "overlap": [129, 221, 236], "overlin": [19, 20, 21, 33], "oversampl": [121, 129, 132, 253], "oversampling_factor": [9, 10, 11, 12, 13, 14, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 129, 130, 131, 132, 133, 221, 236, 238, 240, 248, 253, 259, 262], "oversight": 248, "overview": [22, 124, 248, 263], "overwrit": [59, 80, 257, 261], "overwritten": 206, "own": [7, 19, 20, 21, 24, 30, 32, 34, 83, 205, 237, 248, 249, 251], "owt": [137, 138, 140, 145], "oxygen": [8, 11, 12, 13], "oxygen_absorpt": [8, 11, 12, 13], "p": [3, 4, 21, 24, 33, 55, 73, 74, 116, 254, 263], "p_": 207, "pa": 167, "packag": [0, 1, 93, 248, 250, 251, 253], "packbit": 262, "pad": [30, 37, 66, 87, 98, 99, 101, 102, 136], "pair": [8, 186], "panahi": [211, 263], "paper": [211, 251, 263], "paragraph": 251, "parallel": [117, 167, 219, 248, 258], "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 255, 256, 260, 261], "parameter": [8, 24, 29, 160, 167, 219, 261], "parametr": 22, "paramt": 55, "paramter": 15, "parent": 87, "pariti": [63, 263], "pars": 53, "part": [0, 15, 22, 46, 49, 51, 56, 91, 92, 109, 111, 121, 127, 129, 137, 139, 163, 186, 193, 197, 198, 251, 255, 263], "parti": [249, 251], "partial": 221, "particular": 251, "particularli": 147, "partit": [99, 101, 102, 124], "partitionin": 109, "partner": 221, "pass": [8, 9, 10, 11, 12, 13, 22, 32, 36, 55, 60, 87, 140, 149, 167, 173, 186, 187, 190, 219, 233, 248, 263], "password": 251, "patch": [36, 78, 169, 170, 248, 253], "patchantenna": [36, 177], "patent": 251, "path": [6, 8, 24, 26, 28, 29, 31, 33, 52, 53, 55, 59, 62, 69, 82, 94, 124, 129, 237, 250, 252, 261], "path_delai": 31, "path_gain": 31, "path_real": 28, "pathcollect": 62, "pathreal": 28, "pattern": [141, 167, 170, 179, 234, 239, 241, 242, 244, 255, 256, 258, 260], "paus": [235, 239, 243], "payload": [144, 147], "payment": 251, "pcl": 161, "pdf": [8, 9, 10, 11, 12, 13, 22, 29, 73, 130, 131, 132, 133, 162, 202, 263], "pdt": [80, 85], "peak": [79, 127, 128, 157], "peak_detect": 157, "peak_promin": [127, 128], "pedersen": [22, 263], "peer": [251, 263], "pep8": 233, "per": [8, 9, 10, 11, 12, 13, 17, 19, 28, 30, 31, 33, 55, 56, 64, 65, 67, 69, 70, 71, 72, 74, 79, 102, 103, 113, 114, 115, 117, 118, 119, 120, 121, 127, 129, 134, 139, 142, 143, 144, 147, 162, 163, 188, 189, 219, 227, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 254, 255, 256], "perceiv": [8, 33, 34, 124], "perfect": [15, 83, 179, 183, 212, 248, 261], "perfectcoupl": [182, 212], "perfectisol": 185, "perfectli": 224, "perform": [14, 37, 55, 93, 95, 96, 97, 98, 99, 100, 101, 102, 109, 111, 121, 149, 158, 159, 160, 161, 167, 171, 183, 190, 211, 212, 219, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 254, 255, 256, 258, 260, 261, 263], "performance_tim": 55, "periodogram": [4, 263], "peripher": 75, "perman": 251, "permiss": 251, "permit": [59, 251], "perpetu": 251, "person": 251, "perspect": [179, 183], "pertin": 251, "petr": 116, "pgt": 128, "phase": [7, 18, 22, 24, 26, 28, 30, 33, 36, 129, 167, 170, 174, 175, 176, 177, 195, 205, 206, 208, 238, 256, 263], "phase_alpha": 208, "phase_beta": 208, "phase_nois": [195, 203, 209, 210, 211, 238], "phase_offset": [195, 238], "phase_shift": 256, "phase_shift_vari": 256, "phase_vari": 32, "phasenois": [195, 209, 210, 211], "phaseshiftchannel": 256, "phaseshiftchannelr": 256, "phaseshiftchannelsampl": 256, "phenomenon": 183, "phi": [3, 4, 8, 36, 208, 211, 254], "phi_": [8, 24, 33], "phi_0": 211, "phi_2": 211, "phi_3": 211, "phy": [73, 263], "phyical": 77, "physic": [14, 15, 33, 39, 73, 75, 78, 79, 80, 88, 93, 167, 179, 183, 212, 219, 220, 226, 235, 236, 238, 239, 240, 241, 242, 243, 248, 251, 255, 256, 261, 263], "physical_devic": [78, 79], "physicaldevic": [76, 78, 79, 82, 83, 87, 88, 248], "physicaldevicedummi": [83, 84, 248], "physicalradartarget": 32, "physicalscenario": [77, 84, 85, 86, 248], "physicalscenariodummi": [84, 248], "physicalscenariotyp": 80, "pi": [19, 20, 21, 24, 33, 36, 130, 131, 132, 133, 167, 212, 254, 255, 256], "pick": [109, 121, 127, 129, 137, 138, 139, 140, 141, 183, 262], "pick_sampl": [137, 138, 140, 141], "pick_symbol": 137, "pickl": 55, "pid": 254, "piec": 251, "pignoli": [64, 68, 69, 71, 72, 74, 263], "pii": [64, 68, 69, 71, 72, 74, 263], "pilot": [121, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 143, 144, 146, 147, 239], "pilot_el": [140, 145], "pilot_r": [9, 10, 11, 12, 13, 14, 129, 132, 221, 236, 238, 239, 240, 253], "pilot_sect": [134, 139, 142, 143, 144, 147], "pilot_sequ": [139, 142, 144, 147], "pilot_sign": [121, 127, 129, 139], "pilot_symbol": 121, "pilot_symbol_sequ": [121, 129, 130, 131, 132, 133], "pilotcommunicationwaveform": [121, 127, 129, 130, 131, 132, 133, 139, 142, 144, 147], "pilotcorrel": 128, "pilotsect": [134, 139, 140, 142, 143, 144, 145, 147], "pilotsymbolsequ": [121, 129, 132, 139, 142, 144, 147], "ping": [162, 163, 166], "pip": [233, 244, 250], "pipelin": [14, 35, 55, 63, 64, 68, 69, 71, 72, 74, 80, 93, 112, 123, 163, 219, 233, 248, 249, 262], "pitch": 61, "pixel": 232, "place": [111, 121, 127, 129, 134, 137, 138, 139, 140, 141, 142, 143, 147, 251, 255, 262], "place_sampl": [137, 138, 140, 141], "place_symbol": [137, 140], "placed_symbol": [121, 127, 129, 139], "plain": 66, "plan": 250, "planar": [36, 255], "plane": [120, 255, 262], "platform": 248, "playback": 59, "playback_channel": [76, 234], "playback_devic": [76, 234], "pleas": [8, 31, 151, 237, 248, 249, 250, 252, 257], "ploariz": 36, "plot": [6, 8, 9, 10, 11, 12, 13, 36, 37, 55, 60, 62, 75, 79, 80, 88, 95, 96, 98, 99, 100, 101, 102, 120, 129, 151, 152, 156, 158, 160, 161, 167, 168, 188, 189, 191, 192, 197, 206, 219, 221, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "plot_angl": [8, 152], "plot_characterist": 206, "plot_constel": [120, 248, 253, 257, 262], "plot_filt": 129, "plot_filter_correl": 129, "plot_gain": 36, "plot_grid": 139, "plot_inform": [80, 261], "plot_pattern": [171, 254, 255], "plot_polar": 36, "plot_power_delai": [8, 28], "plot_quant": 197, "plot_rai": 8, "plot_rang": [151, 152], "plot_range_veloc": [151, 152], "plot_result": [219, 235, 236, 238, 239, 240, 241, 242, 243], "plot_scal": [55, 235, 236, 238, 239, 240, 241, 242, 243], "plot_surfac": [55, 96, 98, 99, 100, 101, 102, 161, 236], "plot_topologi": [36, 255], "plotvisu": [55, 62, 88, 100, 102, 160, 258], "plt": [9, 10, 11, 12, 13, 36, 62, 120, 168, 197, 256, 257, 258, 261], "plu": [8, 17, 19, 28, 30, 31, 33, 198, 251], "plug": [248, 256], "plugin": 31, "pmatrix": 36, "pn": 167, "png": [130, 131, 132, 133, 162, 202], "po": 61, "point": [0, 1, 2, 3, 4, 6, 7, 14, 17, 20, 24, 30, 34, 36, 52, 55, 57, 59, 60, 61, 80, 87, 109, 111, 151, 153, 155, 157, 158, 160, 161, 163, 164, 168, 197, 203, 206, 211, 236, 237, 241, 249, 250, 251, 252, 255, 256], "point_index": 55, "pointdetect": [154, 156], "pointer": 251, "polar": [7, 8, 33, 36, 63, 169, 263], "polarimetr": [167, 170, 171], "polarization_transform": 8, "polarsccod": 69, "polarsclcod": 69, "poly_a": [72, 74], "poly_b": [72, 74], "polynomi": [71, 72, 74, 263], "pop_precod": [149, 260], "popul": 169, "popular": 252, "porperti": 190, "port": [36, 39, 46, 49, 86, 87, 90, 92, 103, 108, 109, 110, 111, 169, 171, 173, 244, 255], "portion": [251, 253], "pose": [9, 10, 11, 12, 13, 36, 39, 61, 83, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 212, 255], "posit": [14, 17, 18, 21, 32, 33, 34, 36, 61, 65, 73, 79, 83, 154, 158, 161, 167, 168, 170, 171, 172, 174, 175, 176, 177, 197, 212, 219, 248, 255, 256], "position_a": 18, "position_b": 18, "possess": 251, "possibl": [37, 60, 119, 120, 149, 248, 251, 252, 257], "post": [134, 142, 143, 147, 236], "postambl": [129, 132], "postion": 212, "postiv": 25, "postprocess": [9, 10, 11, 12, 13, 14], "potenti": 55, "power": [1, 2, 3, 4, 8, 9, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 46, 49, 51, 54, 56, 60, 64, 71, 79, 82, 83, 88, 90, 91, 92, 109, 111, 116, 121, 127, 129, 139, 151, 152, 154, 157, 162, 163, 166, 167, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 211, 212, 230, 235, 236, 238, 239, 240, 241, 242, 243, 251, 254, 255, 258, 261, 262, 263], "power_amplifi": [195, 203, 204, 205, 206, 207, 208, 233, 236, 238], "power_estim": 258, "power_profil": [26, 27, 28, 235, 243], "poweramplifi": [195, 203, 204, 205, 206, 207, 208], "powerartifact": 258, "powerestim": 258, "powerevalu": 258, "powerevaluationresult": 258, "practic": [98, 99, 100, 101, 102, 167, 251, 262], "pre": [128, 250], "preambl": [128, 129, 130, 131, 132, 133, 239, 251], "preced": [144, 147], "precis": [251, 253], "precod": [0, 1, 2, 93, 103, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 127, 147, 239, 241, 242, 248, 258, 264], "precodertyp": 149, "predecessor": 251, "predict": 261, "prefer": [37, 51, 90, 91, 152, 163, 251], "prefix": [136, 137, 140], "prefix_ratio": [113, 136, 234, 239, 241, 242, 244], "prefix_typ": [136, 239, 241, 242], "prefixtyp": [134, 136, 142, 143, 147, 239, 241, 242], "preliminari": 250, "prematur": [55, 68, 160, 161, 235, 236, 238, 239, 240, 241, 242, 243], "prepar": 81, "prepare_plot": 81, "prepend": 87, "preprocessor": 233, "present": [232, 251, 261], "preserv": [54, 204, 251], "preset": [8, 9, 10, 11, 12, 13], "prevent": [73, 128, 251], "previou": [55, 59, 212, 251, 257], "price": 251, "prieto": [31, 263], "primari": [6, 124, 190], "primarili": [93, 111, 220, 251], "print": [38, 52, 54, 55, 167, 255, 259, 262], "prior": [233, 251], "prioriti": 80, "privat": [55, 251], "pro": 255, "proagat": [8, 15, 17, 19, 28, 30, 31, 33], "probabl": [55, 151, 159, 160, 161, 162, 240, 249, 254, 258], "probe": [1, 2, 3, 4, 79, 163, 255], "probe_focus_point": [2, 254], "problem": [124, 183, 251], "proc": [3, 263], "procedur": 251, "proceed": [3, 15, 74, 114, 263], "process": [0, 1, 2, 15, 16, 18, 39, 40, 42, 44, 46, 53, 55, 59, 63, 65, 66, 82, 83, 84, 85, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 116, 117, 118, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 139, 142, 143, 144, 147, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 166, 167, 190, 193, 195, 196, 203, 212, 215, 219, 220, 236, 242, 248, 249, 250, 254, 255, 257, 258, 259, 260, 262, 263], "process_from_r": 212, "process_input": [39, 59, 82, 83, 84, 85, 212, 220], "processeddeviceinput": [39, 42, 45, 59, 82, 213, 216], "processedsimulateddeviceinput": [83, 212, 213, 216, 220], "processedsimulateddevicerecept": 218, "procur": 251, "produc": [66, 251], "product": [251, 255], "profil": [8, 88, 92, 151, 152], "program": [0, 55, 248, 251, 258, 260], "programm": [251, 258], "progress_log_interv": 55, "prohibit": 251, "project": [55, 64, 68, 69, 71, 72, 74, 120, 233, 248, 249, 251], "promin": [79, 127, 128, 251], "propag": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 122, 123, 124, 129, 148, 151, 162, 163, 166, 167, 192, 206, 218, 219, 220, 221, 230, 248, 251, 255, 256, 257, 259, 261, 263], "propagated_sampl": 33, "propagated_sign": 255, "propagation_delai": 33, "propagation_matrix": 255, "propagation_respons": 33, "propagt": [26, 255], "proper": [87, 250, 253], "properli": [248, 250, 252, 257, 262], "properti": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 144, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 236, 241, 248, 251, 254, 256, 258, 259, 260, 262], "propgat": [33, 167], "propgram": [93, 143], "propos": 24, "prose": 260, "protect": 251, "protoc": 102, "protocol": [87, 249, 251], "prototyp": [2, 206, 254], "prove": 251, "provid": [0, 1, 2, 8, 14, 15, 24, 35, 39, 46, 53, 54, 55, 59, 62, 63, 66, 75, 82, 83, 87, 89, 93, 116, 120, 129, 147, 148, 151, 160, 167, 168, 184, 212, 219, 220, 231, 233, 237, 248, 250, 251, 252, 255, 256, 263, 264], "provis": 251, "provision": 251, "proxi": 251, "psd": 211, "pseud": [190, 193], "pseudo": [15, 30, 39, 46, 49, 58, 59, 73, 77, 83, 85, 94, 103, 109, 140, 144, 145, 147, 209, 210, 212, 219, 262], "pseudorandomgener": 73, "psk": [129, 241, 262], "psk_qam_map": 129, "pskqammap": [129, 139], "public": [92, 251], "publicli": 251, "publish": [249, 251, 263], "pull": [249, 250], "puls": [129, 162, 239, 253], "pulse_rep_interv": [162, 261], "pure": [14, 24], "purpos": [248, 251, 255, 257, 259, 260], "pursuant": 251, "pwoer": 205, "py": [233, 252, 255], "pybind11_object": [64, 68, 69, 71, 72, 74], "pyenv": 252, "pymont": 35, "pypi": 233, "pyplot": [120, 256, 257, 258, 261], "python": [6, 31, 64, 68, 69, 71, 72, 74, 167, 233, 237, 248, 249, 250, 252], "q": [36, 67, 167, 195, 230, 238], "q_m": 230, "qam": [129, 237, 239], "qpsk": 236, "qt": 232, "qt5agg": 232, "quad": [2, 15, 62, 92, 124, 211], "quadmesh": 62, "quadmeshvisu": 62, "quadrant": 255, "quadratur": 167, "quadriga": [14, 263], "quadriga_interfac": 31, "quadriga_src": 250, "quadrigachannel": 31, "quadrigachannelr": 31, "quadrigachannelsampl": 31, "quadrigainterfac": 31, "qualifi": 251, "qualiti": 251, "qualnam": [7, 10, 15, 22, 29, 36, 38, 52, 53, 54, 59, 135, 136, 201, 202, 230], "quantiti": 198, "quantiz": [167, 196, 197, 198, 199, 200, 238, 261], "quantizationtyp": 197, "quantized_sign": 200, "quantizer_typ": [196, 197, 238], "quantizertyp": [196, 197, 202, 238], "quasi": 31, "quaternion": 61, "queri": [32, 33, 36, 39, 111, 149, 163, 212, 222, 223, 224, 225, 226, 232, 253, 254], "query_devic": 253, "question": [55, 149, 220, 232, 249], "queue": 73, "queue_length": 88, "quickli": 248, "quit": 241, "qzanit": 200, "r": [3, 14, 26, 31, 36, 55, 64, 65, 66, 68, 69, 71, 72, 73, 74, 92, 152, 162, 166, 204, 206, 207, 208, 241, 254, 259, 263], "r_": [67, 162, 163, 166], "r_n": [65, 66, 70], "ra": [55, 263], "radar": [14, 32, 34, 88, 89, 90, 91, 151, 153, 154, 157, 158, 160, 161, 162, 167, 183, 212, 240, 248, 254, 261, 263], "radar_channel": [159, 160, 161, 240, 254, 261], "radar_cross_sect": [34, 158, 240, 254, 261], "radarbas": [90, 91, 92, 163], "radarchannel": 240, "radarchannelbas": [32, 33, 34, 159, 160, 161], "radarchannelr": [32, 33, 34], "radarchannelsampl": 33, "radarcrosssectionmodel": 32, "radarcub": [152, 153, 155, 157, 158, 160, 163, 164], "radardetector": [151, 153, 155, 157, 158, 163], "radarevalu": [159, 160, 161], "radarinterferencepath": 33, "radarpath": 33, "radarpointcloud": [153, 155, 156, 157, 163, 164], "radarrangeplot": 88, "radarrecept": [90, 163, 164], "radartarget": 32, "radartargetpath": 33, "radartransmiss": [90, 163, 165], "radarwaveform": [151, 162, 163, 166], "radat": 256, "radial": [162, 166], "radian": [2, 3, 4, 8, 26, 33, 34, 36, 61, 152, 154, 176, 195], "radiat": [167, 170, 179, 255, 256], "radio": [15, 22, 30, 31, 60, 75, 83, 167, 169, 170, 179, 182, 186, 187, 203, 206, 212, 238, 244, 249, 255, 258, 261], "radr": 32, "rai": [7, 8, 9, 10, 11, 12, 13, 55, 64, 167, 219, 258, 263], "rais": [2, 3, 7, 9, 15, 20, 22, 23, 26, 29, 32, 34, 36, 37, 39, 46, 49, 52, 53, 55, 57, 59, 60, 61, 62, 65, 66, 67, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 87, 91, 93, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 132, 136, 139, 140, 146, 149, 152, 154, 156, 157, 159, 161, 162, 170, 171, 173, 174, 180, 184, 185, 186, 190, 191, 192, 195, 197, 199, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 220, 221, 227, 230, 248, 253, 255, 258], "raisedcosin": 131, "raisedcosinewaveform": 131, "ralf": [22, 263], "ramp": 127, "ran": [8, 9, 10, 11, 12, 13, 29, 244, 263], "randint": 259, "random": [9, 10, 11, 12, 13, 14, 15, 16, 18, 24, 30, 32, 35, 39, 46, 49, 55, 59, 67, 73, 77, 83, 85, 94, 103, 109, 140, 144, 145, 147, 163, 167, 190, 193, 209, 210, 212, 215, 219, 221, 223, 224, 225, 226, 228, 256, 259, 262], "random_nod": [7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 34, 39, 58, 90, 91, 92, 94, 103, 163, 190, 193, 194, 209, 210, 211, 220, 222, 223, 224, 225, 226], "random_r": 27, "randombitssourc": [94, 108, 110, 111], "randomdelaychannel": [19, 20], "randomdelaychannelr": [19, 20], "randomli": [8, 9, 10, 11, 12, 13, 108, 110, 111], "randomnod": [7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 34, 39, 46, 49, 58, 59, 66, 67, 90, 91, 92, 94, 103, 163, 190, 193, 209, 210, 211, 220, 222, 223, 224, 225, 226], "randomr": [58, 190, 194], "randomtrigg": [212, 222], "rang": [34, 60, 87, 88, 91, 92, 151, 152, 154, 156, 162, 163, 166, 169, 196, 198, 199, 200, 240, 248, 255, 257], "range_bin": [152, 166], "range_resolut": [91, 92, 162, 166], "rank": 3, "rap91": 263, "rapp": [203, 236, 238, 263], "rapppoweramplifi": 207, "raschkowski": [31, 263], "rat": 249, "rate": [8, 14, 15, 17, 19, 28, 30, 31, 33, 39, 41, 51, 56, 60, 65, 66, 67, 69, 70, 72, 73, 76, 79, 82, 83, 87, 90, 91, 93, 95, 97, 103, 116, 117, 121, 127, 129, 130, 131, 132, 133, 139, 142, 144, 149, 162, 163, 166, 188, 189, 212, 214, 217, 221, 225, 227, 231, 235, 236, 238, 239, 240, 241, 242, 248, 249, 253, 256, 259, 262, 263], "rather": [95, 169, 212, 256], "ratio": [8, 17, 19, 28, 30, 31, 33, 39, 83, 112, 127, 128, 136, 167, 188, 189, 190, 192, 198, 212, 230, 235, 236, 238, 239, 240, 241, 242, 243, 248, 259, 263], "ratio_combin": 114, "raviv": [72, 263], "raw": [55, 120, 121, 127, 129, 139, 152, 160, 164, 260, 262], "ray_address": [55, 219], "rayleigh": [7, 24, 235, 243, 263], "rayleigh_factor": 7, "raytrac": 33, "rbrace": [2, 3, 4, 14, 15, 30, 65, 70, 98, 99, 101, 102, 203, 207, 208], "rc": [34, 158], "rceil": 66, "rceiv": 46, "rcrt": 33, "rcst": 33, "re": [52, 55, 60, 162, 163, 166, 257, 258, 260], "reach": 55, "read": [53, 251], "readabl": [55, 251], "readili": 251, "real": [75, 82, 124, 152, 186, 193, 197, 198, 248, 253, 258, 261], "realis": 255, "realist": [15, 36, 124, 167], "realiz": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 55, 58, 83, 84, 151, 190, 193, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 248, 256, 258], "realize_channel": 220, "realize_interfer": 33, "realize_recept": 212, "realize_trigg": 220, "realtiv": [162, 166], "realzat": [7, 20, 21, 30, 32, 34], "reason": [212, 248, 250, 251, 256, 261], "recal": [7, 8, 15, 20, 21, 26, 30, 31, 32, 34, 42, 43, 53, 140, 149, 219, 257], "recall_r": [7, 8, 15, 20, 21, 26, 30, 31, 32, 34, 256], "recalled_scenario": 257, "recangular": 132, "receipt": 251, "receiv": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 49, 50, 51, 56, 59, 65, 66, 67, 70, 73, 76, 78, 79, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 114, 115, 116, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 146, 149, 151, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 195, 196, 212, 213, 216, 218, 219, 220, 221, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 251, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264], "receive_antenna": 36, "receive_beamform": [163, 254], "receive_correl": 181, "receive_devic": [59, 84, 85, 220], "receive_focu": [2, 3, 4], "receive_from_r": 212, "receive_imped": 181, "receive_oper": [39, 59, 82, 84, 220, 255], "receive_port": 36, "receive_stream_cod": [108, 109, 110], "receive_topologi": 36, "receive_transmiss": 83, "receivebeamform": [2, 3, 4, 163, 254], "receivecod": 150, "received_sign": 79, "received_stream": 37, "received_symbol": [100, 262], "receivedconstellationplot": [88, 248], "receivedpowerevalu": [167, 255], "receiver_antenna": 17, "receiver_idx": 257, "receiver_index": 219, "receiver_pos": 17, "receiver_st": [17, 28, 33, 256], "receiver_veloc": 17, "receiveroperatingcharacterist": [160, 162, 254, 261], "receiverslot": [39, 46], "receivestreamcod": [109, 150], "receivestreamdecod": [2, 150], "receiving_devic": [90, 103, 108, 109, 110, 111, 159, 235, 258], "receiving_modem": [96, 98, 99, 100, 101, 102, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244], "receiving_radar": [159, 161], "receivingmodem": [88, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110], "receivingmodembas": [90, 91, 92, 108, 109, 110], "recent": [37, 46, 49, 62, 83, 123, 212, 255, 264], "recepept": [2, 150], "recept": [1, 2, 14, 15, 17, 35, 39, 46, 50, 56, 59, 65, 66, 67, 70, 73, 76, 79, 82, 83, 87, 90, 103, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 130, 131, 132, 133, 134, 142, 143, 147, 149, 150, 151, 158, 163, 167, 170, 171, 174, 180, 195, 212, 215, 218, 219, 248, 253, 255, 257, 258, 260], "receptiontyp": [46, 51], "recipi": 251, "reciproc": [8, 14, 37, 167, 248], "reciprocal_sampl": 16, "recogn": [53, 251], "recommend": [15, 250], "reconfigur": 55, "record": [59, 80, 248, 255, 264], "record_channel": [76, 234], "record_devic": [76, 234], "record_drop": 80, "recorded_drop": 257, "recov": 37, "recoveri": 248, "rectangl": [130, 132], "rectangular": [93, 121, 126, 129, 240], "rectangularwaveform": 132, "recurs": [53, 66, 72, 250], "recveived_sign": 79, "redistribut": 251, "reduc": 55, "redund": [63, 65, 70, 73, 235, 236, 243], "reed": [63, 263], "reedsolomoncod": 71, "refer": [1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 22, 31, 36, 46, 51, 55, 61, 65, 66, 67, 69, 70, 73, 77, 80, 86, 92, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 151, 163, 171, 179, 183, 188, 189, 190, 192, 206, 207, 209, 211, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 251, 256, 257], "referenc": [46, 110, 238, 239, 240, 241, 255], "reference_symbol": [137, 140], "references_per_fram": 139, "refererd": 4, "refin": 196, "reflect": [32, 33, 34, 151, 254], "reflection_phas": 33, "reflector": [32, 33, 34], "refor": 36, "refrain": 251, "refresh": 38, "regard": 251, "regardless": 251, "regener": 251, "regist": [39, 49, 53, 55, 59, 61, 66, 73, 80, 82, 84, 85, 86, 149, 220, 250], "registerd": [61, 215], "registered_class": 53, "registered_tag": 53, "registereddimens": 55, "registr": 59, "regress": 233, "regular": [211, 263], "reinstat": 251, "reiver": [151, 159], "rel": [3, 4, 21, 33, 55, 61, 80, 92, 128, 129, 131, 132, 133, 157, 162, 166, 170, 188, 189, 254], "relat": [21, 65, 66], "relationship": [187, 230, 251], "relative_bandwidth": [129, 131, 132, 133], "relative_doppler_bin": [162, 166], "relative_doppler_resolut": [92, 162, 163, 166], "relative_veloc": 33, "releas": [8, 9, 10, 11, 12, 13, 22, 29, 73, 179, 183, 250, 251, 263], "relev": [120, 167, 251], "reli": [123, 251, 260], "relicens": 251, "remain": [33, 250, 251], "remind": 255, "remot": [55, 87, 251], "remov": [15, 33, 36, 55, 61, 79, 116, 117, 121, 127, 129, 139, 149, 173, 226, 251, 255, 261], "remove_antenna": 36, "remove_devic": 226, "remove_dimens": [55, 255], "remove_leakag": 79, "remove_link": 61, "remove_port": [36, 173], "remove_sample_hook": 15, "render": [233, 248, 251, 254, 258], "repair": 251, "repeat": [36, 70, 111, 136, 137, 138, 139, 141, 142, 235, 236, 243, 259, 262], "repeat_pilot_sequ": [139, 142, 144, 147], "repeat_pilot_symbol_sequ": [121, 129, 132], "repeat_symbol_sequ": 121, "repeatedli": 219, "repetit": [63, 113, 121, 129, 132, 134, 135, 136, 137, 140, 142, 143, 147, 162, 234, 235, 236, 239, 241, 242, 243, 244, 257, 259], "repetitioncod": 259, "repetitionencod": [70, 108, 109, 110, 111], "replac": [80, 113, 134, 171, 179, 183, 190, 203, 209, 221, 226, 248, 250, 252, 256], "replai": [59, 80, 248, 257], "replayscenario": 59, "repo": 250, "report": [55, 66, 233, 249, 250], "repositori": [6, 233, 250, 251, 252, 255, 264], "repres": [2, 3, 4, 8, 14, 15, 16, 17, 19, 25, 26, 28, 30, 31, 32, 33, 36, 53, 54, 55, 58, 59, 61, 62, 65, 66, 67, 70, 73, 76, 82, 94, 96, 98, 99, 100, 101, 102, 108, 109, 110, 111, 118, 120, 140, 149, 152, 156, 158, 159, 160, 161, 163, 167, 168, 190, 194, 203, 219, 234, 239, 241, 242, 244, 248, 251, 255, 256, 258, 259, 260, 262], "represent": [22, 36, 39, 54, 55, 61, 62, 80, 98, 99, 100, 101, 102, 108, 109, 111, 140, 149, 152, 158, 160, 161, 167, 191, 196, 197, 212, 219, 235, 241, 242, 243, 262], "representererror": 53, "represnt": 59, "request": [2, 37, 59, 66, 220, 249], "requir": [2, 3, 4, 7, 8, 14, 17, 19, 20, 21, 28, 30, 31, 32, 33, 34, 40, 52, 55, 60, 65, 66, 73, 75, 78, 80, 94, 103, 111, 112, 113, 114, 115, 116, 117, 121, 127, 129, 130, 132, 134, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 157, 162, 163, 166, 167, 184, 185, 188, 189, 196, 198, 199, 200, 203, 209, 212, 232, 233, 234, 244, 248, 250, 251, 252, 253, 254, 257, 258, 259, 260, 262, 263], "required_input": 149, "required_num_data_bit": 66, "required_num_input_stream": [149, 260], "required_num_output_stream": [149, 260], "required_output": 149, "rerout": 60, "resambl": 60, "resampl": [14, 15, 39, 60, 229], "rescal": [198, 199, 200], "rescale_quant": [198, 199, 200], "research": [124, 249, 263], "reserv": 55, "reset": 73, "reshap": [259, 262], "resolut": [3, 36, 91, 92, 162, 163, 166, 197, 263], "resolv": [55, 80, 163, 219, 233, 251, 263], "resort": [81, 88], "resourc": [55, 134, 135, 137, 139, 140, 141, 142, 143, 144, 147, 167, 234, 239, 241, 242, 244], "resource_mask": [137, 139, 140, 141], "respect": [2, 3, 4, 8, 9, 14, 15, 17, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 39, 53, 55, 59, 61, 65, 66, 67, 70, 73, 82, 96, 98, 99, 100, 101, 102, 108, 110, 111, 118, 120, 123, 124, 146, 149, 152, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 188, 189, 190, 204, 208, 212, 220, 221, 233, 235, 236, 238, 239, 240, 241, 242, 243, 248, 250, 251, 252, 253, 254, 255, 259, 260], "respond": 36, "respons": [3, 4, 8, 19, 20, 21, 24, 28, 30, 31, 33, 36, 37, 79, 170, 171, 174, 186, 197, 202, 251, 253, 254], "rest": [83, 212], "restrict": 251, "result": [2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 33, 35, 36, 49, 52, 53, 55, 57, 60, 61, 62, 65, 66, 83, 96, 98, 99, 100, 101, 102, 109, 111, 113, 114, 115, 116, 117, 121, 124, 127, 129, 130, 139, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 163, 167, 180, 197, 206, 212, 218, 219, 221, 227, 233, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262], "results_dir": [52, 219, 248, 261], "retain": 251, "returm": [52, 55, 219], "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 144, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 173, 174, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232, 251, 254, 256, 258, 259, 260, 262], "reve": 14, "reveiv": [158, 160, 161, 162], "revers": [66, 260], "revert": 73, "review": [251, 257, 263], "revis": 251, "reza": [211, 263], "rf": [39, 76, 83, 87, 111, 167, 169, 171, 172, 182, 183, 184, 185, 187, 195, 212, 235, 236, 238, 241, 242, 243, 248, 261, 263], "rf_chain": [83, 171, 172, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 233, 236, 238, 261], "rf_chain_modifi": 171, "rf_signal": 171, "rfchain": [83, 169, 171, 172, 195, 212, 236, 238], "rfloor": 15, "rice": [8, 24, 26], "rice_factor": [8, 26, 235, 243], "ricean": 8, "rich": 55, "rician": [24, 263], "right": [3, 14, 15, 17, 24, 26, 30, 33, 36, 51, 55, 65, 66, 70, 90, 91, 98, 99, 100, 101, 102, 162, 163, 166, 207, 251, 258, 260], "riser": 238, "risk": 251, "rm": [100, 198, 241], "rms_amplitud": [198, 201], "rms_delai": [7, 23, 29, 241, 242], "rms_valu": 230, "rmse": 161, "rng": [18, 73, 222, 223, 224, 225, 226, 256, 262], "robert": [68, 263], "roberto": 252, "robust": [3, 137, 140, 145, 146, 263], "roc": [160, 240, 261], "rocartifact": 160, "rocevalu": 160, "rocevaluationresult": 160, "rock": 76, "rodnei": [124, 263], "roh83": 263, "rohl": 263, "roll": [61, 129, 131, 133, 239], "roll_off": [114, 115, 116, 117, 129, 131, 133, 221, 239, 248], "rolledoffsinglecarrierwaveform": [129, 131, 133], "rom": [33, 251], "root": [0, 7, 23, 29, 36, 58, 93, 95, 97, 100, 121, 126, 129, 131, 151, 159, 209, 210, 221, 230, 233, 241, 242, 248, 253], "rootmeansquareartifact": 161, "rootmeansquareerror": 161, "rootmeansquareerrorresult": 161, "rootmeansquareevalu": 161, "rootraisedcosin": [14, 133, 236, 238, 239, 248], "rootraisedcosinewaveform": [14, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 133, 221, 248, 253, 259], "rosa": [24, 263], "rotat": [36, 61, 263], "rotate_direct": 61, "rotation_quaternion": 61, "rotation_rpi": 61, "rough": 248, "roughli": [256, 261], "round": [8, 14, 17, 19, 28, 30, 31, 33, 225, 227, 262], "rountin": 248, "router": 167, "routin": [1, 6, 8, 11, 12, 13, 15, 20, 21, 27, 28, 30, 46, 49, 52, 53, 55, 62, 65, 66, 67, 70, 73, 75, 82, 94, 108, 109, 110, 118, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 142, 143, 146, 147, 149, 151, 163, 166, 206, 212, 221, 229, 233, 242, 248, 252, 253, 254, 256, 257, 258, 260, 262], "row": 232, "royalti": 251, "rpy": 61, "rrcwaveform": [9, 10, 11, 12, 13], "rrt": 163, "rs60": 263, "rsc": 63, "rsccode": 72, "rtt": 163, "rtype": 198, "rule": 251, "run": [6, 9, 10, 11, 12, 13, 14, 52, 55, 57, 59, 80, 86, 98, 99, 100, 101, 102, 157, 158, 160, 161, 162, 167, 219, 233, 237, 248, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264], "runner": 55, "runtim": [38, 52, 55, 80, 81, 123, 171, 188, 189, 191, 192, 195, 212, 219, 248, 250, 255, 257, 258], "runtime_env": 55, "runtimeerror": [2, 39, 46, 57, 59, 60, 61, 62, 66, 81, 84, 85, 116, 121, 124, 128, 146, 149, 152, 212, 220, 258], "rural": [8, 22], "rural_macrocel": 11, "ruralmacrocel": 11, "ruralmacrocellsr": 11, "rvert": 36, "rvert_": 124, "rvert_2": [36, 98, 100], "rx": [8, 14, 15, 17, 19, 28, 30, 31, 33, 36, 98, 99, 100, 101, 102, 114, 115, 116, 117, 167, 248], "rx_devic": [110, 114, 115, 116, 117, 134, 142, 143, 147, 248, 257], "rx_gain": [87, 244], "rx_modem": 109, "rxmodem": [109, 240], "rxpwr": 255, "ryyn\u00e4nen": [195, 263], "s13638": [124, 263], "s2352711019300457": [64, 68, 69, 71, 72, 74, 263], "s_": [15, 100, 203, 204, 206, 207, 208, 211], "safeconstructor": [140, 149, 219], "saferepresent": [22, 140, 149, 219], "safest": 251, "sai": 251, "said": [112, 248, 254], "sake": [167, 262], "sal81": 263, "sale": 251, "saleh": [203, 263], "salehpoweramplifi": 208, "salman": [124, 263], "same": [14, 36, 55, 60, 116, 169, 171, 179, 183, 195, 197, 221, 222, 223, 224, 225, 226, 239, 248, 251, 254, 255], "sampl": [2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 41, 49, 51, 55, 56, 60, 76, 79, 80, 81, 82, 83, 85, 87, 90, 91, 103, 109, 111, 121, 124, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 146, 150, 152, 161, 162, 163, 166, 167, 168, 171, 186, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 212, 214, 217, 219, 220, 221, 225, 226, 227, 228, 231, 235, 236, 238, 239, 240, 241, 242, 243, 248, 254, 255, 256, 258, 262], "sample_covari": [25, 254], "sample_cross_sect": 32, "sample_grid": 55, "sample_hook": [7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 27, 30, 31, 32, 33, 34, 256], "sample_index": 55, "sample_offset": [137, 138, 140, 141], "sample_point": [55, 80], "sample_trajectori": 32, "samplegrid": 55, "sampleoffsettrigg": 223, "samplepoint": [55, 255], "samples_in_chirp": 127, "samples_in_fram": 262, "samples_per_fram": [103, 121, 127, 129, 139, 144, 262], "samplin": [76, 82, 83, 87], "sampling_r": [39, 41, 51, 56, 60, 76, 79, 83, 87, 90, 91, 103, 121, 127, 129, 142, 144, 162, 163, 166, 212, 214, 217, 227, 231, 255, 262], "sat": [203, 204, 206, 207, 208, 263], "satellit": [31, 147, 263], "satisfi": 251, "satur": [203, 204, 206, 207, 208], "saturation_amplitud": 206, "save": [6, 52, 55, 59, 82, 167, 237, 261], "save_calibr": 82, "save_to_matlab": [55, 167], "savefil": [59, 68, 80, 160], "sc": [130, 131, 132, 133, 236, 238, 239, 240], "sc97": 263, "scalar": [18, 20, 54, 55, 88, 160, 161, 183, 187, 188, 189, 190, 191, 192], "scalar_result": [55, 161], "scalar_sampl": 18, "scalardimens": [55, 188, 189, 190, 191, 192], "scalarevaluationresult": [55, 96, 158, 161], "scale": [8, 9, 10, 11, 12, 13, 17, 19, 28, 30, 31, 33, 54, 55, 60, 87, 152, 167, 192, 198, 200, 230, 255, 256], "scale_quantized_sign": 200, "scale_transmiss": 87, "scatter": [8, 14, 32, 33, 36, 62, 261], "scattervisu": [8, 62, 88, 120, 156, 158, 161], "scenario": [6, 9, 10, 11, 12, 15, 29, 35, 39, 50, 53, 55, 57, 75, 80, 83, 86, 114, 115, 116, 121, 127, 129, 130, 132, 134, 142, 143, 144, 147, 151, 158, 160, 161, 162, 168, 212, 218, 219, 221, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 254, 255, 256, 257, 258, 259, 261, 262], "scenariomod": [59, 255], "scenariotyp": [57, 59], "schedul": [55, 263], "schema": 116, "scheme": [52, 65, 66, 67, 70, 127, 130, 131, 132, 133, 147, 259, 260], "schmidl": [143, 234, 244, 263], "schmidlcox": [146, 234, 244], "schmidlcoxpilot": [145, 234, 244], "schmidlcoxpilotsect": [145, 146], "schmidlcoxsynchron": 146, "school": 251, "schwerin": [55, 263], "scienc": [64, 68, 69, 71, 72, 74, 192, 263], "sciencedirect": [64, 68, 69, 71, 72, 74, 263], "scientif": [55, 263], "scipi": [254, 255], "scleastsquareschannelestim": [9, 10, 11, 12, 13], "scope": 251, "scrambl": 63, "scrambler": 73, "scrambler3gpp": 73, "scrambler80211a": 73, "scrambler_3gpp": 73, "scrambler_80211a": 73, "scratch": 250, "screen": 232, "screen_geometri": 232, "screen_rect": 232, "screeninfo": 232, "script": [6, 31, 233, 250, 251, 252], "sczeroforcingchannelequ": [9, 10, 11, 12, 13], "sdr": 123, "seamlessli": 248, "search": [57, 80, 128, 157, 250], "second": [2, 3, 4, 8, 14, 15, 17, 18, 19, 20, 23, 26, 28, 29, 32, 33, 39, 51, 55, 59, 60, 78, 79, 82, 83, 90, 91, 102, 103, 105, 107, 111, 120, 121, 123, 127, 129, 130, 132, 138, 152, 162, 163, 166, 168, 171, 197, 203, 207, 212, 219, 220, 225, 227, 231, 235, 239, 241, 242, 243, 261, 263], "secondari": 251, "secondarili": 251, "section": [0, 32, 33, 34, 53, 55, 65, 66, 73, 124, 127, 128, 129, 134, 136, 139, 142, 143, 144, 145, 146, 147, 151, 219, 233, 235, 236, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 256, 258, 260, 261, 264], "section_block_s": 55, "section_coord": 258, "see": [32, 33, 73, 113, 207, 208, 233, 244, 251], "seed": [9, 10, 15, 30, 39, 46, 49, 51, 58, 59, 73, 77, 83, 84, 85, 94, 103, 108, 109, 110, 111, 163, 190, 193, 209, 210, 211, 212, 219, 248, 253, 255, 257], "segment": [99, 101, 102], "select": [37, 46, 49, 55, 76, 79, 87, 90, 92, 95, 108, 109, 110, 111, 116, 136, 167, 183, 212, 248, 252, 255, 259, 263], "selected_receive_port": [46, 51, 87, 90, 92, 108, 109, 110], "selected_transmit_port": [49, 51, 87, 90, 92, 108, 110, 111], "selectiveleakag": [186, 187], "selectiveleakagecalibr": 79, "selet": 183, "self": [0, 60, 64, 68, 69, 71, 72, 74, 235, 240, 241, 242, 254, 255, 256, 258, 259, 260, 262], "sell": 251, "semi": 249, "semiconductor": 251, "send": 206, "sens": [0, 1, 33, 89, 90, 91, 92, 159, 162, 163, 166, 167, 190, 212, 219, 226, 240, 248, 249, 256, 261], "sensor": [3, 4, 20, 21, 33, 34, 36, 196, 254], "sent": 258, "separ": [42, 95, 167, 197, 198, 212, 213, 214, 216, 236, 237, 251], "sequenc": [2, 3, 4, 26, 28, 33, 36, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 54, 55, 59, 60, 73, 76, 77, 82, 83, 84, 85, 87, 90, 92, 94, 96, 100, 108, 109, 110, 111, 112, 120, 121, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 144, 145, 147, 149, 158, 159, 160, 161, 162, 163, 172, 173, 178, 197, 212, 213, 214, 215, 216, 217, 218, 219, 220, 262], "sequenti": [66, 149, 167, 234, 244, 248, 250], "seri": [15, 120, 260], "serial": [4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 25, 26, 27, 30, 31, 32, 34, 35, 36, 59, 65, 66, 67, 70, 73, 80, 86, 87, 101, 102, 108, 109, 110, 125, 127, 128, 130, 131, 132, 133, 140, 145, 146, 149, 150, 153, 175, 177, 197, 198, 199, 204, 207, 210, 219, 255, 256], "serializ": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 34, 36, 39, 53, 55, 61, 65, 66, 67, 70, 73, 76, 78, 79, 80, 83, 84, 86, 87, 90, 91, 92, 94, 98, 99, 101, 102, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 153, 157, 158, 160, 162, 163, 168, 173, 175, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 219, 222, 223, 224, 225], "serializableenum": [7, 15, 22, 29, 36, 38, 52, 53, 135, 136, 201, 202], "serializabletyp": 53, "serialized_attribut": [59, 212], "sert": 55, "serv": [251, 252], "server": [14, 86, 233, 251], "servic": 251, "session": 59, "set": [7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 52, 53, 55, 59, 60, 61, 81, 84, 111, 144, 147, 167, 169, 179, 183, 185, 186, 187, 190, 196, 199, 203, 209, 212, 219, 220, 221, 222, 223, 224, 225, 226, 234, 236, 238, 239, 240, 241, 242, 244, 248, 250, 252, 253, 256, 261, 262], "set_bas": 61, "set_channel": [9, 10, 11, 12, 13, 14, 15, 134, 142, 143, 147, 151, 158, 160, 161, 162, 167, 219, 220, 248, 254, 255, 256, 257, 261], "set_figure_geometri": 232, "set_sampl": 60, "set_stat": 37, "set_xlabel": 258, "set_ydata": 258, "set_ylabel": 258, "settabl": 55, "setter": 55, "setup": [31, 75, 248, 250, 253], "setx": 250, "sever": [14, 24, 35, 59, 111, 123, 237, 252, 254, 255, 257, 262], "sf": 235, "sh": 9, "shall": [46, 251], "shannon": [15, 74, 263], "shape": [8, 18, 28, 55, 60, 62, 79, 81, 129, 130, 131, 132, 133, 156, 195, 254, 258], "share": [85, 220, 221, 226, 251], "sharon": 263, "shell": 38, "shift": [22, 24, 26, 28, 29, 30, 33, 92, 127, 152, 162, 166, 170, 174, 175, 176, 177, 190, 231, 256, 262], "shifted_sampl": 256, "ship": 248, "short": [39, 55, 98, 99, 100, 101, 102, 158, 160, 161, 251], "shortcut": 190, "shorter": [98, 99, 100, 101, 102, 139, 142], "shortest": 124, "shorthand": [15, 39, 55, 167, 169, 190, 212], "should": [2, 6, 9, 15, 19, 20, 21, 32, 33, 36, 37, 46, 49, 51, 53, 55, 56, 59, 60, 62, 66, 78, 82, 91, 92, 95, 109, 111, 113, 120, 127, 130, 131, 132, 133, 163, 168, 190, 194, 197, 206, 220, 221, 231, 233, 251, 252, 256, 261], "show": [9, 10, 11, 12, 13, 109, 111, 116, 167, 168, 255, 256, 257, 258, 261], "showcas": 255, "shown": 232, "shuch": [46, 49, 51, 56, 91, 92, 109, 111, 163], "siam": [55, 263], "side": [124, 128, 146, 195, 249], "siganl": 82, "sight": [8, 22, 24, 26, 28, 33, 124, 255, 257], "sigma_": [32, 33], "sign": [58, 251], "signal": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 59, 63, 76, 79, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 121, 123, 124, 127, 128, 129, 137, 138, 139, 140, 141, 142, 144, 146, 149, 150, 151, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 180, 184, 185, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 231, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "signalblock": [30, 60], "signalplot": 88, "signalreceiv": [56, 167, 212, 255], "signaltransmitt": [56, 167, 212], "signific": 251, "significantli": [55, 255], "silent": [38, 46, 49, 51, 56, 91, 92, 109, 111, 163, 254, 255, 256, 258, 259, 260, 261, 262], "silenttransmitt": 56, "sim": 20, "similar": [235, 251], "similarli": [108, 110, 212], "simo": [114, 115], "simpl": [19, 55, 116, 167, 190, 212, 248, 263], "simplex": [127, 130, 131, 132, 133, 134, 142, 143, 147, 235, 248, 257, 258], "simplexlink": [9, 10, 11, 12, 13, 14, 93, 103, 110, 114, 115, 116, 117, 134, 142, 143, 147, 221, 235, 248, 257, 258], "simpli": [248, 250, 255, 258], "simplic": [167, 262], "simplif": 66, "simplifi": 187, "simplist": 212, "simul": [0, 6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 26, 29, 30, 32, 33, 34, 35, 38, 52, 53, 55, 57, 80, 83, 84, 93, 96, 98, 99, 100, 101, 102, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 123, 124, 127, 128, 129, 130, 132, 134, 142, 143, 144, 146, 147, 151, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "simulatan": [14, 240], "simulated_devic": [212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 261], "simulatedantenna": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "simulatedantennaarrai": [83, 169, 171, 172, 173, 178, 212], "simulatedantennaport": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255], "simulatedcustomarrai": [169, 171, 173, 255], "simulateddevic": [14, 15, 29, 83, 84, 159, 169, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 196, 203, 209, 212, 219, 220, 226, 235, 236, 238, 239, 240, 241, 242, 243, 248], "simulateddeviceoutput": [83, 212, 214, 217, 220], "simulateddevicer": 212, "simulateddevicereceiver": [212, 213, 215, 216], "simulateddevicerecept": [83, 84, 212, 216, 220], "simulateddevicetransmiss": [83, 212, 217, 220], "simulateddipol": 174, "simulateddrop": [218, 223, 224, 225, 226, 227, 248], "simulatedidealantenna": [114, 115, 116, 117, 169, 171, 175, 212, 241, 242, 254, 255, 258], "simulatedlinearantenna": 176, "simulatedpatchantenna": [169, 177], "simulatedphysicalscenario": 261, "simulateduniformarrai": [114, 115, 116, 117, 169, 171, 178, 212, 241, 242, 254, 258], "simulaten": [108, 220, 258], "simulation_modul": 252, "simulationactor": 254, "simulationscenario": [15, 84, 219, 220, 248, 255, 257], "simultan": [59, 90, 108, 195, 220, 248, 251, 263], "sin": [36, 255], "sinc": [14, 15, 33, 37, 54, 167, 169, 197, 254, 259, 260, 262], "singl": [2, 3, 4, 14, 24, 33, 36, 37, 51, 53, 55, 59, 60, 65, 66, 67, 70, 73, 83, 90, 91, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 127, 130, 131, 132, 133, 139, 151, 154, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 174, 175, 176, 177, 182, 203, 212, 218, 219, 221, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "single_carri": [14, 115], "singlecarri": [115, 241, 242], "singlecarriercorrelationsynchron": [108, 109, 110, 130, 131, 132, 133, 253], "singlecarrieridealchannelestim": [114, 115, 116], "singlecarrierleastsquareschannelestim": [14, 108, 109, 110, 130, 131, 132, 133, 221, 248, 253], "singlecarrierminimummeansquarechannelequ": 221, "singlecarrierzeroforcingchannelequ": [14, 108, 109, 110, 130, 131, 132, 133, 248, 253], "singletargetradarchannel": [33, 34, 151, 158, 160, 161, 162, 254, 261], "singletargetradarchannelr": 34, "singnal": 212, "singular": [121, 127, 129, 139], "sinr": [8, 17, 19, 28, 30, 31, 33], "sinusoid": [18, 24, 26, 29, 255, 263], "siso": [234, 244, 253], "situat": 263, "size": [18, 55, 65, 66, 67, 70, 73, 116, 137, 138, 140, 141, 212, 235, 236, 243, 259], "skip": 262, "sl": 9, "slant": [36, 176], "slg04": 263, "slice": 37, "slope": [130, 162], "slot": [51, 116, 117, 149, 212, 241, 262], "sm": 241, "small": [3, 4, 9, 10, 11, 12, 13, 254], "smaller": [3, 9, 15, 26, 29, 32, 34, 36, 39, 55, 57, 59, 60, 66, 67, 70, 82, 91, 127, 128, 129, 130, 132, 139, 154, 156, 157, 162, 199, 206, 207, 208, 214, 217, 219, 225, 227, 231], "smartphon": 167, "smooth": [207, 236], "smoothness_factor": [207, 236], "snippet": [14, 109, 111, 151, 169, 171, 179, 183, 190, 203, 209, 212, 221, 226, 248], "snr": [8, 9, 10, 11, 12, 13, 17, 19, 28, 30, 31, 33, 39, 83, 114, 116, 161, 167, 189, 190, 212, 235, 236, 238, 239, 240, 241, 242, 243, 248, 255, 256, 260, 261, 263], "snr_dimens": 255, "snr_type": [83, 212], "snrtype": [83, 212], "so": [3, 4, 15, 24, 36, 116, 123, 134, 142, 143, 147, 157, 163, 169, 204, 220, 231, 248, 251, 252, 253, 254, 257, 259, 260], "societi": [71, 263], "soft": 73, "softwar": [31, 75, 244, 248, 249, 251, 258, 261], "softwarex": [64, 68, 69, 71, 72, 74, 263], "softx": [64, 68, 69, 71, 72, 74, 263], "sold": 251, "sole": [248, 251], "solomon": [63, 263], "solut": 251, "some": [2, 8, 190, 233, 248, 250, 251, 260], "someth": 252, "sometim": [167, 183], "somewher": [120, 255], "sort": [55, 59, 124, 128, 146, 197], "sound": [75, 77, 203, 207, 253, 263], "soundcard": 234, "sounddevic": 253, "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 70, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 249, 251, 252, 254, 263], "space": [7, 14, 15, 17, 18, 19, 20, 21, 26, 30, 32, 33, 36, 53, 83, 88, 112, 124, 144, 147, 167, 169, 171, 178, 212, 230, 234, 235, 241, 242, 244, 255, 256, 263], "space_time_block_cod": 116, "span": 128, "spare": 251, "spars": [14, 37, 120, 153, 155, 156, 157], "sparsearrai": [37, 120], "sparsesign": 60, "spatial": [1, 3, 8, 9, 10, 11, 12, 13, 14, 19, 24, 28, 32, 36, 112, 124, 148, 212, 239, 240, 241, 242, 248, 249, 254, 263], "spatial_multiplex": 117, "spatial_respons": 28, "spatialdelaychannel": [19, 21], "spatialdelaychannelr": [19, 21], "spatialmultiplex": [117, 258], "spawn": 55, "speak": 251, "speaker": 253, "special": 251, "specic": 111, "specif": [14, 15, 33, 34, 55, 63, 73, 75, 84, 93, 124, 134, 136, 142, 143, 147, 167, 183, 190, 195, 220, 231, 240, 248, 249, 251, 252, 253, 260, 262, 263], "specifi": [2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 24, 28, 29, 30, 31, 33, 36, 39, 46, 49, 55, 59, 62, 79, 81, 82, 83, 84, 85, 87, 88, 108, 109, 110, 111, 121, 127, 130, 131, 132, 133, 134, 140, 142, 143, 144, 147, 152, 162, 167, 171, 172, 173, 180, 183, 184, 185, 186, 187, 190, 195, 196, 198, 206, 212, 219, 220, 221, 222, 223, 224, 225, 226, 232, 241, 242, 250, 251, 254, 255, 257, 260], "specificisol": [187, 212, 261], "specifii": [248, 255], "spectra": [4, 263], "spectral": [147, 188, 189, 211, 263], "spectrum": [3, 263], "specular": 24, "speech": 263, "speed": [73, 235, 263], "speed_of_light": [254, 255], "spheric": [2, 3, 4, 32, 34, 36, 61, 154, 254, 255], "spherical_angl": 2, "spherical_phase_respons": [36, 254], "sphericalfocu": [2, 255], "sphinx": 233, "spike": 221, "spillag": 183, "spillov": 183, "spiral": 255, "spiral_arrai": 255, "spiral_port": 255, "spirit": 251, "split": [2, 35, 66], "spread": [7, 8, 24, 124, 209, 235, 241], "spring": [24, 92, 263], "sqrt": [8, 24, 36, 100], "squar": [7, 23, 25, 29, 79, 93, 95, 97, 100, 151, 159, 211, 230, 231, 234, 241, 242, 244], "squarer": [114, 263], "squenc": 218, "squre": 161, "stabl": [4, 263], "stackoverflow": 232, "stadiu": [195, 263], "stage": [55, 105, 113, 123, 196, 206, 219, 260], "stage_argu": 55, "stage_executor": 55, "stage_identifi": 55, "staircas": 197, "stand": [55, 212], "standard": [8, 22, 24, 29, 53, 55, 56, 66, 73, 235, 251, 263], "standardcorrel": 235, "start": [7, 10, 15, 22, 24, 29, 36, 38, 52, 53, 54, 59, 83, 123, 127, 135, 136, 137, 138, 140, 141, 168, 201, 202, 211, 212, 213, 214, 216, 217, 222, 223, 224, 225, 227, 230, 237, 249, 251, 252, 257, 261], "state": [7, 8, 9, 10, 11, 12, 13, 17, 19, 25, 28, 29, 30, 31, 33, 35, 36, 46, 53, 55, 59, 73, 98, 99, 100, 101, 102, 114, 115, 116, 120, 122, 123, 124, 125, 149, 158, 160, 161, 163, 171, 212, 241, 251, 256, 257, 260], "state_format": 37, "state_inform": 37, "state_r": [8, 9, 10, 11, 12, 13], "stated_symbol": 122, "statedsymbol": [109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 129, 139, 260, 262], "statement": [151, 233, 250, 251], "static": [8, 20, 21, 27, 30, 31, 32, 33, 34, 37, 52, 55, 56, 60, 78, 79, 83, 139, 168, 212, 221, 226, 228, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "staticconsistentr": 18, "staticconsistentsampl": 18, "staticmethod": 256, "staticoper": 56, "statictrajectori": [168, 257], "statictrigg": [83, 212, 224], "station": [167, 240, 255], "statist": [14, 22, 24, 25, 26, 27, 28, 29, 124, 190, 263], "statu": [55, 59, 251], "stbc": 116, "std": [18, 73, 263], "steer": [1, 2, 3, 4, 254, 255], "steinbauer": [22, 263], "stem": [62, 196, 258], "stemcontain": 62, "stemvisu": [8, 62, 258], "step": [55, 63, 65, 66, 67, 73, 111, 112, 114, 115, 117, 118, 119, 121, 123, 127, 130, 131, 132, 133, 149, 163, 167, 179, 183, 190, 197, 203, 248, 250, 251, 254, 259, 262, 264], "stephan": [31, 36, 263], "steven": [124, 263], "still": [197, 221], "stochast": [14, 26], "stoica": [116, 263], "stop": [52, 55, 59, 68, 127, 160, 161, 235, 236, 238, 239, 240, 241, 242, 243, 257, 263], "storag": 251, "store": [52, 55, 59, 80, 82, 160, 255, 257, 258], "str": [2, 4, 6, 8, 10, 11, 12, 13, 25, 36, 52, 53, 55, 59, 60, 62, 65, 66, 67, 68, 70, 73, 80, 81, 82, 86, 87, 88, 94, 98, 99, 100, 101, 102, 108, 109, 110, 113, 120, 125, 127, 128, 130, 131, 132, 133, 140, 145, 146, 149, 150, 152, 153, 156, 158, 160, 161, 175, 177, 188, 189, 191, 192, 197, 198, 199, 204, 206, 207, 210, 219, 258], "straight": 168, "straightforward": 95, "straightfoward": 256, "stream": [1, 2, 3, 4, 14, 37, 39, 46, 53, 60, 66, 76, 79, 82, 93, 94, 95, 97, 98, 99, 101, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 134, 139, 140, 148, 149, 162, 166, 170, 171, 174, 180, 184, 185, 186, 243, 254, 255, 257, 258, 260, 262], "stream_indic": 60, "streambitssourc": 94, "streamlin": 250, "street": [8, 12, 13, 255], "stretch": [60, 129, 162], "strictli": [79, 248], "string": [8, 53, 55, 62, 80, 98, 99, 100, 101, 102, 120, 156, 158, 160, 161], "strip": 33, "strongli": 14, "structur": [53, 64, 68, 69, 71, 72, 74, 139, 142, 226, 234, 239, 244, 248, 254, 258], "stub": [82, 117, 256], "student": 249, "studio": 250, "sturm": [92, 263], "style": [6, 52, 55, 237, 248, 249], "style_context": 52, "sub": [0, 35, 53, 55, 65, 80, 136, 229, 239], "subcarri": [134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 234, 239, 241, 242, 244], "subcarrier_spac": [143, 144, 147, 234, 239, 241, 242, 244], "subclass": 60, "subcluster_indic": 8, "subdivid": 251, "subject": 251, "sublicens": 251, "sublist": 213, "submit": 248, "submodul": [250, 263], "subpackag": 0, "subprogram": 251, "subroutin": [2, 3, 4, 7, 20, 21, 30, 32, 34, 163, 166, 206, 212, 254, 257], "subsect": [248, 251], "subsequ": [66, 119, 149], "subset": 36, "subseuent": 111, "substack": 14, "substanti": 251, "subsymbol": [234, 241, 244], "success": [68, 69, 158], "sue": 251, "suffic": 251, "suffici": [55, 66], "suffix": [137, 140], "suggest": [55, 92, 94, 221], "suit": [147, 237, 248], "sum": [4, 8, 24, 33, 54, 121, 127, 129, 139, 161, 255, 258, 263], "sum_": [14, 15, 17, 24, 33, 55, 121, 127, 129, 139], "summari": [14, 251, 255], "summed_pow": 258, "superimpos": [60, 167], "superposit": [60, 211], "supplement": 251, "suppli": 55, "support": [2, 5, 22, 29, 93, 102, 112, 113, 114, 115, 116, 117, 118, 119, 121, 127, 171, 197, 219, 229, 230, 250, 251, 252], "suppress": [144, 147], "sure": [6, 244, 250, 251, 257], "surfac": [9, 55, 96, 98, 99, 100, 101, 102, 161, 169], "surrend": 251, "survei": [124, 263], "surviv": 251, "sustain": 251, "sweep": [9, 10, 11, 12, 13, 55, 80, 158, 161, 162, 167, 219, 235, 236, 238, 239, 240, 241, 242, 243, 255, 256, 258, 260, 261], "swept": [55, 162], "switch": 255, "symbol": [37, 65, 71, 72, 92, 93, 95, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 189, 190, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 256, 257, 258, 260, 262, 263], "symbol_dur": [103, 121, 127, 129, 139, 262], "symbol_energi": [121, 127, 129, 139, 262], "symbol_index_estim": 262, "symbol_indic": 262, "symbol_pow": 262, "symbol_precod": [113, 114, 115, 116, 117, 118, 119], "symbol_precoding_support": [121, 127], "symbol_r": [9, 10, 11, 12, 13, 14, 98, 99, 100, 101, 102, 108, 109, 110, 111, 114, 115, 116, 117, 129, 130, 131, 132, 133, 221, 236, 238, 239, 240, 248, 253, 259], "symbol_sequ": 121, "symbol_typ": [121, 127], "symbolcod": [241, 242], "symbolflipp": 260, "symbolprecod": [103, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 260], "symbols_candid": 262, "symbols_per_fram": [139, 262], "symbolsect": [113, 134, 141, 142, 143, 147, 256, 257, 258, 260], "symmetr": [69, 197, 263], "synchron": [19, 85, 93, 105, 107, 108, 109, 110, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 139, 142, 143, 145, 147, 212, 222, 223, 224, 225, 226, 227, 234, 244, 248, 253, 262, 263], "synchronizatio": 212, "syndrom": 68, "synonym": 15, "syrj\u00e4l\u00e4": [195, 263], "system": [0, 2, 3, 4, 5, 6, 14, 22, 35, 36, 39, 53, 55, 57, 59, 73, 75, 77, 80, 92, 93, 94, 96, 109, 111, 124, 154, 160, 167, 183, 188, 189, 190, 193, 195, 203, 207, 211, 232, 234, 237, 238, 239, 248, 250, 251, 252, 253, 255, 256, 258, 261, 263], "systemat": 72, "szw09": 263, "t": [2, 3, 4, 6, 8, 14, 15, 19, 20, 21, 24, 26, 30, 33, 36, 46, 49, 59, 60, 64, 68, 69, 71, 72, 74, 98, 99, 100, 101, 102, 120, 124, 145, 146, 152, 167, 203, 204, 206, 207, 208, 235, 254, 255, 260, 263], "t_": [51, 90, 91, 102, 124, 162, 163, 166, 222], "t_i": 60, "tabl": [9, 55, 179, 183, 188, 189, 190, 191, 192], "tackl": 0, "tae": 263, "tag": [4, 10, 11, 12, 13, 25, 36, 53, 65, 66, 67, 70, 73, 80, 86, 87, 101, 102, 108, 109, 110, 125, 127, 128, 130, 131, 132, 133, 140, 145, 146, 150, 153, 175, 177, 197, 198, 199, 204, 207, 210], "tag_registri": 53, "tajan": [64, 68, 69, 71, 72, 74, 263], "take": [115, 117, 251, 259], "taken": [195, 250], "tal": [69, 263], "tandem": 14, "tangibl": 251, "tap": [8, 14, 17, 19, 23, 24, 26, 28, 30, 31, 33, 36, 37, 235, 248, 263], "tap_interv": 23, "target": [2, 33, 36, 151, 158, 159, 160, 161, 162, 240, 248, 249, 254, 255, 261, 263], "target_azimuth": 34, "target_azimuth_vari": 34, "target_cross_sect": 34, "target_exist": [34, 261], "target_phase_vari": 34, "target_rang": [34, 240, 254, 261], "target_range_vari": 34, "target_veloc": 34, "target_velocity_vari": 34, "target_zenith": 34, "target_zenith_vari": 34, "task": 55, "tassp": 263, "tau": [8, 14, 15, 17, 19, 20, 21, 24, 26, 28, 30, 31, 33, 124], "tau_": [14, 20, 24, 26, 33], "tau_0": 14, "tcom": [203, 208, 263], "tcsi": [211, 263], "tdd": 241, "tdl": [24, 134, 142, 143, 147, 240, 241, 242, 248], "tdltype": [29, 134, 142, 143, 147, 240, 241, 242], "technic": 73, "techniqu": [116, 195, 263], "technolog": 251, "technologi": [24, 92, 263], "telecommun": [22, 73, 263], "televis": 170, "tell": 251, "templat": 55, "tempon": [55, 263], "tend": 124, "tensor": [37, 120, 152], "term": [65, 83, 93, 129, 167, 190, 212, 251], "termin": [6, 240, 250, 251, 255, 256], "terminal_oper": 240, "terrain": 22, "test": [6, 32, 33, 83, 84, 159, 160, 161, 248], "test_instal": 233, "testb": [75, 248, 249, 261], "text": [2, 14, 15, 17, 20, 21, 24, 30, 33, 53, 55, 92, 98, 99, 100, 101, 102, 124, 204, 206, 207, 211, 237], "textiobas": 53, "tfrac": [51, 90, 91, 162, 163, 166, 248, 256], "tghe": 124, "th": [24, 33, 36, 55, 66, 134, 142, 143, 147], "than": [3, 9, 15, 20, 26, 29, 32, 34, 36, 39, 55, 57, 59, 60, 65, 66, 67, 70, 76, 82, 87, 116, 128, 129, 130, 136, 139, 142, 156, 162, 168, 170, 174, 195, 197, 206, 207, 208, 212, 213, 214, 217, 219, 220, 227, 231, 232, 251, 255], "thank": 252, "thei": [2, 5, 16, 19, 24, 33, 54, 67, 93, 94, 108, 110, 113, 114, 115, 116, 121, 129, 162, 163, 167, 170, 171, 218, 220, 226, 248, 251, 252, 253, 256, 258, 262], "them": [60, 66, 67, 82, 103, 109, 163, 171, 251, 259, 264], "themselv": 212, "theoret": [36, 121, 127, 129, 139], "theori": [69, 72, 116, 195, 263], "therefor": [8, 14, 30, 36, 54, 55, 65, 66, 67, 73, 114, 115, 116, 124, 179, 183, 248, 250, 251, 254], "therfor": [8, 17, 19, 28, 30, 31, 33, 185, 206], "thermal": 190, "thershold": 55, "theta": [3, 4, 8, 36, 254], "theta_": [8, 24, 26], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 73, 81, 82, 83, 87, 90, 92, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 156, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 197, 198, 199, 206, 209, 210, 212, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "thiel": [31, 36, 263], "thing": [167, 251], "think": 258, "third": [2, 3, 4, 120, 251], "thitimajshima": [74, 263], "thoma": [22, 92, 211, 263], "those": [163, 250, 251, 254], "though": [163, 167, 248, 251], "thought": 33, "thread": 167, "three": [2, 3, 4, 17, 61, 116, 120, 152, 154, 159, 167, 186, 211, 248, 250, 251, 254, 255, 260], "threshold": [55, 127, 128, 151, 155, 160, 240, 263], "thresholddetector": [151, 157, 158], "thrid": 249, "throug": 167, "through": [15, 167, 220, 251], "throughput": [93, 95, 97, 235, 249, 258], "throughputartifact": 102, "throughputevalu": [102, 235], "througput": 102, "thu": [116, 167, 251], "tick": 55, "tick_format": 55, "tild": [65, 70, 254], "tile": [229, 259], "tile_figur": 232, "tile_offset": 232, "time": [2, 3, 4, 7, 8, 14, 15, 17, 19, 24, 26, 28, 30, 31, 32, 33, 36, 37, 50, 55, 60, 61, 70, 78, 79, 83, 88, 91, 103, 105, 107, 111, 112, 120, 121, 124, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 163, 168, 186, 193, 203, 212, 213, 214, 216, 217, 218, 221, 226, 227, 228, 234, 235, 236, 239, 241, 242, 243, 244, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 262, 263], "timeoffsettrigg": 225, "timestamp": [15, 32, 37, 50, 60, 105, 107, 168, 212, 218], "tit": [69, 72, 263], "titl": [0, 8, 55, 60, 62, 81, 88, 94, 98, 99, 100, 101, 102, 120, 151, 152, 156, 158, 159, 160, 161, 171, 188, 189, 191, 192, 206, 221, 232, 236, 250, 253, 254, 255, 257, 258, 260, 261], "tk": 232, "tkagg": 232, "tl": 251, "tmtt": [195, 263], "to_arrai": [55, 160, 258], "to_dens": 60, "to_fil": 53, "to_fold": 53, "to_frequency_select": 37, "to_hdf": [7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 27, 30, 31, 32, 34, 53, 256], "to_impulse_respons": 37, "to_interleav": 60, "to_local_coordin": 61, "to_scalar": [55, 160, 161, 258], "to_spher": 61, "to_str": 53, "to_stream": 53, "to_yaml": [22, 140, 149, 219], "tobia": [249, 263], "tol": 55, "toler": [55, 66, 235, 236, 238, 239, 240, 241, 242, 243], "tolist": 54, "tonnelli": [64, 68, 69, 71, 72, 74, 263], "tool": [0, 31, 129, 233, 250, 251, 252, 258], "toolbox": [64, 68, 69, 71, 72, 74, 263], "topic": 167, "toplogi": 255, "topologi": [36, 39, 248, 255], "total": [8, 9, 169, 248], "toward": [1, 2, 3, 4, 8, 21, 36, 61, 163, 233, 248, 254, 255], "tr": [9, 29, 263], "tr_125943v130000p": [22, 263], "tr_138901v170000p": [8, 9, 10, 11, 12, 13, 29, 263], "traceback": 255, "trade": 251, "trademark": 251, "trajectori": [32, 83, 212, 257], "trajectorysampl": [32, 168], "tranform": 36, "tranmsit": [90, 103, 108, 109, 111], "transact": [22, 24, 31, 36, 69, 72, 116, 145, 146, 195, 203, 208, 211, 251, 263], "transfer": [64, 68, 69, 71, 72, 74, 251], "transform": [8, 9, 10, 11, 12, 13, 14, 17, 35, 36, 37, 39, 83, 112, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 212, 220, 231, 253, 255, 257], "transform_direct": 61, "transform_posit": 61, "transformablebas": [59, 61, 220], "transformablelink": [39, 61, 220], "translat": [61, 139], "transmisison": 39, "transmiss": [1, 2, 14, 19, 35, 39, 41, 46, 49, 50, 51, 56, 59, 65, 66, 67, 70, 73, 76, 78, 82, 83, 87, 90, 91, 92, 103, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 127, 130, 131, 132, 133, 134, 142, 143, 147, 149, 150, 151, 163, 167, 170, 171, 174, 180, 195, 212, 214, 218, 219, 220, 235, 239, 243, 248, 249, 251, 253, 255, 257, 260, 262], "transmissiontyp": [49, 51], "transmissison": 220, "transmit": [2, 4, 14, 15, 17, 19, 24, 25, 28, 30, 33, 34, 36, 37, 39, 41, 42, 43, 48, 49, 50, 51, 56, 59, 60, 65, 66, 67, 70, 73, 75, 76, 78, 79, 82, 83, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 120, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 139, 142, 143, 147, 151, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 195, 196, 206, 212, 213, 214, 216, 217, 218, 219, 221, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263], "transmit_antenna": 36, "transmit_beamform": 163, "transmit_correl": 181, "transmit_devic": [59, 220, 255], "transmit_focu": [2, 4, 255], "transmit_imped": 181, "transmit_oper": [39, 59], "transmit_port": [36, 255], "transmit_stream_cod": [108, 110, 111], "transmit_topologi": 36, "transmitbeamform": [2, 4, 163], "transmitcod": 150, "transmitstreamcod": [111, 150], "transmitstreamencod": [2, 150], "transmitt": [2, 14, 15, 16, 17, 24, 28, 32, 33, 35, 39, 46, 51, 56, 59, 73, 90, 91, 92, 98, 99, 100, 101, 102, 108, 110, 111, 122, 124, 149, 163, 167, 179, 183, 192, 195, 212, 219, 220, 234, 235, 241, 242, 243, 244, 248, 255, 256], "transmitted_sign": [79, 167], "transmitted_symbol": 100, "transmitter_antenna": 17, "transmitter_idx": 257, "transmitter_index": 219, "transmitter_pos": 17, "transmitter_st": [17, 28, 33, 256], "transmitter_veloc": 17, "transmitterslot": [39, 49], "transmittgin": 107, "transmitting_devic": [90, 103, 108, 109, 110, 111, 159, 235, 258], "transmitting_modem": [96, 98, 99, 100, 101, 102, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244], "transmitting_radar": [159, 161], "transmittingmodem": [94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111], "transmittingmodembas": [90, 91, 92, 108, 110, 111], "travel": [124, 230], "treat": [55, 251], "treati": 251, "tree": [22, 140, 149, 219], "trelli": [72, 74], "trial": [31, 263], "trigger": [31, 57, 76, 80, 82, 83, 84, 85, 87, 163, 212, 213, 214, 216, 217, 220, 221, 228, 234, 244, 248, 253], "trigger_delai": 227, "trigger_direct": [82, 83], "trigger_model": [83, 212, 221, 222, 223, 224, 225, 226], "trigger_model_a": [221, 222, 223, 224, 225, 226], "trigger_model_b": [221, 222, 223, 224, 225, 226], "trigger_r": [83, 84, 212, 213, 214, 216, 217, 220, 255], "triggermodel": [83, 212, 221, 222, 223, 224, 225, 226, 227], "triggerr": [83, 84, 212, 213, 214, 216, 217, 220, 222, 223, 224, 225, 226, 227], "true": [8, 11, 12, 13, 15, 19, 21, 32, 33, 34, 39, 46, 49, 53, 55, 59, 60, 61, 64, 66, 68, 69, 71, 72, 74, 79, 80, 82, 83, 84, 85, 87, 96, 98, 99, 100, 101, 102, 121, 129, 139, 142, 144, 147, 157, 158, 160, 161, 162, 186, 187, 212, 219, 220, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 255, 257, 261], "truncat": [66, 100], "truth": 161, "ts_138211v150200p": [73, 263], "tsg": [8, 9, 10, 11, 12, 13, 29, 263], "tudi": [8, 9, 10, 11, 12, 13, 29, 263], "tupl": [8, 18, 20, 28, 33, 34, 36, 54, 55, 60, 62, 79, 80, 81, 156, 220, 232], "turbo": [63, 263], "turbocod": 74, "turn": [94, 167, 253], "tutori": [151, 248, 249, 260, 261, 262], "tv15": 263, "twc": [22, 24, 263], "two": [2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 30, 32, 33, 36, 55, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 114, 115, 116, 117, 120, 121, 127, 134, 137, 140, 142, 143, 147, 160, 161, 162, 167, 168, 171, 179, 182, 183, 187, 208, 212, 220, 221, 222, 223, 224, 225, 226, 243, 248, 251, 253, 255, 257, 258, 260, 261], "twt": [203, 208, 263], "tx": [8, 14, 15, 17, 19, 28, 30, 31, 33, 36, 98, 99, 100, 101, 102, 116, 117, 167, 248, 255], "tx_devic": [110, 114, 115, 116, 117, 134, 142, 143, 147, 248, 257], "tx_gain": [87, 244], "tx_modem": 111, "type": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 70, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 170, 171, 173, 174, 178, 180, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 239, 240, 241, 242, 244, 248, 256, 258], "typevar": [2, 8, 15, 16, 17, 19, 33, 36, 42, 46, 49, 53, 55, 57, 59, 62, 121, 149, 190], "typic": [129, 167, 248, 251, 261], "u": [20, 257, 259], "uhd": [75, 77, 86, 87, 244, 250], "uint8": 262, "uma": 12, "umi": 13, "umt": [22, 263], "unabl": [59, 250], "unassign": [46, 49, 51, 108, 109, 111, 144, 147], "unavail": 62, "unbias": 82, "uncod": [235, 236, 239], "uncorrel": [18, 26, 32, 193], "under": [82, 159, 160, 161, 162, 167, 233, 249, 250, 251], "underli": [15, 49, 55, 160, 161], "underset": 124, "underyl": 253, "undesir": 179, "unequ": [30, 36], "unexpect": [152, 179], "unidirect": [93, 110], "unifi": 248, "uniform": [18, 20, 36, 121, 129, 132, 167, 169, 170, 171, 197, 241, 242, 254, 255, 256], "uniform_arrai": [169, 171, 255], "uniformarrai": [36, 178], "uniformli": [14, 18, 20, 36, 169, 171, 222], "union": [39, 40, 52, 53, 54, 55, 59, 76, 82, 84, 120, 160, 214, 219, 220], "uniqu": [59, 121, 134, 142, 143, 147, 167, 220, 226, 227, 248], "unit": [36, 51, 61, 90, 91, 102, 121, 127, 129, 139, 152, 162, 163, 166, 199, 262], "unit_test": 233, "unitless": [121, 127, 129, 139], "unittest": 233, "univers": [22, 75, 244, 263], "unknown": [55, 62, 82, 156], "unless": [14, 251], "unlimit": 251, "unmap": [109, 121, 123, 127, 129, 139, 260, 262], "unmatchableexcept": 55, "unmodifi": 251, "unmodul": [162, 236], "unnecessari": 251, "unpack": 251, "unpackbit": 262, "unregist": 53, "unspecifi": [90, 103, 108, 109, 111], "until": 251, "up": [52, 55, 73, 109, 111, 183, 248, 249, 250, 253, 255, 261], "updat": [15, 36, 46, 49, 61, 62, 81, 82, 212, 248, 251], "update_plot": 81, "update_visu": 62, "upgrad": 233, "upper": 55, "urban": [8, 22, 255], "urban_macrocel": 12, "urban_microcel": 13, "urbanmacrocel": 12, "urbanmacrocellsr": 12, "urbanmicrocel": [13, 255], "urbanmicrocellsr": 13, "url": [4, 8, 9, 10, 11, 12, 13, 22, 29, 64, 68, 69, 71, 72, 73, 74, 203, 207, 263], "us": [1, 2, 9, 10, 11, 12, 13, 14, 15, 18, 22, 24, 26, 29, 30, 33, 39, 46, 49, 53, 54, 55, 58, 59, 60, 62, 73, 77, 79, 82, 83, 85, 93, 94, 95, 98, 99, 100, 101, 102, 103, 109, 116, 121, 123, 127, 129, 130, 132, 134, 137, 139, 140, 142, 144, 147, 149, 151, 156, 158, 160, 161, 162, 163, 167, 169, 170, 171, 188, 189, 190, 192, 193, 195, 209, 210, 219, 222, 223, 224, 225, 226, 230, 232, 233, 239, 240, 241, 248, 250, 251, 252, 254, 257, 258, 259, 261, 262, 264], "user": [24, 33, 80, 123, 205, 212, 219, 234, 237, 244, 248, 249, 250, 251, 252, 255, 258, 260, 261], "user_equipment_devic": 255, "user_equipment_receiv": 255, "usernam": 252, "userspac": 250, "usrp": [75, 237, 248, 250], "usrpantenna": 87, "usrpdevic": [86, 87], "usrpsystem": [86, 244], "usual": [6, 55, 65, 67, 73, 153, 155, 157, 167, 196, 206, 248], "util": 250, "v": [33, 36, 64, 68, 69, 71, 72, 74, 163, 255, 263], "v17": 9, "v6": 263, "v_": [33, 162, 166], "vacuum": 230, "val": 230, "valid": [22, 60, 61, 140, 149, 219, 251, 253], "valkama": [195, 263], "valu": [2, 7, 8, 9, 10, 15, 20, 22, 26, 29, 36, 37, 38, 39, 52, 53, 54, 55, 59, 60, 87, 98, 99, 100, 101, 102, 120, 121, 127, 128, 129, 132, 135, 136, 139, 152, 157, 158, 160, 167, 168, 197, 198, 201, 202, 203, 204, 211, 219, 230, 248, 253, 262], "value_db": 54, "value_typ": 54, "valueerorr": 162, "valueerror": [2, 3, 7, 9, 15, 20, 22, 23, 26, 29, 32, 34, 36, 37, 39, 46, 49, 52, 53, 55, 57, 59, 60, 61, 65, 66, 67, 70, 73, 76, 79, 80, 82, 83, 84, 85, 87, 91, 116, 120, 127, 128, 129, 130, 132, 136, 139, 140, 149, 152, 154, 156, 157, 159, 161, 162, 170, 171, 173, 174, 180, 184, 185, 186, 190, 191, 192, 195, 197, 199, 205, 206, 207, 208, 211, 212, 213, 214, 217, 219, 220, 227, 230, 255], "valuerror": 7, "valuesview": 53, "valuetyp": [54, 55], "vardi": [69, 263], "vari": [55, 167, 255], "variabl": [8, 15, 18, 32, 62, 250, 262], "varianc": [3, 82, 186, 254], "variant": 24, "variou": [229, 233], "varphi_3": 211, "vat": [62, 206, 258], "vdot": 30, "vector": [6, 15, 18, 32, 33, 34, 36, 42, 45, 55, 60, 61, 65, 66, 67, 70, 73, 76, 93, 94, 95, 97, 121, 124, 127, 128, 129, 137, 138, 139, 140, 141, 146, 152, 154, 162, 166, 204, 205, 206, 207, 208, 213, 230, 254], "vehicular": [24, 92, 263], "veloc": [14, 17, 33, 34, 82, 83, 151, 152, 154, 163, 168, 212, 241], "velocity_bin": 152, "velocity_resolut": 163, "veloctii": 168, "venv": [6, 250], "verbatim": 251, "verbos": [52, 219], "veri": [15, 258, 259], "versa": 196, "version": [8, 9, 10, 11, 12, 13, 22, 29, 55, 73, 195, 250, 251, 252, 263, 264], "versu": 160, "vertic": 36, "vetec": [92, 263], "via": [6, 31, 37, 53, 87, 91, 219, 233, 248, 249, 250, 252, 257, 264], "vice": 196, "vicin": 240, "view": [151, 233, 249, 251, 255, 257], "viewoutput": 257, "vill": [195, 263], "violat": [233, 251], "virtual": [6, 9, 31, 33, 55, 167, 235, 241, 242, 243, 250, 252, 263], "virtualradartarget": 32, "visibl": [32, 251, 253], "visit": [4, 249, 263], "visual": [8, 14, 35, 36, 37, 55, 60, 75, 80, 81, 95, 139, 151, 152, 156, 160, 168, 202, 203, 220, 221, 235, 236, 238, 239, 240, 241, 242, 243, 248, 250, 253, 255, 258, 259, 261], "visualiz": [8, 55, 62, 98, 99, 100, 101, 102, 120, 156], "visualizableattribut": [8, 62, 120], "visualizu": 151, "vit67": 263, "vital": 124, "viterbi": 263, "vlt": 62, "void": 251, "vol": [24, 74, 263], "volker": [36, 263], "volt": [199, 206], "voltag": [198, 199, 200], "volum": [9, 24, 31, 74, 92, 179, 251, 253, 263], "von": [55, 263], "vote": 259, "vscodejupyterkernelcrash": 257, "vt": [55, 62, 81, 88], "vtc": [24, 92, 263], "w": [3, 4, 61, 162, 166, 232, 254, 255, 258], "wa": [6, 7, 8, 15, 20, 21, 26, 30, 31, 32, 34, 46, 50, 55, 60, 105, 107, 110, 158, 164, 168, 192, 212, 213, 218, 227, 237, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "waform": [129, 132], "wahe": [195, 263], "wai": [15, 19, 169, 250, 251, 257], "wait": 78, "waiv": 251, "waiver": 251, "wall": 9, "want": [248, 251], "warn": [52, 60, 78, 253], "warranti": 251, "watt": [39, 46, 49, 51, 56, 91, 92, 109, 111, 163, 188, 189, 190, 191, 192, 193], "wave": [15, 24, 32, 33, 36, 137, 138, 140, 141, 145, 212, 230, 256], "waveform": [9, 10, 11, 12, 13, 14, 36, 44, 47, 48, 65, 75, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 149, 151, 158, 160, 161, 162, 163, 164, 165, 167, 187, 190, 212, 221, 227, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 253, 254, 256, 257, 258, 259, 260, 261, 264], "waveform_chirp_fsk": 127, "waveform_configur": [98, 99, 100, 101, 102], "waveform_correlation_synchron": [127, 128], "waveform_single_carri": [129, 130, 131, 132, 133], "waveformtyp": [122, 123, 124], "wavelength": [14, 36, 39, 169, 212, 255], "wavenumb": [3, 263], "wavform": [109, 111, 139, 236], "we": [151, 163, 167, 221, 235, 236, 238, 239, 240, 241, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "web": [233, 251], "websit": 233, "weight": [3, 4, 33, 37, 170, 174, 175, 176, 177, 254], "welcom": 249, "well": [1, 14, 33, 63, 66, 75, 93, 103, 113, 114, 115, 117, 118, 119, 123, 127, 130, 131, 132, 133, 147, 159, 171, 218, 233, 240, 251, 256, 261], "were": [39, 59, 120, 140, 212, 220, 251], "werner": [92, 263], "wh": [162, 166], "what": [14, 251, 257, 258], "whatev": 251, "wheel": 250, "when": [8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 54, 55, 68, 104, 105, 106, 107, 123, 124, 163, 166, 167, 169, 171, 190, 226, 248, 250, 251, 253, 254, 255], "whenev": [36, 37], "where": [3, 4, 20, 32, 33, 36, 55, 59, 60, 66, 79, 83, 152, 162, 166, 186, 207, 208, 211, 212, 222, 231, 251, 254, 255], "whether": [55, 83, 87, 158, 251, 255], "which": [2, 7, 8, 14, 15, 18, 20, 21, 26, 30, 31, 32, 33, 34, 37, 39, 41, 46, 50, 52, 53, 55, 58, 59, 60, 62, 65, 66, 76, 78, 79, 80, 82, 83, 87, 88, 89, 94, 95, 99, 101, 102, 105, 107, 121, 127, 128, 129, 132, 134, 140, 142, 143, 144, 145, 147, 159, 167, 168, 169, 180, 184, 188, 189, 190, 192, 194, 197, 198, 206, 209, 210, 211, 212, 213, 216, 218, 219, 220, 227, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 248, 251, 254, 255, 256, 259, 260, 261], "while": [2, 33, 49, 66, 90, 190, 248, 252, 257, 258, 260], "white": [190, 193, 194, 211, 212, 262], "whittak": 15, "who": [250, 251], "whole": [55, 60, 66, 96, 158, 159, 161, 197, 248, 251], "whom": 251, "whose": [55, 95, 96, 158, 159, 161, 251], "why": 258, "wich": 212, "wide": [161, 251], "wideband": [24, 263], "widehat": 123, "widespread": 251, "wiesbeck": [92, 263], "wifi": 167, "wiki": 195, "wikipedia": 195, "wil": 198, "wille": 171, "window": [6, 250, 251], "wipo": 251, "wireless": [0, 14, 15, 16, 17, 22, 24, 35, 37, 73, 103, 108, 109, 111, 116, 119, 122, 123, 124, 125, 148, 149, 190, 195, 218, 219, 220, 221, 237, 248, 249, 256, 258, 263], "wise": [65, 70], "wish": 251, "within": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 50, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 82, 88, 96, 98, 99, 100, 101, 102, 109, 111, 112, 116, 120, 121, 123, 124, 127, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 149, 151, 156, 158, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 182, 183, 186, 203, 210, 212, 218, 219, 220, 221, 226, 227, 228, 233, 235, 236, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262], "without": [37, 82, 128, 167, 185, 212, 237, 248, 251, 257], "won": [14, 167], "word": [55, 65, 66, 67, 70, 73, 137, 139, 140, 141, 206, 234, 235, 239, 241, 242, 243, 244, 248, 260], "words_per_fram": 139, "work": [6, 248, 251, 254, 255, 264], "worker": [55, 258], "workflow": [252, 256, 258], "workload": [55, 258], "workspac": 257, "world": [248, 261], "worldwid": 251, "would": [158, 160, 161, 162, 251, 259], "wrap": [17, 55], "wrapper": [36, 46, 49, 64, 68, 69, 71, 72, 74, 103, 173, 212], "write": [52, 55, 60, 219, 251], "written": [33, 233, 251], "wrong": 65, "www": [4, 8, 9, 10, 11, 12, 13, 22, 29, 64, 68, 69, 71, 72, 73, 74, 251, 263], "x": [2, 3, 4, 14, 15, 17, 36, 37, 55, 61, 65, 70, 121, 124, 127, 128, 129, 136, 137, 139, 140, 146, 169, 171, 178, 195, 197, 206, 207, 230, 232, 234, 239, 241, 242, 244, 255], "x_": [65, 70], "x_1": [65, 70], "x_2": [65, 70], "x_m": [55, 98, 99, 100, 101, 102, 158, 160, 161], "xiao": [24, 263], "xpr_phase": 7, "xzb06": 263, "y": [2, 3, 4, 14, 15, 17, 36, 61, 65, 70, 169, 171, 178, 232, 254, 255], "y_": [65, 70], "y_1": [65, 70], "y_2": [65, 70], "y_axis_limit": 88, "y_k": [65, 70], "yahong": [24, 263], "yaml": [4, 10, 11, 12, 13, 22, 25, 36, 53, 65, 66, 67, 70, 73, 80, 86, 87, 101, 102, 108, 109, 110, 125, 127, 128, 130, 131, 132, 133, 140, 145, 146, 149, 150, 153, 175, 177, 197, 198, 199, 204, 207, 210, 219, 237, 248, 249], "yaml_tag": [4, 10, 11, 12, 13, 25, 36, 59, 65, 66, 67, 70, 73, 77, 80, 86, 87, 101, 102, 108, 109, 110, 125, 127, 128, 130, 131, 132, 133, 140, 145, 146, 149, 150, 153, 175, 177, 197, 198, 199, 204, 207, 210, 220], "yaw": 61, "ybo": 263, "ye": [93, 121, 126], "year": [124, 251, 263], "yet": [2, 15, 46, 49, 212], "yield": 236, "yml": [6, 53], "you": [6, 244, 250, 251, 253, 258, 264], "your": [6, 233, 237, 248, 249, 250, 251, 252], "yourself": [251, 264], "yu": [24, 263], "z": [36, 61, 178, 255], "zeeshan": [195, 263], "zenith": [2, 3, 4, 8, 34, 36, 61, 152, 154, 254], "zenith_arrival_spread": 8, "zenith_departure_spread": 8, "zenith_of_arriv": 8, "zenith_of_departur": 8, "zero": [3, 8, 9, 11, 12, 13, 14, 15, 26, 29, 30, 32, 34, 36, 37, 39, 55, 59, 60, 66, 67, 76, 78, 79, 82, 83, 87, 91, 98, 99, 101, 102, 127, 128, 129, 130, 131, 132, 133, 136, 142, 144, 147, 152, 154, 156, 157, 162, 186, 187, 193, 195, 197, 199, 206, 208, 212, 214, 217, 219, 220, 227, 230, 234, 238, 239, 242, 244, 256], "zeroforcingchannelequ": [125, 134, 142, 143, 147, 256, 257], "zeropad": 136, "zeros_lik": 258, "zeta": [15, 36], "zf": [125, 234, 239, 240, 241, 242, 244, 256], "zheng": [24, 263], "zip": 250, "zirath": [211, 263], "zoa": 8, "zod": 8, "zwick": [22, 92, 263], "\u00e5": [55, 263], "\u00fa": [55, 263]}, "titles": ["HermesPy API", "Beamforming", "Beamformer", "Capon Beamformer", "Conventional Beamformer", "Entry Points", "Hermes Command Line Interface", "Static CDL", "3GPP Cluster Delay Line Models", "Indoor Factory", "Indoor Office", "Rural Macrocells", "Urban Macrocells", "Urban Microcells", "Channel Modeling", "Channel", "Channel Realization", "Channel Sample", "Spatial Consistency", "Delay Channels", "Random Delay Channel", "Spatial Delay Channel", "Cost 259", "Exponential", "Multipath Fading", "Antenna Correlation", "Multipath Fading Channel", "Multipath Fading Realization", "Multipath Fading Sample", "5G TDL", "Ideal Channel", "Quadriga", "Multi Target", "Radar Channels", "Single Target", "Core", "Antenna Descriptions", "Channel State Information", "General Definitions", "Device", "Device Input", "Device Output", "Device Reception", "Device Transmission", "Operation Result", "Processed Device Input", "Receiver", "Reception", "Transmission", "Transmitter", "Drop", "Duplex Operation", "Executable", "Serialization Factory", "Logarithmics", "PyMonte", "Extra Operators", "Pipeline", "Random Graph", "Wireless Scenario", "Signal", "Coordinate System Transformations", "Visualization", "Error Correction", "BCH Coding", "Interleaving", "Coding Pipeline", "Cyclic Redundancy Checks", "Low Differential Parity Checks", "Polar Coding", "Repetition Coding", "Reed-Solomon Coding", "RSC Coding", "Scrambling", "Turbo Coding", "Hardware Loop", "Audio Device", "Audio Scenario", "Delay Calibration", "Leakage Calibration", "Hardaware Loop", "Hardware Loop Plot", "Physical Device", "Physical Device Dummy", "Physical Scenario Dummy", "Physical Scenario", "USRP System", "USRP Device", "Visualizers", "JCAS", "Duplex JCAS Operator", "Matched Filtering", "OFDM Radar", "Communication", "Bit Sources", "Evaluators", "Communication Evaluator", "&lt;no title&gt;", "Bit Error Rate", "Block Error Rate", "Error Vector Magnitude", "Frame Error Rate", "Throughput", "Base Modem", "Reception", "Reception Frame", "Transmission", "Transmission Frame", "Duplex Modem", "Receiving Modem", "Simplex Link", "Transmitting Modem", "Communication Precoding", "Discrete Fourier Transform", "Maximal Ratio Combining", "Single Carrier Decoding", "Space-Time Block Codes", "Spatial Multiplexing", "Symbol Precoder", "Symbol Precoding", "Symbols", "Waveforms", "Channel Equalization", "Channel Estimation", "Synchronization", "Zero-Forcing", "&lt;no title&gt;", "C-FSK", "Correlation", "Single Carrier", "FMCW", "Raised Cosine", "Rectangular", "Root Raised Cosine", "Orthogonal", "Grid Element", "Resource", "Section", "Guard Section", "Waveform", "Pilot Section", "Symbol Section", "OCDM", "OFDM", "OFDM Waveform", "Schmidl Cox Pilot", "Schmidl Cox Synchronization", "OTFS", "Precoding", "Precoding Configuration", "Stream Precoding", "Sensing", "Radar Cube", "Max", "Point Detection", "Radar Detector", "Radar Point Cloud", "Threshold", "Detection Probability Evaluator", "Radar Evaluator", "Reiver Operating Characteristic", "Root Mean Square Error", "FMCW", "Radar", "Radar Reception", "Radar Transmission", "Radar Waveform", "Simulation", "Animation", "Antennas", "Antenna", "Antenna Arrays", "Antenna Port", "Custom Array", "Dipole", "Ideal Isotropic", "Linear", "Patch", "Uniform Array", "Mutual Coupling", "Coupling", "Impedance Coupling", "Perfect Coupling", "Isolation", "Isolation", "Perfect Isolation", "Selective Leakage", "Specific Isolation", "EBN0", "ESN0", "Noise", "N0", "SNR", "AWGN Model", "AWGN Realization", "Radio-Frequency Chain", "A/D Conversion", "Analog Digital Converter", "Automatic Gain Control", "Constant Gain", "Gain Control Base", "Gain Control Type", "Quantizer Type", "Amplification", "Clipping Power Amplifier", "Custom Power Amplifier", "Power Amplifier", "Rapp Power Amplifier", "Saleh Power Amplifier", "Phase Noise", "No Phase Noise", "Oscillator Phase Noise", "Devices", "Processed Input", "Device Output", "Receive Realization", "Device Reception", "Device Transmission", "Simulated Drop", "Simulation", "Simulation Scenario", "Synchronization", "Random Trigger", "Sample Offset Trigger", "Static Trigger", "Time Offset Trigger", "Trigger Model", "Trigger Realization", "&lt;no title&gt;", "Tools", "Math Tools", "Resampling Routines", "Tile Figures", "For Developers", "Audio Hardware Binding", "Chirp FSK LORA", "Chirp QAM", "Configuration Examples", "Hardware Modeling", "OFDM Interference", "JCAS", "OFDM 5G", "OFDM Single Carrier", "Operator Separation", "USRP Hardware Driver", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Getting Started", "HermesPy", "Installation", "License", "Matlab", "Using Audio Equipment", "Implementing Beamformers", "Using Beamformers", "Implementing Channels", "Recording Datasets", "Implementing Evaluators", "Implementing FEC codings", "Implementing Precodings", "Receiver Operating Characteristics", "Implementing Communication Waveforms", "References", "Tutorials"], "titleterms": {"259": 22, "3gpp": 8, "5g": [29, 241], "A": 196, "For": 233, "No": 210, "amplif": 203, "amplifi": [204, 205, 206, 207, 208], "analog": 197, "anim": 168, "antenna": [25, 36, 169, 170, 171, 172], "api": 0, "architectur": 248, "argument": 6, "arrai": [171, 173, 178], "audio": [76, 77, 234, 253], "automat": 198, "awgn": [193, 194], "base": [103, 200], "bch": 64, "beamform": [1, 2, 3, 4, 254, 255], "bind": 234, "bit": [94, 98], "block": [99, 116], "c": 127, "calibr": [78, 79], "capon": 3, "carrier": [115, 129, 242], "cdl": 7, "chain": 195, "channel": [14, 15, 16, 17, 19, 20, 21, 26, 30, 33, 37, 122, 123, 256], "characterist": [160, 261], "check": [67, 68, 233], "chirp": [235, 236], "cli": 6, "clip": 204, "cloud": 156, "cluster": 8, "code": [64, 66, 69, 70, 71, 72, 74, 116, 233, 259], "combin": 114, "command": 6, "commun": [93, 96, 112, 262], "configur": [36, 149, 237], "consist": 18, "constant": 199, "content": 148, "control": [198, 200, 201], "convent": 4, "convers": 196, "convert": 197, "coordin": 61, "core": 35, "correct": 63, "correl": [25, 128], "cosin": [131, 133], "cost": 22, "coupl": [179, 180, 181, 182], "cox": [145, 146], "cube": 152, "custom": [173, 205], "cyclic": 67, "d": 196, "dataset": 257, "decod": 115, "definit": 38, "delai": [8, 19, 20, 21, 78], "descript": 36, "detect": [154, 158], "detector": 155, "develop": 233, "devic": [39, 40, 41, 42, 43, 45, 76, 82, 83, 87, 212, 214, 216, 217], "differenti": 68, "digit": 197, "dipol": 174, "discret": 113, "document": 233, "driver": 244, "drop": [50, 218], "dummi": [83, 84], "duplex": [51, 90, 108], "ebn0": 188, "element": 135, "entri": 5, "equal": 122, "equip": 253, "error": [63, 98, 99, 100, 101, 161], "esn0": 189, "estim": 123, "evalu": [95, 96, 158, 159, 258], "exampl": 237, "execut": 52, "exponenti": 23, "extra": 56, "factori": [9, 53], "fade": [24, 26, 27, 28], "featur": 250, "fec": 259, "figur": 232, "filter": 91, "fmcw": [130, 162], "forc": 125, "fourier": 113, "frame": [101, 105, 107], "frequenc": 195, "from": 250, "fsk": [127, 235], "gain": [198, 199, 200, 201], "gener": 38, "get": 248, "graph": 58, "grid": 135, "guard": 138, "hardawar": 80, "hardwar": [75, 81, 234, 238, 244, 248], "herm": 6, "hermespi": [0, 248, 249], "ideal": [30, 175], "imped": 181, "implement": [254, 256, 258, 259, 260, 262], "indoor": [9, 10], "inform": 37, "input": [40, 45, 213], "instal": 250, "interfac": 6, "interfer": 239, "interleav": 65, "isol": [183, 184, 185, 187], "isotrop": 175, "jca": [89, 90, 240], "leakag": [79, 186], "licens": 251, "line": [6, 8], "linear": 176, "link": 110, "logarithm": 54, "loop": [75, 80, 81, 248], "lora": 235, "low": 68, "macrocel": [11, 12], "magnitud": 100, "match": 91, "math": 230, "matlab": 252, "max": 153, "maxim": 114, "mean": 161, "microcel": 13, "model": [8, 14, 193, 226, 238], "modem": [103, 108, 109, 111], "modul": 148, "multi": 32, "multipath": [24, 26, 27, 28], "multiplex": 117, "mutual": 179, "n0": 191, "nois": [190, 209, 210, 211], "ocdm": 142, "ofdm": [92, 143, 144, 239, 241, 242], "offic": 10, "offset": [223, 225], "oper": [44, 51, 56, 90, 160, 243, 261], "option": [6, 250], "orthogon": 134, "oscil": 211, "otf": 147, "output": [41, 214], "pariti": 68, "patch": 177, "perfect": [182, 185], "phase": [209, 210, 211], "physic": [82, 83, 84, 85], "pilot": [140, 145], "pipelin": [57, 66], "plot": 81, "point": [5, 154, 156], "polar": 69, "port": 172, "power": [204, 205, 206, 207, 208], "precod": [112, 118, 119, 148, 149, 150, 260], "probabl": 158, "process": [45, 213], "properti": [130, 131, 132, 133], "puls": [130, 131, 132, 133], "pymont": 55, "pypi": 250, "qam": 236, "quadriga": [31, 250], "quantiz": 202, "radar": [33, 92, 152, 155, 156, 159, 163, 164, 165, 166], "radio": 195, "rais": [131, 133], "random": [20, 58, 222], "rapp": 207, "rate": [98, 99, 101], "ratio": 114, "realiz": [16, 27, 194, 215, 227], "receiv": [46, 109, 215, 261], "recept": [42, 47, 104, 105, 164, 216], "record": 257, "rectangular": 132, "redund": 67, "reed": 71, "refer": 263, "reiver": 160, "repetit": 70, "resampl": 231, "resourc": 136, "result": 44, "root": [133, 161], "routin": [231, 250], "rsc": 72, "rural": 11, "saleh": 208, "sampl": [17, 28, 223], "scenario": [59, 77, 84, 85, 220], "schmidl": [145, 146], "scrambl": 73, "section": [137, 138, 140, 141], "select": 186, "sens": 151, "separ": 243, "serial": 53, "signal": 60, "simplex": 110, "simul": [167, 218, 219, 220, 248], "singl": [34, 115, 129, 242], "snr": 192, "solomon": 71, "sourc": [94, 250], "space": 116, "spatial": [18, 21, 117], "specif": 187, "squar": 161, "start": 248, "state": 37, "static": [7, 224], "stream": 150, "style": 233, "symbol": [118, 119, 120, 141], "synchron": [124, 146, 221], "system": [61, 86], "target": [32, 34], "tdl": 29, "test": 233, "threshold": 157, "throughput": 102, "tile": 232, "time": [116, 225], "tool": [229, 230], "trajectori": 168, "transform": [61, 113], "transmiss": [43, 48, 106, 107, 165, 217], "transmit": 111, "transmitt": 49, "trigger": [222, 223, 224, 225, 226, 227], "turbo": 74, "tutori": 264, "type": [168, 201, 202, 233], "uniform": 178, "unit": 233, "urban": [12, 13], "us": [253, 255], "usrp": [86, 87, 244], "vector": 100, "visual": [62, 88], "waveform": [121, 139, 144, 166, 262], "wireless": 59, "zero": 125}})