variables:
  IMAGE_PREFIX: $CI_REGISTRY/barkhauseninstitut/wicon/hermespy
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive
  HERMES_VERSION: "1.5.0"
  HERMES_WHEEL_12: "hermespy-$HERMES_VERSION-cp312-cp312-linux_x86_64.whl"
  HERMES_WHEEL_11: "hermespy-$HERMES_VERSION-cp311-cp311-linux_x86_64.whl"
  HERMES_WHEEL_10: "hermespy-$HERMES_VERSION-cp310-cp310-linux_x86_64.whl"
  PYDEVD_DISABLE_FILE_VALIDATION: 1

stages:
  - build
  - test
  - lint
  - deploy

cache:
  key: build-cache
  paths:
    - dist/

Build Python 3.12:
  image: $IMAGE_PREFIX/cp312:latest
  stage: build
  script:
    - export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    - python -m build
  artifacts:
    paths:
      - dist/$HERMES_WHEEL_12
  
Build Python 3.11:
  image: $IMAGE_PREFIX/cp311:latest
  stage: build
  script:
    - export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    - python -m build
  artifacts:
    paths:
      - dist/$HERMES_WHEEL_11

Build Python 3.10:
  image: $IMAGE_PREFIX/cp310:latest
  stage: build
  script:
    - export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    - python -m build
  artifacts:
    paths:
      - dist/$HERMES_WHEEL_10

Unit Testing:
  image: $IMAGE_PREFIX/cp311:latest
  stage: test
  dependencies:
    - Build Python 3.11
  before_script:
    - pip install -q dist/$HERMES_WHEEL_11[audio,quadriga,scapy,sionna,uhd]
  script:
    - coverage run --include=hermespy/* ./tests/test_install.py unit_tests
  after_script:
    - coverage xml
    - coverage report -m --include=hermespy/* --skip-covered
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - ./scripts/performance/results/unit_tests/results.json
  
Integration Testing:
  image: $IMAGE_PREFIX/cp311:latest
  stage: test
  dependencies:
    - Build Python 3.11
  before_script:
    - pip install -q dist/$HERMES_WHEEL_11[audio,quadriga,scapy,sionna,uhd]
  script:
    - python ./tests/test_install.py integration_tests
  artifacts:
    paths:
      - ./scripts/performance/results/integration_tests/results.json

#Integrity Python 3.12:
#  image: $IMAGE_PREFIX/cp312:latest
#  stage: test
#  dependencies:
#    - Build Python 3.12
#  before_script:
#    - pip install -q dist/$HERMES_WHEEL_12[audio,quadriga,scapy,sionna,uhd]
#  script:
#    - python ./tests/test_install.py integrity_tests
#  artifacts:
#    paths:
#      - ./scripts/performance/results/integration_tests/results.json

Integrity Python 3.11:
  image: $IMAGE_PREFIX/cp311:latest
  stage: test
  dependencies:
    - Build Python 3.11
  before_script:
    - /opt/python/cp311-cp311/bin/pip install -q dist/$HERMES_WHEEL_11[audio,quadriga,scapy,sionna,uhd]
  script:
    - python ./tests/test_install.py integrity_tests
  artifacts:
    paths:
      - ./scripts/performance/results/integration_tests/results.json

Integrity Python 3.10:
  image: $IMAGE_PREFIX/cp310:latest
  stage: test
  dependencies:
    - Build Python 3.10
  before_script:
    - pip install -q dist/$HERMES_WHEEL_10[audio,quadriga,scapy,sionna,uhd]
  script:
    - python ./tests/test_install.py integrity_tests
  artifacts:
    paths:
      - ./scripts/performance/results/integration_tests/results.json

PEP8 Testing:
  image: $IMAGE_PREFIX/cp311:latest
  stage: lint
  script:
    - flake8 hermespy/

Type Checking:
  image: $IMAGE_PREFIX/cp311:latest
  stage: lint
  script:
    - mypy

Documentation:
  image: $IMAGE_PREFIX/cp311:latest
  stage: lint
  before_script:
    - pip install -q dist/$HERMES_WHEEL_11[audio,quadriga,scapy,sionna,uhd]
  script:
    - sphinx-build -q -W -j auto ./docssource/ ./documentation/

pages:
  image: $IMAGE_PREFIX/cp311:latest
  stage: deploy
  only:
    - master
  before_script:
    - pip install -q dist/$HERMES_WHEEL_11[audio,quadriga,scapy,sionna,uhd]
  script:
    - sphinx-build -q -j auto ./docssource/ ./public/
  artifacts:
    paths:
      - public
