image: $CI_REGISTRY/barkhauseninstitut/wicon/hermespy:python-39-linux

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive
  HERMES_VERSION: "1.0.0"
  HERMES_WHEEL: "hermespy-$HERMES_VERSION-cp39-cp39-linux_x86_64.whl"

stages:
  - build
  - test
  - lint 
  - deploy

cache:
  key: build-cache
  paths:
    - dist/

Build Package:
  stage: build
  script:
    - export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    - python -m build
  artifacts:
    paths:
      - dist/$HERMES_WHEEL

Unit Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
  script:
    - python tests/test_install.py unit_tests

Integration Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
  script:
    - python tests/test_install.py integration_tests

Integrity Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
  script:
    - python tests/test_install.py integrity_tests

PEP8 Testing:
  stage: lint
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
    - pip install flake8
  script:
    - flake8 hermespy/

Type Checking:
  stage: lint
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
    - pip install mypy
  script:
    - mypy

pages:
  stage: deploy
  only:
    - master
  before_script:
    - pip install dist/$HERMES_WHEEL\[test,documentation,quadriga,uhd,audio\]
  script:
    - python -m setup build_sphinx
  after_script:
    - mkdir public/
    - cp -r documentation/html/* public/
  artifacts:
    paths:
      - public