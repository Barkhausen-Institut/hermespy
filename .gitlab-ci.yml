#image: $CI_REGISTRY/barkhauseninstitut/wicon/hermespy:python-39-linux
image: python:3.9

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive
  HERMES_VERSION: "1.0.0"
  HERMES_WHEEL: "hermespy-$HERMES_VERSION-cp39-cp39-linux_x86_64.whl"

stages:
  - build
  - test
  - lint 
  - deploy

cache:
  key: build-cache
  paths:
    - dist/

Build Package:
  stage: build
  before_script:
    - apt update && apt-get install -y build-essential octave pandoc python-dev
    - pip install --upgrade setuptools sphinx wheel pybind11 scikit-build cmake build
  script:
    - export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    - pip install --no-cache-dir -U -e .\[test,quadriga,documentation,uhd,audio,develop\]  # remove for docker
    - pip uninstall -y hermespy  # remove for docker
  artifacts:
    paths:
      - dist/$HERMES_WHEEL

Unit Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev unzip  # remove for docker
    - pip install -e .\[develop,test,quadriga,uhd,audio\]
    - unzip dist/$HERMES_WHEEL "hermespy/fec/aff3ct/*.so"
  script:
    - coverage run --include=hermespy/* ./tests/test_install.py ./tests/unit_tests/ 
  after_script:
    - coverage xml
    - coverage report
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  
Integration Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev  # remove for docker
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
  script:
    - python tests/test_install.py integration_tests

Integrity Testing:
  stage: test
  dependencies:
    - Build Package
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev  # remove for docker
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
  script:
    - python tests/test_install.py integrity_tests

PEP8 Testing:
  stage: lint
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev  # remove for docker
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
    - pip install flake8
  script:
    - flake8 hermespy/

Type Checking:
  stage: lint
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev  # remove for docker
    - pip install dist/$HERMES_WHEEL\[test,quadriga,uhd,audio\]
    - pip install mypy
  script:
    - mypy

pages:
  stage: deploy
  only:
    - master
  before_script:
    - apt update && apt-get install -y octave portaudio19-dev python-dev pandoc  # remove for docker
    - pip install dist/$HERMES_WHEEL\[test,documentation,quadriga,uhd,audio\]
  script:
    - sphinx-build ./docssource/ ./documentation/
  after_script:
    - mkdir public/
    - cp -r documentation/html/* public/
  artifacts:
    paths:
      - public