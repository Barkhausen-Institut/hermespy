########################################################################################################################
# This file specifies the parameters for a generic OFDM modem
########################################################################################################################
[General]
# do not change !!!!
technology = ofdm

[Modulation]
########################################################################################################################
# The specifications for the modulation are given here

# The main OFDM parameters are defined here, i.e., subcarrier spacing in Hz and FFT size.
# Subcarriers are occupied in the centre of the spectrum, except the DC subcarrier, the remaining subcarriers are left
# empty.
# Guard interval for each OFDM symbol is defined in terms of its length relative to the OFDM symbol, i.e., the number of
# samples in the guard interval is guard_interval_ratio * fft_size. Several different guard intervals can be defined,
# separated by comma, and their usage will be defined in the frame specifications.
# Precoding can either be 'none' or 'dft' for DFT-spread OFDM (SC-FDMA).
subcarrier_spacing = 15e3
fft_size = 2048
number_occupied_subcarriers = 1200
cp_ratio = 0.0703125, .078125
precoding = DFT

# modulation parameters for the OFDM modem
# M is the 'modulation_order', which must be a power of two.
# currently M = 2, 4 (PSK), 16, 64, 256 (QAM) are accepted
modulation_order = 2

# baseband_signal can be oversampled by an integer factor,
# i.e., the sampling rate will be "fft_size" x "subcarrier_spacing" x "oversampling_rate"
# upsampling is performed using a polyphase filter approach
oversampling_factor = 1

[Receiver]
########################################################################################################################
# The specifications for the receiver implementation are given here

# channel estimation algorithm, the following values are supported:
#   'ideal' - perfect channel knowledge at the beginning of each OFDM symbol
#   'ideal_preamble',
#   'ideal_midamble',
#   'ideal_postamble' - perfect channel knowledge at the beginning / middle / end of each frame
#
# channel equalization algorithms:
#   'ZF' - zero forcing
#   'MMSE'
channel_estimation = ideal_postamble
equalization = MMSE

[MIMO]
########################################################################################################################
# In case of multiple antennas, the specifications for the MIMO processing are given here

# currently, only open-loop MIMO is supported
# the following schemes are supported: "SM", "SFBC", "MRC", "SC", "NONE"
# this parameter is only relevant if the number of tx and/or rx antennas > 1
# Receive diversity schemes:
# "MRC" - maximum ratio combining and
# "SC" - selection combining can be applied for 1 tx antenna and any number of rx antennas
# Transmit diversity schemes
# "SFBC" - "space-frequency block codes", following 3GPP specifications (TS 36.211, Sec, 6.3.3.3) for 2 or 4 tx antennas
# spatial Multiplexing schemes
# "SM"
mimo_scheme = NONE

[Frame]
########################################################################################################################
# The specifications for the transmission frame are given here
# It specifies the sequence of elements in the frame, the possible elements are available:
#  R - reference
#  D - downlink
#  U - uplink
#  C - cyclic prefix (may have different values given in 'guard_interval_ratio', differentiated by C1, C2, ...)
#                    C0 is default
#  Z - zero padding
#  G - guard
# spaces may be included to improve reading.
# The frame can be divided into blocks separated by commas. In each block, sequences can be repeated many times.
# For example,
#   guard_interval_ratio = 0.0703125, 0.078125
#   frame_structure = rr, 6(c1d cd cd cd cd cd cd), g, 4(czu zu zu zu cu zu zu), g
# means that two reference signals are sent, followed by 6 blocks consisting of 7 downlink OFDM symbols with cyclic
# prefixes. The first symbol in each block uses a long prefix(0.078125) and the following 6 use a short one (0.0703125).
# After these blocks, a guard interval of duration 'frame_guard_interval' is included, followed by 4 blocks of 7 uplink
# zero-padded OFDM symbols and another guard interval.
# Only the data symbols corresponding to the desired link direction are transmitted, the other are set to zero.

frame_guard_interval = .001
ofdm_symbol_resources = 100(r11d), 100(6r6d)
cp_length = c1,c2
frame_structure = 12